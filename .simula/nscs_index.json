{
  "files": {
    "app.py": "48c39b5c50f7e566de47c6a79b7bc2d25fe94686",
    "collate.py": "0b96691cc76954b3822b8aac21af6183a987b7f4",
    "collate_api.py": "16867c2734c0338e3d96699fa0d87dfd00057b4a",
    "test_it.py": "2077fc63f2b1267c05e0f9027106b2760d370dce",
    "unityroom.py": "ea11c7f08bb67a54b0627608a0cfb97d49920ecd",
    "sim vision.py": "1acb996dcad1acebbf6f40dea492c6fa3ecdd5ca",
    "api\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "api\\endpoints\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "api\\endpoints\\app_health.py": "ca01366bfb7b757a82a516cdaddc9ff9853a44ce",
    "api\\endpoints\\origin.py": "76ccda93dee733abe2769aff4eab2209546c606d",
    "api\\endpoints\\evo\\__init__.py": "6c2a0fb10b653f9d93d15499aad74758fec33789",
    "api\\endpoints\\evo\\core.py": "b8a62b57d8c12f760aaf8fa0a85962b1b969e3aa",
    "api\\endpoints\\evo\\conflicts.py": "05fb730394e005690fd7e21ce9cdafbbde6555a4",
    "api\\endpoints\\evo\\hypotheses.py": "dfcf99d520d0bf79429a271dbe33c3d1272de546",
    "api\\endpoints\\evo\\proposals.py": "b5c179db1851780ad3940e1c3ebfa15a33bb1303",
    "api\\endpoints\\evo\\replay.py": "2209946eff670341dd8a0c5923b7a5c2a0352e02",
    "api\\endpoints\\evo\\escalate.py": "7f8f55c5fdbaef5c7f283ee01a6845e8f4e0f11b",
    "api\\endpoints\\evo\\obviousness.py": "6ca48e72caa45a7899b60d2312d189bf586c7662",
    "api\\endpoints\\evo\\evidence.py": "afacef35fd20eaab915d58c3df65b4e6e1e81a00",
    "api\\endpoints\\evo\\scorecards.py": "91bec3491fe14e940b20e07d8be7556cabfa231f",
    "api\\endpoints\\evo\\repair.py": "ece9a6e88990540c3523fe56661da81bbd56bdeb",
    "api\\endpoints\\evo\\cycle.py": "160faf679b30d96af7de070a3bb63a990d7bc9c2",
    "api\\endpoints\\evo\\diag.py": "eea254b826ed3874ef6c7c4ef04dcb317279e5ff",
    "api\\endpoints\\unity\\__init__.py": "34339fe4404af341d23ef4828b92b20017bb70cc",
    "api\\endpoints\\unity\\deliberate.py": "77f91d3b173e157208e5d3d86adfafcc8db865ee",
    "api\\endpoints\\voxis\\__init__.py": "83747c076d303620da95a40bd2ee61a50576be7e",
    "api\\endpoints\\voxis\\generate_phrase.py": "dc581dfbfd2065532dfb452707948a606a3d2349",
    "api\\endpoints\\voxis\\interface_mood.py": "264f355933d02705a616c0a42d1274bffffc29d2",
    "api\\endpoints\\voxis\\match_phrase.py": "56cd60b3d2707633d10b7c7c5a56f1fa78ddcf55",
    "api\\endpoints\\voxis\\talk.py": "41dac6f54191ce6e95151b8c572957d481c7ec7f",
    "api\\endpoints\\synapse\\__init__.py": "3282f86fdc994709e85f55d2861998761509c901",
    "api\\endpoints\\synapse\\tools.py": "255afc109e6b7508a58129b9480ad52cfd41da95",
    "api\\endpoints\\synapse\\registry.py": "06bf69df9484c1cca9e7dfabd89723c05904695a",
    "api\\endpoints\\synapse\\main.py": "c0e560fd292e1bcf02a8ea73dc063ebd9d4b1289",
    "api\\endpoints\\synapse\\ingest.py": "463c9aa37b39435a09faf6ac5802f2024e7133bd",
    "api\\endpoints\\synapse\\tasks.py": "63b423cca4cf4eee585a789a725ba85b641a234b",
    "api\\endpoints\\synapse\\dashboard_api.py": "1326992cf1200338115fdc3431ff578648b7f3b2",
    "api\\endpoints\\synapse\\governor.py": "0eae9f94872bf29c8fabf0f23fe66283202e5c1f",
    "api\\endpoints\\synapse\\listener.py": "1ab564fee74ebfc241e889d39cd5e733fd29a881",
    "api\\endpoints\\synapse\\ui_api.py": "bf35a14c1ff758dea076514e11f7a7478b6ec2f4",
    "api\\endpoints\\synapse\\predict.py": "41b4c9b145d0ca305aa1b71abd2920fd00966593",
    "api\\endpoints\\synapse\\metrics_api.py": "4aa80844a7ed0abf8b03f10eae6d6c46c2c4a968",
    "api\\endpoints\\synk\\switchboard.py": "1818a7a1bc4ae3d04bc0a683aa6de99aa70180c4",
    "api\\endpoints\\synk\\__init__.py": "0ffe14deaa6ffe2b10f0c89d36cb111aea3bfc4c",
    "api\\endpoints\\equor\\__init__.py": "dce10d562c54fcabdb8722ac7c765ea7079ac101",
    "api\\endpoints\\equor\\compose.py": "2b1d15caa8367d88a7e76ac64d24eff413718a2c",
    "api\\endpoints\\equor\\attest.py": "b135f924b724baf662f2384ae5bbccbec553eaa3",
    "api\\endpoints\\equor\\drift.py": "0f45b0276d15f7d2b3f9d10893d885d99d7e1aa6",
    "api\\endpoints\\equor\\declare.py": "edd6c55fda5f6a66b6a575a3f528dc29546b31b5",
    "api\\endpoints\\equor\\invariants.py": "d4c7c568a760e3cb6011be2f0617c4e9a66a17be",
    "api\\endpoints\\llm\\call.py": "f3187c3a2960986b9a8f12f4f2cf406a5f060184",
    "api\\endpoints\\llm\\__init__.py": "c2fe4a4da6a09dfe6c9efe2e40d199ae0bad9b62",
    "api\\endpoints\\axon\\__init__.py": "658795d3f894a5813c06b915b3c53ea270170636",
    "api\\endpoints\\axon\\core_routes.py": "664b1c13164775f976b1f1c8e3e407febae8da50",
    "api\\endpoints\\axon\\sense.py": "138c76461520586810e62ff5ddbffad290cdcb68",
    "api\\endpoints\\axon\\autoroll.py": "c0cee54ebf8c3c6f9a230d2de9eaa138e70c4432",
    "api\\endpoints\\axon\\ab.py": "c2e9761959c47b96256b190b3fa5b1d7d91649b4",
    "api\\endpoints\\axon\\probecraft.py": "15b63bf8084741dc5618002281295f9407b9f039",
    "api\\endpoints\\axon\\probecraft_intake.py": "afe6b0148aac97e8ee1db79950438ed8c82cda17",
    "api\\endpoints\\axon\\promote.py": "281137b5b3fae327c102da1cf588af0ae342ec68",
    "api\\endpoints\\axon\\capabilities.py": "bb3501e284494d9a3b66befbe38b24abe8a25cce",
    "api\\endpoints\\qora\\__init__.py": "31d4f4392da079f8e7d9f92670223b9294005344",
    "api\\endpoints\\qora\\tools_catalogue.py": "f46eaaa9c74888086f7831c6109a6539f86f2912",
    "api\\endpoints\\qora\\arch_exec.py": "55e8251db306158e1d2c5a2f36ddb51f97382b4e",
    "api\\endpoints\\qora\\manifest.py": "eead0c49d0f092c4876c053dce0bdde161417043",
    "api\\endpoints\\qora\\gcb.py": "07af5ff50b24791ea16f3cc3df159b8f71ca7370",
    "api\\endpoints\\simula\\replay.py": "52ef04d2f51e147e14f3301d341fcc4ae10ab4d1",
    "api\\endpoints\\simula\\health.py": "705d89e519aef096394aa9637f2ca9728975ffc3",
    "api\\endpoints\\simula\\jobs_codegen.py": "55ecb124539c286a8864537a6b062c274ea74e15",
    "api\\endpoints\\simula\\__init__.py": "c4698af3b606ee2dbe9e039ee89df245d1f38490",
    "api\\endpoints\\atune\\__init__.py": "67ee6cf89d3ffda26e32ccccaf27e9dfee29875a",
    "api\\endpoints\\atune\\route_event.py": "ff68f119488b82d0dafd90fcee1c4e0a5fe132a8",
    "api\\endpoints\\atune\\unity_bridge.py": "f595cf56925a28fc46923e95a2b1f09d1d1eb268",
    "api\\endpoints\\atune\\trace.py": "b9697a69642f567f24fec501c119a57fd827ac58",
    "api\\endpoints\\atune\\meta_status.py": "9ea29374f8c8eb7f1b8b53942f9bafb72aa3fee8",
    "api\\endpoints\\atune\\meta_endpoints.py": "d70ba03fd5ad6bdbf45d3435bd72e57fc601e3d6",
    "api\\endpoints\\metrics\\atune_metrics.py": "1910da6527ef70907907fe92c421f5e7ca1a4ca9",
    "api\\endpoints\\metrics\\axon_metrics.py": "0588b9e62811d9ac348eae2dc4d14ee06fed2438",
    "api\\endpoints\\nova\\__init__.py": "45c874bfc7e9a8c0c2a23d029e1176ade095e4d0",
    "api\\endpoints\\nova\\core.py": "5bf356a7bb992580fc1d5ec5b681c343638f2f4c",
    "api\\endpoints\\nova\\handoff.py": "a5d4dd14750a9a2459568bfdbc8ffcbda0f42eb4",
    "api\\endpoints\\nova\\policy.py": "35a2992c772b7fb04582132592e61404ebca2ad9",
    "api\\endpoints\\nova\\winner.py": "5d15a7ddd44c4256ae50bcd5a57055049e5e8d9f",
    "api\\endpoints\\nova\\hyper.py": "4e4934b104b6fa9334b79a06b4b19f7fbc4a0e4e",
    "api\\endpoints\\contra\\manifest.py": "6ff58369f33952e81f0bd1637f5733fc3a5fcc39",
    "api\\endpoints\\contra\\__init__.py": "1765e91d5a344fd6e90856ec31b340bd2775b4ea",
    "api\\middleware\\telemetry.py": "cb6efd272f8e59bc1325c7c02223a6a4da60910b",
    "core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core\\llm\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core\\llm\\embeddings_gemini.py": "6102c35161df4e7eea2105f084d51063036e1d98",
    "core\\llm\\gemini_cache.py": "b950d148f7724bc60e284263045816277d4c8bbc",
    "core\\llm\\env_bootstrap.py": "aed7968ed8e48e401056c440e1f9bcc180a0de90",
    "core\\llm\\formatters.py": "b986cb36fae2d0d81e127d5188a87e1b3296ebee",
    "core\\llm\\call_llm.py": "57c8e1bc46668bd3a518706ad6efcae9ca125620",
    "core\\llm\\utils.py": "362d9d0304b1411b7dee28f764f684a368fe1475",
    "core\\llm\\bus.py": "36031ea3f4529ffc12fe258c165036ab360e0076",
    "core\\llm\\school_bus.py": "14deebe436db861ad486022634359978a0028138",
    "core\\llm\\metrics.py": "ba0ef0dee214190752acd6651f7ed6e393e64baa",
    "core\\llm\\prompts\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core\\utils\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core\\utils\\google_token.py": "da4d2683d44fcaa9002622ab1b88a1afe3b6311e",
    "core\\utils\\paths.py": "39b81f9b4bd92198b87a65dabde86cc84759982f",
    "core\\utils\\text.py": "772090a4e22b4a3644acd3fb2231c07f4a1037a5",
    "core\\utils\\time.py": "a4b8f864e8133045b11ea8e1377312e1e4bf026a",
    "core\\utils\\net_api.py": "3866898f4fef4b07157d6f2aca8df5731b36daf6",
    "core\\utils\\safe_eval.py": "9c0cb2f0729e718fec0867162707a5344d65df8e",
    "core\\utils\\jsonsafe.py": "12395e888e8477dcb45a16a8d27dbb42d0cbf0b4",
    "core\\utils\\eos_tool.py": "34d2d80077e4672ffb7f851ca467c824894b3337",
    "core\\utils\\net_api_registry.py": "b67539fec82d03b00e6e65d57bbc1cca83e32fd5",
    "core\\utils\\bus_utils.py": "cfa8e21d1f3f168631e2cd69fcc54fa0fec4a6df",
    "core\\utils\\embedcsv\\embed_all.py": "3fbe17318c3cb12670b0eb8de3e398de348f44fe",
    "core\\utils\\embedcsv\\upload_all.py": "87a9f62ada3d77cb63362d15a4736a729476050e",
    "core\\utils\\registries\\global_registry.py": "df411fa48c95c7dd43a0356770af694f95866d2e",
    "core\\utils\\vector_ops\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core\\utils\\vector_ops\\batch_embed.py": "f7e86b7d7cce3e0fdb3d54dd7fcb0a9297ce7a91",
    "core\\utils\\vector_ops\\cluster.py": "3505833978dd26895ca42f227fc781c44a0a8af4",
    "core\\utils\\vector_ops\\dimreduce.py": "dafe5d21ea42e39a7293634d6cc00223e954d72b",
    "core\\utils\\vector_ops\\config\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core\\utils\\vector_ops\\index_store\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core\\utils\\neo\\cypher_query.py": "c8a2ae15a82400563d1c4217f9581fe8551d56dd",
    "core\\utils\\neo\\neo_driver.py": "327d2072997dd5cea98f05276cb6cb41974fd8b3",
    "core\\utils\\neo\\neo_safe.py": "51a3551e5c5640b058fcad0ddb8a3b7dbbd8ecec",
    "core\\utils\\cicd\\listener.py": "e911973daa3a70e13dd510fbbbb40bfa4cb9dc30",
    "core\\prompting\\orchestrator.py": "54a03e22a8ee1d00ddfff65ef250c50ee8dd5fc7",
    "core\\prompting\\spec.py": "cd1dc9834146ecf8c5fa7db798121e8bb2d2d2f2",
    "core\\prompting\\lenses.py": "52a1a9ea1e49560c763d0a4333b3036f93d552b1",
    "core\\prompting\\validators.py": "ddd7a34c6bd56f6bd6341e15b0e499c93211a741",
    "core\\prompting\\runtime.py": "fbc71fdc7e2f55a1fc6a42fb26f3c558cc3f720c",
    "core\\prompting\\cli.py": "8c7b082735b48bf76911e769200a9285f19d9f68",
    "core\\prompting\\registry.py": "3e4100545ba0d6ddbcf9ac4e8823604ca95db546",
    "core\\metrics\\registry.py": "997f95eb1fd1faefd9c431fe648a35fd70acb72e",
    "core\\services\\synapse.py": "b494adf352d3e2f617762f8e1f25a3d85c6cac03",
    "core\\services\\equor.py": "b2e087affe7116004050ade47fff6071d09548a7",
    "core\\telemetry\\schemas.py": "85db1800a706549a6498d4852d24f17906460d99",
    "core\\telemetry\\context.py": "7ba6a77da047d587ac3f920621418f1d3b10c80c",
    "core\\telemetry\\ops.py": "25f7efdea28a39317f72c6426ba2f248a5522482",
    "core\\telemetry\\harvest.py": "6f6334aac0450f9ab61282f2668b91409f1b9cf1",
    "data\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py": "beaf970d59d8421bfb7c2d4fcac148f57efb5ad8",
    "launch\\upload_embed.py": "9c1a85e98d4953eda701369f23b4089a2ee50f1c",
    "schema\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "scripts\\exporter.py": "361bf1c28d0fa0de2aa234c9719712f9e2cf285a",
    "scripts\\search_vectors.py": "e3941faf357ac48dd1b6e7cd8055a1059bfeb7b0",
    "scripts\\upload_embed.py": "963c99687b8065b9ff1970fbc411086ac44efc5f",
    "scripts\\cite_clean.py": "69b413eb13b5e5a85d3ffd26d36bf39a31c2805f",
    "scripts\\eos_replay.py": "58063d8ba647ef9fdb3cb72fa82ce4c5fd76fd48",
    "scripts\\get_defs.py": "bd6795d9aa8de3f66bdd585a3e72515ef3fe9179",
    "scripts\\get_gates.py": "b56f2044a94be76fc14f5487a268fc2e8e367e84",
    "scripts\\stray_prompts.py": "f2dce7a369454fed8937e94e3b7965ef8c072b7f",
    "scripts\\schema_collate.py": "3c9cefc0e0827be79a8bd94952fdc758f6bd4206",
    "scripts\\placeholder_find.py": "22f1b3cb312825ab78dfe988fe7848cd02fdf513",
    "workers\\promoter.py": "3cbf9d17a4cc1935eacd351770be8f00ff4a0aac",
    "workers\\autoroll_worker.py": "2fb0bf0921b4d24d74a3ddb4fe40a59c030d62a0",
    "workers\\test_selector.py": "06cdd5956a3955928fafc2b2b75539985970166a",
    "tools\\hello.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "tools\\find_path_offenders.py": "5b32453d882184af9c0f0872b9694a8b94793410",
    "workspace\\hello\\src\\sum2.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "workspace\\hello\\tests\\test_sum2.py": "b8923fffa2de26bc533b14e32c7d55258f99d3d8",
    "src\\sum2.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "src\\simula\\config.py": "44afe1d03c3e9d619457623eead5089e6d3b0d3e",
    "src\\simula\\git_manager.py": "1fde19ae678c6847df626cb717da91808ef247f5",
    "src\\simula\\main.py": "f32a2762a38eaffa7ac988701ebbc5a77d0e424a",
    "src\\src\\simula_demo\\__init__.py": "09589ae82c94a9995917cc5e6892257d0ba4c3e8",
    "src\\src\\simula_demo\\hello_cli.py": "85f76da51dc6fa82dda5826c68d9d7ecd1ea0e46",
    "src\\src\\simula_demo\\math_utils.py": "e8d6996bf4166932fe336ae214ebf8399ae4ec1e",
    "DEcodiaOSsystemssimula\\simula\\common\\string_utils.py": "a09f673af35aac9a97439c00d4fa35e33907b3d4",
    "DEcodiaOSsystemssimula\\tests\\test_string_utils.py": "dd122d88d3528f8e4c1b63c5dc36c2a880441303",
    "DEcodiaOSsystemssimula\\tests\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "tests\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "tests\\test_evo.py": "e8e0b8b978a90c8243f00c56df68f990d993b983",
    "tests\\test_evo1.py": "fefeab94f0c76a84091055f5baccedecc9f4447b",
    "tests\\test_call.py": "8fb5e7fa0115617b2cf7cf7145729c6b7294fc10",
    "tests\\test_int.py": "ee0e7ca91dafcd92579c3d8737ce883ccca61d5a",
    "tests\\test_evo3.py": "2c46a4e0db67b52db5b743785e4dd916ce8ecbc1",
    "tests\\test_evo2.py": "e728746e9f4176fa458bdb982e1ee97e93a6b577",
    "tests\\test_evo4.py": "95c24017c35798554f9a9c2fe2f9ee5c2a9e366f",
    "systems\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\atune\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\atune\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\atune\\processing\\canonical.py": "26d9db7adc8422bb431e482268500a1d0e8445b9",
    "systems\\atune\\salience\\heads.py": "417ffea8fc38e866fb3e26b51b138f5ac5f82dde",
    "systems\\atune\\salience\\engine.py": "3c54d58dcabdb53b1fce59381e5ac4b19c1a9488",
    "systems\\atune\\salience\\gating.py": "55f2d8b8c3f6b0570ed4b6d28d9a5dd1a3104623",
    "systems\\atune\\salience\\conformal.py": "52be1b4ea17f2abfa2fb6a92a58d6561f68447e0",
    "systems\\atune\\salience\\conformal_alpha_adapter.py": "e5bdc25f0c666bc22efa4dc81d257ced902df144",
    "systems\\atune\\probes\\engine.py": "94af9325bdb5d317992b19fe28da18b09fd36a58",
    "systems\\atune\\planner\\fae.py": "a4681d74e1776a7872d59e6a33b0b8bdabd7c2fa",
    "systems\\atune\\planner\\market.py": "957b0d584b31b488ee33c931a0c09d4e9ab5e2d0",
    "systems\\atune\\planner\\intervention.py": "e3c528e988a70861ff0aedfc5e608021b4bea0bd",
    "systems\\atune\\planner\\inference.py": "c1e743e120962b39e7db39bcb069b93c6d573fe9",
    "systems\\atune\\planner\\rollback.py": "fbadb912134ed9cb79ba173e7a6314e014efbc2b",
    "systems\\atune\\planner\\strategy.py": "13612fa6ab78f6f4c8877153f8797e41f46e07d3",
    "systems\\atune\\planner\\costs.py": "b446eb8607436c9a7a8a7195553ca03faa85a479",
    "systems\\atune\\planner\\secl_orchestrator.py": "10f7cb3eef3bd52320114cbad0599463b5788bbf",
    "systems\\atune\\planner\\signals.py": "54cce01b71b657f247b79555bf2ed9b1a6d455a2",
    "systems\\atune\\planner\\known_caps.py": "3d3acf1edcea51576a78eeb9e47e3b1819007d79",
    "systems\\atune\\planner\\market_strategies\\pareto_knee.py": "6205b2e556ab471a3a47df752a524f622a042e6e",
    "systems\\atune\\budgeter\\manager.py": "159f2beb44b756f1ff509f26650a0e788301b747",
    "systems\\atune\\budgeter\\tempo.py": "f36b339c29c07779e8ac4e1e586dbec1c8d7bcff",
    "systems\\atune\\budgeter\\reserves.py": "e22237a726e17beab0ad7675ddb9ee17aba39dee",
    "systems\\atune\\knowledge\\graph_interface.py": "2d0f31ffa74e46401d3fdfa55242a8a6cbfffaa9",
    "systems\\atune\\focus\\field.py": "669ad2e00fce576b3ed6d26f21c75c7e236a3c88",
    "systems\\atune\\focus\\tuner.py": "7f5e1041e450eea65f8ecf837951420dcdfac088",
    "systems\\atune\\control\\affect.py": "9251bff0623aaa4b02fd4783fc62b41f000067f6",
    "systems\\atune\\memory\\induction.py": "2fe1d1f2b0e344fde348a90650e391691b89ff1f",
    "systems\\atune\\memory\\store.py": "42c1c3d8d67f83acc77597c14bc5364168aef656",
    "systems\\atune\\memory\\schemas.py": "1b94f97dc0b75142a265e60e72f539a5e3ebb4dd",
    "systems\\atune\\causal\\model.py": "77b688a2fd7f5c12b0f9008e72eca9e2a21eec17",
    "systems\\atune\\causal\\discovery.py": "368255a56304bca21830172c27726cf35419601e",
    "systems\\atune\\causal\\scm_consumer.py": "169231c6eb9093565054b3e8f4692902f543a181",
    "systems\\atune\\journal\\ledger.py": "a4e080234bd795b8efe547a3c800d4513fa02d15",
    "systems\\atune\\journal\\why_helpers.py": "a23ee06b9b53496dc2546dbca37a521b0625c6c5",
    "systems\\atune\\safety\\reflex_catalog.py": "6cea9aae4f69e36799cfead78b0cc628c1187caf",
    "systems\\atune\\safety\\gating.py": "ab9e4656356f35e7579d5f80cd7c1eeb0a0fbdd0",
    "systems\\atune\\ingest\\followups.py": "eda21083067d6ca9ffddead35bd39fe60df0b7ba",
    "systems\\atune\\gaps\\schema.py": "6a8cea4f1ab7050b15b9e12fc0900d89e5e9777f",
    "systems\\atune\\gaps\\orchestrator.py": "afdb6534a0a9980e82f238cf893e3da4556facb9",
    "systems\\atune\\intent\\constraints_merge.py": "432e57711e2dcbeec278874d9658e0d5340ac01c",
    "systems\\atune\\intent\\gap_detector.py": "cec0b465b654cdfa40da3ada6dc1db6bd5c89c0b",
    "systems\\atune\\intent\\playbook_schema.py": "fd59c1eed805dcfe7613cc50246f4d1c60b92370",
    "systems\\atune\\metrics\\secl_counters.py": "d0bf6866484c5091be9fa787f32387f88da4fa45",
    "systems\\atune\\metrics\\budget_audit.py": "83aa0b1f85bbfcdf4031957e4e983762ee665bec",
    "systems\\atune\\escalation\\reasons.py": "4fb5ef3910b1ec3f5886ff2318a99637b46c1612",
    "systems\\atune\\escalation\\build.py": "a61e73d762bbc1c3deb631a9d469624d3c825207",
    "systems\\axon\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\axon\\schemas.py": "e37b9cf214c4257a63d2ed9a92b2ba205418a6f0",
    "systems\\axon\\dependencies.py": "80d67060270cc440e2532429e88278a72dc16fa7",
    "systems\\axon\\io\\quarantine.py": "45820f0dbf6278caa9f8d6ce13ab3333a87db4b9",
    "systems\\axon\\mesh\\sdk.py": "8e55e767646bf0166a39483bfd530ab576e9bcba",
    "systems\\axon\\mesh\\registry.py": "8c1989448bd2acbed41d94f7b39115fbd46a632a",
    "systems\\axon\\mesh\\lifecycle.py": "2510c8cd17c10d5c7a02f2e78232b1c0ab3ee621",
    "systems\\axon\\mesh\\scorecard.py": "f10cb25db14adb325961ddf8dbdba0ec2702c638",
    "systems\\axon\\mesh\\attestation.py": "95dd9ceafe75ea769935566f695dda9c0b892f44",
    "systems\\axon\\mesh\\autoroller.py": "4ae23234c783fcc8bacddb04cd8d0d68389b78c0",
    "systems\\axon\\mesh\\promoter.py": "a4a8ad65a837bf01fca799ffcc2c7992259d9d63",
    "systems\\axon\\journal\\mej.py": "d9dc731499d23e6cb363d313896c50babff47502",
    "systems\\axon\\drivers\\rss_driver.py": "ff4979600bd066a33cdb7080a75b6f51d633df20",
    "systems\\axon\\drivers\\qora_search_driver.py": "2f66c0abf7f99108e3ca224712c4b297410283d8",
    "systems\\axon\\safety\\twin.py": "4ffeab54704fba9173ff08b58e4d8eb9e633e6ec",
    "systems\\axon\\safety\\validation.py": "547b10359d1b2bc0af2439bde866156078e57f3e",
    "systems\\axon\\safety\\conformal.py": "eb3dc65f916ab07fbbdef502a2e540996e5bdc80",
    "systems\\axon\\safety\\reflex.py": "ffd38568f492a3dce978aa2f84dbe1386615185d",
    "systems\\axon\\safety\\circuit_breaker.py": "61ea8dfa21d77a8c809d14833424b62960b53c3b",
    "systems\\axon\\safety\\contracts.py": "9ce3d3f48969e0d741a5c02038bed590faae275e",
    "systems\\axon\\learning\\feedback.py": "87ac0e62209af88adf430659c5d090a2b3cc2837",
    "systems\\axon\\security\\attestation.py": "98ef2e2f87ba3913e8b90416241f7c6121de41f2",
    "systems\\axon\\ab\\runner.py": "5c3b3fd6b576678e5f4d0aa62e59ba094e90e6ae",
    "systems\\axon\\events\\builder.py": "45f33eb75cdba11c85a8af705a7b62a320de1404",
    "systems\\axon\\events\\emitter.py": "fa344176e470ed040fe73f817739d6aef5e1daab",
    "systems\\axon\\rollback\\engine.py": "348c956c42617fa10a54fe1958a329741598c4ba",
    "systems\\contra\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\contra\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\contra\\core\\utils\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\contra\\manifest\\models.py": "80e6bf4b358ffafb4dd7cea74da632b220ed70d4",
    "systems\\contra\\manifest\\assertions.py": "62fc7a48ba94f440063804168d0403c3854d638a",
    "systems\\contra\\manifest\\selector.py": "2e157fb89a88f046c5ac4edf58e2ad41fa945b18",
    "systems\\contra\\manifest\\autofixers.py": "97e4de87345d54bef77cec6b8ae12a3fe0bf88d3",
    "systems\\contra\\manifest\\engine.py": "ef97c300444b9cb5ec9035e445a4f33ead4fe482",
    "systems\\contra\\manifest\\__init__.py": "b83f49b1afc2e09c2a32fe346f7f128d880eccec",
    "systems\\eido\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\eido\\fakey.py": "be5834526e2f4865bff2f12273ad17ccf411ccc7",
    "systems\\eido\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\eido\\core\\utils\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\ember\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\ember\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\ember\\core\\utils\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\ethor\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\ethor\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\ethor\\core\\utils\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\evo\\__init__.py": "e7146e6c74c5abe5ab70f37d3e1136f5970b18e6",
    "systems\\evo\\config.py": "c211b31444b5568e6fdf00925396c6f93559d58d",
    "systems\\evo\\schemas.py": "036943e0f83cb70568a3c593e39e19ac2e161d68",
    "systems\\evo\\conflicts.py": "864b07d100f9c62383c10f8888b1d9f0773b0485",
    "systems\\evo\\engine.py": "abc184c44245f237da6bea51b91f102679b05d71",
    "systems\\evo\\runtime.py": "9d9c28ac0b1e0736c877b15d60e39627fcdc168a",
    "systems\\evo\\hypotheses\\__init__.py": "543928017d4f546914a7d7bd015d54544ccd2a10",
    "systems\\evo\\hypotheses\\factory.py": "d39fe568d72e1d4ab2460434216d5e6de3b28341",
    "systems\\evo\\evidence\\collector.py": "6d573a3f2d3dbb4370ae2b13efd638308cb87f29",
    "systems\\evo\\evidence\\__init__.py": "af254f182182d6fc09783a0d8a3b87670f6a6a62",
    "systems\\evo\\evidence\\modalities.py": "8865087280f4273538e28f019c700ccdb7069563",
    "systems\\evo\\proposals\\__init__.py": "160609bc087db1e14c76575ff83da32459c89f4f",
    "systems\\evo\\proposals\\assembler.py": "e99fa0f6869b8145e1285a2dbcf652e061f73d0a",
    "systems\\evo\\proposals\\review.py": "221a1dfcab7697eb43b5dbd2395d1808d7cb86fa",
    "systems\\evo\\replay\\__init__.py": "40079919eb73f0c4ff0b985e59ff304c094d0521",
    "systems\\evo\\replay\\metrics.py": "c061cf9248fc5258fcc9f4ce9ff55e58ae647191",
    "systems\\evo\\replay\\manager.py": "4d70bbb888e8d281df7d55a6dbda3062b5c3a4db",
    "systems\\evo\\replay\\builder.py": "78a6ff22a3392f90a3ca84d272a33ba17d58e777",
    "systems\\evo\\telemetry\\__init__.py": "c90025111b444b9e978300cdd014584db3dad990",
    "systems\\evo\\telemetry\\metrics.py": "c061cf9248fc5258fcc9f4ce9ff55e58ae647191",
    "systems\\evo\\gates\\__init__.py": "2e29b7c375c2baae24c6cd4ae25eab8d7d91f5af",
    "systems\\evo\\gates\\obviousness.py": "74973dceaf15bc0aa3fbb183bc8e655cf7a33e8c",
    "systems\\evo\\clients\\__init__.py": "5310dd815bc5dd02619648b76ec6d94df8f20ae7",
    "systems\\evo\\clients\\nova_client.py": "ef34104a7e464a80eb2ded9a88d3baa6cc2da990",
    "systems\\evo\\clients\\atune_client.py": "53bc867cc58e86f7b4981d25c190cd50e13c927c",
    "systems\\evo\\clients\\synapse_client.py": "e8bfd6a6764a8f5f05552cecbd27bd544fcaa2f0",
    "systems\\evo\\clients\\simula_client.py": "378798ea3bbd14fa77a73f22e81a93c0bcb448ac",
    "systems\\evo\\scorecards\\exporter.py": "4638bdbc3c306f9288097c4255181982f9b68522",
    "systems\\evo\\scorecards\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\evo\\repair\\tracker.py": "cc63a3820f880841873fe32b8d96882c4d327486",
    "systems\\evo\\repair\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\evo\\briefs\\innovation.py": "db76397504137f731cf8673b48f3d4340718fd38",
    "systems\\evo\\briefs\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\evo\\assemble\\assembler.py": "41b9932ade8367f25111730514dd2693a101e1f9",
    "systems\\evo\\assemble\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\evo\\conflicts\\store.py": "67c101e88519aa81214b5fbd573a84206cd95904",
    "systems\\evo\\conflicts\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\evo\\spec\\deriver.py": "527ccea23fda9d99ce8417b3335104b9ffed05ab",
    "systems\\evo\\spec\\validators.py": "cf02a5ad68f91243bf42324d85438f5575bc96bc",
    "systems\\evo\\journal\\graph_writer.py": "6135454cdb9fa79e32d327b2b036c51a194c7364",
    "systems\\evo\\journal\\ledger.py": "49d38b17a6e1847c5d94b2f53e44f8c9525ef5e1",
    "systems\\evo\\routing\\payloads.py": "6dbd6f3225362ea692416c13ce0dd32136b2b2df",
    "systems\\evo\\routing\\router.py": "7457fa8f54cc56451a69f16c130743f761d070c8",
    "systems\\evo\\dialectics\\tension_miner.py": "43d35a9c7a843d8c160fc0f8563a9f89c9d832de",
    "systems\\evo\\graphs\\genome_map.py": "73bef4e110386935974036d4b1fc8007a8d0ce58",
    "systems\\evo\\counterexamples\\distiller.py": "ac47b5e72d5d17be5fc0c5a7ba6b8edacc987c45",
    "systems\\evo\\policies\\sentinel.py": "b0fa3de93c6eef88ffc6c363367045ccba0df9a5",
    "systems\\evo\\metrics\\harvesters.py": "3701839f02ee7a0652b0fea2c990977b0c245415",
    "systems\\evo\\pipelines\\nova_cycle.py": "bcffff08169e221fda83639748f17c4af92b94ff",
    "systems\\mythos\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\mythos\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\mythos\\core\\utils\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\nova\\__init__.py": "3d086ae00b933ac11fc2b5bc117d1a16ae3f3097",
    "systems\\nova\\schemas.py": "cc5c0e27c20fb7c32bd7dcab6856b3d0280a1b0f",
    "systems\\nova\\ledger\\__init__.py": "dee996122f7b0d328bbacfece71cf0609e9bdb47",
    "systems\\nova\\ledger\\ledger.py": "b7261ccc88133d8ff097f3b2c1e8d0238d45cc30",
    "systems\\nova\\ledger\\journal.py": "df77d08c99cc88e527cca0516654d9d58897526b",
    "systems\\nova\\runners\\__init__.py": "c8b1e6e6717e4e7bcc8b4c40b8cb2459eccd42a1",
    "systems\\nova\\runners\\playbook_runner.py": "c5356b3d53c1d3f759bf06140a5137c380ec9eb1",
    "systems\\nova\\runners\\eval_runner.py": "e239e86d4dd8e0d180e6d2c02f85562c55c6115e",
    "systems\\nova\\runners\\auction_client.py": "7e8177990720d991e0058c1a769ba1f59b4d5f01",
    "systems\\nova\\runners\\rollout_client.py": "c7aaf1b810e75e617b1d7c4b79f5cd795ebba37f",
    "systems\\nova\\runners\\interpreter.py": "52e86e1fb36e162b1628f769bcc8b5e59638b62c",
    "systems\\nova\\runners\\patch_handoff.py": "a7d97a99811c0e7ab15fb707dfcf1f4d4750a09e",
    "systems\\nova\\runners\\meta_playbook.py": "8358daab33dd502f6c2ef4853c53af26d48a13ea",
    "systems\\nova\\runners\\portfolio_runner.py": "565f8db55a8fd43dfe7d665d63a99c6545a0925d",
    "systems\\nova\\dsl\\specs.py": "729b49530546a5f753d655841cfcb3d189aacae9",
    "systems\\nova\\dsl\\interpreter.py": "52e86e1fb36e162b1628f769bcc8b5e59638b62c",
    "systems\\nova\\dsl\\lint.py": "e3b80356c5de60fd8d4989bdbb8f94b96c8268a4",
    "systems\\nova\\dsl\\mutate.py": "1d22370d715ccd4c796da97175b7aac5f73802cb",
    "systems\\nova\\playbooks\\qdelites.py": "b115f0dd49099190cfcb3f4b76ebd42afe9042c0",
    "systems\\nova\\playbooks\\tot_mcts.py": "7e7c47655f3943d67644954f9aefa4edf3056e03",
    "systems\\nova\\playbooks\\dreamcoder_lib.py": "b22beeabe98116d1b82dd5ea6f87aca707d1e818",
    "systems\\nova\\playbooks\\registry.py": "e9889cfb0e7964dbef9df4d303d43a7f8ceddde3",
    "systems\\nova\\playbooks\\hotreload.py": "d3e54d7397e6fdeb16725564fe4585ccd656e456",
    "systems\\nova\\proof\\pcc.py": "dcb431770fc0853e22f7f311e74edddc454d08ba",
    "systems\\nova\\proof\\pcc_ext.py": "1958fbc78053496f0a34773beab05f77540be273",
    "systems\\nova\\proof\\pyd_types.py": "5d6db231dbf0c67cf479a9143627e528d22a8bb4",
    "systems\\nova\\types\\patch.py": "27d866612e31e15c8a846ab62bccb85dbf4e3547",
    "systems\\nova\\clients\\simula_client.py": "ec52e0b0646da1236c3cd1de69accabb92f1d3d7",
    "systems\\nova\\clients\\synapse_client.py": "77702265e126cf0acae2edf1d61daf2c84c28271",
    "systems\\nova\\clients\\equor_client.py": "b3f15ef5a8ed54d812dc1ad799686377a050701c",
    "systems\\nova\\pipelines\\winner_pipeline.py": "64520073c5b543e8716ac422b9aaf5e95a786b21",
    "systems\\nova\\insights\\self_model.py": "e180e170d53e5a0e3bb3a9cac99bbfe7b57d53fe",
    "systems\\nova\\insights\\self_model_store.py": "8784aa77610c4d7dbb965e60afd2219b411eac66",
    "systems\\nova\\novelty\\reservoir.py": "e6aea97fceda0000f946ca529a365700b628e484",
    "systems\\nova\\memory\\qora_bridge.py": "adb9a3a6332a48bbdf6fd5f6d158eeb5242cdc06",
    "systems\\nova\\hyper\\hyperengine.py": "d2bb17be7192429bece53fc897535267748e1ce2",
    "systems\\nova\\eval\\cost.py": "a29a9e28c494d9139572769c7abf9504178d5915",
    "systems\\nova\\eval\\metrics.py": "f0f12c10e00ef225f8081ed1ff0d69f34bab6bbc",
    "systems\\nova\\telemetry\\hooks.py": "e2cd6c21f7ebc76b76a0ec2c87a855c441de67ec",
    "systems\\qora\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\qora\\client.py": "f904141076ffc66558e0c162f8d11100e2b70872",
    "systems\\qora\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\qora\\core\\origin_ingest.py": "8c87220c45ba399d887f32a7db5cdc30b80fcd76",
    "systems\\qora\\core\\tools\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\qora\\core\\utils\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\qora\\core\\architecture\\arch_patrol.py": "a8e4ef73695d54bf3ad4a55bc792365c80e61446",
    "systems\\qora\\core\\architecture\\arch_execution.py": "351b1e6208700858ac8e5ae216db9332d8429767",
    "systems\\qora\\core\\immune\\auto_instrument.py": "a8d74cdaa9a9f5bf2a8e4cb88fea695692d13799",
    "systems\\qora\\core\\immune\\conflict_sdk.py": "403dd2df2a7160b80366fa3d82ce59774d1c9a4b",
    "systems\\qora\\core\\immune\\conflict_ingestor.py": "83e1c7ce1c9b79381d05ac47955df8dacc110df1",
    "systems\\qora\\manifest\\models.py": "43a3de631e2c9e6ad2752b7d90bba1485fadb228",
    "systems\\qora\\manifest\\builder.py": "a77c630d140ec5bcdddd2dd411f94fc2858dc169",
    "systems\\qora\\manifest\\registry_client.py": "7ca2a3402ab68dc4017f2c235f0d74166068ab5b",
    "systems\\qora\\manifest\\engine.py": "94e3edfe343c06419e42080888e0e645cbd32651",
    "systems\\qora\\gcb\\models.py": "60b38bdfc7bef2b15d9c7f5a6b7e0d3620ba556d",
    "systems\\qora\\gcb\\builder.py": "c476046e5a0c2d152a063ac8bde7e1c0e85e20dc",
    "systems\\synk\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\synk\\api\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\synk\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\synk\\core\\tools\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\synk\\core\\tools\\cluster.py": "4e0e397783e521254d86b77d01c4e5dfc61f9fe0",
    "systems\\synk\\core\\tools\\cluster_tools.py": "28fe2bdc290f75b09823c19e96be5547854c334d",
    "systems\\synk\\core\\tools\\clusters.py": "0cccd53bf644831481edc9522cc9c18dd1181190",
    "systems\\synk\\core\\tools\\mesa.py": "34e651bf33d8ca649f3318290e3dcc9f19e5308b",
    "systems\\synk\\core\\tools\\native_clustering.py": "a323accd036d2cf9b606a48aef688174ad8c65ac",
    "systems\\synk\\core\\tools\\neo.py": "8e7b4c15d1faaa730382b65faaccd9f1ba1d8187",
    "systems\\synk\\core\\tools\\schema_bootstrap.py": "0e8c3b1037136575d1c368010192315c6ee48121",
    "systems\\synk\\core\\tools\\vector_store.py": "850e595751edd272e645a4d22e6aeed20e1a8b37",
    "systems\\synk\\core\\switchboard\\client.py": "8e8a0207b623acc036f38b2d97839ec19e6c9984",
    "systems\\synk\\core\\switchboard\\runtime.py": "c3b6cbb39c0420f2bb7f2986147451d370d120da",
    "systems\\synk\\core\\switchboard\\flag_deps.py": "de7dc7e94cddfbbcfd1f7abf7231a75890e60503",
    "systems\\synk\\core\\switchboard\\gatekit.py": "7f23b41a08af45dac16ede3293e2dd97149ee01b",
    "systems\\synk\\core\\switchboard\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\thread\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\thread\\core\\identity_shift.py": "27dff7f7d5d0f40ee06ea37e3ef827e88d9c5243",
    "systems\\thread\\core\\identity_shift_prompts.py": "d354a6d207a236351853ef8bb643c2c9705fbbf3",
    "systems\\unity\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\unity\\schemas.py": "a835e8e6a7d4eb65aac85b51592b86970fafc3c6",
    "systems\\unity\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\unity\\core\\neo\\graph_writes.py": "602a9e3f244f52b4e102ba5d6c828807fce5bda8",
    "systems\\unity\\core\\room\\adjudicator.py": "6bec522ba141908b08ecd14cffbd8b3413bbaec1",
    "systems\\unity\\core\\room\\orchestrator.py": "a595ad25219a796ab9b29b86544067e50cd1a66c",
    "systems\\unity\\core\\room\\participants.py": "abadfc2c10d3a683221f678f9cdc335b4b0d9ac8",
    "systems\\unity\\core\\room\\argument_map.py": "736bd9af2c053314020d926d05feafdc64b3d52e",
    "systems\\unity\\core\\protocols\\debate.py": "aa9b50bcf67a683c03b2627cbea6106fa9c848f7",
    "systems\\unity\\core\\protocols\\critique_and_repair.py": "0a20a2fe34486c0e0763932f77a113449428185d",
    "systems\\unity\\core\\protocols\\argument_mining.py": "85a49bd2a46f8b0d2564d7647bd4351af1a19825",
    "systems\\unity\\core\\protocols\\meta_criticism.py": "1fb930c12dd173965786d76a9c8f4a5aae75503c",
    "systems\\unity\\core\\protocols\\federated_consensus.py": "ed14f49dc88dc794f6f20d7765eafb7721dbc84b",
    "systems\\unity\\core\\protocols\\concurrent_competition.py": "478306418e74e25111e85185537d861f59c6c54e",
    "systems\\unity\\core\\protocols\\cognition.py": "03ea7cb76bf0fc7f86bb690a7b0667e777397b99",
    "systems\\unity\\core\\workspace\\global_workspace.py": "6b8b13d3420c49940a9ec43fe3ace2ca26c22b26",
    "systems\\unity\\core\\t_o_m\\modeler.py": "24567f0dfe3672704504b2bd55cb9acac8f6e1ce",
    "systems\\unity\\core\\cognition\\llm_util.py": "4c6be6cb4c7d5ca76803f11a29c0f15efb5d0bb4",
    "systems\\unity\\core\\cognition\\verifiers.py": "a6da92d8612c3aaba9ffca7ffa3b60f5389bb658",
    "systems\\unity\\core\\policy\\safety_policy.py": "99a28de6286838e39ee37e65f6eaddfa9d81953c",
    "systems\\voxis\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\voxis\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\voxis\\core\\voxis_pipeline.py": "e523f1a9f54c784a6862bfa3197b01b880ae722c",
    "systems\\voxis\\core\\utils\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\equor\\__init__.py": "7fe3385a564c7916d25b756714313c1e0cfba158",
    "systems\\equor\\schemas.py": "0ad08d5b6b2acad41bff2f00ecdc1643f5c86a69",
    "systems\\equor\\core\\neo\\graph_writes.py": "144af4d40b460c55f420e0fb480acfbcddd4d4c7",
    "systems\\equor\\core\\identity\\constitution.py": "dc9f97fe1daa0cb6a38ed45f01d1304568b0e916",
    "systems\\equor\\core\\identity\\registry.py": "2733d75e6b53ab00ec6c1a03ecccf81d890cab34",
    "systems\\equor\\core\\identity\\composer.py": "a1b7be0ff4661c652b54e7af9478656f1d428779",
    "systems\\equor\\core\\identity\\homeostasis.py": "c63d802fa0927f6f4c20fd83cdde544dce4b0979",
    "systems\\equor\\core\\identity\\invariants.py": "f6fbeab5955a78cabaeee0d0cceebb7367157eb3",
    "systems\\equor\\core\\qualia\\manifold.py": "2d48ebd77e22d96d033dbfd8b4f71de22443e3c9",
    "systems\\equor\\core\\qualia\\trainer.py": "a01a7231520f0d0a879f57b41dd1f2f6ae75f7d1",
    "systems\\equor\\core\\self\\predictor.py": "85364a4a18fc9440f311e6f5152c96b302bc9e4b",
    "systems\\equor\\kms\\keystore.py": "aa66a1e9ceac08852999fe5cc08b71871bc24011",
    "systems\\synapse\\schemas.py": "6cc54df1e1187739c679c1b1fee04381521692a7",
    "systems\\synapse\\daemon.py": "7bf810aa1a85bdb906815d9218f7d3801e3f92c6",
    "systems\\synapse\\schemas_metrics.py": "d96b47d4f3e922bf4499ec381d5d28a14b2caf83",
    "systems\\synapse\\core\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\synapse\\core\\registry.py": "bfbbdadb31369628a4b256b522a050d2da3cefd5",
    "systems\\synapse\\core\\tactics.py": "b72091ba1cee942c7a20d72d08956363a862b566",
    "systems\\synapse\\core\\reward.py": "714ebd1802257815228f6c8a8eb3ddadc818ecc5",
    "systems\\synapse\\core\\planner.py": "c963cbfb26ebd9ea3fac766b868f6758285f5078",
    "systems\\synapse\\core\\firewall.py": "580bc8333a65900f2700bdef3c5a93e28d9e9331",
    "systems\\synapse\\core\\genesis.py": "1d3e6ca0888bc92f2ca1175d3fb340fb7613fedd",
    "systems\\synapse\\core\\episode.py": "50aafdc47c5b172c81463134292921477708a467",
    "systems\\synapse\\core\\arm_genesis.py": "d3514899fb779fddc207286a648eb79d22c5ff57",
    "systems\\synapse\\core\\register_arm.py": "2f1c080dc1534cde17433d3ab9eca79d22a671b2",
    "systems\\synapse\\core\\meta_controller.py": "ed49298684fa676c267bf11e58c6e44b34f57782",
    "systems\\synapse\\core\\snapshots.py": "e1edca7e2a763f6460580f1b67a82cedd81dff45",
    "systems\\synapse\\core\\governor.py": "d61e8e11f9843fcafda0fb27c88c066e8497ed53",
    "systems\\synapse\\training\\__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\synapse\\training\\offline_updater.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems\\synapse\\training\\meta_controller.py": "e82197522448b63c3c484011cb5652778c28f18b",
    "systems\\synapse\\training\\adversary.py": "9c34ba4969cf03ab71702dd90d60c67af6885728",
    "systems\\synapse\\training\\bandit_state.py": "c9601d42957aae71530b50dfe23ea401e3cc9a5b",
    "systems\\synapse\\training\\neural_linear.py": "3d1c393957fbca4d679cef15f0c552491a449b38",
    "systems\\synapse\\training\\encoder_trainer.py": "134b418b758340d2f43b3cd9d88d8666bde3af3f",
    "systems\\synapse\\training\\run_offline_updates.py": "ab6b54614be216c0d0123887ea29010d5f5ec517",
    "systems\\synapse\\training\\self_model_trainer.py": "739f6707347c50273eb9ec1c4e590a41418fac61",
    "systems\\synapse\\training\\tom_trainer.py": "3232071a4ee364e872785b1a82382e8c621438be",
    "systems\\synapse\\training\\attention_trainer.py": "8b7a515fd1e574809c29d216c464888b859e98d9",
    "systems\\synapse\\sdk\\affordances.py": "25621017dc422fd439e9437ca23248a55b34841b",
    "systems\\synapse\\sdk\\client.py": "841de3d14855ad20558c5bc16d3a7ec3961feb0f",
    "systems\\synapse\\sdk\\context.py": "51c9ea804aeefe2c1e548adb2661d0ed608bd174",
    "systems\\synapse\\sdk\\decorators.py": "9a88d1869251a83b9a636122e4b82e93d958693d",
    "systems\\synapse\\sdk\\hints_extras.py": "d6f0737e0c3c3edc641306a6e7f060d81938db92",
    "systems\\synapse\\sdk\\hints_client.py": "5b99a9a3085be5954e057fb9c6c1c21f2a99145a",
    "systems\\synapse\\sdk\\causal_client.py": "2cb51a53e09d5e0c452572da1696c176a9188220",
    "systems\\synapse\\policy\\policy_dsl.py": "c0c70749fa2bd774f8ca9e845215292236b322db",
    "systems\\synapse\\critic\\offpolicy.py": "9578fa56aa91a7d05efb0723b3f811be536022a1",
    "systems\\synapse\\firewall\\smt_guard.py": "3f5b71eacdb2efdf81a154753aba3fbb3a789de7",
    "systems\\synapse\\world\\simulator.py": "713a82eef17554848da7f5bf89ea1da2a8d81b78",
    "systems\\synapse\\world\\diff_sim.py": "0c41132113cbabb4113a62d111a1e76d3ca4bdde",
    "systems\\synapse\\world\\world_model_trainer.py": "7f44b74d8dfb15c9b81c78b6458b7c111c157fb7",
    "systems\\synapse\\explain\\minset.py": "05b2df404b57a118479cd9855961e0d73529bb51",
    "systems\\synapse\\explain\\probes.py": "a9e9ee61b23bbccfaaef23548954699fc85fcc03",
    "systems\\synapse\\qd\\map_elites.py": "f9b693bc0c98ac544dca746a1a509f86cdae873d",
    "systems\\synapse\\qd\\replicator.py": "475dfbe177583a42cfb3207ddaf80cc732baf948",
    "systems\\synapse\\economics\\roi.py": "a36f579c44dc289b5ec7cec062ef5e68d6e47280",
    "systems\\synapse\\rerank\\episodic_knn.py": "fe84d858ecaf030773651975d33ab1bdc5867c26",
    "systems\\synapse\\meta\\optimizer.py": "0167dd9b82e88fbb809e1c7290165ecf303e8778",
    "systems\\synapse\\safety\\sentinels.py": "1ce18fe3c23a485641d432beede34a7401e379a3",
    "systems\\synapse\\experiments\\active.py": "c35d5f35d01e87db5ad880953f19a037d432e45e",
    "systems\\synapse\\values\\learner.py": "e835f2919b9ad709bf2f45079c0890bcae3b4801",
    "systems\\synapse\\robust\\ood.py": "038497ac1fe105de5ae94f5ac963064afe16c1f9",
    "systems\\synapse\\obs\\schemas.py": "9d73bb156382930fb0c933d1ef089e3ac66407ee",
    "systems\\synapse\\obs\\queries.py": "b8ab4fd1719a67db56dec89d3ef40e09f5d77847",
    "systems\\synapse\\obs\\schemas_metrics.py": "d0fd20523c41e5c5fad75cf9cb038e1d23a5ed6f",
    "systems\\synapse\\obs\\queries_metrics.py": "1d94279d681685af805faa2adfaaeec276fca5a9",
    "systems\\synapse\\skills\\schemas.py": "2d57fe93052a716e20580b8c352bd56c3583baa7",
    "systems\\synapse\\skills\\options.py": "3f96b3d05c6c80a3fd9ebd65c407ecacb3421425",
    "systems\\synapse\\skills\\manager.py": "eab54a2779d4a78230a3d55c4362a33b3d384a17",
    "systems\\synapse\\skills\\executor.py": "835388773b254caf1b1b17aad5d2ace318e38770",
    "systems\\simula\\config.py": "b678459961662d7745f4e5751bf4837c7d4cf0a2",
    "systems\\simula\\agent\\orchestrator.py": "23f71c619e22f1ea02582f61493a93db65bf0e78",
    "systems\\simula\\agent\\tools.py": "9a2f8c5f427f6aed7d5f05c070aa01f5e479cdfe",
    "systems\\simula\\agent\\tool_specs.py": "f90f831b90f408c8f794551e9b584aa42930e2f8",
    "systems\\simula\\client\\synapse_client.py": "149e48fbc174b96a7ade38ed27f69462b76dce3b",
    "systems\\simula\\code_sim\\eval_types.py": "67ccc911e9850d4049f954c14e1d59456e0732f4",
    "systems\\simula\\code_sim\\loop.py": "61bfcd56a9e29bfd8db22b7507ba5ab4035a5d18",
    "systems\\simula\\code_sim\\planner.py": "e44f93c0f8fa543a16de59b03fd41e856a17a23d",
    "systems\\simula\\code_sim\\portfolio.py": "2d77ec6fafab4779d23be6a9e5dafa2da7e03371",
    "systems\\simula\\code_sim\\prompts.py": "d6e6ee48a6c67955e3eb2f55a0c688a66a0e3848",
    "systems\\simula\\code_sim\\telemetry.py": "f77b723c244a3292d67becc927864af50713a72e",
    "systems\\simula\\code_sim\\archive\\pareto.py": "ac0da4ee59dc54c781c496b3174eb520b43f8483",
    "systems\\simula\\code_sim\\evaluators\\contracts.py": "cc0f21dcb5e2a0efdd5a8c2fa9da46b12ec0b7ef",
    "systems\\simula\\code_sim\\evaluators\\perf.py": "e77c761c4cface4d8f26ad9a59451bc42e6cbfee",
    "systems\\simula\\code_sim\\evaluators\\runtime.py": "7b4c63aaa25e34cd1e26d74c8940157b711b7bcb",
    "systems\\simula\\code_sim\\evaluators\\static.py": "e86b797ecd37be159c7c0b836d46b3569b278098",
    "systems\\simula\\code_sim\\evaluators\\tests.py": "2e84f18225bf1f776cf2860f9503ecca13f51785",
    "systems\\simula\\code_sim\\evaluators\\__init__.py": "404437fd3bc32c4fdffeba882704141cc416d123",
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py": "073614ed17ae7b27dc1bb12d47f284707e1319e0",
    "systems\\simula\\code_sim\\mutators\\prompt_patch.py": "006c5980ffad7057175b0f95506eadbeaa75af11",
    "systems\\simula\\code_sim\\mutators\\retrieval_edit.py": "6da7287339bce16937baa497d693581cdc25576e",
    "systems\\simula\\code_sim\\mutators\\__init__.py": "1af5b2c42124dc0573e3891f99b39412c083d2d7",
    "systems\\simula\\code_sim\\retrieval\\context.py": "10dbc9459d07fab589b3842ecb209464a585ef22",
    "systems\\simula\\code_sim\\sandbox\\sandbox.py": "6eac295a11e874d95b62458859e791fbad89863b",
    "systems\\simula\\code_sim\\sandbox\\seeds.py": "4eaeff89d89532ac40ce940685a3f5fb08c689eb",
    "systems\\simula\\code_sim\\specs\\schema.py": "627deb6795da6555e378251e6eb43455dff3d42f",
    "systems\\simula\\code_sim\\utils\\repo_features.py": "091cac0496248ff8a3a17858ef32adb8f5bdb02e",
    "systems\\simula\\policy\\emit.py": "d43ddecadfaf6a971229fe8ad34d7eb7fdd97314",
    "systems\\simula\\policy\\effects.py": "c6eb567e5fa12d24bed9240b4b18e78d6e50fc7b",
    "systems\\simula\\service\\deps.py": "3b7c7478fe4806ef26080cd4454f616181e82bad",
    "systems\\simula\\service\\services\\codegen.py": "9abb8b0bb89135b1bc993e774c8eb7f1dd0c3373",
    "systems\\simula\\service\\services\\equor_bridge.py": "7229ccc711c0a7aa2f5713be69898d185e6c0938",
    "systems\\simula\\service\\services\\executor.py": "f74ff8f2476fd1a06bbfc6a1297283206b14cb92",
    "systems\\simula\\service\\services\\prompts.py": "4125dce2ff8b3042ee55250df5a7a3cf0dced236",
    "systems\\simula\\service\\services\\validator.py": "c0e71a9893e33daa70643cc5ffa74d3c657d6746",
    "systems\\simula\\service\\services\\vcs.py": "5ec9f5584a7f68bd79d6caafb4217ddf0aec2665",
    "systems\\simula\\nscs\\ast_index.py": "046817b39a97fbeb7723308753b69a479920bac3",
    "systems\\simula\\nscs\\dossier.py": "f8b0a7968a180f3ae158c2fc162deb7d90317d5e",
    "systems\\simula\\nscs\\agent_tools.py": "43387af36061c77a1fcca15a8a5547fe3ce60d33",
    "nuke.py": "213f093add22ca6b348b9c60f2a4581dbd222393",
    "api/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "api/endpoints/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "api/endpoints/app_health.py": "db21f1c57f304bd2b82bc4137379ac5042391da6",
    "api/endpoints/origin.py": "7455410fee1a7c488d52e8a53a4f0d13cedc611e",
    "api/endpoints/telemetry_smoke.py": "42b26fca2f03c7be76f5d30f8f6eac6f03b783d2",
    "api/endpoints/evo/__init__.py": "dfee5a8f00ead95a46cd5f79e31257020c70fbc1",
    "api/endpoints/evo/core.py": "79f4ff86f43f5664cf9e53adada790620d08d019",
    "api/endpoints/evo/conflicts.py": "83edb6b299078181db16941d966bf21ac1bfffeb",
    "api/endpoints/evo/hypotheses.py": "d772b1596674234bf40c0eef93383e6d4ea405e2",
    "api/endpoints/evo/proposals.py": "bb1bc255b957500da38408e22212b73e4c5f5ad2",
    "api/endpoints/evo/replay.py": "db83da0cebf5f6f25dd55d95a717223b278adbb3",
    "api/endpoints/evo/escalate.py": "3795f5c89ea66d0b253d44e295bb32214a900d2f",
    "api/endpoints/evo/obviousness.py": "5dc3b3057462e44284894a2dcb7a07c36f723dfa",
    "api/endpoints/evo/evidence.py": "2df608d277a3e5bbf44d73ea5031895b6bbd9944",
    "api/endpoints/evo/scorecards.py": "efb96975f65310d218becdead974380fe0484f0f",
    "api/endpoints/evo/repair.py": "999bba90f859b98df7acf54d265fa7d4275cd905",
    "api/endpoints/evo/cycle.py": "0c916891939d461c17e1514de031c7cf6880c448",
    "api/endpoints/evo/diag.py": "3e1c7fc80b097a7c9d854223418bcaca1dec4429",
    "api/endpoints/unity/__init__.py": "75f0b85bc3bb6b0e5c460a42ef371abc78105fbb",
    "api/endpoints/unity/deliberate.py": "f4e4d27be7ad592bc0dd0dfbe95357f2d6a0ae7e",
    "api/endpoints/voxis/__init__.py": "b3c3fe62206cf7d1215fb1aa073bbb84098dd1dd",
    "api/endpoints/voxis/generate_phrase.py": "0e7518216950d8ecd87875fb2ffcf98bb833a804",
    "api/endpoints/voxis/interface_mood.py": "c6a573d8566f0c5e916c87bcdaea0283431ca931",
    "api/endpoints/voxis/match_phrase.py": "b4b3c1e3b03f0323d59d6da35f6f623bdb015d96",
    "api/endpoints/voxis/talk.py": "030517cc32f89b596e3c84ee4014276e69a0fb95",
    "api/endpoints/synapse/__init__.py": "a33dc23871dd168c487dc6e626644e13ed08e4a6",
    "api/endpoints/synapse/tools.py": "593f88f906f65b87a136b183576c9a93793240cb",
    "api/endpoints/synapse/registry.py": "9c3ea0c6d182eebc80e353259547bc261b21c04d",
    "api/endpoints/synapse/main.py": "8e8724879c251b69d31ab8749fd9b837c82713cc",
    "api/endpoints/synapse/ingest.py": "6a7603bf995adcaf50803863f3380940135ab5de",
    "api/endpoints/synapse/tasks.py": "67fe3c861e346f0af39e9eebea137dbb46fe15b3",
    "api/endpoints/synapse/dashboard_api.py": "6fdfd2d1af3eaa4d6198a0df6ace22fb895c07db",
    "api/endpoints/synapse/governor.py": "95753ae35aca31c83403fff13ebefb8c435eeaeb",
    "api/endpoints/synapse/listener.py": "370234c18e11cfe3335d34c1ff338af6ee744f4f",
    "api/endpoints/synapse/ui_api.py": "d24482ec533462a6f127d3063b30651b98605749",
    "api/endpoints/synapse/predict.py": "3e3a060f921276c5c26f3e367df01738a1032c07",
    "api/endpoints/synapse/metrics_api.py": "b72e5e96ab391ec4d0b76a774b0c4fb9af2e68b9",
    "api/endpoints/synk/switchboard.py": "d1358f995c6c84528b79efd41ef4674f6a5e8bc0",
    "api/endpoints/synk/__init__.py": "d71c9df48251dff0773bc872575db84e80045dae",
    "api/endpoints/equor/__init__.py": "4e4b271e3bcd31780a598fdc138cc67f054096b8",
    "api/endpoints/equor/compose.py": "360a8a37b3abe06e01851131f7ffeab9b8ede656",
    "api/endpoints/equor/attest.py": "d273b2e207b3ef8349857481671efc00a30dab7c",
    "api/endpoints/equor/drift.py": "ca8ebef173924cf0a06d3127e13a7dd26e6976be",
    "api/endpoints/equor/declare.py": "46df3c9e5001b58984eefbf44a0d369280e35ada",
    "api/endpoints/equor/invariants.py": "55b83398f1ec9832641b4d02167984077d17c7ab",
    "api/endpoints/llm/call.py": "04b19b7a8de3f8ae093c317315ecb2f72ebe38a4",
    "api/endpoints/llm/__init__.py": "ee8c136882dbb8fc571de380ec236b0718baf9df",
    "api/endpoints/axon/__init__.py": "f4ebcee389139befe34e38f18c9cd8339b6826ae",
    "api/endpoints/axon/core_routes.py": "42343d462b674f921ddefc99510bebe35759dd87",
    "api/endpoints/axon/sense.py": "49974797902dee9736a745e2535b5d1d3f3aec0b",
    "api/endpoints/axon/autoroll.py": "11bdf816c7c3c5c773ceee6a80e822cd870bd5a2",
    "api/endpoints/axon/ab.py": "a2ce736f68a0cc4d1a8c35bea06a6db8500ee28d",
    "api/endpoints/axon/probecraft.py": "02bfcd97ddff7293cb2c75aab7b4ced4050c1c98",
    "api/endpoints/axon/probecraft_intake.py": "39fffde3305e24036fe8d7e986fb2b465b18d203",
    "api/endpoints/axon/promote.py": "7472ff12d88f68bff2cbc56a5cb11f939bfc65e1",
    "api/endpoints/axon/capabilities.py": "2474fde61ae7683f2b9a1994706499849b0ea4c6",
    "api/endpoints/axon/telemetry_hint.py": "7ea8c417d89790a9c79eaf3b4a6a13b30c847be2",
    "api/endpoints/qora/__init__.py": "2fed158efb200be033f61287a8cb852ac4fbbe59",
    "api/endpoints/qora/tools_catalog.py": "fd6c9720afd2107387c81463a2ff3b88e6c78645",
    "api/endpoints/qora/arch_exec.py": "b5a9a35d8784342873cadf534762d1de30fb75ac",
    "api/endpoints/qora/manifest.py": "f739d470e174a54bea6c5ca6a21f8a5a63de6104",
    "api/endpoints/qora/gcb.py": "562b3f37e593c140e04b1115cd5a0c7328571480",
    "api/endpoints/qora/wm.py": "7bb77ff2fe233c278d76008a6c9e895ec39187d9",
    "api/endpoints/qora/policy.py": "b26595ed4066b5e4f78950a5ac2117924228f1ee",
    "api/endpoints/qora/recipes.py": "82959356de2c8ac81476975da1f0add387768979",
    "api/endpoints/qora/reindex.py": "90748f8704c505e7158144f0112a75a106d9bbd6",
    "api/endpoints/qora/annotate.py": "b413898c761380916dc77e40d65c24df2afbbd9b",
    "api/endpoints/qora/impact.py": "8ce19cd8c5230350b61046763b3ee7304a8528a6",
    "api/endpoints/qora/quality.py": "0710c32e82b58e17629c2d683b1f553b9dd5f065",
    "api/endpoints/qora/policypacks.py": "8cc0ac64d4b5977282073f5b3900edcaeb82d840",
    "api/endpoints/qora/wm_search.py": "f5cd11ec5b362ab8e4829bb1561051b5ab18b259",
    "api/endpoints/qora/plan.py": "4bb136a082e193a568c9ffec935e242a2b46afac",
    "api/endpoints/qora/pr_synth.py": "134733e725468a82db24e05c46c50185afe1e66e",
    "api/endpoints/qora/wm_symbols.py": "16e14e85e8f9079d50b3470391f48b59ffd32442",
    "api/endpoints/qora/bb.py": "2ec9af0b214d055c996ed4cbbfd35b5f530279aa",
    "api/endpoints/qora/mutants.py": "185abec64d7d71f5b5c9d93cd46af2dd95de8628",
    "api/endpoints/qora/xref.py": "2dd82246c37e31d180e78e9b57adb67f51116c84",
    "api/endpoints/qora/codemod.py": "fe7b3b97eabb96250ad1ef53e18821cb69425721",
    "api/endpoints/qora/graph_export.py": "0371e2e30d4d4eb45b3e583cb6a76c0a00961d72",
    "api/endpoints/qora/safety_scans.py": "8e7659ab9034ba1d6e9ca4ea2400089f8686a3b5",
    "api/endpoints/qora/pr_macro.py": "45e51b2958a5918615f6c9cdc086e75ca72327ae",
    "api/endpoints/qora/hygiene_check.py": "e51789de208ab1595ab1dd3e542a5ea045fb6c63",
    "api/endpoints/qora/cache_hygiene.py": "2c9079ce95decec892c8ed5311b0f294fd3473d5",
    "api/endpoints/qora/coverage_quick.py": "51dcc2131133ac11acb5b4f6f3f11dca4cc23626",
    "api/endpoints/qora/pytest_parse.py": "b14e74a51e9acf184478fccfb0ad5f74339f913d",
    "api/endpoints/qora/proposal_verify.py": "8ff44ae897d81caaff161ddf1eb93e0f53b00d51",
    "api/endpoints/qora/workspace_snapshot.py": "40279c16655e7c501c5ca291a95315d0f0ce8fb6",
    "api/endpoints/qora/dossier.py": "f233759d5c2ef4c6030a6236c7c57ee6598b8789",
    "api/endpoints/qora/pr_bundle.py": "d8e30424ea10f2ddea0badc1610cb085c982c8af",
    "api/endpoints/qora/spec_eval.py": "137e9ffaaa6f43fbb05ed3aa07cff66ac8e2ac8f",
    "api/endpoints/qora/secrets_scan.py": "68dd10db1cffd63435a2f35d7e97b4b39185a326",
    "api/endpoints/qora/mutation_test.py": "e0fbd25397fcecee3f0bfdadaddbadcea3f8a7bb",
    "api/endpoints/qora/rg_search.py": "aa3b321eabb3dc6787772b4f72ef801d1ab6eec1",
    "api/endpoints/qora/catalog_admin.py": "ecd40c3cab113e3fe5e2f33e882dc0ab44d094fc",
    "api/endpoints/qora/shadow_run.py": "ea943754db183e07dd04113a2884d454d33a0cb9",
    "api/endpoints/qora/rollback.py": "0f8a3477921c460665ceac1f6e44ae85cf50e0e2",
    "api/endpoints/qora/auto_pipeline.py": "8a72bc40e2d8929851edf36ad4d88ce01de3cd59",
    "api/endpoints/qora/git_ops.py": "80ee2cfa6222309f48f32357cde5133d260b48c7",
    "api/endpoints/qora/wm_admin.py": "a7592e8df9e0898718c218c95f9839f21428ec0b",
    "api/endpoints/simula/replay.py": "08983a48e2234cc27a3800f0717ce2b0365377cc",
    "api/endpoints/simula/health.py": "c4d25ea63276b37f86ebeae985c6a8bbfa021eb4",
    "api/endpoints/simula/jobs_codegen.py": "cee374d89b2555df44c6df2e285a63db1c38764b",
    "api/endpoints/simula/__init__.py": "35ae347b42f1b2858a4e40948c4301ea15af1956",
    "api/endpoints/simula/policy_validate.py": "6e6e7be23d646dc45bd9c39a2a872aa8729cde40",
    "api/endpoints/simula/spec_eval.py": "06c45db3a7e59dc231baaef651cb857b9a6bbc2c",
    "api/endpoints/simula/risk.py": "d8b2ebb10ccf54aaf77edf96aacf93ab0b586206",
    "api/endpoints/simula/spec_eval_run.py": "234a36a5f2e65dc5bda0a62beb57df8409848a48",
    "api/endpoints/simula/security.py": "ba068efa2846b469d2fed19dffa13c08df97fcfe",
    "api/endpoints/simula/proposal_bundle.py": "92d2c3e84300fd518459ee9c8eb516274b354213",
    "api/endpoints/simula/github.py": "376f19e91fbeacdd673bc5919dc9c40e7663aa72",
    "api/endpoints/simula/artifacts.py": "d6b273a5acf0165daf81345fff84f33f9ed9f583",
    "api/endpoints/simula/jobs_codegen_guarded.py": "6c49960db07112fb804b4f08606d6ea3bcb364ff",
    "api/endpoints/atune/__init__.py": "ea5feab43c1763e104b548fc40283d7045f93e67",
    "api/endpoints/atune/route_event.py": "f8d90979a69a5914f376d0c1a6adce7cf3d5626b",
    "api/endpoints/atune/unity_bridge.py": "aba0bcf7fcbac84a7b402db4f7595c02963ecb64",
    "api/endpoints/atune/trace.py": "b077f1d15db2e8d2ad141cc2d7b876bee4a99bd6",
    "api/endpoints/atune/meta_status.py": "c909035f7893abab561cf3b64f7d647f0a97ff82",
    "api/endpoints/atune/meta_endpoints.py": "97199d9be1313ca38524d4807400c8d0799d83db",
    "api/endpoints/metrics/atune_metrics.py": "45b6983ab639f0e6b11867e6770e541feeb21bb7",
    "api/endpoints/metrics/axon_metrics.py": "c645159afcf51ac67e36770a85ec7ace110ee31b",
    "api/endpoints/nova/__init__.py": "012bb8a96a654d88910506fd770a608e8a4a415b",
    "api/endpoints/nova/core.py": "39e4956024dd730395f3dea9073f600ca3a4d626",
    "api/endpoints/nova/handoff.py": "98bb344cd17ab96c4a132a7c94555d918c5f49f1",
    "api/endpoints/nova/policy.py": "01347302e7ffb7a59ca3a4e2341c0f6d78c8c79c",
    "api/endpoints/nova/winner.py": "fb2588c77a2a7d6a710296b1be6db2d952b3e038",
    "api/endpoints/nova/hyper.py": "36ccea02cb75bf2ca97b0320717e50bf1ddfbfe0",
    "api/endpoints/contra/manifest.py": "0836eb2e49791106ebfa1195af55f64f58982cb5",
    "api/endpoints/contra/__init__.py": "e115e01b84dc79ae460bdb7fdc5e3eb282c3784e",
    "api/middleware/telemetry.py": "3ef588e7d44ddaae61c4a3ad027e06b38324677a",
    "api/middleware/timing_headers.py": "b2f796a1e1d0ed4a4dd7f6ea47e0df7ac62e00de",
    "core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core/llm/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core/llm/embeddings_gemini.py": "c966eefe31ea6e5eefc84d043f6be19af9324510",
    "core/llm/gemini_cache.py": "8820c5366783123cfb38706f0d3147fc6140a6f1",
    "core/llm/env_bootstrap.py": "b2289598c395056bc4efde7f13337a5e19f168cc",
    "core/llm/formatters.py": "1dd44668923d29203e0b1e54c09e6c92356f567a",
    "core/llm/call_llm.py": "2a03ed4706be994d7489ed00203b886db242b5ee",
    "core/llm/utils.py": "00301e2f358b8c979c9a008ce17b6483620db1f3",
    "core/llm/bus.py": "ba422248d09920ea2a8ae2272e27a4b4df0b780c",
    "core/llm/school_bus.py": "c168cb34eeb4ffefbab5257c5a425cbb3ed6c12d",
    "core/llm/metrics.py": "13a06a3e9738733d1dadc8a2c42979f97ddd594e",
    "core/llm/prompts/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core/utils/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core/utils/google_token.py": "95c52922b3ca32d7c7bb699cd7b30f19c1562796",
    "core/utils/paths.py": "b600a1edc303c438a78d463d3526ea07287e67a3",
    "core/utils/text.py": "08ebe051089f6e486dbe3d46a0859095089971ae",
    "core/utils/time.py": "80d48cacecc4d30fac8a381753a323345136a8c4",
    "core/utils/net_api.py": "b9530e3de2b9f5089dc101b06928f33dfe4c8b38",
    "core/utils/safe_eval.py": "9a655dfbeef18ed1399d864c80202c73cd8297e8",
    "core/utils/jsonsafe.py": "f969c0668ba6e5bc8e9bfcd76181d51913d1ab1f",
    "core/utils/eos_tool.py": "a692ab7fc19304eb5454184fee5ef416dacd6f8a",
    "core/utils/net_api_registry.py": "dba81beea285e39d770334c8d70fcb5269046b34",
    "core/utils/bus_utils.py": "6c46a44b962e350b6501298e63c03aec006cb2ce",
    "core/utils/diff.py": "4dbde0a8476ccc2185d14ff7510874d470255f01",
    "core/utils/embedcsv/embed_all.py": "2fc548860940df2dd3ba882963c6acfb101a254a",
    "core/utils/embedcsv/upload_all.py": "ff812a31fa5c0dc6c2f785f3745e1cc0b700b8ca",
    "core/utils/registries/global_registry.py": "310fac110b62755b49abdd8dcb12154d9dfe825f",
    "core/utils/vector_ops/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core/utils/vector_ops/batch_embed.py": "5c8924d76a1ed048089065d573f638ae5387519a",
    "core/utils/vector_ops/cluster.py": "b8fde283952df1337b47f1456ea3f16f3e74f3e8",
    "core/utils/vector_ops/dimreduce.py": "fba50e8d07030abbd72a347e6505f0170665d238",
    "core/utils/vector_ops/config/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core/utils/vector_ops/index_store/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "core/utils/neo/cypher_query.py": "83a99777f6949fede9b23a7bb09f3e0be68800c5",
    "core/utils/neo/neo_driver.py": "0f77b15be354b1fbc1ce5ed998b4c41bfd59660d",
    "core/utils/neo/neo_safe.py": "9cf81a00dc4d5b749cb02b56154b5a579913ccdf",
    "core/utils/neo/params.py": "0476e07539537177dec4a24d675b55d833f8f0e6",
    "core/utils/cicd/listener.py": "2c82a00d6b11656c63f7da11f4989c79249cd512",
    "core/prompting/orchestrator.py": "d5b8a2b2fac854341dbd8d42317c864d0cec5626",
    "core/prompting/spec.py": "475f66c56a3719850e26dac145ff22ccc04a5c4e",
    "core/prompting/lenses.py": "e1b938daf17fdbf12cad1f06ee495189caa166c2",
    "core/prompting/validators.py": "f469cb1e13c488440691cf045a9ac672bf122bd4",
    "core/prompting/runtime.py": "e9d05fa0053af89398ef1f2160537fea341bdd7e",
    "core/prompting/cli.py": "0a9609f7303bcd5e7d70aac4d163ffca97c57e0e",
    "core/prompting/registry.py": "99367268d206cf0655f953c10bac0e30b276730e",
    "core/metrics/registry.py": "f13dde4a2c01e4c05633761b5a6ac73ea6c2e5e7",
    "core/services/synapse.py": "251c2d77a0ad58045970d6d8281c8af495dfaae3",
    "core/services/equor.py": "6647d42dcfa34da50a9ff1a65e411a65dd275e15",
    "core/telemetry/schemas.py": "d52d587dd9dcc3e46b373ae1639a3963537e29bf",
    "core/telemetry/context.py": "a66c45825afaaea27973977cb3248e357857a69a",
    "core/telemetry/ops.py": "b3257a95935089bd3519300fe9cb735e7df6accb",
    "core/telemetry/harvest.py": "26416339b07ca75e96dfd864ff140a9abc56bb1b",
    "core/telemetry/httpx_hooks.py": "8e12f7fd2d3d4a12ca822ec9ff91e04f4ee35480",
    "core/telemetry/outcome_sink.py": "e3abb8ffd3f95d7655ac7a2e1d031059e1bcf409",
    "core/telemetry/binders.py": "90b9adc411c501f8ab09d3755332bfeaf489962c",
    "core/telemetry/with_episode.py": "e32a64d52ab3cad6692bfb5cdca5453a09193e54",
    "core/telemetry/budget.py": "a63d0dec400e76a75fbaf70752b7cff8b583a06c",
    "core/telemetry/decorators.py": "dce254f2e347b1dc59150f867d2d368351dfff12",
    "core/security/redact.py": "44f41c999f378385304ce417c0cd852ee7091429",
    "data/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py": "beaf970d59d8421bfb7c2d4fcac148f57efb5ad8",
    "launch/upload_embed.py": "8b2c02727a9a2b181cf86c29ee81fd30568c9bf2",
    "schema/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "scripts/exporter.py": "efcaaea0bfd949cd8f2e587dccad3bfe2218ed3f",
    "scripts/search_vectors.py": "e2abced162040fd8ca56155c58762bc350ff91de",
    "scripts/upload_embed.py": "7c15720a9e65331c770e4b8ea68028cc00072003",
    "scripts/cite_clean.py": "cf59e863e4e28261c0a36e7cb0081ef58d7fb56b",
    "scripts/eos_replay.py": "4283932e7bd43aa2bdb5255708655a4aa279f124",
    "scripts/get_defs.py": "937cd7e132ce42dab15044714b9a98b70585b212",
    "scripts/get_gates.py": "40d2ea7ee5f35be581554fc4919488d7498268dc",
    "scripts/stray_prompts.py": "0758b7b1bec0df63e1df3cca0fe9c9682e83187e",
    "scripts/schema_collate.py": "b93c18984ef86b1fa2d474313e6105adfee01609",
    "scripts/placeholder_find.py": "036aec7b45eb77961d68aacfa2b0e93591314065",
    "workers/promoter.py": "98ee1d00ec932101f72b5279e055555b08371242",
    "workers/autoroll_worker.py": "8476fa0af14ccd0b207d9522814fa5c51c2fc217",
    "tools/hello.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "tools/find_path_offenders.py": "e8ca9b8ed039f02a60060383d0c130a8f718e419",
    "tests/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "tests/confest.py": "1369983dd690abbd84a1e1a403c2651120390518",
    "tests/test1.py": "9093fbd337fcfd4d084316166a8fc362a5712b2a",
    "tests/test_2.py": "8afd32e6e551b921c0d62f10fcfc98758356da57",
    "tests/test_3.py": "129975b87163fe408c65ca53afe976463ff0bf54",
    "systems/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/atune/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/atune/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/atune/processing/canonical.py": "090d08c2351f97d34153fe5ae903cd1a9b86fad2",
    "systems/atune/salience/heads.py": "59f64e91af0a51dcba6188a60f812270e7eb5f7f",
    "systems/atune/salience/engine.py": "5720cb312235a5fffaf67f445ba0cffcbb5aa57a",
    "systems/atune/salience/gating.py": "35cf9a066e0f5d9d2d839003b77861d1e9826770",
    "systems/atune/salience/conformal.py": "30c7a2b3de36234e07b9bb736414801bbd55f0c0",
    "systems/atune/salience/conformal_alpha_adapter.py": "72f9f435ca84ebb4cb9e17f9aaf9c5f1a4749fa9",
    "systems/atune/probes/engine.py": "97c6c3ee600d02bf926fbd560a269b68e9adea17",
    "systems/atune/planner/fae.py": "18202c8e53455ab4e9e9ded17de926c26f745c71",
    "systems/atune/planner/market.py": "bca22950f99c7411848d89714f3bb72a1af8aaf2",
    "systems/atune/planner/intervention.py": "d2e1ee3bfc30eb6d61493b00156e1f34333f1d67",
    "systems/atune/planner/inference.py": "bfc9baeaf57c6932bedc79391a54409084a7335e",
    "systems/atune/planner/rollback.py": "240d22baf362e1b804bf9dbd7b767653285255a3",
    "systems/atune/planner/strategy.py": "f604df7517c9380d0e3e86535b5f7f3a1a9e8ce9",
    "systems/atune/planner/costs.py": "5d521abf691c2fe9a18da85a0cd5a1966db86edb",
    "systems/atune/planner/secl_orchestrator.py": "c0ae06916b4a62c1a708f5dd6069e969cc0bf215",
    "systems/atune/planner/signals.py": "6552d455f738b65b9fb05cb4f24346b30017ed09",
    "systems/atune/planner/known_caps.py": "d4f4b5703df9b6f4af48d6ab71352f6f079843ea",
    "systems/atune/planner/market_strategies/pareto_knee.py": "2d3b1b8754373a4318c8631e69a3274f5c56acba",
    "systems/atune/budgeter/manager.py": "0a07792d387035f393c45ec5c92246ccd07f6482",
    "systems/atune/budgeter/tempo.py": "302da4b32dbba47e560daf539bc5ab0c7e540b27",
    "systems/atune/budgeter/reserves.py": "749b6363d0a8909112ad5f2735d9e006bb57de76",
    "systems/atune/knowledge/graph_interface.py": "f6f46c37805fac1844a63f50e22d927ac61e2a6a",
    "systems/atune/focus/field.py": "f0fd6fe31aa238edcfebcb2b4f7b91ec5d4a8723",
    "systems/atune/focus/tuner.py": "dad67a7bbb4cdf6960df50b8561c83362ffd74c8",
    "systems/atune/control/affect.py": "2450160a3816a7da71b82fd601007d19d78c2adc",
    "systems/atune/memory/induction.py": "40eabad14df3a888a69d81f694c7cff6810916f0",
    "systems/atune/memory/store.py": "0a24c53da102766313899ca2f8879bb950929664",
    "systems/atune/memory/schemas.py": "c4b08b1075deaa0509bf554eb535e36ea4f16d17",
    "systems/atune/causal/model.py": "69a4d74f21490823b64f32c5bddbe9d91ed77423",
    "systems/atune/causal/discovery.py": "4f2c71c0d52649ab8be13ead5278611a6737e3b3",
    "systems/atune/causal/scm_consumer.py": "8961f8f41c38638bea9cce1dbf4185f0b48f66cd",
    "systems/atune/journal/ledger.py": "4b73d86eedc714496989c386c542501c17eb4e1b",
    "systems/atune/journal/why_helpers.py": "c634608de3dd4b99d31ef1a924e8ccc475f0c87b",
    "systems/atune/safety/reflex_catalog.py": "0097143d4e36a375b422cd47c9242a2bf6bfb361",
    "systems/atune/safety/gating.py": "6f400cc0e5ff5fe474fec855a9f9d0cb117ebf31",
    "systems/atune/ingest/followups.py": "e8ba9c5c8fecede467a25d90018586d2f41afa1b",
    "systems/atune/gaps/schema.py": "d251f98a50bcf6e6a5e9ee9efedab69375ddadae",
    "systems/atune/gaps/orchestrator.py": "4e2c0c27e2343ff0cdf1518b809d16d4a30ebb58",
    "systems/atune/intent/constraints_merge.py": "4aa23bd5ed65406928e5dbd3183158138c20aac3",
    "systems/atune/intent/gap_detector.py": "5a4e723a67e9f144ed663f719bbacac9a4245d0e",
    "systems/atune/intent/playbook_schema.py": "41aede8c69c31da8d8684576516426c22806f454",
    "systems/atune/metrics/secl_counters.py": "38050c0c2f601532f1cb16bc658434b68665315d",
    "systems/atune/metrics/budget_audit.py": "51ea8d875ecbf9919a502a7023fcd2a17611ba6e",
    "systems/atune/escalation/reasons.py": "e5bcbdb3ba1eca838a16aff5e07372467e4b170e",
    "systems/atune/escalation/build.py": "8ae847ff462b0cfa28225be217b499d991d37e99",
    "systems/axon/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/axon/schemas.py": "b4cc46e6de4b9986b60331b5c9f44c28cb2f889f",
    "systems/axon/dependencies.py": "69bb9a0e01fa6b3404ba6b8c51ea5181e3c1a64e",
    "systems/axon/io/quarantine.py": "e10e01d71297941399da7c24391f0bef98bc784a",
    "systems/axon/mesh/sdk.py": "760c69e94186db6fbfaf363f74e2b67ff4dc2128",
    "systems/axon/mesh/registry.py": "4b2c9d35588b6ca4214ee56fe734e2ea94102358",
    "systems/axon/mesh/lifecycle.py": "ed0a7049cc362f7afb6c41a46c84728576dcbf06",
    "systems/axon/mesh/scorecard.py": "c1a07799442ae2dfee6e789217f5784b6b1abd94",
    "systems/axon/mesh/attestation.py": "2f09a5c2063301994b3ae6986f489f067b982999",
    "systems/axon/mesh/autoroller.py": "43afff0e84d73a39a58425f369477a379fdf6745",
    "systems/axon/mesh/promoter.py": "1e312d0f7990b4d88bebefb7d24cf3f968369859",
    "systems/axon/journal/mej.py": "32462a1e6f3ca1052b6def7303fe336b4741662a",
    "systems/axon/drivers/rss_driver.py": "57a194b0532f8cdc3b5282660ab241fcb889cd3b",
    "systems/axon/drivers/qora_search_driver.py": "74730593bd2bee73e2b94fb15baccb5ce616225d",
    "systems/axon/safety/twin.py": "627842355689565beb3eef280ec0e0819382cbdb",
    "systems/axon/safety/validation.py": "bedf6eeb5f78e13e91be272fb475266d39be6f59",
    "systems/axon/safety/conformal.py": "c424b01c7a5995accdc2a3a31331e575b114d6f8",
    "systems/axon/safety/reflex.py": "f08edf96db79d8326d1e240b43775f3e376446ae",
    "systems/axon/safety/circuit_breaker.py": "9d544e4e2b0c3002f8859e341acefbf97b56f7c0",
    "systems/axon/safety/contracts.py": "5824cd2f8241263bd21deb1cc96d49b660b49368",
    "systems/axon/learning/feedback.py": "6022c17eb3176aa8534616b11762d5d02fc023e2",
    "systems/axon/security/attestation.py": "52ea07e47752d81c4a56ce321463411edba3cb76",
    "systems/axon/ab/runner.py": "ea243b04c61460c2d05709a127f72ba27e355aba",
    "systems/axon/events/builder.py": "47acd9963dc3d721e1e26a619dc0ad5e7253b821",
    "systems/axon/events/emitter.py": "0abba051df88f8da05e2254f34b513e929ae36a4",
    "systems/axon/rollback/engine.py": "163db217de5c270df0e08a8f279888c61f16d0be",
    "systems/contra/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/contra/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/contra/core/utils/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/contra/manifest/models.py": "4bce15ef9b6973bbe97cf651319bbff5781b6e30",
    "systems/contra/manifest/assertions.py": "245a30212631aebb20eec93b31dcd5b417c670c3",
    "systems/contra/manifest/selector.py": "8a40f6d038e59d048e915c86ccaad41f456258c2",
    "systems/contra/manifest/autofixers.py": "f6892fc4c48c42291dd6647c67cd3f7d41c03636",
    "systems/contra/manifest/engine.py": "e32e3d3cbb6c68aa72cf1d471e58d94460f530dc",
    "systems/contra/manifest/__init__.py": "af2555f34b4261820a5e44c8d128c58f07d9167d",
    "systems/eido/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/eido/fakey.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/eido/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/eido/core/utils/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/ember/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/ember/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/ember/core/utils/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/ethor/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/ethor/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/ethor/core/utils/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/evo/__init__.py": "c5be3860462162bae81a27c653abbba5b6924e45",
    "systems/evo/config.py": "4f498ce822e379c2cdcf957a38ec182bc2a72d89",
    "systems/evo/schemas.py": "459258ea6c6c52ea314fd83bb03e8cf6c178797e",
    "systems/evo/conflicts.py": "76aa580e7ebb847388fbcbfdecbf97bea52c7c62",
    "systems/evo/engine.py": "b3512a9689a952092e199bc85c94884208a0d4f1",
    "systems/evo/runtime.py": "321119a4c8e576365887f73f167e6197f6b4232a",
    "systems/evo/hypotheses/__init__.py": "84565f82a9510c7973d6e985db6d8116c3a18541",
    "systems/evo/hypotheses/factory.py": "315de2285fdefaa77fd89abaa671737dfe5417c0",
    "systems/evo/evidence/collector.py": "2e039bd6a2bb8673ea51ed57e8f4ff2edda027d1",
    "systems/evo/evidence/__init__.py": "b7b9453d6d48161f5d71aa04807121a3066f66c2",
    "systems/evo/evidence/modalities.py": "18a9d23465b0b57ada4a498f74ca9ff5762c57a6",
    "systems/evo/proposals/__init__.py": "00060f480c3e74378e9c1a160478945095b23b86",
    "systems/evo/proposals/assembler.py": "c89cab65e5f8185581a557d528557dcff4232290",
    "systems/evo/proposals/review.py": "9c74fa7eb0490874664216391fadc98a928f90c4",
    "systems/evo/replay/__init__.py": "96c68bc034edaf0eebd9d7412957708484c5319f",
    "systems/evo/replay/metrics.py": "cd3b02f49805548f94c71e1a786ad3341f75af14",
    "systems/evo/replay/manager.py": "94b0855b26a1021c053df5f94461d87dd5b86fd4",
    "systems/evo/replay/builder.py": "3670820f60ff222fbfeb5050372b7b5786fe4752",
    "systems/evo/telemetry/__init__.py": "accea4934d71dddd3336c215f1267d82228b217f",
    "systems/evo/telemetry/metrics.py": "cd3b02f49805548f94c71e1a786ad3341f75af14",
    "systems/evo/gates/__init__.py": "32ebbbd9f4294bab37c85009856273464bbb4f9d",
    "systems/evo/gates/obviousness.py": "279f47af132b0b607b5d54f8e829899ae219f3a0",
    "systems/evo/clients/__init__.py": "a36308b466f8c9c537832669821d91e7a1b61142",
    "systems/evo/clients/nova_client.py": "c4506d2023ba66e9b9e03326840f600c7f696973",
    "systems/evo/clients/atune_client.py": "e87f35fabf4a172ce1d5f7ac39253c0f8d379cff",
    "systems/evo/clients/synapse_client.py": "31c711be893238ebbff6e8b48c8a98d9d03693fb",
    "systems/evo/clients/simula_client.py": "41d3dc898b0601034d6e0e012f7b8432b95ea126",
    "systems/evo/scorecards/exporter.py": "09b82be8d0bc5e2a78604f81f9b0bf574f0e1377",
    "systems/evo/scorecards/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/evo/repair/tracker.py": "33edc287b787e5cf1ee80c222a7949944b43f410",
    "systems/evo/repair/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/evo/briefs/innovation.py": "5a2f0395282153571b23abfebdd01d00cfe399b1",
    "systems/evo/briefs/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/evo/assemble/assembler.py": "4c2bc7e136ab1fae9f128e2417b80463ba99592f",
    "systems/evo/assemble/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/evo/conflicts/store.py": "c7841a3d8853a4cdb8a910654f5e6ae6488ea926",
    "systems/evo/conflicts/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/evo/spec/deriver.py": "f706fdb6403eca58b65f3e972c187c4f47b9afd5",
    "systems/evo/spec/validators.py": "9b92bdf0a5136b9bcfb58455829ae87efd3a19cd",
    "systems/evo/journal/graph_writer.py": "167283fa7b0da3669c5be6e9af4751129d5bf471",
    "systems/evo/journal/ledger.py": "a2aaf20e665126b148941602135adf2323b3cb58",
    "systems/evo/routing/payloads.py": "7a3951048603d11e65ca802063e6ba85bf15f183",
    "systems/evo/routing/router.py": "cfef646263cfe4f2563154c6f93b05a8a19d6222",
    "systems/evo/dialectics/tension_miner.py": "aed09741ee717bfa34de7ee9479ee2f54f5e1edf",
    "systems/evo/graphs/genome_map.py": "9956c7bbd783b0d26110b2ea3675703ddb025fbb",
    "systems/evo/counterexamples/distiller.py": "b3cd197771c3fd7e46e9f3f180e61240a6c58648",
    "systems/evo/policies/sentinel.py": "f4b21f4072084684605768f07bf1e78c580f5944",
    "systems/evo/metrics/harvesters.py": "bb480c0b89d6f34a0f48487d2cd9b56d0a8cd71a",
    "systems/evo/pipelines/nova_cycle.py": "cc7a979287e1dfdba10c65e9b3b665f0d30f9693",
    "systems/mythos/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/mythos/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/mythos/core/utils/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/nova/__init__.py": "556c3f57bc52b1df6da3341e177efa971c4932df",
    "systems/nova/schemas.py": "387eb21f5673996567516aa1b50681bea8e9e775",
    "systems/nova/ledger/__init__.py": "dee996122f7b0d328bbacfece71cf0609e9bdb47",
    "systems/nova/ledger/ledger.py": "7e924d166abe419e69c1df1569e43e30cfefeaa8",
    "systems/nova/ledger/journal.py": "245d3d851fa28cccabe80512ef5274c3dbb855bc",
    "systems/nova/runners/__init__.py": "e1e68b9d753736faad60b6aa6333c83184f2e88b",
    "systems/nova/runners/playbook_runner.py": "df8823e34f4474830ad393c7d69d2fb3177a25ed",
    "systems/nova/runners/eval_runner.py": "7cb8ed095856d2028a6e05470126fb5de2a1bf74",
    "systems/nova/runners/auction_client.py": "ac52255e6e241a9b5b3316c435fa64fcaecc7f82",
    "systems/nova/runners/rollout_client.py": "8e2de520eb4a84e3aae724bd93d16bcf5feffcd2",
    "systems/nova/runners/interpreter.py": "0ecd688162618c9547abfcd5c816199f34a5a554",
    "systems/nova/runners/patch_handoff.py": "7355ec816a64d7ec2f705a37cbdf687c4180c694",
    "systems/nova/runners/meta_playbook.py": "418e7602c4023f8786b934e3987c24b7a46d1215",
    "systems/nova/runners/portfolio_runner.py": "7237b7c7a9bf306f0e2c3c4234fa1aa4a952b5d7",
    "systems/nova/dsl/specs.py": "079a38cbb7ee15aa921db938b0ea8923452c51d7",
    "systems/nova/dsl/interpreter.py": "0ecd688162618c9547abfcd5c816199f34a5a554",
    "systems/nova/dsl/lint.py": "c165dfa7317e90a78dfefafbc89387d1b8b6c1bd",
    "systems/nova/dsl/mutate.py": "5b0fb0794d90b020081cf4eee4f7f379fa1a7cc3",
    "systems/nova/playbooks/qdelites.py": "b2b13a7ad34567f448ca01f033727558cc8b54d2",
    "systems/nova/playbooks/tot_mcts.py": "a39fe1d181fc3479bf9b042aca9f4893a96a4cb1",
    "systems/nova/playbooks/dreamcoder_lib.py": "edc7b266fc3d133da46e23e0f6d81cc8066c7c6f",
    "systems/nova/playbooks/registry.py": "30fba2a600c56c36d80faf24ef90238c55f822a1",
    "systems/nova/playbooks/hotreload.py": "85e802513e846f93afde0fcfe1903ecbefaa6334",
    "systems/nova/proof/pcc.py": "8f7d79a68222ec1b1b980bc6b374845dcaea3267",
    "systems/nova/proof/pcc_ext.py": "10354ef24a2e6435a964bb7ac0ec46a53503f28d",
    "systems/nova/proof/pyd_types.py": "4703689466a2246b27531290403c31c183cb5ea3",
    "systems/nova/types/patch.py": "02b4bc1113c0e53f024347d2354510ca1392dced",
    "systems/nova/clients/simula_client.py": "d655ac1b59628d4a2731f4071989ec58539a41e2",
    "systems/nova/clients/synapse_client.py": "767132054ebf3771be3232a585c61364edd656b8",
    "systems/nova/clients/equor_client.py": "55726d2fc0c55b32ec3d14c28c77253d28a26a56",
    "systems/nova/pipelines/winner_pipeline.py": "9680e4d4b9e03042f4d2322bcbc4f4bcded0e70c",
    "systems/nova/insights/self_model.py": "61e7ef005e968fd92e96ce013b69065652fea3f6",
    "systems/nova/insights/self_model_store.py": "e20ccc9f6ad943f33b8f36571935a5f07ace3a39",
    "systems/nova/novelty/reservoir.py": "d0b79adf11471ea3b919c45b469fca27ed70e6b3",
    "systems/nova/memory/qora_bridge.py": "be41ea7294ac6f73a015306c8266bbf47a260195",
    "systems/nova/hyper/hyperengine.py": "4c3f8cafc29232bebefdf057402edabd73bb5fba",
    "systems/nova/eval/cost.py": "1c33f2237778888008146a08a5284aa577eadb09",
    "systems/nova/eval/metrics.py": "53bc0517fc02a1fd00ba559cc1fbe349ffc7fddb",
    "systems/nova/telemetry/hooks.py": "7407962fcda14c0c763bbbbdd26eb04ab9a0d348",
    "systems/qora/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/qora/client.py": "c3b899418ee82ea29f9240d1c053397dd940a9ba",
    "systems/qora/api_client.py": "20353fdb06a5633857080feb26785285e0b6f9f8",
    "systems/qora/storage.py": "f1e3fe140b48aee2ebd44c6ce5c09657264a53a9",
    "systems/qora/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/qora/core/origin_ingest.py": "6c25336003c2ca9f1e0aeb680bf6057e29a1adf7",
    "systems/qora/core/tools/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/qora/core/utils/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/qora/core/architecture/arch_patrol.py": "616b8d9fb2f37b25a0aa6b150119ef88f040fccb",
    "systems/qora/core/architecture/arch_execution.py": "045e50dd07b88c4d5b159eb8b93d4ec0ec5f73ec",
    "systems/qora/core/immune/auto_instrument.py": "6d25de4520868d381559bdfbd3792e44b6b74fcb",
    "systems/qora/core/immune/conflict_sdk.py": "62f109fd04bd9daf3d23159df61749d8458e06b4",
    "systems/qora/core/immune/conflict_ingestor.py": "05eaf925caaabe9013f362033ecb5517850a47c2",
    "systems/qora/manifest/models.py": "7c80f1cee4752b17dc5111f3e85c88571d899a6c",
    "systems/qora/manifest/builder.py": "c550a0f6447a94686c384f5099ef3806e12dcb5f",
    "systems/qora/manifest/registry_client.py": "0ae84a63d0b9a7c865b503f0ed362af4871e7c7c",
    "systems/qora/manifest/engine.py": "ee05c66145bc48b9d28dacec8e721c1c8ed18ca4",
    "systems/qora/gcb/models.py": "80e4a49bc0085e57ea4ee7cc35e2e78eab8413e5",
    "systems/qora/gcb/builder.py": "a292f7f5ab62992177a9bcf7bb706afaf79a874b",
    "systems/qora/wm/service.py": "3c3d1c4c5017deeb51b3fda721e7a04a6d6a9562",
    "systems/qora/wm/indexer.py": "ccaa10960ad0835fd0ca738c6adb2a095f9b0164",
    "systems/qora/index/hot_path.py": "a1bd7678327fa48ce23f9fa2f3603b0a17aa638c",
    "systems/qora/dossier/merger.py": "e6439b93eb1c5fc6c3cf3ade735a3b88d275c2e7",
    "systems/qora/service/schemas.py": "747d025fa1b8327363a3cde03804069c2f64a285",
    "systems/qora/service/security.py": "630561706798ff1a3bce4818c7ce2bba8d188afa",
    "systems/qora/service/reindex_router.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/qora/recipes/registry.py": "ff91b57e65f2380571936472ae2ab6a1936bd6b1",
    "systems/qora/policy/packs.py": "352fba47967b694cb14c3bca8462026cfbe486fd",
    "systems/synk/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/synk/api/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/synk/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/synk/core/tools/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/synk/core/tools/cluster.py": "8b0a6bba2625c95aae7c031b132909d3815e66be",
    "systems/synk/core/tools/cluster_tools.py": "4bd95301d1349f06e9abdfbef79efca6f153b386",
    "systems/synk/core/tools/clusters.py": "8df9036ad99b4dfc3515ca5030105bd826314456",
    "systems/synk/core/tools/mesa.py": "8ebf2ec96dea478999e4145443a78e6a2249c2cc",
    "systems/synk/core/tools/native_clustering.py": "437fa9e25fe7ee5657a9db3e1231f3e590b75b7d",
    "systems/synk/core/tools/neo.py": "3ecbfdb0bdd3200773efc41cf3e6a42ab1a17305",
    "systems/synk/core/tools/schema_bootstrap.py": "b39763c14cf956814b759761afb6e91244123d41",
    "systems/synk/core/tools/vector_store.py": "58b4fff506737308e3f72b8d462abff164462f93",
    "systems/synk/core/switchboard/client.py": "f5ec18981f5771c02d0c7bf4724c61b73e30258c",
    "systems/synk/core/switchboard/runtime.py": "96b54292d71c64cbd4ffd5511d964c12868a16a0",
    "systems/synk/core/switchboard/flag_deps.py": "6ba1f7591a1edfbebe1d0ab57eb3906badff6877",
    "systems/synk/core/switchboard/gatekit.py": "93d5efd2a283d1b5053bbe40234312ea579b1d7c",
    "systems/synk/core/switchboard/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/thread/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/thread/core/identity_shift.py": "c891102268bae1a11b2a32b0c0e3de01184e85ea",
    "systems/thread/core/identity_shift_prompts.py": "58b8193c2a864b05a7cdaeb5ba14a05094233922",
    "systems/unity/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/unity/schemas.py": "e40e531235e1e4343fb0c49d1f6ece13d5462dd5",
    "systems/unity/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/unity/core/neo/graph_writes.py": "54977df799ff790df4c4495e9a245d18d22d1529",
    "systems/unity/core/room/adjudicator.py": "e416d7d08ee6b7f0f3cfeaf3068a99df6476ea6c",
    "systems/unity/core/room/orchestrator.py": "c537e0e2850e5aeba23780f42e5391a8a1e7e093",
    "systems/unity/core/room/participants.py": "04161b0b80c2208b767721b3b72c6581599dc891",
    "systems/unity/core/room/argument_map.py": "c1a75baf6b0e524e4af22eeb170d157ff72a117a",
    "systems/unity/core/protocols/debate.py": "93d57e0c02da29bcd0f95365b68a718a4574f95d",
    "systems/unity/core/protocols/critique_and_repair.py": "ececf09b7c20008f7766983d290554c261e7699b",
    "systems/unity/core/protocols/argument_mining.py": "c9f5481f9756f9aa7b4450b4a779da922465af5d",
    "systems/unity/core/protocols/meta_criticism.py": "9523eae7fdd54ddd19b6df3b5d2dad02eeffbe00",
    "systems/unity/core/protocols/federated_consensus.py": "c8d9924c81861e57d72bfce1444a0d98f11db0dc",
    "systems/unity/core/protocols/concurrent_competition.py": "ff9124f0d1811ece0576a864bb48f86a633fb16c",
    "systems/unity/core/protocols/cognition.py": "4db2774263cd14d116b65a5676186f2908ab4c86",
    "systems/unity/core/workspace/global_workspace.py": "7a3e2eb011f9b8649f95af085e83917fd8464650",
    "systems/unity/core/t_o_m/modeler.py": "62ec0a6d787e5fad917a47ab3214825f792b670c",
    "systems/unity/core/cognition/llm_util.py": "f6b9a4347d32e91363d093b185b1fd6ea9dcf4ce",
    "systems/unity/core/cognition/verifiers.py": "10fccd9a6c4aca78035ebc56c1a28a7af3cd560b",
    "systems/unity/core/policy/safety_policy.py": "c0ab8862bffe6e39325893212f799a3e2e8a7e4d",
    "systems/voxis/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/voxis/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/voxis/core/voxis_pipeline.py": "2811bae3a09e90cc1df8f6d0fb3203ce619562c1",
    "systems/voxis/core/utils/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/equor/__init__.py": "e041ba44f23ce8a7a0f6b0fdb500edbd8938d3e0",
    "systems/equor/schemas.py": "48122ec528aae81724892156af83516359f689ae",
    "systems/equor/core/neo/graph_writes.py": "ac94646f8031a8a09c479377cff7beb29c4af11a",
    "systems/equor/core/identity/constitution.py": "4ece58b83b421d1910317f2132d836caab49877d",
    "systems/equor/core/identity/registry.py": "c4f204900296d7d7a777d4bd81b915a749dc4176",
    "systems/equor/core/identity/composer.py": "c2eba47812d931a942f825831160789a192d4110",
    "systems/equor/core/identity/homeostasis.py": "ff60112d436c880675624a683d4ab45ed4a49701",
    "systems/equor/core/identity/invariants.py": "d308cd59761381fc0bb03a373fcf7f0d5bdfadfe",
    "systems/equor/core/qualia/manifold.py": "9a38366c6922819e78c8dc061a7634db8b2d2fd1",
    "systems/equor/core/qualia/trainer.py": "ea0f6e5b64fe7cb21a5c0d90765a47115af08c7c",
    "systems/equor/core/self/predictor.py": "d670f1c7fc3ee74b29e49371ef0c3e8d0440210a",
    "systems/equor/kms/keystore.py": "a6dad73a396c48d1da8033d398dac4794d4ac70b",
    "systems/synapse/schemas.py": "043b83e3417e536cac8571ef6ff14cc81c1ff9e5",
    "systems/synapse/daemon.py": "caf52d332b086dddc94525903686ec4e962a972b",
    "systems/synapse/schemas_metrics.py": "de069344bb109577e880d6acffe283c5be5db1ac",
    "systems/synapse/core/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/synapse/core/registry.py": "56f756a5d3554ea4b245b39f7db4c8138ab2152b",
    "systems/synapse/core/tactics.py": "80db34bfd1a9479c563811b45fda8e4db29b6e55",
    "systems/synapse/core/reward.py": "ff0637a2a45994e26145fcb1e997a7e0317692c2",
    "systems/synapse/core/planner.py": "fecfa6c46f2bc857a1d5a421fd66357626d01dd6",
    "systems/synapse/core/firewall.py": "a2819c9e72ca793fe7ffef587223772cf7120331",
    "systems/synapse/core/genesis.py": "854f87091aa24ed02d90fa14e8682729de5e4dc8",
    "systems/synapse/core/episode.py": "d3bd22448ac9e8a0911a23bd66bd7789a8792db0",
    "systems/synapse/core/arm_genesis.py": "f7c0e9e267a5ac0e3f862a0a9f42fa1d33f91176",
    "systems/synapse/core/register_arm.py": "0a1019d2b4e050e9c0d9ea8964683f20786ee6b9",
    "systems/synapse/core/meta_controller.py": "b2d817d93655fe821617511cf24fb103bd1e28f3",
    "systems/synapse/core/snapshots.py": "ce7ed47759fe16a3e39af5efcdc8c9c636844daf",
    "systems/synapse/core/governor.py": "5b0ca5eab2c80c275c2cbaddc63edd9179caa00f",
    "systems/synapse/core/episode_persist.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/synapse/training/__init__.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/synapse/training/offline_updater.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/synapse/training/meta_controller.py": "1441078f3fcf3f435a7313f7a89767b583ac028d",
    "systems/synapse/training/adversary.py": "033513be16cc8c4dbcda64ed3f9ab34c9c8309f3",
    "systems/synapse/training/bandit_state.py": "eeb7ddd4787bf7b12ab03ff5955559b59e082cb5",
    "systems/synapse/training/neural_linear.py": "3029657c378312c64ab1401026956e34f323fd09",
    "systems/synapse/training/encoder_trainer.py": "2f59e36aa747779ca7be362e7f870667d8735874",
    "systems/synapse/training/run_offline_updates.py": "97d722662112aec8eaec40420bb2930edd2be1eb",
    "systems/synapse/training/self_model_trainer.py": "3df29d04e6c90ce380d36dad7f616e70f2d6644c",
    "systems/synapse/training/tom_trainer.py": "8c078160ed3ddc545533bd7268a6123c8163a17d",
    "systems/synapse/training/attention_trainer.py": "9b6a86662ce3ee2c4588149a77d3603a0fe34f17",
    "systems/synapse/sdk/affordances.py": "8463a627a228066b6e741b7e70bc4b0b2399ac6d",
    "systems/synapse/sdk/client.py": "1095848b126a8eb468d9782c68222df331b473b3",
    "systems/synapse/sdk/context.py": "063e4468bec7cd69f4ba662f74e79338a9c4ca5f",
    "systems/synapse/sdk/decorators.py": "50ff5514bdf19ba15400c101e236eaf3a6fab58d",
    "systems/synapse/sdk/hints_extras.py": "b5bc73f90f99c5110d7f841720fe9203cd19f33b",
    "systems/synapse/sdk/hints_client.py": "ce1446773464e6d4605ded966b7f6e795be11f2e",
    "systems/synapse/sdk/causal_client.py": "2931b2b6e3a09fddf8ce8cbddddeff880ff21706",
    "systems/synapse/policy/policy_dsl.py": "645e5e35f985d130e085e79acd14282a3874c578",
    "systems/synapse/critic/offpolicy.py": "8416e331f39a5d241b5cc599db223085e63a7e83",
    "systems/synapse/firewall/smt_guard.py": "abcba64b29bc22a97ac95c8ab8bce688292648f9",
    "systems/synapse/world/simulator.py": "ffba7b711db1aedcc2da9c7c811be0d7ec193d6c",
    "systems/synapse/world/diff_sim.py": "f2c76527dba6877097a197307261d7c31f284fba",
    "systems/synapse/world/world_model_trainer.py": "c6f8d4e278743aa5a11682868c5fde75ec02f8f5",
    "systems/synapse/explain/minset.py": "79bfe94d4b2ae12ed2fe1f1be3566784d5b664e4",
    "systems/synapse/explain/probes.py": "8957731de19e8b118817422dd43b012adfe9a9cb",
    "systems/synapse/qd/map_elites.py": "0a52bd7312877357cd4f6b0a431e5fa343b745c0",
    "systems/synapse/qd/replicator.py": "538c141c75cdc5bc9889040fecd2c53371a499f0",
    "systems/synapse/economics/roi.py": "f1841fc5e9c82c58a8a67d03aaf71669061fb679",
    "systems/synapse/rerank/episodic_knn.py": "e4810fe042fc548a7c4ef8c6b3d0ff6f03e51af1",
    "systems/synapse/meta/optimizer.py": "6c21c52dd867693a8f4934fef55c3085036d1498",
    "systems/synapse/safety/sentinels.py": "f23b7ad4bf5d2295f9eea368f77e725e628023b6",
    "systems/synapse/experiments/active.py": "d3737f382be8def1a0d6aa08715a816a4897cb1b",
    "systems/synapse/values/learner.py": "4f1ed7f74f7c5b611687004a5eae9f99883e083c",
    "systems/synapse/robust/ood.py": "2c638ab79130cc69483139853a9f83f159c25089",
    "systems/synapse/obs/schemas.py": "94a2a334c4441abc5513e22451dacdd164ef699b",
    "systems/synapse/obs/queries.py": "ac7c0e0102e0a2a612be5da553907bf2df3347df",
    "systems/synapse/obs/schemas_metrics.py": "a38d11dab12c949c6141d088b5b67e6ee55c70be",
    "systems/synapse/obs/queries_metrics.py": "30925b3d3e418a8a6d9fc1482bd606f1f1a1592e",
    "systems/synapse/obs/queries_p95_cypher.py": "6c1ab392b2a042623e7c4ba0f2c985ae2e0334fb",
    "systems/synapse/obs/queries_budget.py": "e73036a1cea26a97b759aa86a8366dbc5978aafb",
    "systems/synapse/obs/rollup_job.py": "54ccd6425c4ecc654574cfbeb3404c8d918001df",
    "systems/synapse/skills/schemas.py": "4a877e9aaa34caf910b7cde8795e4055099f0882",
    "systems/synapse/skills/options.py": "01d00ef14bf7ef2b2c38eaca3aa3826dd7075b28",
    "systems/synapse/skills/manager.py": "4abefe8735256e8a139b0dcccd3d96b0078beb82",
    "systems/synapse/skills/executor.py": "0ed8d1865b22a6ce3225c20b2e2e365118338150",
    "systems/synapse/skills/safe_rename.py": "3230e0bc5f60b28ca2596d31875dd46b7c1ab1f0",
    "systems/synapse/skills/extract_interface.py": "f897eb444b8f47f1aa855161ed9b4341b8781fc7",
    "systems/synapse/skills/introduce_adapter.py": "fba71eb67a324ce6b1b4ff30fefd7c0291213c6d",
    "systems/simula/agent/tools.py": "67a4ab6993affd39e37dda80dc9d6395cf3e9c86",
    "systems/simula/agent/tool_specs.py": "fdc1b715c2da65fdedb293319827dce0b39ada5e",
    "systems/simula/agent/autoheal.py": "cf72f3e1aad3769f24f1cd88324302d003c42ff9",
    "systems/simula/agent/tools_extra.py": "e217389d213ee32bea09cf6199176bda5aa076ab",
    "systems/simula/agent/tool_specs_additions.py": "8eb79cfc07c5abebc2fe66552428776520296123",
    "systems/simula/agent/tools_advanced.py": "dfc8b4e055419e645e94f9d95173949270fbff4f",
    "systems/simula/agent/qora_adapters.py": "0a00f204098bdd2ae1c1c22e7df9714a7be1cde3",
    "systems/simula/agent/tool_registry.py": "77015ce30f84483147acac7479bf26571a9a26dc",
    "systems/simula/agent/orchestrator_main.py": "94914a8770c947a437cea0b0fd083f8b769bcdfa",
    "systems/simula/agent/events.py": "af5a1665ebdf88750a8e651b2ca4e9e794cfef1e",
    "systems/simula/agent/strategies/apply_refactor_smart.py": "f967da32ae8a377b8c8ade603f5b10a5dd8fdaa1",
    "systems/simula/agent/orchestrator/utils.py": "c95a5de58cb354649bdd90763c948180cd607fe7",
    "systems/simula/agent/orchestrator/services.py": "0209e9ee2569fdac8fe0f92a7bfd31e00e7d94cc",
    "systems/simula/agent/orchestrator/evolution.py": "78754b75042910fb3ada54ddb4c3f8d804761b9d",
    "systems/simula/agent/orchestrator/context.py": "cd19948bdf1f428fbf365fbbea8aa7bb36b7d3a0",
    "systems/simula/agent/orchestrator/tool_safety.py": "61ce75f8644544206857fd242fc6f061674c03d1",
    "systems/simula/client/synapse_client.py": "ea3df20d5c57a29c78eaa73652184627581b9409",
    "systems/simula/client/synapse_bridge.py": "fa508e5ec100d360b9b5e618e4925537d9f14596",
    "systems/simula/client/synapse_middleware.py": "3d44253150d7fd91f7a6fc3f3bbd4a9750224506",
    "systems/simula/client/llm.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "systems/simula/code_sim/eval_types.py": "bbcb70bac13916acf0dc0adac098b1e468a0a165",
    "systems/simula/code_sim/loop.py": "88c966bb8bc2036a07959d803388b8dfab033076",
    "systems/simula/code_sim/planner.py": "c4ed9af83ab46ff99aab75ee6380e1cc338ffdb8",
    "systems/simula/code_sim/portfolio.py": "ebae37af8a2253d20fcee3001de7f7340e394dff",
    "systems/simula/code_sim/prompts.py": "2f90da15b094a2cbe71c78efb6d72af4f5fdfdf0",
    "systems/simula/code_sim/telemetry.py": "f517c5225f7c669b670603f7a7de64b0927af14e",
    "systems/simula/code_sim/diffutils.py": "beeb283eaca619d84819cad74b845114ba891894",
    "systems/simula/code_sim/archive/pareto.py": "291afa2bee84c123f18b6cc84818cc29f61d6857",
    "systems/simula/code_sim/evaluators/contracts.py": "8e093dc8d9e30de11731891cdfac4dc2301cfb54",
    "systems/simula/code_sim/evaluators/perf.py": "2de5a343b9bf4e094eaee622641bfb12d0d3ccc3",
    "systems/simula/code_sim/evaluators/runtime.py": "41db80fd410446a0a1a89289d8f308fc5f6dceb5",
    "systems/simula/code_sim/evaluators/static.py": "ea77df2bc5eec8aa1dd9c73104ce0c6128ce2263",
    "systems/simula/code_sim/evaluators/tests.py": "8319366b18bfbe252be48edfad190fbf1e33b944",
    "systems/simula/code_sim/evaluators/__init__.py": "a216767fdf40c6ec6c919c481aaea0177614cbd9",
    "systems/simula/code_sim/evaluators/impact.py": "9bd2fcf2b92451fcff8fac0572ef3391793d123f",
    "systems/simula/code_sim/evaluators/risk.py": "d38e5525f2b6c9ccea20ac81dfae337f33900539",
    "systems/simula/code_sim/evaluators/security.py": "6e299ecc7dbf6c97473e135294a2017d7a0b02a3",
    "systems/simula/code_sim/evaluators/coverage_delta.py": "87b4efce22a6dc97448ab85d32865d2871023af0",
    "systems/simula/code_sim/evaluators/spec_miner.py": "5d1adcfadaff63a8ea5f2a39ede2e5a3774e0ef8",
    "systems/simula/code_sim/mutators/ast_refactor.py": "eab05e4d8d2d02645043d871a755c64379f3faca",
    "systems/simula/code_sim/mutators/prompt_patch.py": "a4325245f2bf340d9209e397b3cdf606116bc35c",
    "systems/simula/code_sim/mutators/retrieval_edit.py": "b83d80a3ad39b72c76c670fb5de5fea4c7bf13e2",
    "systems/simula/code_sim/mutators/__init__.py": "1af5b2c42124dc0573e3891f99b39412c083d2d7",
    "systems/simula/code_sim/mutators/mutants.py": "af24166dff92c24497d99a70fa688aa8d67890b8",
    "systems/simula/code_sim/mutators/runner.py": "bba1596560d1d0aa0fc60072ba6b2b7cf6fde11c",
    "systems/simula/code_sim/retrieval/context.py": "006a737b300a82308a57d15506ba66cd4b0b856d",
    "systems/simula/code_sim/sandbox/sandbox.py": "0f8f97262baf3646e6f100c3988990069391f134",
    "systems/simula/code_sim/sandbox/seeds.py": "d5adb912e638ad610fe97d81e2e0ec715288346d",
    "systems/simula/code_sim/sandbox/quality.py": "6ce740fc8de9ec623d578f3a2264bc278a97b4de",
    "systems/simula/code_sim/sandbox/snapshots.py": "02c337652cbba6241603009757d8a0980c18982f",
    "systems/simula/code_sim/sandbox/deps.py": "ea7ae2c3296ea6624778df08f426624383bbc284",
    "systems/simula/code_sim/sandbox/profiles.py": "fc21fcfa305bd5fa737c2bbb9efe6e74c06923bc",
    "systems/simula/code_sim/specs/schema.py": "cac2c0bb8a05ff35aee24362edd3efabd0896e18",
    "systems/simula/code_sim/specs/synthesize.py": "5f5dd670cd7c420d475be8cb6884f61aa9d6e6e3",
    "systems/simula/code_sim/specs/oracles.py": "23474ddd846edc58d2af487c9c643f23685acf71",
    "systems/simula/code_sim/specs/minimize_trace.py": "4bb37063a17fec9b225343dfa748db39ff32f8d5",
    "systems/simula/code_sim/utils/repo_features.py": "b20aa0bb2a5ec9b17494ea8f7bafca220e94202d",
    "systems/simula/code_sim/repair/ddmin.py": "f74b36f479cf4744ae3f42e71a630d55a4136d90",
    "systems/simula/code_sim/repair/templates.py": "2ff0da0d55fbc037ed7fdc29ead061fed3724f21",
    "systems/simula/code_sim/repair/engine.py": "2a35ee81744063254bf00aed3de98c5511ef9dbc",
    "systems/simula/code_sim/diagnostics/error_parser.py": "1d049c32df678859184b0986672b80d0c98c8e9f",
    "systems/simula/code_sim/cache/patch_cache.py": "c40de45565192686dc7e39353cbd479c92b3cfbd",
    "systems/simula/code_sim/fuzz/hypo_driver.py": "a69c32b0dcc6705899ef00c0ea6cfa1dfaf526b5",
    "systems/simula/code_sim/portfolio/strategies.py": "14eafca37b254eced13dbca5ae31e2de39ada339",
    "systems/simula/code_sim/portfolio/__init__.py": "a58947321b77f287de2564d08b4be9c90fdeec28",
    "systems/simula/code_sim/portfolio/strategies_structural.py": "ddf4e3f560ed44637b9b56b973622685bdfd8fdd",
    "systems/simula/code_sim/report/proposal_report.py": "57f3b4875d2fd023096959316540974f79360424",
    "systems/simula/code_sim/diff/minimize.py": "4b2a485f25dfa556bd638c266e6db22e83a0ff67",
    "systems/simula/code_sim/impact/scope_map.py": "76390e4ad74b95e40d7f364111f9679a8ec719bc",
    "systems/simula/code_sim/impact/py_callgraph.py": "e456ad0792a911f9d6cbafd74ed51c71a066814d",
    "systems/simula/code_sim/impact/index.py": "8158bed5dc165976645bd9f2d5dd24f684bf6be3",
    "systems/simula/code_sim/security/secret_scan.py": "ee5f8fa1d9365470d6506e692a13b1f58ee26426",
    "systems/simula/policy/emit.py": "5ef1c36df4b0040ce14624dbe6e39924d3eccf4d",
    "systems/simula/policy/effects.py": "141986e81f73ca17f8f0f48e250a62e735d05fa2",
    "systems/simula/policy/eos_checker.py": "59dd46080d5d97015d1b3e62e13e41922d3d406d",
    "systems/simula/policy/packs.py": "81441910abf730d9fe7ee00d1aa0e2e8facbca85",
    "systems/simula/service/deps.py": "1012d13ee40397daba456579d545edb055a20b26",
    "systems/simula/service/services/codegen.py": "1f7575799c112833a20f20936931d9d50788f125",
    "systems/simula/service/services/equor_bridge.py": "a4c0e09b61d9430c9ecd78ba058f304ba17f5f65",
    "systems/simula/service/services/executor.py": "779ef4146b5260c1262f8cf6dc9c208e85a57094",
    "systems/simula/service/services/prompts.py": "277981dc33f6d8ed1fc468d71f38b0d6fb7ae254",
    "systems/simula/service/services/validator.py": "bea19348db1322d6c3b95bb156da85a5aac026f0",
    "systems/simula/service/services/vcs.py": "7e44e83817b9d4d9f8ed78cc69799e264ed33795",
    "systems/simula/nscs/ast_index.py": "45d66cf7a12e16c77446c67adfff37e0995d58fb",
    "systems/simula/nscs/dossier.py": "80486af8199903488f701fe0299c0e0ad43f873f",
    "systems/simula/nscs/agent_tools.py": "90a79caba134f39460b24a61c1fa969ce42056b4",
    "systems/simula/nscs/language_adapters.py": "5a12dcaa38a7e7dcd6df0f29d201f659789af58a",
    "systems/simula/nscs/language_adapters_go.py": "19a109f2c097685687ac478b2d3424e3c41bc55c",
    "systems/simula/nscs/language_adapters_java.py": "c19151519767f8c35589248ced8553fad19e115a",
    "systems/simula/nscs/language_adapters_rust.py": "78aa540cc92b20f012dbdceaea23599fabf70f20",
    "systems/simula/nscs/specs/dsl.py": "783a8bc6f62a417e5bc16f0925708ce73772a4f4",
    "systems/simula/nscs/specs/compiler.py": "2389792cc881636c20302f6bbcd0da60bc45c71d",
    "systems/simula/nscs/specs/forge.py": "03cd78918918add80c26e8ceb245cd13a4b06c12",
    "systems/simula/nscs/ir/model.py": "937e65b739492145bb6dfd48fcb7d9ae09d7efe3",
    "systems/simula/nscs/ir/patch.py": "b09f72a906cccdbcf8810503f30d23f9309ad4a3",
    "systems/simula/nscs/ir/backend/python.py": "68fc804a04eadfb718284916c0e86794657df6ad",
    "systems/simula/nscs/verify/bundle.py": "4512213a9b26ef79f5b4d92b86e37f2a8aebf3c7",
    "systems/simula/nscs/verify/types_styles.py": "332dac2a05b3540e9e7f420b8b1805e004014d32",
    "systems/simula/nscs/verify/props.py": "0f5d32c3c2c7ed1bcfbfdce72531e9e79ce2a2c2",
    "systems/simula/nscs/verify/smt.py": "2707b54ed350b2f302bfc23f16a4271a1ffb047d",
    "systems/simula/nscs/verify/perf.py": "be927ff97256d327e622342d15ac3be9fde0dfce",
    "systems/simula/nscs/twin/runner.py": "79f97a3c58d7d91e517ab75eb26d217bd1b353f6",
    "systems/simula/nscs/twin/probes.py": "687f56338521ac81c570d958278c605559a95d50",
    "systems/simula/nscs/twin/scenarios.py": "4a6e6ee30dfbd48c0701f7aa82637261a5805a53",
    "systems/simula/nscs/strategy/arms.py": "437cdf7d8adf118a373b1e791ceecd4d05e11bee",
    "systems/simula/agents/base.py": "6b10330b193a6c4ac2647042adaa5f8861c220f9",
    "systems/simula/agents/architect.py": "3df5cf435e109562f8ba59ed2b5fcd8005b98679",
    "systems/simula/agents/qa.py": "0b9e4501f1b0bfdc15e4432845cae21bb12a34ff",
    "systems/simula/agents/security.py": "37eb8dba198b9108a6266347b499d45e9e4a518f",
    "systems/simula/agents/mas_runner.py": "ac6273c34f2ed7d83848ad7da496e1b007901b18",
    "systems/simula/agents/meta.py": "fd1f4f579796eee96557e09d44407028def48991",
    "systems/simula/agents/reviewer.py": "88a37c7b83829cc3ce02a1f893add29cf41ae109",
    "systems/simula/review/atune_summary.py": "6256027f79c189622f3ed7d473b133d68756d38d",
    "systems/simula/review/pr_templates.py": "a7fc0426875e25b1519694d90fac4b30834517a1",
    "systems/simula/vcs/pr_manager.py": "088f22137db632fd73db4f6e45f914d5dc45d7c3",
    "systems/simula/vcs/commit_msg.py": "6063771985abfbe6b90300b14429e2acc70daac1",
    "systems/simula/artifacts/package.py": "fbb2585e67d40a16691db1123d667a82ae2ebdf2",
    "systems/simula/artifacts/index.py": "b043d11330b766a7afd756caa1a82b1e36a642cf",
    "systems/simula/config/loader.py": "7f90ab8d325279406e75493a39e9e53a143ba91a",
    "systems/simula/config/__init__.py": "c5451ccdea5658233e88819645bc630520d86018",
    "systems/simula/ci/pipelines.py": "a900be0da046010273fe6b5785311f60f7530b1c",
    "systems/simula/ops/glue.py": "47c9bc35a3bfe1c84857f4c234be1fbd04a6d6de",
    "systems/simula/build/detect.py": "c35dde5aed112687609eeceb2b027c9c1648c9bc",
    "systems/simula/build/run.py": "332a040b898fb995d0e2c97b2d09ebccab41024a",
    "systems/simula/format/autoformat.py": "0b2caaad686b775f52f8d3cae03f34c687f7f88e",
    "systems/simula/git/rebase.py": "a753df01e9493add28caaf3fe66ede1e2c8a9f84",
    "systems/simula/git/pr_annotations.py": "8965f18eed0fd7739a4eacdb1cb921fd7ab6e1fc",
    "systems/simula/scoring/score.py": "35a9e1cd0c3410f5f5ef9ece0ea8a59dd2919889",
    "systems/simula/search/portfolio_runner.py": "e8102527ffcbc2ed28223a5e667c583c6f589469",
    "systems/simula/recipes/generator.py": "2d09e64daa1b4589998e0b80ed1ac3f7606edab7",
    "systems/simula/spec_eval/scoreboard.py": "435c189d3d4f26e5fd8a1218c1844dd07430f58d",
    "systems/simula/risk/estimator.py": "ea4170233348db36f1e20acd9436ae2b454d8084",
    "vendor/asteval/__init__.py": "388298f4f022a35906357b4e8b55826db096c1da",
    "vendor/asteval/astutils.py": "21aedc730085d02c6ddc6a95232113b4ce8a4ef7",
    "vendor/asteval/asteval.py": "ef15e96f4f497201f93e6fe6e9116bd78b105658",
    "vendor/asteval/version.py": "93487a7ac505fe871c4acb35c6228109b5ac831e",
    "asteval/__init__.py": "388298f4f022a35906357b4e8b55826db096c1da",
    "asteval/astutils.py": "21aedc730085d02c6ddc6a95232113b4ce8a4ef7",
    "asteval/asteval.py": "ef15e96f4f497201f93e6fe6e9116bd78b105658",
    "asteval/version.py": "93487a7ac505fe871c4acb35c6228109b5ac831e",
    "context_store.py": "a563ccd2c92bf7856691a6e635eb0285647c5d32",
    "test_all.py": "9a00dae5ed3593e90e970e3e70a4b88a38879c10",
    "try_static_check.py": "9f1c77b22750f66dc017264eb710b57eb741854f",
    ".collate.py": "eecac8244bc96a51512e07db5684e440be7d9432",
    "autofix_f841.py": "ec7e3b6420bdfe40dbfbbb61d5ca5e190c7bf46c",
    "testit.py": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
  },
  "defs": {
    "collate_api.py::collate_dir": {
      "file": "collate_api.py",
      "kind": "Function",
      "name": "collate_dir"
    },
    "collate_api.py::main": {
      "file": "collate_api.py",
      "kind": "Function",
      "name": "main"
    },
    "test_it.py::_find_escalate_url": {
      "file": "test_it.py",
      "kind": "Function",
      "name": "_find_escalate_url"
    },
    "unityroom.py::_to_dict": {
      "file": "unityroom.py",
      "kind": "Function",
      "name": "_to_dict"
    },
    "unityroom.py::_env_timeout_seconds": {
      "file": "unityroom.py",
      "kind": "Function",
      "name": "_env_timeout_seconds"
    },
    "api\\endpoints\\origin.py::check_admin": {
      "file": "api\\endpoints\\origin.py",
      "kind": "Function",
      "name": "check_admin"
    },
    "api\\endpoints\\origin.py::OriginIn": {
      "file": "api\\endpoints\\origin.py",
      "kind": "Class",
      "name": "OriginIn"
    },
    "api\\endpoints\\origin.py::OriginCreated": {
      "file": "api\\endpoints\\origin.py",
      "kind": "Class",
      "name": "OriginCreated"
    },
    "api\\endpoints\\origin.py::SearchIn": {
      "file": "api\\endpoints\\origin.py",
      "kind": "Class",
      "name": "SearchIn"
    },
    "api\\endpoints\\origin.py::SearchHit": {
      "file": "api\\endpoints\\origin.py",
      "kind": "Class",
      "name": "SearchHit"
    },
    "api\\endpoints\\origin.py::EdgeIn": {
      "file": "api\\endpoints\\origin.py",
      "kind": "Class",
      "name": "EdgeIn"
    },
    "api\\endpoints\\origin.py::EdgeCreateIn": {
      "file": "api\\endpoints\\origin.py",
      "kind": "Class",
      "name": "EdgeCreateIn"
    },
    "api\\endpoints\\origin.py::BatchCSVIn": {
      "file": "api\\endpoints\\origin.py",
      "kind": "Class",
      "name": "BatchCSVIn"
    },
    "api\\endpoints\\origin.py::_parse_tags": {
      "file": "api\\endpoints\\origin.py",
      "kind": "Function",
      "name": "_parse_tags"
    },
    "api\\endpoints\\evo\\core.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\core.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\core.py::ping": {
      "file": "api\\endpoints\\evo\\core.py",
      "kind": "Function",
      "name": "ping"
    },
    "api\\endpoints\\evo\\conflicts.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\conflicts.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\conflicts.py::BatchRequest": {
      "file": "api\\endpoints\\evo\\conflicts.py",
      "kind": "Class",
      "name": "BatchRequest"
    },
    "api\\endpoints\\evo\\conflicts.py::create_conflict": {
      "file": "api\\endpoints\\evo\\conflicts.py",
      "kind": "Function",
      "name": "create_conflict"
    },
    "api\\endpoints\\evo\\conflicts.py::create_conflicts_batch": {
      "file": "api\\endpoints\\evo\\conflicts.py",
      "kind": "Function",
      "name": "create_conflicts_batch"
    },
    "api\\endpoints\\evo\\conflicts.py::list_open_conflicts": {
      "file": "api\\endpoints\\evo\\conflicts.py",
      "kind": "Function",
      "name": "list_open_conflicts"
    },
    "api\\endpoints\\evo\\conflicts.py::get_conflict": {
      "file": "api\\endpoints\\evo\\conflicts.py",
      "kind": "Function",
      "name": "get_conflict"
    },
    "api\\endpoints\\evo\\hypotheses.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\hypotheses.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\hypotheses.py::SpawnRequest": {
      "file": "api\\endpoints\\evo\\hypotheses.py",
      "kind": "Class",
      "name": "SpawnRequest"
    },
    "api\\endpoints\\evo\\hypotheses.py::spawn_hypotheses": {
      "file": "api\\endpoints\\evo\\hypotheses.py",
      "kind": "Function",
      "name": "spawn_hypotheses"
    },
    "api\\endpoints\\evo\\proposals.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\proposals.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\proposals.py::AssembleRequest": {
      "file": "api\\endpoints\\evo\\proposals.py",
      "kind": "Class",
      "name": "AssembleRequest"
    },
    "api\\endpoints\\evo\\proposals.py::assemble_proposal": {
      "file": "api\\endpoints\\evo\\proposals.py",
      "kind": "Function",
      "name": "assemble_proposal"
    },
    "api\\endpoints\\evo\\proposals.py::get_proposal": {
      "file": "api\\endpoints\\evo\\proposals.py",
      "kind": "Function",
      "name": "get_proposal"
    },
    "api\\endpoints\\evo\\proposals.py::handover_proposal": {
      "file": "api\\endpoints\\evo\\proposals.py",
      "kind": "Function",
      "name": "handover_proposal"
    },
    "api\\endpoints\\evo\\replay.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\replay.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\replay.py::get_replay_manifest": {
      "file": "api\\endpoints\\evo\\replay.py",
      "kind": "Function",
      "name": "get_replay_manifest"
    },
    "api\\endpoints\\evo\\replay.py::verify_replay_capsule": {
      "file": "api\\endpoints\\evo\\replay.py",
      "kind": "Function",
      "name": "verify_replay_capsule"
    },
    "api\\endpoints\\evo\\escalate.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\escalate.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids": {
      "file": "api\\endpoints\\evo\\escalate.py",
      "kind": "Function",
      "name": "_coerce_conflict_ids"
    },
    "api\\endpoints\\evo\\obviousness.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\obviousness.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\obviousness.py::ScoreRequest": {
      "file": "api\\endpoints\\evo\\obviousness.py",
      "kind": "Class",
      "name": "ScoreRequest"
    },
    "api\\endpoints\\evo\\obviousness.py::score_obviousness": {
      "file": "api\\endpoints\\evo\\obviousness.py",
      "kind": "Function",
      "name": "score_obviousness"
    },
    "api\\endpoints\\evo\\evidence.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\evidence.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\evidence.py::PlanResponse": {
      "file": "api\\endpoints\\evo\\evidence.py",
      "kind": "Class",
      "name": "PlanResponse"
    },
    "api\\endpoints\\evo\\evidence.py::RequestResponse": {
      "file": "api\\endpoints\\evo\\evidence.py",
      "kind": "Class",
      "name": "RequestResponse"
    },
    "api\\endpoints\\evo\\evidence.py::AttachReplayRequest": {
      "file": "api\\endpoints\\evo\\evidence.py",
      "kind": "Class",
      "name": "AttachReplayRequest"
    },
    "api\\endpoints\\evo\\evidence.py::AttachReplayResponse": {
      "file": "api\\endpoints\\evo\\evidence.py",
      "kind": "Class",
      "name": "AttachReplayResponse"
    },
    "api\\endpoints\\evo\\evidence.py::plan_suite": {
      "file": "api\\endpoints\\evo\\evidence.py",
      "kind": "Function",
      "name": "plan_suite"
    },
    "api\\endpoints\\evo\\evidence.py::request_collection": {
      "file": "api\\endpoints\\evo\\evidence.py",
      "kind": "Function",
      "name": "request_collection"
    },
    "api\\endpoints\\evo\\evidence.py::collect": {
      "file": "api\\endpoints\\evo\\evidence.py",
      "kind": "Function",
      "name": "collect"
    },
    "api\\endpoints\\evo\\evidence.py::attach_replay": {
      "file": "api\\endpoints\\evo\\evidence.py",
      "kind": "Function",
      "name": "attach_replay"
    },
    "api\\endpoints\\evo\\scorecards.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\scorecards.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\scorecards.py::_hash": {
      "file": "api\\endpoints\\evo\\scorecards.py",
      "kind": "Function",
      "name": "_hash"
    },
    "api\\endpoints\\evo\\scorecards.py::ExportRequest": {
      "file": "api\\endpoints\\evo\\scorecards.py",
      "kind": "Class",
      "name": "ExportRequest"
    },
    "api\\endpoints\\evo\\scorecards.py::export_scorecard": {
      "file": "api\\endpoints\\evo\\scorecards.py",
      "kind": "Function",
      "name": "export_scorecard"
    },
    "api\\endpoints\\evo\\repair.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\repair.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\repair.py::RecordRequest": {
      "file": "api\\endpoints\\evo\\repair.py",
      "kind": "Class",
      "name": "RecordRequest"
    },
    "api\\endpoints\\evo\\repair.py::record": {
      "file": "api\\endpoints\\evo\\repair.py",
      "kind": "Function",
      "name": "record"
    },
    "api\\endpoints\\evo\\repair.py::UpdateRequest": {
      "file": "api\\endpoints\\evo\\repair.py",
      "kind": "Class",
      "name": "UpdateRequest"
    },
    "api\\endpoints\\evo\\repair.py::update": {
      "file": "api\\endpoints\\evo\\repair.py",
      "kind": "Function",
      "name": "update"
    },
    "api\\endpoints\\evo\\repair.py::get_ticket": {
      "file": "api\\endpoints\\evo\\repair.py",
      "kind": "Function",
      "name": "get_ticket"
    },
    "api\\endpoints\\evo\\repair.py::list_tickets": {
      "file": "api\\endpoints\\evo\\repair.py",
      "kind": "Function",
      "name": "list_tickets"
    },
    "api\\endpoints\\evo\\cycle.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\cycle.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\evo\\cycle.py::CycleRequest": {
      "file": "api\\endpoints\\evo\\cycle.py",
      "kind": "Class",
      "name": "CycleRequest"
    },
    "api\\endpoints\\evo\\diag.py::_stamp_cost": {
      "file": "api\\endpoints\\evo\\diag.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\unity\\deliberate.py::_to_dict": {
      "file": "api\\endpoints\\unity\\deliberate.py",
      "kind": "Function",
      "name": "_to_dict"
    },
    "api\\endpoints\\unity\\deliberate.py::_env_timeout_seconds": {
      "file": "api\\endpoints\\unity\\deliberate.py",
      "kind": "Function",
      "name": "_env_timeout_seconds"
    },
    "api\\endpoints\\voxis\\generate_phrase.py::_word_tokens": {
      "file": "api\\endpoints\\voxis\\generate_phrase.py",
      "kind": "Function",
      "name": "_word_tokens"
    },
    "api\\endpoints\\voxis\\generate_phrase.py::_six_word_score": {
      "file": "api\\endpoints\\voxis\\generate_phrase.py",
      "kind": "Function",
      "name": "_six_word_score"
    },
    "api\\endpoints\\voxis\\generate_phrase.py::_punctuation_ok": {
      "file": "api\\endpoints\\voxis\\generate_phrase.py",
      "kind": "Function",
      "name": "_punctuation_ok"
    },
    "api\\endpoints\\voxis\\generate_phrase.py::_overlap_ratio": {
      "file": "api\\endpoints\\voxis\\generate_phrase.py",
      "kind": "Function",
      "name": "_overlap_ratio"
    },
    "api\\endpoints\\voxis\\talk.py::VoxisTalkRequest": {
      "file": "api\\endpoints\\voxis\\talk.py",
      "kind": "Class",
      "name": "VoxisTalkRequest"
    },
    "api\\endpoints\\synapse\\main.py::_j": {
      "file": "api\\endpoints\\synapse\\main.py",
      "kind": "Function",
      "name": "_j"
    },
    "api\\endpoints\\synapse\\main.py::_theta_for_arm": {
      "file": "api\\endpoints\\synapse\\main.py",
      "kind": "Function",
      "name": "_theta_for_arm"
    },
    "api\\endpoints\\synapse\\main.py::_map_budget_to_limits": {
      "file": "api\\endpoints\\synapse\\main.py",
      "kind": "Function",
      "name": "_map_budget_to_limits"
    },
    "api\\endpoints\\synapse\\tasks.py::_is_no_arms_err": {
      "file": "api\\endpoints\\synapse\\tasks.py",
      "kind": "Function",
      "name": "_is_no_arms_err"
    },
    "api\\endpoints\\synapse\\tasks.py::_j": {
      "file": "api\\endpoints\\synapse\\tasks.py",
      "kind": "Function",
      "name": "_j"
    },
    "api\\endpoints\\synapse\\dashboard_api.py::pack": {
      "file": "api\\endpoints\\synapse\\dashboard_api.py",
      "kind": "Function",
      "name": "pack"
    },
    "api\\endpoints\\synapse\\governor.py::_to_dict": {
      "file": "api\\endpoints\\synapse\\governor.py",
      "kind": "Function",
      "name": "_to_dict"
    },
    "api\\endpoints\\synapse\\governor.py::_proposal_id": {
      "file": "api\\endpoints\\synapse\\governor.py",
      "kind": "Function",
      "name": "_proposal_id"
    },
    "api\\endpoints\\synapse\\listener.py::_run": {
      "file": "api\\endpoints\\synapse\\listener.py",
      "kind": "Function",
      "name": "_run"
    },
    "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree": {
      "file": "api\\endpoints\\synapse\\listener.py",
      "kind": "Function",
      "name": "_apply_patch_to_worktree"
    },
    "api\\endpoints\\synapse\\ui_api.py::to_summary": {
      "file": "api\\endpoints\\synapse\\ui_api.py",
      "kind": "Function",
      "name": "to_summary"
    },
    "api\\endpoints\\synapse\\predict.py::PredictRequest": {
      "file": "api\\endpoints\\synapse\\predict.py",
      "kind": "Class",
      "name": "PredictRequest"
    },
    "api\\endpoints\\synapse\\predict.py::PredictResponse": {
      "file": "api\\endpoints\\synapse\\predict.py",
      "kind": "Class",
      "name": "PredictResponse"
    },
    "api\\endpoints\\synk\\switchboard.py::FlagUpsert": {
      "file": "api\\endpoints\\synk\\switchboard.py",
      "kind": "Class",
      "name": "FlagUpsert"
    },
    "api\\endpoints\\synk\\switchboard.py::FlagOut": {
      "file": "api\\endpoints\\synk\\switchboard.py",
      "kind": "Class",
      "name": "FlagOut"
    },
    "api\\endpoints\\synk\\switchboard.py::_to_json": {
      "file": "api\\endpoints\\synk\\switchboard.py",
      "kind": "Function",
      "name": "_to_json"
    },
    "api\\endpoints\\synk\\switchboard.py::_from_json": {
      "file": "api\\endpoints\\synk\\switchboard.py",
      "kind": "Function",
      "name": "_from_json"
    },
    "api\\endpoints\\synk\\switchboard.py::_now_ms": {
      "file": "api\\endpoints\\synk\\switchboard.py",
      "kind": "Function",
      "name": "_now_ms"
    },
    "api\\endpoints\\synk\\switchboard.py::_actor_identity": {
      "file": "api\\endpoints\\synk\\switchboard.py",
      "kind": "Function",
      "name": "_actor_identity"
    },
    "api\\endpoints\\equor\\declare.py::_sha256_hex": {
      "file": "api\\endpoints\\equor\\declare.py",
      "kind": "Function",
      "name": "_sha256_hex"
    },
    "api\\endpoints\\llm\\call.py::TaskContext": {
      "file": "api\\endpoints\\llm\\call.py",
      "kind": "Class",
      "name": "TaskContext"
    },
    "api\\endpoints\\llm\\call.py::ProviderOverrides": {
      "file": "api\\endpoints\\llm\\call.py",
      "kind": "Class",
      "name": "ProviderOverrides"
    },
    "api\\endpoints\\llm\\call.py::LlmCallRequest": {
      "file": "api\\endpoints\\llm\\call.py",
      "kind": "Class",
      "name": "LlmCallRequest"
    },
    "api\\endpoints\\llm\\call.py::UsageDetails": {
      "file": "api\\endpoints\\llm\\call.py",
      "kind": "Class",
      "name": "UsageDetails"
    },
    "api\\endpoints\\llm\\call.py::Usage": {
      "file": "api\\endpoints\\llm\\call.py",
      "kind": "Class",
      "name": "Usage"
    },
    "api\\endpoints\\llm\\call.py::LlmCallResponse": {
      "file": "api\\endpoints\\llm\\call.py",
      "kind": "Class",
      "name": "LlmCallResponse"
    },
    "api\\endpoints\\llm\\call.py::_merge_policy": {
      "file": "api\\endpoints\\llm\\call.py",
      "kind": "Function",
      "name": "_merge_policy"
    },
    "api\\endpoints\\llm\\call.py::_bus_kwargs_from_overrides": {
      "file": "api\\endpoints\\llm\\call.py",
      "kind": "Function",
      "name": "_bus_kwargs_from_overrides"
    },
    "api\\endpoints\\llm\\call.py::_safe_int": {
      "file": "api\\endpoints\\llm\\call.py",
      "kind": "Function",
      "name": "_safe_int"
    },
    "api\\endpoints\\llm\\call.py::_extract_usage_tokens": {
      "file": "api\\endpoints\\llm\\call.py",
      "kind": "Function",
      "name": "_extract_usage_tokens"
    },
    "api\\endpoints\\axon\\core_routes.py::_remaining_ms": {
      "file": "api\\endpoints\\axon\\core_routes.py",
      "kind": "Function",
      "name": "_remaining_ms"
    },
    "api\\endpoints\\axon\\probecraft.py::SynthesisRequest": {
      "file": "api\\endpoints\\axon\\probecraft.py",
      "kind": "Class",
      "name": "SynthesisRequest"
    },
    "api\\endpoints\\axon\\probecraft.py::StatusUpdateRequest": {
      "file": "api\\endpoints\\axon\\probecraft.py",
      "kind": "Class",
      "name": "StatusUpdateRequest"
    },
    "api\\endpoints\\axon\\probecraft.py::_driver_name_to_class_name": {
      "file": "api\\endpoints\\axon\\probecraft.py",
      "kind": "Function",
      "name": "_driver_name_to_class_name"
    },
    "api\\endpoints\\axon\\probecraft_intake.py::_derive_driver_name": {
      "file": "api\\endpoints\\axon\\probecraft_intake.py",
      "kind": "Function",
      "name": "_derive_driver_name"
    },
    "api\\endpoints\\axon\\promote.py::PromoteRequest": {
      "file": "api\\endpoints\\axon\\promote.py",
      "kind": "Class",
      "name": "PromoteRequest"
    },
    "api\\endpoints\\qora\\arch_exec.py::SearchReq": {
      "file": "api\\endpoints\\qora\\arch_exec.py",
      "kind": "Class",
      "name": "SearchReq"
    },
    "api\\endpoints\\qora\\arch_exec.py::ExecByUidReq": {
      "file": "api\\endpoints\\qora\\arch_exec.py",
      "kind": "Class",
      "name": "ExecByUidReq"
    },
    "api\\endpoints\\qora\\arch_exec.py::ExecByQueryReq": {
      "file": "api\\endpoints\\qora\\arch_exec.py",
      "kind": "Class",
      "name": "ExecByQueryReq"
    },
    "api\\endpoints\\qora\\manifest.py::build": {
      "file": "api\\endpoints\\qora\\manifest.py",
      "kind": "Function",
      "name": "build"
    },
    "api\\endpoints\\qora\\manifest.py::latest": {
      "file": "api\\endpoints\\qora\\manifest.py",
      "kind": "Function",
      "name": "latest"
    },
    "api\\endpoints\\qora\\gcb.py::build": {
      "file": "api\\endpoints\\qora\\gcb.py",
      "kind": "Function",
      "name": "build"
    },
    "api\\endpoints\\qora\\gcb.py::dispatch": {
      "file": "api\\endpoints\\qora\\gcb.py",
      "kind": "Function",
      "name": "dispatch"
    },
    "api\\endpoints\\simula\\replay.py::_run": {
      "file": "api\\endpoints\\simula\\replay.py",
      "kind": "Function",
      "name": "_run"
    },
    "api\\endpoints\\simula\\jobs_codegen.py::TargetHint": {
      "file": "api\\endpoints\\simula\\jobs_codegen.py",
      "kind": "Class",
      "name": "TargetHint"
    },
    "api\\endpoints\\simula\\jobs_codegen.py::CodegenRequest": {
      "file": "api\\endpoints\\simula\\jobs_codegen.py",
      "kind": "Class",
      "name": "CodegenRequest"
    },
    "api\\endpoints\\simula\\jobs_codegen.py::CodegenResponse": {
      "file": "api\\endpoints\\simula\\jobs_codegen.py",
      "kind": "Class",
      "name": "CodegenResponse"
    },
    "api\\endpoints\\atune\\route_event.py::_best_actual_utility": {
      "file": "api\\endpoints\\atune\\route_event.py",
      "kind": "Function",
      "name": "_best_actual_utility"
    },
    "api\\endpoints\\atune\\route_event.py::_sign_token": {
      "file": "api\\endpoints\\atune\\route_event.py",
      "kind": "Function",
      "name": "_sign_token"
    },
    "api\\endpoints\\atune\\route_event.py::_alloc_budget_ms": {
      "file": "api\\endpoints\\atune\\route_event.py",
      "kind": "Function",
      "name": "_alloc_budget_ms"
    },
    "api\\endpoints\\atune\\trace.py::_read_jsonl": {
      "file": "api\\endpoints\\atune\\trace.py",
      "kind": "Function",
      "name": "_read_jsonl"
    },
    "api\\endpoints\\atune\\trace.py::_latest_match": {
      "file": "api\\endpoints\\atune\\trace.py",
      "kind": "Function",
      "name": "_latest_match"
    },
    "api\\endpoints\\atune\\meta_status.py::_env_flag": {
      "file": "api\\endpoints\\atune\\meta_status.py",
      "kind": "Function",
      "name": "_env_flag"
    },
    "api\\endpoints\\nova\\core.py::_stamp_cost": {
      "file": "api\\endpoints\\nova\\core.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\nova\\core.py::_hash": {
      "file": "api\\endpoints\\nova\\core.py",
      "kind": "Function",
      "name": "_hash"
    },
    "api\\endpoints\\nova\\handoff.py::_stamp_cost": {
      "file": "api\\endpoints\\nova\\handoff.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\nova\\handoff.py::HandoffRequest": {
      "file": "api\\endpoints\\nova\\handoff.py",
      "kind": "Class",
      "name": "HandoffRequest"
    },
    "api\\endpoints\\nova\\policy.py::_stamp_cost": {
      "file": "api\\endpoints\\nova\\policy.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\nova\\policy.py::PolicyCheckRequest": {
      "file": "api\\endpoints\\nova\\policy.py",
      "kind": "Class",
      "name": "PolicyCheckRequest"
    },
    "api\\endpoints\\nova\\winner.py::_stamp_cost": {
      "file": "api\\endpoints\\nova\\winner.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\nova\\winner.py::SubmitRequest": {
      "file": "api\\endpoints\\nova\\winner.py",
      "kind": "Class",
      "name": "SubmitRequest"
    },
    "api\\endpoints\\nova\\hyper.py::_stamp_cost": {
      "file": "api\\endpoints\\nova\\hyper.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\endpoints\\nova\\hyper.py::HyperRunResult": {
      "file": "api\\endpoints\\nova\\hyper.py",
      "kind": "Class",
      "name": "HyperRunResult"
    },
    "api\\middleware\\telemetry.py::_stamp_cost": {
      "file": "api\\middleware\\telemetry.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api\\middleware\\telemetry.py::install": {
      "file": "api\\middleware\\telemetry.py",
      "kind": "Function",
      "name": "install"
    },
    "core\\llm\\embeddings_gemini.py::_is_debug": {
      "file": "core\\llm\\embeddings_gemini.py",
      "kind": "Function",
      "name": "_is_debug"
    },
    "core\\llm\\embeddings_gemini.py::_dbg_print": {
      "file": "core\\llm\\embeddings_gemini.py",
      "kind": "Function",
      "name": "_dbg_print"
    },
    "core\\llm\\embeddings_gemini.py::_truncate": {
      "file": "core\\llm\\embeddings_gemini.py",
      "kind": "Function",
      "name": "_truncate"
    },
    "core\\llm\\embeddings_gemini.py::_validate_dims": {
      "file": "core\\llm\\embeddings_gemini.py",
      "kind": "Function",
      "name": "_validate_dims"
    },
    "core\\llm\\embeddings_gemini.py::_ensure_list": {
      "file": "core\\llm\\embeddings_gemini.py",
      "kind": "Function",
      "name": "_ensure_list"
    },
    "core\\llm\\embeddings_gemini.py::_validate_text": {
      "file": "core\\llm\\embeddings_gemini.py",
      "kind": "Function",
      "name": "_validate_text"
    },
    "core\\llm\\embeddings_gemini.py::_embed_sync_call": {
      "file": "core\\llm\\embeddings_gemini.py",
      "kind": "Function",
      "name": "_embed_sync_call"
    },
    "core\\llm\\embeddings_gemini.py::_sync": {
      "file": "core\\llm\\embeddings_gemini.py",
      "kind": "Function",
      "name": "_sync"
    },
    "core\\llm\\gemini_cache.py::_require": {
      "file": "core\\llm\\gemini_cache.py",
      "kind": "Function",
      "name": "_require"
    },
    "core\\llm\\gemini_cache.py::_extract_system_instruction": {
      "file": "core\\llm\\gemini_cache.py",
      "kind": "Function",
      "name": "_extract_system_instruction"
    },
    "core\\llm\\gemini_cache.py::_call": {
      "file": "core\\llm\\gemini_cache.py",
      "kind": "Function",
      "name": "_call"
    },
    "core\\llm\\env_bootstrap.py::_load": {
      "file": "core\\llm\\env_bootstrap.py",
      "kind": "Function",
      "name": "_load"
    },
    "core\\llm\\formatters.py::ChatMessage": {
      "file": "core\\llm\\formatters.py",
      "kind": "Class",
      "name": "ChatMessage"
    },
    "core\\llm\\formatters.py::_normalize_provider": {
      "file": "core\\llm\\formatters.py",
      "kind": "Function",
      "name": "_normalize_provider"
    },
    "core\\llm\\formatters.py::_sanitize_messages": {
      "file": "core\\llm\\formatters.py",
      "kind": "Function",
      "name": "_sanitize_messages"
    },
    "core\\llm\\formatters.py::_split_system": {
      "file": "core\\llm\\formatters.py",
      "kind": "Function",
      "name": "_split_system"
    },
    "core\\llm\\formatters.py::_to_openai_tools": {
      "file": "core\\llm\\formatters.py",
      "kind": "Function",
      "name": "_to_openai_tools"
    },
    "core\\llm\\formatters.py::_to_anthropic_tools": {
      "file": "core\\llm\\formatters.py",
      "kind": "Function",
      "name": "_to_anthropic_tools"
    },
    "core\\llm\\formatters.py::_to_gemini_tools": {
      "file": "core\\llm\\formatters.py",
      "kind": "Function",
      "name": "_to_gemini_tools"
    },
    "core\\llm\\formatters.py::_map_tool_choice": {
      "file": "core\\llm\\formatters.py",
      "kind": "Function",
      "name": "_map_tool_choice"
    },
    "core\\llm\\formatters.py::_json_mode_for_provider": {
      "file": "core\\llm\\formatters.py",
      "kind": "Function",
      "name": "_json_mode_for_provider"
    },
    "core\\llm\\formatters.py::format_messages_for_provider": {
      "file": "core\\llm\\formatters.py",
      "kind": "Function",
      "name": "format_messages_for_provider"
    },
    "core\\llm\\formatters.py::_to_gemini_contents": {
      "file": "core\\llm\\formatters.py",
      "kind": "Function",
      "name": "_to_gemini_contents"
    },
    "core\\llm\\call_llm.py::_try_parse_json": {
      "file": "core\\llm\\call_llm.py",
      "kind": "Function",
      "name": "_try_parse_json"
    },
    "core\\llm\\call_llm.py::_get_provider_from_model_name": {
      "file": "core\\llm\\call_llm.py",
      "kind": "Function",
      "name": "_get_provider_from_model_name"
    },
    "core\\llm\\utils.py::filter_kwargs": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "filter_kwargs"
    },
    "core\\llm\\utils.py::normalize_messages": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "normalize_messages"
    },
    "core\\llm\\utils.py::normalise_messages": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "normalise_messages"
    },
    "core\\llm\\utils.py::combine_with_system": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "combine_with_system"
    },
    "core\\llm\\utils.py::clamp": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "clamp"
    },
    "core\\llm\\utils.py::coerce_str": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "coerce_str"
    },
    "core\\llm\\utils.py::redact_secrets": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "redact_secrets"
    },
    "core\\llm\\utils.py::strip_code_fences": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "strip_code_fences"
    },
    "core\\llm\\utils.py::extract_json_block": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "extract_json_block"
    },
    "core\\llm\\utils.py::detect_json": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "detect_json"
    },
    "core\\llm\\utils.py::safe_truncate": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "safe_truncate"
    },
    "core\\llm\\utils.py::estimate_tokens": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "estimate_tokens"
    },
    "core\\llm\\utils.py::toxicity_hint": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "toxicity_hint"
    },
    "core\\llm\\utils.py::length_fit_score": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "length_fit_score"
    },
    "core\\llm\\utils.py::baseline_metrics": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "baseline_metrics"
    },
    "core\\llm\\utils.py::first_system_message": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "first_system_message"
    },
    "core\\llm\\utils.py::split_system_and_chat": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "split_system_and_chat"
    },
    "core\\llm\\utils.py::dedupe_system_message": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "dedupe_system_message"
    },
    "core\\llm\\utils.py::messages_checksum": {
      "file": "core\\llm\\utils.py",
      "kind": "Function",
      "name": "messages_checksum"
    },
    "core\\llm\\bus.py::EventBus": {
      "file": "core\\llm\\bus.py",
      "kind": "Class",
      "name": "EventBus"
    },
    "core\\llm\\bus.py::EventBus::__new__": {
      "file": "core\\llm\\bus.py",
      "kind": "Method",
      "name": "__new__"
    },
    "core\\llm\\bus.py::EventBus::subscribe": {
      "file": "core\\llm\\bus.py",
      "kind": "Method",
      "name": "subscribe"
    },
    "core\\llm\\school_bus.py::LLMService": {
      "file": "core\\llm\\school_bus.py",
      "kind": "Class",
      "name": "LLMService"
    },
    "core\\llm\\metrics.py::_coerce_float": {
      "file": "core\\llm\\metrics.py",
      "kind": "Function",
      "name": "_coerce_float"
    },
    "core\\llm\\metrics.py::_tokens_from_openai": {
      "file": "core\\llm\\metrics.py",
      "kind": "Function",
      "name": "_tokens_from_openai"
    },
    "core\\llm\\metrics.py::_tokens_from_anthropic": {
      "file": "core\\llm\\metrics.py",
      "kind": "Function",
      "name": "_tokens_from_anthropic"
    },
    "core\\llm\\metrics.py::extract_usage_tokens": {
      "file": "core\\llm\\metrics.py",
      "kind": "Function",
      "name": "extract_usage_tokens"
    },
    "core\\llm\\metrics.py::build_telemetry": {
      "file": "core\\llm\\metrics.py",
      "kind": "Function",
      "name": "build_telemetry"
    },
    "core\\utils\\paths.py::rel": {
      "file": "core\\utils\\paths.py",
      "kind": "Function",
      "name": "rel"
    },
    "core\\utils\\text.py::extract_body_from_node": {
      "file": "core\\utils\\text.py",
      "kind": "Function",
      "name": "extract_body_from_node"
    },
    "core\\utils\\text.py::clamp": {
      "file": "core\\utils\\text.py",
      "kind": "Function",
      "name": "clamp"
    },
    "core\\utils\\text.py::redact_secrets": {
      "file": "core\\utils\\text.py",
      "kind": "Function",
      "name": "redact_secrets"
    },
    "core\\utils\\text.py::safe_truncate": {
      "file": "core\\utils\\text.py",
      "kind": "Function",
      "name": "safe_truncate"
    },
    "core\\utils\\text.py::toxicity_hint": {
      "file": "core\\utils\\text.py",
      "kind": "Function",
      "name": "toxicity_hint"
    },
    "core\\utils\\text.py::baseline_metrics": {
      "file": "core\\utils\\text.py",
      "kind": "Function",
      "name": "baseline_metrics"
    },
    "core\\utils\\time.py::now": {
      "file": "core\\utils\\time.py",
      "kind": "Function",
      "name": "now"
    },
    "core\\utils\\time.py::now_iso": {
      "file": "core\\utils\\time.py",
      "kind": "Function",
      "name": "now_iso"
    },
    "core\\utils\\net_api.py::_dbg": {
      "file": "core\\utils\\net_api.py",
      "kind": "Function",
      "name": "_dbg"
    },
    "core\\utils\\net_api.py::_fmt": {
      "file": "core\\utils\\net_api.py",
      "kind": "Function",
      "name": "_fmt"
    },
    "core\\utils\\net_api.py::_derive_key_from_path": {
      "file": "core\\utils\\net_api.py",
      "kind": "Function",
      "name": "_derive_key_from_path"
    },
    "core\\utils\\net_api.py::_best_suffix_match": {
      "file": "core\\utils\\net_api.py",
      "kind": "Function",
      "name": "_best_suffix_match"
    },
    "core\\utils\\net_api.py::_refresh_map_sync_once": {
      "file": "core\\utils\\net_api.py",
      "kind": "Function",
      "name": "_refresh_map_sync_once"
    },
    "core\\utils\\net_api.py::_EndpointMeta": {
      "file": "core\\utils\\net_api.py",
      "kind": "Class",
      "name": "_EndpointMeta"
    },
    "core\\utils\\net_api.py::_EndpointMeta::__getattr__": {
      "file": "core\\utils\\net_api.py",
      "kind": "Method",
      "name": "__getattr__"
    },
    "core\\utils\\net_api.py::ENDPOINTS": {
      "file": "core\\utils\\net_api.py",
      "kind": "Class",
      "name": "ENDPOINTS"
    },
    "core\\utils\\net_api.py::ENDPOINTS::QORA_SCHEMA_UID": {
      "file": "core\\utils\\net_api.py",
      "kind": "Method",
      "name": "QORA_SCHEMA_UID"
    },
    "core\\utils\\net_api.py::ENDPOINTS::SYNK_FLAG_GET": {
      "file": "core\\utils\\net_api.py",
      "kind": "Method",
      "name": "SYNK_FLAG_GET"
    },
    "core\\utils\\net_api.py::endpoints": {
      "file": "core\\utils\\net_api.py",
      "kind": "Class",
      "name": "endpoints"
    },
    "core\\utils\\net_api.py::endpoints::path": {
      "file": "core\\utils\\net_api.py",
      "kind": "Method",
      "name": "path"
    },
    "core\\utils\\net_api.py::endpoints_snapshot": {
      "file": "core\\utils\\net_api.py",
      "kind": "Function",
      "name": "endpoints_snapshot"
    },
    "core\\utils\\net_api.py::endpoints_report_str": {
      "file": "core\\utils\\net_api.py",
      "kind": "Function",
      "name": "endpoints_report_str"
    },
    "core\\utils\\safe_eval.py::safe_eval": {
      "file": "core\\utils\\safe_eval.py",
      "kind": "Function",
      "name": "safe_eval"
    },
    "core\\utils\\jsonsafe.py::_to_jsonable": {
      "file": "core\\utils\\jsonsafe.py",
      "kind": "Function",
      "name": "_to_jsonable"
    },
    "core\\utils\\jsonsafe.py::to_jsonable": {
      "file": "core\\utils\\jsonsafe.py",
      "kind": "Function",
      "name": "to_jsonable"
    },
    "core\\utils\\jsonsafe.py::dumps_json_safe": {
      "file": "core\\utils\\jsonsafe.py",
      "kind": "Function",
      "name": "dumps_json_safe"
    },
    "core\\utils\\eos_tool.py::eos_tool": {
      "file": "core\\utils\\eos_tool.py",
      "kind": "Function",
      "name": "eos_tool"
    },
    "core\\utils\\eos_tool.py::deco": {
      "file": "core\\utils\\eos_tool.py",
      "kind": "Function",
      "name": "deco"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Class",
      "name": "LiveEndpointRegistry"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::__init__": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::snapshot_aliases": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "snapshot_aliases"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::snapshot_routes": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "snapshot_routes"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::path": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "path"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::route": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "route"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::exists": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "exists"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::synonyms": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "synonyms"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_resolve_alias": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "_resolve_alias"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "_normalize"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_apply_synonyms": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "_apply_synonyms"
    },
    "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_alias_from_path": {
      "file": "core\\utils\\net_api_registry.py",
      "kind": "Method",
      "name": "_alias_from_path"
    },
    "core\\utils\\bus_utils.py::subscribe": {
      "file": "core\\utils\\bus_utils.py",
      "kind": "Function",
      "name": "subscribe"
    },
    "core\\utils\\embedcsv\\embed_all.py::find_salience_csvs": {
      "file": "core\\utils\\embedcsv\\embed_all.py",
      "kind": "Function",
      "name": "find_salience_csvs"
    },
    "core\\utils\\embedcsv\\embed_all.py::main": {
      "file": "core\\utils\\embedcsv\\embed_all.py",
      "kind": "Function",
      "name": "main"
    },
    "core\\utils\\embedcsv\\upload_all.py::parse_embedding": {
      "file": "core\\utils\\embedcsv\\upload_all.py",
      "kind": "Function",
      "name": "parse_embedding"
    },
    "core\\utils\\vector_ops\\cluster.py::cluster_vectors": {
      "file": "core\\utils\\vector_ops\\cluster.py",
      "kind": "Function",
      "name": "cluster_vectors"
    },
    "core\\utils\\vector_ops\\dimreduce.py::reduce_vectors": {
      "file": "core\\utils\\vector_ops\\dimreduce.py",
      "kind": "Function",
      "name": "reduce_vectors"
    },
    "core\\utils\\neo\\neo_driver.py::get_driver": {
      "file": "core\\utils\\neo\\neo_driver.py",
      "kind": "Function",
      "name": "get_driver"
    },
    "core\\utils\\neo\\neo_safe.py::_is_neo_driver": {
      "file": "core\\utils\\neo\\neo_safe.py",
      "kind": "Function",
      "name": "_is_neo_driver"
    },
    "core\\utils\\neo\\neo_safe.py::coalesce_driver": {
      "file": "core\\utils\\neo\\neo_safe.py",
      "kind": "Function",
      "name": "coalesce_driver"
    },
    "core\\utils\\cicd\\listener.py::_proposal_payload": {
      "file": "core\\utils\\cicd\\listener.py",
      "kind": "Function",
      "name": "_proposal_payload"
    },
    "core\\utils\\cicd\\listener.py::_proposal_id": {
      "file": "core\\utils\\cicd\\listener.py",
      "kind": "Function",
      "name": "_proposal_id"
    },
    "core\\utils\\cicd\\listener.py::CICDListener": {
      "file": "core\\utils\\cicd\\listener.py",
      "kind": "Class",
      "name": "CICDListener"
    },
    "core\\utils\\cicd\\listener.py::CICDListener::__new__": {
      "file": "core\\utils\\cicd\\listener.py",
      "kind": "Method",
      "name": "__new__"
    },
    "core\\utils\\cicd\\listener.py::CICDListener::__init__": {
      "file": "core\\utils\\cicd\\listener.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core\\prompting\\orchestrator.py::PolicyHint": {
      "file": "core\\prompting\\orchestrator.py",
      "kind": "Class",
      "name": "PolicyHint"
    },
    "core\\prompting\\orchestrator.py::OrchestratorResponse": {
      "file": "core\\prompting\\orchestrator.py",
      "kind": "Class",
      "name": "OrchestratorResponse"
    },
    "core\\prompting\\orchestrator.py::_resolve_spec": {
      "file": "core\\prompting\\orchestrator.py",
      "kind": "Function",
      "name": "_resolve_spec"
    },
    "core\\prompting\\spec.py::Outputs": {
      "file": "core\\prompting\\spec.py",
      "kind": "Class",
      "name": "Outputs"
    },
    "core\\prompting\\spec.py::Outputs::_check_schema_source": {
      "file": "core\\prompting\\spec.py",
      "kind": "Method",
      "name": "_check_schema_source"
    },
    "core\\prompting\\spec.py::BudgetPolicy": {
      "file": "core\\prompting\\spec.py",
      "kind": "Class",
      "name": "BudgetPolicy"
    },
    "core\\prompting\\spec.py::IdentityBlock": {
      "file": "core\\prompting\\spec.py",
      "kind": "Class",
      "name": "IdentityBlock"
    },
    "core\\prompting\\spec.py::SafetySpec": {
      "file": "core\\prompting\\spec.py",
      "kind": "Class",
      "name": "SafetySpec"
    },
    "core\\prompting\\spec.py::PromptSpec": {
      "file": "core\\prompting\\spec.py",
      "kind": "Class",
      "name": "PromptSpec"
    },
    "core\\prompting\\spec.py::PromptSpec::_nonempty": {
      "file": "core\\prompting\\spec.py",
      "kind": "Method",
      "name": "_nonempty"
    },
    "core\\prompting\\lenses.py::_safe": {
      "file": "core\\prompting\\lenses.py",
      "kind": "Function",
      "name": "_safe"
    },
    "core\\prompting\\lenses.py::cap_list": {
      "file": "core\\prompting\\lenses.py",
      "kind": "Function",
      "name": "cap_list"
    },
    "core\\prompting\\lenses.py::cap_chars": {
      "file": "core\\prompting\\lenses.py",
      "kind": "Function",
      "name": "cap_chars"
    },
    "core\\prompting\\lenses.py::estimate_tokens": {
      "file": "core\\prompting\\lenses.py",
      "kind": "Function",
      "name": "estimate_tokens"
    },
    "core\\prompting\\validators.py::SchemaValidationError": {
      "file": "core\\prompting\\validators.py",
      "kind": "Class",
      "name": "SchemaValidationError"
    },
    "core\\prompting\\validators.py::load_schema": {
      "file": "core\\prompting\\validators.py",
      "kind": "Function",
      "name": "load_schema"
    },
    "core\\prompting\\validators.py::validate_json": {
      "file": "core\\prompting\\validators.py",
      "kind": "Function",
      "name": "validate_json"
    },
    "core\\prompting\\runtime.py::dumps_json_safe": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "dumps_json_safe"
    },
    "core\\prompting\\runtime.py::conv": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "conv"
    },
    "core\\prompting\\runtime.py::ProviderOverrides": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Class",
      "name": "ProviderOverrides"
    },
    "core\\prompting\\runtime.py::RenderedPrompt": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Class",
      "name": "RenderedPrompt"
    },
    "core\\prompting\\runtime.py::LLMResponse": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Class",
      "name": "LLMResponse"
    },
    "core\\prompting\\runtime.py::_endpoint": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "_endpoint"
    },
    "core\\prompting\\runtime.py::_builtin_partials": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "_builtin_partials"
    },
    "core\\prompting\\runtime.py::_maybe_locate_templates_yaml": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "_maybe_locate_templates_yaml"
    },
    "core\\prompting\\runtime.py::_load_templates_yaml": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "_load_templates_yaml"
    },
    "core\\prompting\\runtime.py::_build_env": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "_build_env"
    },
    "core\\prompting\\runtime.py::DictLoader": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Class",
      "name": "DictLoader"
    },
    "core\\prompting\\runtime.py::DictLoader::get_source": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Method",
      "name": "get_source"
    },
    "core\\prompting\\runtime.py::_ensure_jinja": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "_ensure_jinja"
    },
    "core\\prompting\\runtime.py::_maybe_refresh_templates": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "_maybe_refresh_templates"
    },
    "core\\prompting\\runtime.py::_template_hash": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "_template_hash"
    },
    "core\\prompting\\runtime.py::_render_tpl": {
      "file": "core\\prompting\\runtime.py",
      "kind": "Function",
      "name": "_render_tpl"
    },
    "core\\prompting\\cli.py::_print": {
      "file": "core\\prompting\\cli.py",
      "kind": "Function",
      "name": "_print"
    },
    "core\\prompting\\cli.py::main": {
      "file": "core\\prompting\\cli.py",
      "kind": "Function",
      "name": "main"
    },
    "core\\prompting\\registry.py::_SpecEntry": {
      "file": "core\\prompting\\registry.py",
      "kind": "Class",
      "name": "_SpecEntry"
    },
    "core\\prompting\\registry.py::_SpecEntry::__init__": {
      "file": "core\\prompting\\registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core\\prompting\\registry.py::PromptSpecRegistry": {
      "file": "core\\prompting\\registry.py",
      "kind": "Class",
      "name": "PromptSpecRegistry"
    },
    "core\\prompting\\registry.py::PromptSpecRegistry::__init__": {
      "file": "core\\prompting\\registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core\\prompting\\registry.py::PromptSpecRegistry::_ensure_dir": {
      "file": "core\\prompting\\registry.py",
      "kind": "Method",
      "name": "_ensure_dir"
    },
    "core\\prompting\\registry.py::PromptSpecRegistry::_iter_spec_files": {
      "file": "core\\prompting\\registry.py",
      "kind": "Method",
      "name": "_iter_spec_files"
    },
    "core\\prompting\\registry.py::PromptSpecRegistry::_load_file": {
      "file": "core\\prompting\\registry.py",
      "kind": "Method",
      "name": "_load_file"
    },
    "core\\prompting\\registry.py::PromptSpecRegistry::rescan": {
      "file": "core\\prompting\\registry.py",
      "kind": "Method",
      "name": "rescan"
    },
    "core\\prompting\\registry.py::PromptSpecRegistry::get_by_id": {
      "file": "core\\prompting\\registry.py",
      "kind": "Method",
      "name": "get_by_id"
    },
    "core\\prompting\\registry.py::PromptSpecRegistry::get_by_scope": {
      "file": "core\\prompting\\registry.py",
      "kind": "Method",
      "name": "get_by_scope"
    },
    "core\\prompting\\registry.py::PromptSpecRegistry::provenance": {
      "file": "core\\prompting\\registry.py",
      "kind": "Method",
      "name": "provenance"
    },
    "core\\prompting\\registry.py::get_registry": {
      "file": "core\\prompting\\registry.py",
      "kind": "Function",
      "name": "get_registry"
    },
    "core\\metrics\\registry.py::Counter": {
      "file": "core\\metrics\\registry.py",
      "kind": "Class",
      "name": "Counter"
    },
    "core\\metrics\\registry.py::Counter::inc": {
      "file": "core\\metrics\\registry.py",
      "kind": "Method",
      "name": "inc"
    },
    "core\\metrics\\registry.py::Gauge": {
      "file": "core\\metrics\\registry.py",
      "kind": "Class",
      "name": "Gauge"
    },
    "core\\metrics\\registry.py::Gauge::set": {
      "file": "core\\metrics\\registry.py",
      "kind": "Method",
      "name": "set"
    },
    "core\\metrics\\registry.py::MetricsRegistry": {
      "file": "core\\metrics\\registry.py",
      "kind": "Class",
      "name": "MetricsRegistry"
    },
    "core\\metrics\\registry.py::MetricsRegistry::counter": {
      "file": "core\\metrics\\registry.py",
      "kind": "Method",
      "name": "counter"
    },
    "core\\metrics\\registry.py::MetricsRegistry::gauge": {
      "file": "core\\metrics\\registry.py",
      "kind": "Method",
      "name": "gauge"
    },
    "core\\services\\synapse.py::_jsonable": {
      "file": "core\\services\\synapse.py",
      "kind": "Function",
      "name": "_jsonable"
    },
    "core\\services\\synapse.py::_endpoint": {
      "file": "core\\services\\synapse.py",
      "kind": "Function",
      "name": "_endpoint"
    },
    "core\\services\\synapse.py::SynapseService": {
      "file": "core\\services\\synapse.py",
      "kind": "Class",
      "name": "SynapseService"
    },
    "core\\services\\equor.py::SynapseService": {
      "file": "core\\services\\equor.py",
      "kind": "Class",
      "name": "SynapseService"
    },
    "core\\telemetry\\schemas.py::MetricDatum": {
      "file": "core\\telemetry\\schemas.py",
      "kind": "Class",
      "name": "MetricDatum"
    },
    "core\\telemetry\\schemas.py::MetricBatch": {
      "file": "core\\telemetry\\schemas.py",
      "kind": "Class",
      "name": "MetricBatch"
    },
    "core\\telemetry\\context.py::TelemetryContext": {
      "file": "core\\telemetry\\context.py",
      "kind": "Class",
      "name": "TelemetryContext"
    },
    "core\\telemetry\\context.py::TelemetryContext::add": {
      "file": "core\\telemetry\\context.py",
      "kind": "Method",
      "name": "add"
    },
    "core\\telemetry\\context.py::TelemetryContext::set_correlation": {
      "file": "core\\telemetry\\context.py",
      "kind": "Method",
      "name": "set_correlation"
    },
    "core\\telemetry\\context.py::TelemetryContext::snapshot": {
      "file": "core\\telemetry\\context.py",
      "kind": "Method",
      "name": "snapshot"
    },
    "core\\telemetry\\context.py::telemetry_context": {
      "file": "core\\telemetry\\context.py",
      "kind": "Class",
      "name": "telemetry_context"
    },
    "core\\telemetry\\context.py::telemetry_context::__init__": {
      "file": "core\\telemetry\\context.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core\\telemetry\\context.py::telemetry_context::__enter__": {
      "file": "core\\telemetry\\context.py",
      "kind": "Method",
      "name": "__enter__"
    },
    "core\\telemetry\\context.py::telemetry_context::__exit__": {
      "file": "core\\telemetry\\context.py",
      "kind": "Method",
      "name": "__exit__"
    },
    "core\\telemetry\\context.py::current": {
      "file": "core\\telemetry\\context.py",
      "kind": "Function",
      "name": "current"
    },
    "core\\telemetry\\harvest.py::_f": {
      "file": "core\\telemetry\\harvest.py",
      "kind": "Function",
      "name": "_f"
    },
    "core\\telemetry\\harvest.py::_i": {
      "file": "core\\telemetry\\harvest.py",
      "kind": "Function",
      "name": "_i"
    },
    "core\\telemetry\\harvest.py::_s": {
      "file": "core\\telemetry\\harvest.py",
      "kind": "Function",
      "name": "_s"
    },
    "core\\telemetry\\harvest.py::harvest_llm_headers": {
      "file": "core\\telemetry\\harvest.py",
      "kind": "Function",
      "name": "harvest_llm_headers"
    },
    "core\\telemetry\\harvest.py::harvest_nova_headers": {
      "file": "core\\telemetry\\harvest.py",
      "kind": "Function",
      "name": "harvest_nova_headers"
    },
    "core\\telemetry\\harvest.py::harvest_common": {
      "file": "core\\telemetry\\harvest.py",
      "kind": "Function",
      "name": "harvest_common"
    },
    "core\\telemetry\\harvest.py::merge_metrics": {
      "file": "core\\telemetry\\harvest.py",
      "kind": "Function",
      "name": "merge_metrics"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_Known": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Class",
      "name": "_Known"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_Known::__init__": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Method",
      "name": "__init__"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_String": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Class",
      "name": "_String"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_String::__init__": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Method",
      "name": "__init__"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_array_keys": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_array_keys"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_object_keys": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_object_keys"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_is_array": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_is_array"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_is_object": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_is_object"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_is_string": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_is_string"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_index": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_index"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_loop": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_loop"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_ref": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_ref"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_relate": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_relate"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_transform": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_transform"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_wrap": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "_wrap"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "parse"
    },
    "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::stringify": {
      "file": "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py",
      "kind": "Function",
      "name": "stringify"
    },
    "launch\\upload_embed.py::_is_neo_driver": {
      "file": "launch\\upload_embed.py",
      "kind": "Function",
      "name": "_is_neo_driver"
    },
    "launch\\upload_embed.py::coalesce_driver": {
      "file": "launch\\upload_embed.py",
      "kind": "Function",
      "name": "coalesce_driver"
    },
    "launch\\upload_embed.py::tool": {
      "file": "launch\\upload_embed.py",
      "kind": "Function",
      "name": "tool"
    },
    "launch\\upload_embed.py::decorator": {
      "file": "launch\\upload_embed.py",
      "kind": "Function",
      "name": "decorator"
    },
    "launch\\upload_embed.py::get_caller_name": {
      "file": "launch\\upload_embed.py",
      "kind": "Function",
      "name": "get_caller_name"
    },
    "launch\\upload_embed.py::safe_neo_value": {
      "file": "launch\\upload_embed.py",
      "kind": "Function",
      "name": "safe_neo_value"
    },
    "launch\\upload_embed.py::_safe_neo_value": {
      "file": "launch\\upload_embed.py",
      "kind": "Function",
      "name": "_safe_neo_value"
    },
    "launch\\upload_embed.py::tool_wrapper": {
      "file": "launch\\upload_embed.py",
      "kind": "Function",
      "name": "tool_wrapper"
    },
    "launch\\upload_embed.py::sync_wrapper": {
      "file": "launch\\upload_embed.py",
      "kind": "Function",
      "name": "sync_wrapper"
    },
    "scripts\\search_vectors.py::_prop_get": {
      "file": "scripts\\search_vectors.py",
      "kind": "Function",
      "name": "_prop_get"
    },
    "scripts\\search_vectors.py::format_node": {
      "file": "scripts\\search_vectors.py",
      "kind": "Function",
      "name": "format_node"
    },
    "scripts\\upload_embed.py::Row": {
      "file": "scripts\\upload_embed.py",
      "kind": "Class",
      "name": "Row"
    },
    "scripts\\upload_embed.py::infer_scorer_from_filename": {
      "file": "scripts\\upload_embed.py",
      "kind": "Function",
      "name": "infer_scorer_from_filename"
    },
    "scripts\\upload_embed.py::parse_tags": {
      "file": "scripts\\upload_embed.py",
      "kind": "Function",
      "name": "parse_tags"
    },
    "scripts\\upload_embed.py::read_rows_from_csv": {
      "file": "scripts\\upload_embed.py",
      "kind": "Function",
      "name": "read_rows_from_csv"
    },
    "scripts\\upload_embed.py::stable_uuid": {
      "file": "scripts\\upload_embed.py",
      "kind": "Function",
      "name": "stable_uuid"
    },
    "scripts\\upload_embed.py::dedupe_rows": {
      "file": "scripts\\upload_embed.py",
      "kind": "Function",
      "name": "dedupe_rows"
    },
    "scripts\\upload_embed.py::write_merged_csv": {
      "file": "scripts\\upload_embed.py",
      "kind": "Function",
      "name": "write_merged_csv"
    },
    "scripts\\cite_clean.py::strip_cites_token_only": {
      "file": "scripts\\cite_clean.py",
      "kind": "Function",
      "name": "strip_cites_token_only"
    },
    "scripts\\cite_clean.py::process_file": {
      "file": "scripts\\cite_clean.py",
      "kind": "Function",
      "name": "process_file"
    },
    "scripts\\cite_clean.py::main": {
      "file": "scripts\\cite_clean.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts\\eos_replay.py::_find_files_for_decision": {
      "file": "scripts\\eos_replay.py",
      "kind": "Function",
      "name": "_find_files_for_decision"
    },
    "scripts\\eos_replay.py::_load_by_barcode": {
      "file": "scripts\\eos_replay.py",
      "kind": "Function",
      "name": "_load_by_barcode"
    },
    "scripts\\eos_replay.py::main": {
      "file": "scripts\\eos_replay.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts\\get_defs.py::read_text": {
      "file": "scripts\\get_defs.py",
      "kind": "Function",
      "name": "read_text"
    },
    "scripts\\get_defs.py::call_name": {
      "file": "scripts\\get_defs.py",
      "kind": "Function",
      "name": "call_name"
    },
    "scripts\\get_defs.py::find_router_app_lines": {
      "file": "scripts\\get_defs.py",
      "kind": "Function",
      "name": "find_router_app_lines"
    },
    "scripts\\get_defs.py::gather_defs_from_file": {
      "file": "scripts\\get_defs.py",
      "kind": "Function",
      "name": "gather_defs_from_file"
    },
    "scripts\\get_defs.py::iter_python_files": {
      "file": "scripts\\get_defs.py",
      "kind": "Function",
      "name": "iter_python_files"
    },
    "scripts\\get_defs.py::collate": {
      "file": "scripts\\get_defs.py",
      "kind": "Function",
      "name": "collate"
    },
    "scripts\\get_defs.py::main": {
      "file": "scripts\\get_defs.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts\\get_gates.py::find_gate_keys": {
      "file": "scripts\\get_gates.py",
      "kind": "Function",
      "name": "find_gate_keys"
    },
    "scripts\\get_gates.py::main": {
      "file": "scripts\\get_gates.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts\\stray_prompts.py::scan_file": {
      "file": "scripts\\stray_prompts.py",
      "kind": "Function",
      "name": "scan_file"
    },
    "scripts\\stray_prompts.py::main": {
      "file": "scripts\\stray_prompts.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts\\schema_collate.py::now_iso": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "now_iso"
    },
    "scripts\\schema_collate.py::read_text": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "read_text"
    },
    "scripts\\schema_collate.py::expr_to_str": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "expr_to_str"
    },
    "scripts\\schema_collate.py::const_value": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "const_value"
    },
    "scripts\\schema_collate.py::hash_file": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "hash_file"
    },
    "scripts\\schema_collate.py::is_pydantic_base": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "is_pydantic_base"
    },
    "scripts\\schema_collate.py::is_dataclass": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "is_dataclass"
    },
    "scripts\\schema_collate.py::collect_class_fields": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "collect_class_fields"
    },
    "scripts\\schema_collate.py::arg_to_dict": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "arg_to_dict"
    },
    "scripts\\schema_collate.py::signature_of": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "signature_of"
    },
    "scripts\\schema_collate.py::decorator_names": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "decorator_names"
    },
    "scripts\\schema_collate.py::parse_endpoint_decorator": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "parse_endpoint_decorator"
    },
    "scripts\\schema_collate.py::FunctionInfo": {
      "file": "scripts\\schema_collate.py",
      "kind": "Class",
      "name": "FunctionInfo"
    },
    "scripts\\schema_collate.py::ClassInfo": {
      "file": "scripts\\schema_collate.py",
      "kind": "Class",
      "name": "ClassInfo"
    },
    "scripts\\schema_collate.py::ModuleInfo": {
      "file": "scripts\\schema_collate.py",
      "kind": "Class",
      "name": "ModuleInfo"
    },
    "scripts\\schema_collate.py::PyModuleScanner": {
      "file": "scripts\\schema_collate.py",
      "kind": "Class",
      "name": "PyModuleScanner"
    },
    "scripts\\schema_collate.py::PyModuleScanner::__init__": {
      "file": "scripts\\schema_collate.py",
      "kind": "Method",
      "name": "__init__"
    },
    "scripts\\schema_collate.py::PyModuleScanner::visit_FunctionDef": {
      "file": "scripts\\schema_collate.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "scripts\\schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef": {
      "file": "scripts\\schema_collate.py",
      "kind": "Method",
      "name": "visit_AsyncFunctionDef"
    },
    "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef": {
      "file": "scripts\\schema_collate.py",
      "kind": "Method",
      "name": "visit_ClassDef"
    },
    "scripts\\schema_collate.py::scan_python_file": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "scan_python_file"
    },
    "scripts\\schema_collate.py::walk_files": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "walk_files"
    },
    "scripts\\schema_collate.py::build_json_report": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "build_json_report"
    },
    "scripts\\schema_collate.py::md_escape": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "md_escape"
    },
    "scripts\\schema_collate.py::build_markdown": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "build_markdown"
    },
    "scripts\\schema_collate.py::build_state": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "build_state"
    },
    "scripts\\schema_collate.py::diff_state": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "diff_state"
    },
    "scripts\\schema_collate.py::run_scan": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "run_scan"
    },
    "scripts\\schema_collate.py::main": {
      "file": "scripts\\schema_collate.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts\\placeholder_find.py::is_texty": {
      "file": "scripts\\placeholder_find.py",
      "kind": "Function",
      "name": "is_texty"
    },
    "scripts\\placeholder_find.py::iter_files": {
      "file": "scripts\\placeholder_find.py",
      "kind": "Function",
      "name": "iter_files"
    },
    "scripts\\placeholder_find.py::read_text_safely": {
      "file": "scripts\\placeholder_find.py",
      "kind": "Function",
      "name": "read_text_safely"
    },
    "scripts\\placeholder_find.py::find_matches": {
      "file": "scripts\\placeholder_find.py",
      "kind": "Function",
      "name": "find_matches"
    },
    "scripts\\placeholder_find.py::scan": {
      "file": "scripts\\placeholder_find.py",
      "kind": "Function",
      "name": "scan"
    },
    "scripts\\placeholder_find.py::weight": {
      "file": "scripts\\placeholder_find.py",
      "kind": "Function",
      "name": "weight"
    },
    "scripts\\placeholder_find.py::write_report": {
      "file": "scripts\\placeholder_find.py",
      "kind": "Function",
      "name": "write_report"
    },
    "scripts\\placeholder_find.py::main": {
      "file": "scripts\\placeholder_find.py",
      "kind": "Function",
      "name": "main"
    },
    "workers\\test_selector.py::StubIntent": {
      "file": "workers\\test_selector.py",
      "kind": "Class",
      "name": "StubIntent"
    },
    "workers\\test_selector.py::StubIntent::__init__": {
      "file": "workers\\test_selector.py",
      "kind": "Method",
      "name": "__init__"
    },
    "workers\\test_selector.py::_bid": {
      "file": "workers\\test_selector.py",
      "kind": "Function",
      "name": "_bid"
    },
    "workers\\test_selector.py::test_selector_only_no_allocation": {
      "file": "workers\\test_selector.py",
      "kind": "Function",
      "name": "test_selector_only_no_allocation"
    },
    "workers\\test_selector.py::test_pareto_knee_respects_budget": {
      "file": "workers\\test_selector.py",
      "kind": "Function",
      "name": "test_pareto_knee_respects_budget"
    },
    "workspace\\hello\\tests\\test_sum2.py::test_sum2": {
      "file": "workspace\\hello\\tests\\test_sum2.py",
      "kind": "Function",
      "name": "test_sum2"
    },
    "src\\simula\\config.py::GitSettings": {
      "file": "src\\simula\\config.py",
      "kind": "Class",
      "name": "GitSettings"
    },
    "src\\simula\\config.py::AppSettings": {
      "file": "src\\simula\\config.py",
      "kind": "Class",
      "name": "AppSettings"
    },
    "src\\simula\\config.py::_load_config_from_yaml": {
      "file": "src\\simula\\config.py",
      "kind": "Function",
      "name": "_load_config_from_yaml"
    },
    "src\\simula\\git_manager.py::GitError": {
      "file": "src\\simula\\git_manager.py",
      "kind": "Class",
      "name": "GitError"
    },
    "src\\simula\\git_manager.py::GitError::__init__": {
      "file": "src\\simula\\git_manager.py",
      "kind": "Method",
      "name": "__init__"
    },
    "src\\simula\\git_manager.py::GitError::__str__": {
      "file": "src\\simula\\git_manager.py",
      "kind": "Method",
      "name": "__str__"
    },
    "src\\simula\\git_manager.py::GitManager": {
      "file": "src\\simula\\git_manager.py",
      "kind": "Class",
      "name": "GitManager"
    },
    "src\\simula\\git_manager.py::GitManager::__init__": {
      "file": "src\\simula\\git_manager.py",
      "kind": "Method",
      "name": "__init__"
    },
    "src\\simula\\git_manager.py::GitManager::_run_command": {
      "file": "src\\simula\\git_manager.py",
      "kind": "Method",
      "name": "_run_command"
    },
    "src\\simula\\git_manager.py::GitManager::clone_or_pull": {
      "file": "src\\simula\\git_manager.py",
      "kind": "Method",
      "name": "clone_or_pull"
    },
    "src\\simula\\git_manager.py::GitManager::reset_workspace": {
      "file": "src\\simula\\git_manager.py",
      "kind": "Method",
      "name": "reset_workspace"
    },
    "src\\simula\\git_manager.py::GitManager::apply_patch": {
      "file": "src\\simula\\git_manager.py",
      "kind": "Method",
      "name": "apply_patch"
    },
    "src\\simula\\main.py::_configure_logging": {
      "file": "src\\simula\\main.py",
      "kind": "Function",
      "name": "_configure_logging"
    },
    "src\\simula\\main.py::_resolve_patch_path": {
      "file": "src\\simula\\main.py",
      "kind": "Function",
      "name": "_resolve_patch_path"
    },
    "src\\simula\\main.py::_parse_args": {
      "file": "src\\simula\\main.py",
      "kind": "Function",
      "name": "_parse_args"
    },
    "src\\simula\\main.py::main": {
      "file": "src\\simula\\main.py",
      "kind": "Function",
      "name": "main"
    },
    "src\\src\\simula_demo\\math_utils.py::add": {
      "file": "src\\src\\simula_demo\\math_utils.py",
      "kind": "Function",
      "name": "add"
    },
    "src\\src\\simula_demo\\math_utils.py::fib": {
      "file": "src\\src\\simula_demo\\math_utils.py",
      "kind": "Function",
      "name": "fib"
    },
    "DEcodiaOSsystemssimula\\simula\\common\\string_utils.py::reverse_string": {
      "file": "DEcodiaOSsystemssimula\\simula\\common\\string_utils.py",
      "kind": "Function",
      "name": "reverse_string"
    },
    "DEcodiaOSsystemssimula\\tests\\test_string_utils.py::test_reverse_string": {
      "file": "DEcodiaOSsystemssimula\\tests\\test_string_utils.py",
      "kind": "Function",
      "name": "test_reverse_string"
    },
    "tests\\test_evo1.py::_FakeResp": {
      "file": "tests\\test_evo1.py",
      "kind": "Class",
      "name": "_FakeResp"
    },
    "tests\\test_evo1.py::_FakeResp::__init__": {
      "file": "tests\\test_evo1.py",
      "kind": "Method",
      "name": "__init__"
    },
    "tests\\test_evo1.py::_FakeResp::raise_for_status": {
      "file": "tests\\test_evo1.py",
      "kind": "Method",
      "name": "raise_for_status"
    },
    "tests\\test_evo1.py::_FakeResp::json": {
      "file": "tests\\test_evo1.py",
      "kind": "Method",
      "name": "json"
    },
    "tests\\test_evo1.py::_FakeHttp": {
      "file": "tests\\test_evo1.py",
      "kind": "Class",
      "name": "_FakeHttp"
    },
    "tests\\test_evo1.py::_FakeHttp::__init__": {
      "file": "tests\\test_evo1.py",
      "kind": "Method",
      "name": "__init__"
    },
    "tests\\test_call.py::FakePromptNode": {
      "file": "tests\\test_call.py",
      "kind": "Class",
      "name": "FakePromptNode"
    },
    "tests\\test_call.py::FakePromptNode::__init__": {
      "file": "tests\\test_call.py",
      "kind": "Method",
      "name": "__init__"
    },
    "tests\\test_call.py::FakePolicyGraph": {
      "file": "tests\\test_call.py",
      "kind": "Class",
      "name": "FakePolicyGraph"
    },
    "tests\\test_call.py::FakePolicyGraph::__init__": {
      "file": "tests\\test_call.py",
      "kind": "Method",
      "name": "__init__"
    },
    "tests\\test_call.py::FakeArm": {
      "file": "tests\\test_call.py",
      "kind": "Class",
      "name": "FakeArm"
    },
    "tests\\test_call.py::FakeArm::__init__": {
      "file": "tests\\test_call.py",
      "kind": "Method",
      "name": "__init__"
    },
    "tests\\test_call.py::FakeSelection": {
      "file": "tests\\test_call.py",
      "kind": "Class",
      "name": "FakeSelection"
    },
    "tests\\test_call.py::FakeSelection::__init__": {
      "file": "tests\\test_call.py",
      "kind": "Method",
      "name": "__init__"
    },
    "tests\\test_call.py::FakeSelection::Champ": {
      "file": "tests\\test_call.py",
      "kind": "Class",
      "name": "Champ"
    },
    "tests\\test_call.py::app_client": {
      "file": "tests\\test_call.py",
      "kind": "Function",
      "name": "app_client"
    },
    "tests\\test_call.py::FakeSynapseClient": {
      "file": "tests\\test_call.py",
      "kind": "Class",
      "name": "FakeSynapseClient"
    },
    "tests\\test_call.py::FakeArmRegistry": {
      "file": "tests\\test_call.py",
      "kind": "Class",
      "name": "FakeArmRegistry"
    },
    "tests\\test_call.py::FakeArmRegistry::get_arm": {
      "file": "tests\\test_call.py",
      "kind": "Method",
      "name": "get_arm"
    },
    "tests\\test_call.py::test_plain_text_success": {
      "file": "tests\\test_call.py",
      "kind": "Function",
      "name": "test_plain_text_success"
    },
    "tests\\test_call.py::test_json_mode_with_schema_and_budget_headers": {
      "file": "tests\\test_call.py",
      "kind": "Function",
      "name": "test_json_mode_with_schema_and_budget_headers"
    },
    "tests\\test_call.py::test_tools_and_tool_choice_passthrough": {
      "file": "tests\\test_call.py",
      "kind": "Function",
      "name": "test_tools_and_tool_choice_passthrough"
    },
    "tests\\test_call.py::test_provider_failure_yields_502": {
      "file": "tests\\test_call.py",
      "kind": "Function",
      "name": "test_provider_failure_yields_502"
    },
    "tests\\test_call.py::test_missing_arm_or_prompt_yields_503": {
      "file": "tests\\test_call.py",
      "kind": "Function",
      "name": "test_missing_arm_or_prompt_yields_503"
    },
    "tests\\test_call.py::FakeArmRegistryNoArm": {
      "file": "tests\\test_call.py",
      "kind": "Class",
      "name": "FakeArmRegistryNoArm"
    },
    "tests\\test_call.py::FakeArmRegistryNoArm::get_arm": {
      "file": "tests\\test_call.py",
      "kind": "Method",
      "name": "get_arm"
    },
    "tests\\test_call.py::FakeArmRegistryNoPrompt": {
      "file": "tests\\test_call.py",
      "kind": "Class",
      "name": "FakeArmRegistryNoPrompt"
    },
    "tests\\test_call.py::FakeArmRegistryNoPrompt::get_arm": {
      "file": "tests\\test_call.py",
      "kind": "Method",
      "name": "get_arm"
    },
    "tests\\test_evo3.py::_conf": {
      "file": "tests\\test_evo3.py",
      "kind": "Function",
      "name": "_conf"
    },
    "tests\\test_evo3.py::test_replay_barcode_stability": {
      "file": "tests\\test_evo3.py",
      "kind": "Function",
      "name": "test_replay_barcode_stability"
    },
    "tests\\test_evo3.py::test_replay_barcode_changes_when_artifacts_change": {
      "file": "tests\\test_evo3.py",
      "kind": "Function",
      "name": "test_replay_barcode_changes_when_artifacts_change"
    },
    "systems\\atune\\processing\\canonical.py::CanonicalEvent": {
      "file": "systems\\atune\\processing\\canonical.py",
      "kind": "Class",
      "name": "CanonicalEvent"
    },
    "systems\\atune\\processing\\canonical.py::Canonicalizer": {
      "file": "systems\\atune\\processing\\canonical.py",
      "kind": "Class",
      "name": "Canonicalizer"
    },
    "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise": {
      "file": "systems\\atune\\processing\\canonical.py",
      "kind": "Method",
      "name": "canonicalise"
    },
    "systems\\atune\\salience\\heads.py::SalienceScore": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Class",
      "name": "SalienceScore"
    },
    "systems\\atune\\salience\\heads.py::SalienceHead": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Class",
      "name": "SalienceHead"
    },
    "systems\\atune\\salience\\heads.py::SalienceHead::name": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Method",
      "name": "name"
    },
    "systems\\atune\\salience\\heads.py::NoveltyHead": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Class",
      "name": "NoveltyHead"
    },
    "systems\\atune\\salience\\heads.py::NoveltyHead::__init__": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\salience\\heads.py::NoveltyHead::name": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Method",
      "name": "name"
    },
    "systems\\atune\\salience\\heads.py::KeywordHead": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Class",
      "name": "KeywordHead"
    },
    "systems\\atune\\salience\\heads.py::KeywordHead::__init__": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\salience\\heads.py::KeywordHead::name": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Method",
      "name": "name"
    },
    "systems\\atune\\salience\\heads.py::RiskHead": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Class",
      "name": "RiskHead"
    },
    "systems\\atune\\salience\\heads.py::RiskHead::__init__": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\salience\\heads.py::RiskHead::name": {
      "file": "systems\\atune\\salience\\heads.py",
      "kind": "Method",
      "name": "name"
    },
    "systems\\atune\\salience\\engine.py::SalienceEngine": {
      "file": "systems\\atune\\salience\\engine.py",
      "kind": "Class",
      "name": "SalienceEngine"
    },
    "systems\\atune\\salience\\engine.py::SalienceEngine::__init__": {
      "file": "systems\\atune\\salience\\engine.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\salience\\gating.py::MetaAttentionGater": {
      "file": "systems\\atune\\salience\\gating.py",
      "kind": "Class",
      "name": "MetaAttentionGater"
    },
    "systems\\atune\\salience\\gating.py::MetaAttentionGater::__init__": {
      "file": "systems\\atune\\salience\\gating.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\salience\\gating.py::MetaAttentionGater::_relu": {
      "file": "systems\\atune\\salience\\gating.py",
      "kind": "Method",
      "name": "_relu"
    },
    "systems\\atune\\salience\\gating.py::MetaAttentionGater::_softmax": {
      "file": "systems\\atune\\salience\\gating.py",
      "kind": "Method",
      "name": "_softmax"
    },
    "systems\\atune\\salience\\gating.py::MetaAttentionGater::get_gates": {
      "file": "systems\\atune\\salience\\gating.py",
      "kind": "Method",
      "name": "get_gates"
    },
    "systems\\atune\\salience\\conformal.py::PerHeadConformal": {
      "file": "systems\\atune\\salience\\conformal.py",
      "kind": "Class",
      "name": "PerHeadConformal"
    },
    "systems\\atune\\salience\\conformal.py::PerHeadConformal::__init__": {
      "file": "systems\\atune\\salience\\conformal.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\salience\\conformal.py::PerHeadConformal::update": {
      "file": "systems\\atune\\salience\\conformal.py",
      "kind": "Method",
      "name": "update"
    },
    "systems\\atune\\salience\\conformal.py::PerHeadConformal::p_value": {
      "file": "systems\\atune\\salience\\conformal.py",
      "kind": "Method",
      "name": "p_value"
    },
    "systems\\atune\\salience\\conformal.py::PerHeadConformal::summary": {
      "file": "systems\\atune\\salience\\conformal.py",
      "kind": "Method",
      "name": "summary"
    },
    "systems\\atune\\probes\\engine.py::ProbeEngine": {
      "file": "systems\\atune\\probes\\engine.py",
      "kind": "Class",
      "name": "ProbeEngine"
    },
    "systems\\atune\\probes\\engine.py::ProbeEngine::__init__": {
      "file": "systems\\atune\\probes\\engine.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\planner\\fae.py::FAEScore": {
      "file": "systems\\atune\\planner\\fae.py",
      "kind": "Class",
      "name": "FAEScore"
    },
    "systems\\atune\\planner\\fae.py::FAE_Calculator": {
      "file": "systems\\atune\\planner\\fae.py",
      "kind": "Class",
      "name": "FAE_Calculator"
    },
    "systems\\atune\\planner\\fae.py::FAE_Calculator::__init__": {
      "file": "systems\\atune\\planner\\fae.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae": {
      "file": "systems\\atune\\planner\\fae.py",
      "kind": "Method",
      "name": "calculate_fae"
    },
    "systems\\atune\\planner\\market.py::Bid": {
      "file": "systems\\atune\\planner\\market.py",
      "kind": "Class",
      "name": "Bid"
    },
    "systems\\atune\\planner\\market.py::_resolve_budget_ms": {
      "file": "systems\\atune\\planner\\market.py",
      "kind": "Function",
      "name": "_resolve_budget_ms"
    },
    "systems\\atune\\planner\\market.py::AttentionMarket": {
      "file": "systems\\atune\\planner\\market.py",
      "kind": "Class",
      "name": "AttentionMarket"
    },
    "systems\\atune\\planner\\market.py::AttentionMarket::__init__": {
      "file": "systems\\atune\\planner\\market.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\planner\\market.py::AttentionMarket::run_auction": {
      "file": "systems\\atune\\planner\\market.py",
      "kind": "Method",
      "name": "run_auction"
    },
    "systems\\atune\\planner\\intervention.py::create_signed_token": {
      "file": "systems\\atune\\planner\\intervention.py",
      "kind": "Function",
      "name": "create_signed_token"
    },
    "systems\\atune\\planner\\inference.py::GenerativeModel": {
      "file": "systems\\atune\\planner\\inference.py",
      "kind": "Class",
      "name": "GenerativeModel"
    },
    "systems\\atune\\planner\\inference.py::ActiveInferenceHead": {
      "file": "systems\\atune\\planner\\inference.py",
      "kind": "Class",
      "name": "ActiveInferenceHead"
    },
    "systems\\atune\\planner\\inference.py::ActiveInferenceHead::__init__": {
      "file": "systems\\atune\\planner\\inference.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\planner\\inference.py::ActiveInferenceHead::calculate_expected_free_energy": {
      "file": "systems\\atune\\planner\\inference.py",
      "kind": "Method",
      "name": "calculate_expected_free_energy"
    },
    "systems\\atune\\planner\\rollback.py::_atom": {
      "file": "systems\\atune\\planner\\rollback.py",
      "kind": "Function",
      "name": "_atom"
    },
    "systems\\atune\\planner\\rollback.py::_safe_noop_contract": {
      "file": "systems\\atune\\planner\\rollback.py",
      "kind": "Function",
      "name": "_safe_noop_contract"
    },
    "systems\\atune\\planner\\rollback.py::_map_params_from_result": {
      "file": "systems\\atune\\planner\\rollback.py",
      "kind": "Function",
      "name": "_map_params_from_result"
    },
    "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract": {
      "file": "systems\\atune\\planner\\rollback.py",
      "kind": "Function",
      "name": "synthesize_rollback_contract"
    },
    "systems\\atune\\planner\\costs.py::scale_bid_costs": {
      "file": "systems\\atune\\planner\\costs.py",
      "kind": "Function",
      "name": "scale_bid_costs"
    },
    "systems\\atune\\planner\\secl_orchestrator.py::SECLSignals": {
      "file": "systems\\atune\\planner\\secl_orchestrator.py",
      "kind": "Class",
      "name": "SECLSignals"
    },
    "systems\\atune\\planner\\secl_orchestrator.py::SECLSignals::__init__": {
      "file": "systems\\atune\\planner\\secl_orchestrator.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\planner\\signals.py::SECLSignals": {
      "file": "systems\\atune\\planner\\signals.py",
      "kind": "Class",
      "name": "SECLSignals"
    },
    "systems\\atune\\planner\\signals.py::SECLSignals::__init__": {
      "file": "systems\\atune\\planner\\signals.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\planner\\market_strategies\\pareto_knee.py::_fae_scalar": {
      "file": "systems\\atune\\planner\\market_strategies\\pareto_knee.py",
      "kind": "Function",
      "name": "_fae_scalar"
    },
    "systems\\atune\\planner\\market_strategies\\pareto_knee.py::select_with_pareto_knee": {
      "file": "systems\\atune\\planner\\market_strategies\\pareto_knee.py",
      "kind": "Function",
      "name": "select_with_pareto_knee"
    },
    "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager": {
      "file": "systems\\atune\\budgeter\\manager.py",
      "kind": "Class",
      "name": "AttentionBudgetManager"
    },
    "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::set_pool_ms_per_tick": {
      "file": "systems\\atune\\budgeter\\manager.py",
      "kind": "Method",
      "name": "set_pool_ms_per_tick"
    },
    "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::tick": {
      "file": "systems\\atune\\budgeter\\manager.py",
      "kind": "Method",
      "name": "tick"
    },
    "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::add_reserve": {
      "file": "systems\\atune\\budgeter\\manager.py",
      "kind": "Method",
      "name": "add_reserve"
    },
    "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::set_reserves": {
      "file": "systems\\atune\\budgeter\\manager.py",
      "kind": "Method",
      "name": "set_reserves"
    },
    "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::get_available_budget": {
      "file": "systems\\atune\\budgeter\\manager.py",
      "kind": "Method",
      "name": "get_available_budget"
    },
    "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::request_allocation": {
      "file": "systems\\atune\\budgeter\\manager.py",
      "kind": "Method",
      "name": "request_allocation"
    },
    "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::can_allocate_non_reserved": {
      "file": "systems\\atune\\budgeter\\manager.py",
      "kind": "Method",
      "name": "can_allocate_non_reserved"
    },
    "systems\\atune\\budgeter\\tempo.py::TempoForecaster": {
      "file": "systems\\atune\\budgeter\\tempo.py",
      "kind": "Class",
      "name": "TempoForecaster"
    },
    "systems\\atune\\budgeter\\tempo.py::TempoForecaster::__init__": {
      "file": "systems\\atune\\budgeter\\tempo.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\budgeter\\tempo.py::TempoForecaster::observe_event": {
      "file": "systems\\atune\\budgeter\\tempo.py",
      "kind": "Method",
      "name": "observe_event"
    },
    "systems\\atune\\budgeter\\tempo.py::TempoForecaster::forecast_and_reserve": {
      "file": "systems\\atune\\budgeter\\tempo.py",
      "kind": "Method",
      "name": "forecast_and_reserve"
    },
    "systems\\atune\\knowledge\\graph_interface.py::KnowledgeGraphInterface": {
      "file": "systems\\atune\\knowledge\\graph_interface.py",
      "kind": "Class",
      "name": "KnowledgeGraphInterface"
    },
    "systems\\atune\\focus\\field.py::SalienceFieldManager": {
      "file": "systems\\atune\\focus\\field.py",
      "kind": "Class",
      "name": "SalienceFieldManager"
    },
    "systems\\atune\\focus\\field.py::SalienceFieldManager::__init__": {
      "file": "systems\\atune\\focus\\field.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\focus\\field.py::SalienceFieldManager::deposit": {
      "file": "systems\\atune\\focus\\field.py",
      "kind": "Method",
      "name": "deposit"
    },
    "systems\\atune\\focus\\field.py::SalienceFieldManager::run_diffusion_step": {
      "file": "systems\\atune\\focus\\field.py",
      "kind": "Method",
      "name": "run_diffusion_step"
    },
    "systems\\atune\\focus\\field.py::SalienceFieldManager::detect_hotspots": {
      "file": "systems\\atune\\focus\\field.py",
      "kind": "Method",
      "name": "detect_hotspots"
    },
    "systems\\atune\\focus\\tuner.py::DiffusionTuner": {
      "file": "systems\\atune\\focus\\tuner.py",
      "kind": "Class",
      "name": "DiffusionTuner"
    },
    "systems\\atune\\focus\\tuner.py::DiffusionTuner::apply_hint": {
      "file": "systems\\atune\\focus\\tuner.py",
      "kind": "Method",
      "name": "apply_hint"
    },
    "systems\\atune\\control\\affect.py::AffectiveState": {
      "file": "systems\\atune\\control\\affect.py",
      "kind": "Class",
      "name": "AffectiveState"
    },
    "systems\\atune\\control\\affect.py::ControlModulations": {
      "file": "systems\\atune\\control\\affect.py",
      "kind": "Class",
      "name": "ControlModulations"
    },
    "systems\\atune\\control\\affect.py::AffectiveControlLoop": {
      "file": "systems\\atune\\control\\affect.py",
      "kind": "Class",
      "name": "AffectiveControlLoop"
    },
    "systems\\atune\\control\\affect.py::AffectiveControlLoop::__init__": {
      "file": "systems\\atune\\control\\affect.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\control\\affect.py::AffectiveControlLoop::update_state": {
      "file": "systems\\atune\\control\\affect.py",
      "kind": "Method",
      "name": "update_state"
    },
    "systems\\atune\\control\\affect.py::AffectiveControlLoop::get_current_modulations": {
      "file": "systems\\atune\\control\\affect.py",
      "kind": "Method",
      "name": "get_current_modulations"
    },
    "systems\\atune\\memory\\induction.py::SchemaInducer": {
      "file": "systems\\atune\\memory\\induction.py",
      "kind": "Class",
      "name": "SchemaInducer"
    },
    "systems\\atune\\memory\\store.py::MemoryStore": {
      "file": "systems\\atune\\memory\\store.py",
      "kind": "Class",
      "name": "MemoryStore"
    },
    "systems\\atune\\memory\\store.py::MemoryStore::__init__": {
      "file": "systems\\atune\\memory\\store.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\memory\\store.py::MemoryStore::add_focus_node": {
      "file": "systems\\atune\\memory\\store.py",
      "kind": "Method",
      "name": "add_focus_node"
    },
    "systems\\atune\\memory\\store.py::MemoryStore::get_all_nodes": {
      "file": "systems\\atune\\memory\\store.py",
      "kind": "Method",
      "name": "get_all_nodes"
    },
    "systems\\atune\\memory\\store.py::MemoryStore::update_schemas": {
      "file": "systems\\atune\\memory\\store.py",
      "kind": "Method",
      "name": "update_schemas"
    },
    "systems\\atune\\memory\\store.py::MemoryStore::match_event_to_schema": {
      "file": "systems\\atune\\memory\\store.py",
      "kind": "Method",
      "name": "match_event_to_schema"
    },
    "systems\\atune\\memory\\schemas.py::FocusNode": {
      "file": "systems\\atune\\memory\\schemas.py",
      "kind": "Class",
      "name": "FocusNode"
    },
    "systems\\atune\\memory\\schemas.py::Schema": {
      "file": "systems\\atune\\memory\\schemas.py",
      "kind": "Class",
      "name": "Schema"
    },
    "systems\\atune\\causal\\model.py::CausalVariable": {
      "file": "systems\\atune\\causal\\model.py",
      "kind": "Class",
      "name": "CausalVariable"
    },
    "systems\\atune\\causal\\model.py::StructuralEquation": {
      "file": "systems\\atune\\causal\\model.py",
      "kind": "Class",
      "name": "StructuralEquation"
    },
    "systems\\atune\\causal\\model.py::StructuralCausalModel": {
      "file": "systems\\atune\\causal\\model.py",
      "kind": "Class",
      "name": "StructuralCausalModel"
    },
    "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine": {
      "file": "systems\\atune\\causal\\discovery.py",
      "kind": "Class",
      "name": "CausalDiscoveryEngine"
    },
    "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal": {
      "file": "systems\\atune\\causal\\discovery.py",
      "kind": "Method",
      "name": "discover_scm_from_journal"
    },
    "systems\\atune\\causal\\scm_consumer.py::SCMConsumer": {
      "file": "systems\\atune\\causal\\scm_consumer.py",
      "kind": "Class",
      "name": "SCMConsumer"
    },
    "systems\\atune\\causal\\scm_consumer.py::SCMConsumer::__init__": {
      "file": "systems\\atune\\causal\\scm_consumer.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\journal\\ledger.py::_digest_hex": {
      "file": "systems\\atune\\journal\\ledger.py",
      "kind": "Function",
      "name": "_digest_hex"
    },
    "systems\\atune\\journal\\ledger.py::WhyTrace": {
      "file": "systems\\atune\\journal\\ledger.py",
      "kind": "Class",
      "name": "WhyTrace"
    },
    "systems\\atune\\journal\\ledger.py::ReplayCapsule": {
      "file": "systems\\atune\\journal\\ledger.py",
      "kind": "Class",
      "name": "ReplayCapsule"
    },
    "systems\\atune\\journal\\ledger.py::_write_jsonl": {
      "file": "systems\\atune\\journal\\ledger.py",
      "kind": "Function",
      "name": "_write_jsonl"
    },
    "systems\\atune\\journal\\ledger.py::record": {
      "file": "systems\\atune\\journal\\ledger.py",
      "kind": "Function",
      "name": "record"
    },
    "systems\\atune\\journal\\why_helpers.py::_Point": {
      "file": "systems\\atune\\journal\\why_helpers.py",
      "kind": "Class",
      "name": "_Point"
    },
    "systems\\atune\\journal\\why_helpers.py::_terms": {
      "file": "systems\\atune\\journal\\why_helpers.py",
      "kind": "Function",
      "name": "_terms"
    },
    "systems\\atune\\journal\\why_helpers.py::_points": {
      "file": "systems\\atune\\journal\\why_helpers.py",
      "kind": "Function",
      "name": "_points"
    },
    "systems\\atune\\journal\\why_helpers.py::_dominates": {
      "file": "systems\\atune\\journal\\why_helpers.py",
      "kind": "Function",
      "name": "_dominates"
    },
    "systems\\atune\\journal\\why_helpers.py::_pareto_front": {
      "file": "systems\\atune\\journal\\why_helpers.py",
      "kind": "Function",
      "name": "_pareto_front"
    },
    "systems\\atune\\journal\\why_helpers.py::_normalize": {
      "file": "systems\\atune\\journal\\why_helpers.py",
      "kind": "Function",
      "name": "_normalize"
    },
    "systems\\atune\\journal\\why_helpers.py::_norm": {
      "file": "systems\\atune\\journal\\why_helpers.py",
      "kind": "Function",
      "name": "_norm"
    },
    "systems\\atune\\journal\\why_helpers.py::_knee_index": {
      "file": "systems\\atune\\journal\\why_helpers.py",
      "kind": "Function",
      "name": "_knee_index"
    },
    "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee": {
      "file": "systems\\atune\\journal\\why_helpers.py",
      "kind": "Function",
      "name": "summarize_pareto_knee"
    },
    "systems\\atune\\safety\\reflex_catalog.py::decide": {
      "file": "systems\\atune\\safety\\reflex_catalog.py",
      "kind": "Function",
      "name": "decide"
    },
    "systems\\atune\\safety\\reflex_catalog.py::apply_redactions": {
      "file": "systems\\atune\\safety\\reflex_catalog.py",
      "kind": "Function",
      "name": "apply_redactions"
    },
    "systems\\atune\\safety\\gating.py::EscalationReason": {
      "file": "systems\\atune\\safety\\gating.py",
      "kind": "Class",
      "name": "EscalationReason"
    },
    "systems\\atune\\safety\\gating.py::GateVerdict": {
      "file": "systems\\atune\\safety\\gating.py",
      "kind": "Class",
      "name": "GateVerdict"
    },
    "systems\\atune\\safety\\gating.py::ConformalGate": {
      "file": "systems\\atune\\safety\\gating.py",
      "kind": "Class",
      "name": "ConformalGate"
    },
    "systems\\atune\\safety\\gating.py::ConformalGate::__init__": {
      "file": "systems\\atune\\safety\\gating.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\atune\\ingest\\followups.py::HarvestSummary": {
      "file": "systems\\atune\\ingest\\followups.py",
      "kind": "Class",
      "name": "HarvestSummary"
    },
    "systems\\atune\\ingest\\followups.py::_host_of": {
      "file": "systems\\atune\\ingest\\followups.py",
      "kind": "Function",
      "name": "_host_of"
    },
    "systems\\atune\\ingest\\followups.py::harvest_followup_event": {
      "file": "systems\\atune\\ingest\\followups.py",
      "kind": "Function",
      "name": "harvest_followup_event"
    },
    "systems\\atune\\ingest\\followups.py::harvest_batch_followups": {
      "file": "systems\\atune\\ingest\\followups.py",
      "kind": "Function",
      "name": "harvest_batch_followups"
    },
    "systems\\atune\\ingest\\followups.py::salience_hints_from_harvest": {
      "file": "systems\\atune\\ingest\\followups.py",
      "kind": "Function",
      "name": "salience_hints_from_harvest"
    },
    "systems\\atune\\gaps\\schema.py::RegretStats": {
      "file": "systems\\atune\\gaps\\schema.py",
      "kind": "Class",
      "name": "RegretStats"
    },
    "systems\\atune\\gaps\\schema.py::PostconditionFailure": {
      "file": "systems\\atune\\gaps\\schema.py",
      "kind": "Class",
      "name": "PostconditionFailure"
    },
    "systems\\atune\\gaps\\schema.py::ExemplarInput": {
      "file": "systems\\atune\\gaps\\schema.py",
      "kind": "Class",
      "name": "ExemplarInput"
    },
    "systems\\atune\\gaps\\schema.py::CapabilityGapEvent": {
      "file": "systems\\atune\\gaps\\schema.py",
      "kind": "Class",
      "name": "CapabilityGapEvent"
    },
    "systems\\atune\\intent\\constraints_merge.py::_merge_dict": {
      "file": "systems\\atune\\intent\\constraints_merge.py",
      "kind": "Function",
      "name": "_merge_dict"
    },
    "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints": {
      "file": "systems\\atune\\intent\\constraints_merge.py",
      "kind": "Function",
      "name": "merge_playbook_into_constraints"
    },
    "systems\\atune\\intent\\gap_detector.py::detect_capability_gap": {
      "file": "systems\\atune\\intent\\gap_detector.py",
      "kind": "Function",
      "name": "detect_capability_gap"
    },
    "systems\\atune\\intent\\playbook_schema.py::ContractAtom": {
      "file": "systems\\atune\\intent\\playbook_schema.py",
      "kind": "Class",
      "name": "ContractAtom"
    },
    "systems\\atune\\intent\\playbook_schema.py::RateLimits": {
      "file": "systems\\atune\\intent\\playbook_schema.py",
      "kind": "Class",
      "name": "RateLimits"
    },
    "systems\\atune\\intent\\playbook_schema.py::Redactions": {
      "file": "systems\\atune\\intent\\playbook_schema.py",
      "kind": "Class",
      "name": "Redactions"
    },
    "systems\\atune\\intent\\playbook_schema.py::SafetyBlock": {
      "file": "systems\\atune\\intent\\playbook_schema.py",
      "kind": "Class",
      "name": "SafetyBlock"
    },
    "systems\\atune\\intent\\playbook_schema.py::Playbook": {
      "file": "systems\\atune\\intent\\playbook_schema.py",
      "kind": "Class",
      "name": "Playbook"
    },
    "systems\\atune\\intent\\playbook_schema.py::Playbook::Config": {
      "file": "systems\\atune\\intent\\playbook_schema.py",
      "kind": "Class",
      "name": "Config"
    },
    "systems\\atune\\intent\\playbook_schema.py::Playbook::_coerce_atoms": {
      "file": "systems\\atune\\intent\\playbook_schema.py",
      "kind": "Method",
      "name": "_coerce_atoms"
    },
    "systems\\atune\\intent\\playbook_schema.py::normalize_playbook": {
      "file": "systems\\atune\\intent\\playbook_schema.py",
      "kind": "Function",
      "name": "normalize_playbook"
    },
    "systems\\atune\\metrics\\secl_counters.py::bump": {
      "file": "systems\\atune\\metrics\\secl_counters.py",
      "kind": "Function",
      "name": "bump"
    },
    "systems\\atune\\metrics\\secl_counters.py::set_gauge": {
      "file": "systems\\atune\\metrics\\secl_counters.py",
      "kind": "Function",
      "name": "set_gauge"
    },
    "systems\\atune\\metrics\\secl_counters.py::set_info": {
      "file": "systems\\atune\\metrics\\secl_counters.py",
      "kind": "Function",
      "name": "set_info"
    },
    "systems\\atune\\metrics\\secl_counters.py::snapshot": {
      "file": "systems\\atune\\metrics\\secl_counters.py",
      "kind": "Function",
      "name": "snapshot"
    },
    "systems\\atune\\metrics\\budget_audit.py::audit_and_record": {
      "file": "systems\\atune\\metrics\\budget_audit.py",
      "kind": "Function",
      "name": "audit_and_record"
    },
    "systems\\atune\\escalation\\reasons.py::EscalationReason": {
      "file": "systems\\atune\\escalation\\reasons.py",
      "kind": "Class",
      "name": "EscalationReason"
    },
    "systems\\atune\\escalation\\reasons.py::reason_conformal_ood": {
      "file": "systems\\atune\\escalation\\reasons.py",
      "kind": "Function",
      "name": "reason_conformal_ood"
    },
    "systems\\atune\\escalation\\reasons.py::reason_postcond_violation": {
      "file": "systems\\atune\\escalation\\reasons.py",
      "kind": "Function",
      "name": "reason_postcond_violation"
    },
    "systems\\atune\\escalation\\reasons.py::reason_rollback_failed": {
      "file": "systems\\atune\\escalation\\reasons.py",
      "kind": "Function",
      "name": "reason_rollback_failed"
    },
    "systems\\atune\\escalation\\reasons.py::reason_twin_mismatch": {
      "file": "systems\\atune\\escalation\\reasons.py",
      "kind": "Function",
      "name": "reason_twin_mismatch"
    },
    "systems\\atune\\escalation\\build.py::build_escalation_payload": {
      "file": "systems\\atune\\escalation\\build.py",
      "kind": "Function",
      "name": "build_escalation_payload"
    },
    "systems\\axon\\schemas.py::AxonEvent": {
      "file": "systems\\axon\\schemas.py",
      "kind": "Class",
      "name": "AxonEvent"
    },
    "systems\\axon\\schemas.py::AxonIntent": {
      "file": "systems\\axon\\schemas.py",
      "kind": "Class",
      "name": "AxonIntent"
    },
    "systems\\axon\\schemas.py::ActionResult": {
      "file": "systems\\axon\\schemas.py",
      "kind": "Class",
      "name": "ActionResult"
    },
    "systems\\axon\\dependencies.py::get_driver_registry": {
      "file": "systems\\axon\\dependencies.py",
      "kind": "Function",
      "name": "get_driver_registry"
    },
    "systems\\axon\\dependencies.py::get_journal": {
      "file": "systems\\axon\\dependencies.py",
      "kind": "Function",
      "name": "get_journal"
    },
    "systems\\axon\\dependencies.py::get_quarantine": {
      "file": "systems\\axon\\dependencies.py",
      "kind": "Function",
      "name": "get_quarantine"
    },
    "systems\\axon\\dependencies.py::get_lifecycle_manager": {
      "file": "systems\\axon\\dependencies.py",
      "kind": "Function",
      "name": "get_lifecycle_manager"
    },
    "systems\\axon\\dependencies.py::get_capability_validator": {
      "file": "systems\\axon\\dependencies.py",
      "kind": "Function",
      "name": "get_capability_validator"
    },
    "systems\\axon\\dependencies.py::get_conformal_predictor": {
      "file": "systems\\axon\\dependencies.py",
      "kind": "Function",
      "name": "get_conformal_predictor"
    },
    "systems\\axon\\dependencies.py::get_scorecard_manager": {
      "file": "systems\\axon\\dependencies.py",
      "kind": "Function",
      "name": "get_scorecard_manager"
    },
    "systems\\axon\\io\\quarantine.py::Taint": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Class",
      "name": "Taint"
    },
    "systems\\axon\\io\\quarantine.py::CanonicalizedPayload": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Class",
      "name": "CanonicalizedPayload"
    },
    "systems\\axon\\io\\quarantine.py::HTMLSanitizer": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Class",
      "name": "HTMLSanitizer"
    },
    "systems\\axon\\io\\quarantine.py::HTMLSanitizer::__init__": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_starttag": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Method",
      "name": "handle_starttag"
    },
    "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_endtag": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Method",
      "name": "handle_endtag"
    },
    "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_data": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Method",
      "name": "handle_data"
    },
    "systems\\axon\\io\\quarantine.py::HTMLSanitizer::sanitize": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Method",
      "name": "sanitize"
    },
    "systems\\axon\\io\\quarantine.py::Quarantine": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Class",
      "name": "Quarantine"
    },
    "systems\\axon\\io\\quarantine.py::Quarantine::__init__": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\io\\quarantine.py::Quarantine::process_and_canonicalize": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Method",
      "name": "process_and_canonicalize"
    },
    "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_html": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Method",
      "name": "_canonicalize_html"
    },
    "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_json": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Method",
      "name": "_canonicalize_json"
    },
    "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_text": {
      "file": "systems\\axon\\io\\quarantine.py",
      "kind": "Method",
      "name": "_canonicalize_text"
    },
    "systems\\axon\\mesh\\sdk.py::CapabilitySpec": {
      "file": "systems\\axon\\mesh\\sdk.py",
      "kind": "Class",
      "name": "CapabilitySpec"
    },
    "systems\\axon\\mesh\\sdk.py::HealthStatus": {
      "file": "systems\\axon\\mesh\\sdk.py",
      "kind": "Class",
      "name": "HealthStatus"
    },
    "systems\\axon\\mesh\\sdk.py::ReplayCapsule": {
      "file": "systems\\axon\\mesh\\sdk.py",
      "kind": "Class",
      "name": "ReplayCapsule"
    },
    "systems\\axon\\mesh\\sdk.py::DriverInterface": {
      "file": "systems\\axon\\mesh\\sdk.py",
      "kind": "Class",
      "name": "DriverInterface"
    },
    "systems\\axon\\mesh\\sdk.py::DriverInterface::describe": {
      "file": "systems\\axon\\mesh\\sdk.py",
      "kind": "Method",
      "name": "describe"
    },
    "systems\\axon\\mesh\\sdk.py::DriverInterface::pull": {
      "file": "systems\\axon\\mesh\\sdk.py",
      "kind": "Method",
      "name": "pull"
    },
    "systems\\axon\\mesh\\sdk.py::DriverInterface::push": {
      "file": "systems\\axon\\mesh\\sdk.py",
      "kind": "Method",
      "name": "push"
    },
    "systems\\axon\\mesh\\sdk.py::DriverInterface::self_test": {
      "file": "systems\\axon\\mesh\\sdk.py",
      "kind": "Method",
      "name": "self_test"
    },
    "systems\\axon\\mesh\\sdk.py::DriverInterface::repro_bundle": {
      "file": "systems\\axon\\mesh\\sdk.py",
      "kind": "Method",
      "name": "repro_bundle"
    },
    "systems\\axon\\mesh\\registry.py::DriverRegistry": {
      "file": "systems\\axon\\mesh\\registry.py",
      "kind": "Class",
      "name": "DriverRegistry"
    },
    "systems\\axon\\mesh\\registry.py::DriverRegistry::__init__": {
      "file": "systems\\axon\\mesh\\registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\mesh\\registry.py::DriverRegistry::_map_capabilities": {
      "file": "systems\\axon\\mesh\\registry.py",
      "kind": "Method",
      "name": "_map_capabilities"
    },
    "systems\\axon\\mesh\\registry.py::DriverRegistry::register": {
      "file": "systems\\axon\\mesh\\registry.py",
      "kind": "Method",
      "name": "register"
    },
    "systems\\axon\\mesh\\registry.py::DriverRegistry::update_driver_status": {
      "file": "systems\\axon\\mesh\\registry.py",
      "kind": "Method",
      "name": "update_driver_status"
    },
    "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver": {
      "file": "systems\\axon\\mesh\\registry.py",
      "kind": "Method",
      "name": "load_and_register_driver"
    },
    "systems\\axon\\mesh\\registry.py::DriverRegistry::get_live_driver_for_capability": {
      "file": "systems\\axon\\mesh\\registry.py",
      "kind": "Method",
      "name": "get_live_driver_for_capability"
    },
    "systems\\axon\\mesh\\registry.py::DriverRegistry::get_shadow_drivers_for_capability": {
      "file": "systems\\axon\\mesh\\registry.py",
      "kind": "Method",
      "name": "get_shadow_drivers_for_capability"
    },
    "systems\\axon\\mesh\\lifecycle.py::DriverState": {
      "file": "systems\\axon\\mesh\\lifecycle.py",
      "kind": "Class",
      "name": "DriverState"
    },
    "systems\\axon\\mesh\\lifecycle.py::DriverLifecycleManager": {
      "file": "systems\\axon\\mesh\\lifecycle.py",
      "kind": "Class",
      "name": "DriverLifecycleManager"
    },
    "systems\\axon\\mesh\\lifecycle.py::DriverLifecycleManager::__init__": {
      "file": "systems\\axon\\mesh\\lifecycle.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\mesh\\lifecycle.py::DriverLifecycleManager::update_driver_status": {
      "file": "systems\\axon\\mesh\\lifecycle.py",
      "kind": "Method",
      "name": "update_driver_status"
    },
    "systems\\axon\\mesh\\lifecycle.py::DriverLifecycleManager::get_driver_state": {
      "file": "systems\\axon\\mesh\\lifecycle.py",
      "kind": "Method",
      "name": "get_driver_state"
    },
    "systems\\axon\\mesh\\lifecycle.py::DriverLifecycleManager::get_all_states": {
      "file": "systems\\axon\\mesh\\lifecycle.py",
      "kind": "Method",
      "name": "get_all_states"
    },
    "systems\\axon\\mesh\\scorecard.py::DriverScorecard": {
      "file": "systems\\axon\\mesh\\scorecard.py",
      "kind": "Class",
      "name": "DriverScorecard"
    },
    "systems\\axon\\mesh\\scorecard.py::DriverScorecard::success_rate": {
      "file": "systems\\axon\\mesh\\scorecard.py",
      "kind": "Method",
      "name": "success_rate"
    },
    "systems\\axon\\mesh\\scorecard.py::ScorecardManager": {
      "file": "systems\\axon\\mesh\\scorecard.py",
      "kind": "Class",
      "name": "ScorecardManager"
    },
    "systems\\axon\\mesh\\scorecard.py::ScorecardManager::__init__": {
      "file": "systems\\axon\\mesh\\scorecard.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\mesh\\scorecard.py::ScorecardManager::update_scorecard": {
      "file": "systems\\axon\\mesh\\scorecard.py",
      "kind": "Method",
      "name": "update_scorecard"
    },
    "systems\\axon\\mesh\\scorecard.py::ScorecardManager::get_all_scorecards": {
      "file": "systems\\axon\\mesh\\scorecard.py",
      "kind": "Method",
      "name": "get_all_scorecards"
    },
    "systems\\axon\\mesh\\attestation.py::AttestationPolicy": {
      "file": "systems\\axon\\mesh\\attestation.py",
      "kind": "Class",
      "name": "AttestationPolicy"
    },
    "systems\\axon\\mesh\\attestation.py::AttestationRecord": {
      "file": "systems\\axon\\mesh\\attestation.py",
      "kind": "Class",
      "name": "AttestationRecord"
    },
    "systems\\axon\\mesh\\attestation.py::_verify_hmac": {
      "file": "systems\\axon\\mesh\\attestation.py",
      "kind": "Function",
      "name": "_verify_hmac"
    },
    "systems\\axon\\mesh\\attestation.py::verify_attestation": {
      "file": "systems\\axon\\mesh\\attestation.py",
      "kind": "Function",
      "name": "verify_attestation"
    },
    "systems\\axon\\mesh\\autoroller.py::AutoRollConfig": {
      "file": "systems\\axon\\mesh\\autoroller.py",
      "kind": "Class",
      "name": "AutoRollConfig"
    },
    "systems\\axon\\mesh\\autoroller.py::AutoRoller": {
      "file": "systems\\axon\\mesh\\autoroller.py",
      "kind": "Class",
      "name": "AutoRoller"
    },
    "systems\\axon\\mesh\\autoroller.py::AutoRoller::__init__": {
      "file": "systems\\axon\\mesh\\autoroller.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\mesh\\autoroller.py::AutoRoller::_metrics": {
      "file": "systems\\axon\\mesh\\autoroller.py",
      "kind": "Method",
      "name": "_metrics"
    },
    "systems\\axon\\mesh\\autoroller.py::AutoRoller::_describe": {
      "file": "systems\\axon\\mesh\\autoroller.py",
      "kind": "Method",
      "name": "_describe"
    },
    "systems\\axon\\mesh\\autoroller.py::AutoRoller::_cooldown_ok": {
      "file": "systems\\axon\\mesh\\autoroller.py",
      "kind": "Method",
      "name": "_cooldown_ok"
    },
    "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act": {
      "file": "systems\\axon\\mesh\\autoroller.py",
      "kind": "Method",
      "name": "evaluate_and_act"
    },
    "systems\\axon\\mesh\\autoroller.py::AutoRoller::_journal": {
      "file": "systems\\axon\\mesh\\autoroller.py",
      "kind": "Method",
      "name": "_journal"
    },
    "systems\\axon\\mesh\\promoter.py::PromotionPolicy": {
      "file": "systems\\axon\\mesh\\promoter.py",
      "kind": "Class",
      "name": "PromotionPolicy"
    },
    "systems\\axon\\mesh\\promoter.py::PromotionPolicy::__init__": {
      "file": "systems\\axon\\mesh\\promoter.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\mesh\\promoter.py::PromotionPolicy::ok": {
      "file": "systems\\axon\\mesh\\promoter.py",
      "kind": "Method",
      "name": "ok"
    },
    "systems\\axon\\mesh\\promoter.py::_status_eq": {
      "file": "systems\\axon\\mesh\\promoter.py",
      "kind": "Function",
      "name": "_status_eq"
    },
    "systems\\axon\\mesh\\promoter.py::_coerce_like": {
      "file": "systems\\axon\\mesh\\promoter.py",
      "kind": "Function",
      "name": "_coerce_like"
    },
    "systems\\axon\\journal\\mej.py::JournalEntry": {
      "file": "systems\\axon\\journal\\mej.py",
      "kind": "Class",
      "name": "JournalEntry"
    },
    "systems\\axon\\journal\\mej.py::to_deterministic_json": {
      "file": "systems\\axon\\journal\\mej.py",
      "kind": "Function",
      "name": "to_deterministic_json"
    },
    "systems\\axon\\journal\\mej.py::MerkleJournal": {
      "file": "systems\\axon\\journal\\mej.py",
      "kind": "Class",
      "name": "MerkleJournal"
    },
    "systems\\axon\\journal\\mej.py::MerkleJournal::__init__": {
      "file": "systems\\axon\\journal\\mej.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry": {
      "file": "systems\\axon\\journal\\mej.py",
      "kind": "Method",
      "name": "write_entry"
    },
    "systems\\axon\\drivers\\rss_driver.py::RssDriver": {
      "file": "systems\\axon\\drivers\\rss_driver.py",
      "kind": "Class",
      "name": "RssDriver"
    },
    "systems\\axon\\drivers\\rss_driver.py::RssDriver::__init__": {
      "file": "systems\\axon\\drivers\\rss_driver.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\drivers\\rss_driver.py::RssDriver::describe": {
      "file": "systems\\axon\\drivers\\rss_driver.py",
      "kind": "Method",
      "name": "describe"
    },
    "systems\\axon\\drivers\\rss_driver.py::RssDriver::push": {
      "file": "systems\\axon\\drivers\\rss_driver.py",
      "kind": "Method",
      "name": "push"
    },
    "systems\\axon\\drivers\\rss_driver.py::RssDriver::repro_bundle": {
      "file": "systems\\axon\\drivers\\rss_driver.py",
      "kind": "Method",
      "name": "repro_bundle"
    },
    "systems\\axon\\drivers\\qora_search_driver.py::QoraSearchDriver": {
      "file": "systems\\axon\\drivers\\qora_search_driver.py",
      "kind": "Class",
      "name": "QoraSearchDriver"
    },
    "systems\\axon\\drivers\\qora_search_driver.py::QoraSearchDriver::describe": {
      "file": "systems\\axon\\drivers\\qora_search_driver.py",
      "kind": "Method",
      "name": "describe"
    },
    "systems\\axon\\drivers\\qora_search_driver.py::QoraSearchDriver::repro_bundle": {
      "file": "systems\\axon\\drivers\\qora_search_driver.py",
      "kind": "Method",
      "name": "repro_bundle"
    },
    "systems\\axon\\safety\\validation.py::Predicate": {
      "file": "systems\\axon\\safety\\validation.py",
      "kind": "Class",
      "name": "Predicate"
    },
    "systems\\axon\\safety\\validation.py::CapabilityValidator": {
      "file": "systems\\axon\\safety\\validation.py",
      "kind": "Class",
      "name": "CapabilityValidator"
    },
    "systems\\axon\\safety\\validation.py::CapabilityValidator::validate": {
      "file": "systems\\axon\\safety\\validation.py",
      "kind": "Method",
      "name": "validate"
    },
    "systems\\axon\\safety\\conformal.py::ConformalPredictor": {
      "file": "systems\\axon\\safety\\conformal.py",
      "kind": "Class",
      "name": "ConformalPredictor"
    },
    "systems\\axon\\safety\\conformal.py::ConformalPredictor::__init__": {
      "file": "systems\\axon\\safety\\conformal.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\safety\\conformal.py::ConformalPredictor::add_residual": {
      "file": "systems\\axon\\safety\\conformal.py",
      "kind": "Method",
      "name": "add_residual"
    },
    "systems\\axon\\safety\\conformal.py::ConformalPredictor::is_action_safe": {
      "file": "systems\\axon\\safety\\conformal.py",
      "kind": "Method",
      "name": "is_action_safe"
    },
    "systems\\axon\\safety\\reflex.py::ReflexVerdict": {
      "file": "systems\\axon\\safety\\reflex.py",
      "kind": "Class",
      "name": "ReflexVerdict"
    },
    "systems\\axon\\safety\\reflex.py::ReflexResult": {
      "file": "systems\\axon\\safety\\reflex.py",
      "kind": "Class",
      "name": "ReflexResult"
    },
    "systems\\axon\\safety\\reflex.py::ReflexEngine": {
      "file": "systems\\axon\\safety\\reflex.py",
      "kind": "Class",
      "name": "ReflexEngine"
    },
    "systems\\axon\\safety\\reflex.py::ReflexEngine::evaluate": {
      "file": "systems\\axon\\safety\\reflex.py",
      "kind": "Method",
      "name": "evaluate"
    },
    "systems\\axon\\safety\\circuit_breaker.py::_Stats": {
      "file": "systems\\axon\\safety\\circuit_breaker.py",
      "kind": "Class",
      "name": "_Stats"
    },
    "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker": {
      "file": "systems\\axon\\safety\\circuit_breaker.py",
      "kind": "Class",
      "name": "CircuitBreaker"
    },
    "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__": {
      "file": "systems\\axon\\safety\\circuit_breaker.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::_prune": {
      "file": "systems\\axon\\safety\\circuit_breaker.py",
      "kind": "Method",
      "name": "_prune"
    },
    "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::is_open": {
      "file": "systems\\axon\\safety\\circuit_breaker.py",
      "kind": "Method",
      "name": "is_open"
    },
    "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record": {
      "file": "systems\\axon\\safety\\circuit_breaker.py",
      "kind": "Method",
      "name": "record"
    },
    "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record_success": {
      "file": "systems\\axon\\safety\\circuit_breaker.py",
      "kind": "Method",
      "name": "record_success"
    },
    "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record_failure": {
      "file": "systems\\axon\\safety\\circuit_breaker.py",
      "kind": "Method",
      "name": "record_failure"
    },
    "systems\\axon\\safety\\contracts.py::_getpath": {
      "file": "systems\\axon\\safety\\contracts.py",
      "kind": "Function",
      "name": "_getpath"
    },
    "systems\\axon\\safety\\contracts.py::_compare": {
      "file": "systems\\axon\\safety\\contracts.py",
      "kind": "Function",
      "name": "_compare"
    },
    "systems\\axon\\safety\\contracts.py::verify_preconditions": {
      "file": "systems\\axon\\safety\\contracts.py",
      "kind": "Function",
      "name": "verify_preconditions"
    },
    "systems\\axon\\safety\\contracts.py::verify_postconditions": {
      "file": "systems\\axon\\safety\\contracts.py",
      "kind": "Function",
      "name": "verify_postconditions"
    },
    "systems\\axon\\learning\\feedback.py::UpliftReport": {
      "file": "systems\\axon\\learning\\feedback.py",
      "kind": "Class",
      "name": "UpliftReport"
    },
    "systems\\axon\\learning\\feedback.py::_calculate_diff": {
      "file": "systems\\axon\\learning\\feedback.py",
      "kind": "Function",
      "name": "_calculate_diff"
    },
    "systems\\axon\\security\\attestation.py::verify_driver_attestation": {
      "file": "systems\\axon\\security\\attestation.py",
      "kind": "Function",
      "name": "verify_driver_attestation"
    },
    "systems\\axon\\security\\attestation.py::AttestationManager": {
      "file": "systems\\axon\\security\\attestation.py",
      "kind": "Class",
      "name": "AttestationManager"
    },
    "systems\\axon\\security\\attestation.py::AttestationManager::bind": {
      "file": "systems\\axon\\security\\attestation.py",
      "kind": "Method",
      "name": "bind"
    },
    "systems\\axon\\security\\attestation.py::AttestationManager::has_binding": {
      "file": "systems\\axon\\security\\attestation.py",
      "kind": "Method",
      "name": "has_binding"
    },
    "systems\\axon\\security\\attestation.py::AttestationManager::get_binding": {
      "file": "systems\\axon\\security\\attestation.py",
      "kind": "Method",
      "name": "get_binding"
    },
    "systems\\axon\\security\\attestation.py::AttestationManager::verify_binding": {
      "file": "systems\\axon\\security\\attestation.py",
      "kind": "Method",
      "name": "verify_binding"
    },
    "systems\\axon\\ab\\runner.py::_mk_shadow_intent": {
      "file": "systems\\axon\\ab\\runner.py",
      "kind": "Function",
      "name": "_mk_shadow_intent"
    },
    "systems\\axon\\events\\builder.py::_base_event": {
      "file": "systems\\axon\\events\\builder.py",
      "kind": "Function",
      "name": "_base_event"
    },
    "systems\\axon\\events\\builder.py::build_followups": {
      "file": "systems\\axon\\events\\builder.py",
      "kind": "Function",
      "name": "build_followups"
    },
    "systems\\axon\\events\\emitter.py::emit_followups_bg": {
      "file": "systems\\axon\\events\\emitter.py",
      "kind": "Function",
      "name": "emit_followups_bg"
    },
    "systems\\contra\\manifest\\models.py::Assertion": {
      "file": "systems\\contra\\manifest\\models.py",
      "kind": "Class",
      "name": "Assertion"
    },
    "systems\\contra\\manifest\\models.py::Diagnostic": {
      "file": "systems\\contra\\manifest\\models.py",
      "kind": "Class",
      "name": "Diagnostic"
    },
    "systems\\contra\\manifest\\assertions.py::CheckContext": {
      "file": "systems\\contra\\manifest\\assertions.py",
      "kind": "Class",
      "name": "CheckContext"
    },
    "systems\\contra\\manifest\\assertions.py::CheckContext::__init__": {
      "file": "systems\\contra\\manifest\\assertions.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\contra\\manifest\\assertions.py::check_alias_parity": {
      "file": "systems\\contra\\manifest\\assertions.py",
      "kind": "Function",
      "name": "check_alias_parity"
    },
    "systems\\contra\\manifest\\assertions.py::check_header_discipline": {
      "file": "systems\\contra\\manifest\\assertions.py",
      "kind": "Function",
      "name": "check_header_discipline"
    },
    "systems\\contra\\manifest\\assertions.py::check_tool_required_args": {
      "file": "systems\\contra\\manifest\\assertions.py",
      "kind": "Function",
      "name": "check_tool_required_args"
    },
    "systems\\contra\\manifest\\assertions.py::check_pydantic_drift": {
      "file": "systems\\contra\\manifest\\assertions.py",
      "kind": "Function",
      "name": "check_pydantic_drift"
    },
    "systems\\contra\\manifest\\assertions.py::check_illegal_self_edge": {
      "file": "systems\\contra\\manifest\\assertions.py",
      "kind": "Function",
      "name": "check_illegal_self_edge"
    },
    "systems\\contra\\manifest\\selector.py::select_pairs": {
      "file": "systems\\contra\\manifest\\selector.py",
      "kind": "Function",
      "name": "select_pairs"
    },
    "systems\\contra\\manifest\\autofixers.py::propose_add_alias_patch": {
      "file": "systems\\contra\\manifest\\autofixers.py",
      "kind": "Function",
      "name": "propose_add_alias_patch"
    },
    "systems\\contra\\manifest\\autofixers.py::propose_header_middleware_patch": {
      "file": "systems\\contra\\manifest\\autofixers.py",
      "kind": "Function",
      "name": "propose_header_middleware_patch"
    },
    "systems\\contra\\manifest\\autofixers.py::propose_swap_http_to_inproc": {
      "file": "systems\\contra\\manifest\\autofixers.py",
      "kind": "Function",
      "name": "propose_swap_http_to_inproc"
    },
    "systems\\contra\\manifest\\__init__.py::ContraConfig": {
      "file": "systems\\contra\\manifest\\__init__.py",
      "kind": "Class",
      "name": "ContraConfig"
    },
    "systems\\contra\\manifest\\__init__.py::_encode_gcb_spec": {
      "file": "systems\\contra\\manifest\\__init__.py",
      "kind": "Function",
      "name": "_encode_gcb_spec"
    },
    "systems\\contra\\manifest\\__init__.py::_targets_to_hints": {
      "file": "systems\\contra\\manifest\\__init__.py",
      "kind": "Function",
      "name": "_targets_to_hints"
    },
    "systems\\contra\\manifest\\__init__.py::start_contra_daemon": {
      "file": "systems\\contra\\manifest\\__init__.py",
      "kind": "Function",
      "name": "start_contra_daemon"
    },
    "systems\\evo\\config.py::EvoConfig": {
      "file": "systems\\evo\\config.py",
      "kind": "Class",
      "name": "EvoConfig"
    },
    "systems\\evo\\schemas.py::ConflictKind": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "ConflictKind"
    },
    "systems\\evo\\schemas.py::ConflictStatus": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "ConflictStatus"
    },
    "systems\\evo\\schemas.py::RiskLevel": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "RiskLevel"
    },
    "systems\\evo\\schemas.py::DecisionConfidence": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "DecisionConfidence"
    },
    "systems\\evo\\schemas.py::Reproducer": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "Reproducer"
    },
    "systems\\evo\\schemas.py::SpecCoverage": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "SpecCoverage"
    },
    "systems\\evo\\schemas.py::ConflictNode": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "ConflictNode"
    },
    "systems\\evo\\schemas.py::Hypothesis": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "Hypothesis"
    },
    "systems\\evo\\schemas.py::EvidenceBundle": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "EvidenceBundle"
    },
    "systems\\evo\\schemas.py::Proposal": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "Proposal"
    },
    "systems\\evo\\schemas.py::EvolutionProposal": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "EvolutionProposal"
    },
    "systems\\evo\\schemas.py::ObviousnessReport": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "ObviousnessReport"
    },
    "systems\\evo\\schemas.py::EscalationRequest": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "EscalationRequest"
    },
    "systems\\evo\\schemas.py::EscalationResult": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "EscalationResult"
    },
    "systems\\evo\\schemas.py::ReplayCapsule": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "ReplayCapsule"
    },
    "systems\\evo\\schemas.py::ReplayCapsule::Inputs": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "Inputs"
    },
    "systems\\evo\\schemas.py::ReplayCapsule::Versions": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "Versions"
    },
    "systems\\evo\\schemas.py::ReplayCapsule::Artifacts": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "Artifacts"
    },
    "systems\\evo\\schemas.py::WhyTrace": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "WhyTrace"
    },
    "systems\\evo\\schemas.py::InnovationBrief": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "InnovationBrief"
    },
    "systems\\evo\\schemas.py::CapabilitySpec": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "CapabilitySpec"
    },
    "systems\\evo\\schemas.py::SkillProfile": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "SkillProfile"
    },
    "systems\\evo\\schemas.py::PatchCandidate": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "PatchCandidate"
    },
    "systems\\evo\\schemas.py::MutationRecord": {
      "file": "systems\\evo\\schemas.py",
      "kind": "Class",
      "name": "MutationRecord"
    },
    "systems\\evo\\conflicts.py::ConflictsService": {
      "file": "systems\\evo\\conflicts.py",
      "kind": "Class",
      "name": "ConflictsService"
    },
    "systems\\evo\\conflicts.py::ConflictsService::__init__": {
      "file": "systems\\evo\\conflicts.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\conflicts.py::ConflictsService::record_conflict": {
      "file": "systems\\evo\\conflicts.py",
      "kind": "Method",
      "name": "record_conflict"
    },
    "systems\\evo\\conflicts.py::ConflictsService::batch": {
      "file": "systems\\evo\\conflicts.py",
      "kind": "Method",
      "name": "batch"
    },
    "systems\\evo\\conflicts.py::ConflictsService::link": {
      "file": "systems\\evo\\conflicts.py",
      "kind": "Method",
      "name": "link"
    },
    "systems\\evo\\conflicts.py::ConflictsService::list_open": {
      "file": "systems\\evo\\conflicts.py",
      "kind": "Method",
      "name": "list_open"
    },
    "systems\\evo\\conflicts.py::ConflictsService::get": {
      "file": "systems\\evo\\conflicts.py",
      "kind": "Method",
      "name": "get"
    },
    "systems\\evo\\conflicts.py::ConflictsService::set_status": {
      "file": "systems\\evo\\conflicts.py",
      "kind": "Method",
      "name": "set_status"
    },
    "systems\\evo\\engine.py::EvoEngine": {
      "file": "systems\\evo\\engine.py",
      "kind": "Class",
      "name": "EvoEngine"
    },
    "systems\\evo\\engine.py::EvoEngine::__init__": {
      "file": "systems\\evo\\engine.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\engine.py::EvoEngine::intake_conflicts": {
      "file": "systems\\evo\\engine.py",
      "kind": "Method",
      "name": "intake_conflicts"
    },
    "systems\\evo\\engine.py::EvoEngine::_make_brief": {
      "file": "systems\\evo\\engine.py",
      "kind": "Method",
      "name": "_make_brief"
    },
    "systems\\evo\\engine.py::EvoEngine::_format_attention_bid_event": {
      "file": "systems\\evo\\engine.py",
      "kind": "Method",
      "name": "_format_attention_bid_event"
    },
    "systems\\evo\\runtime.py::get_engine": {
      "file": "systems\\evo\\runtime.py",
      "kind": "Function",
      "name": "get_engine"
    },
    "systems\\evo\\hypotheses\\factory.py::HypothesisFactory": {
      "file": "systems\\evo\\hypotheses\\factory.py",
      "kind": "Class",
      "name": "HypothesisFactory"
    },
    "systems\\evo\\hypotheses\\factory.py::HypothesisFactory::for_conflict": {
      "file": "systems\\evo\\hypotheses\\factory.py",
      "kind": "Method",
      "name": "for_conflict"
    },
    "systems\\evo\\hypotheses\\factory.py::HypothesisService": {
      "file": "systems\\evo\\hypotheses\\factory.py",
      "kind": "Class",
      "name": "HypothesisService"
    },
    "systems\\evo\\hypotheses\\factory.py::HypothesisService::__init__": {
      "file": "systems\\evo\\hypotheses\\factory.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\hypotheses\\factory.py::HypothesisService::spawn": {
      "file": "systems\\evo\\hypotheses\\factory.py",
      "kind": "Method",
      "name": "spawn"
    },
    "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator": {
      "file": "systems\\evo\\evidence\\collector.py",
      "kind": "Class",
      "name": "EvidenceOrchestrator"
    },
    "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::__init__": {
      "file": "systems\\evo\\evidence\\collector.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::plan_suite": {
      "file": "systems\\evo\\evidence\\collector.py",
      "kind": "Method",
      "name": "plan_suite"
    },
    "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::request": {
      "file": "systems\\evo\\evidence\\collector.py",
      "kind": "Method",
      "name": "request"
    },
    "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::collect": {
      "file": "systems\\evo\\evidence\\collector.py",
      "kind": "Method",
      "name": "collect"
    },
    "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::attach_replay_capsule": {
      "file": "systems\\evo\\evidence\\collector.py",
      "kind": "Method",
      "name": "attach_replay_capsule"
    },
    "systems\\evo\\evidence\\modalities.py::EvidenceModality": {
      "file": "systems\\evo\\evidence\\modalities.py",
      "kind": "Class",
      "name": "EvidenceModality"
    },
    "systems\\evo\\evidence\\modalities.py::DiffRiskModality": {
      "file": "systems\\evo\\evidence\\modalities.py",
      "kind": "Class",
      "name": "DiffRiskModality"
    },
    "systems\\evo\\evidence\\modalities.py::InvariantsCheckModality": {
      "file": "systems\\evo\\evidence\\modalities.py",
      "kind": "Class",
      "name": "InvariantsCheckModality"
    },
    "systems\\evo\\evidence\\modalities.py::ForecastBacktestModality": {
      "file": "systems\\evo\\evidence\\modalities.py",
      "kind": "Class",
      "name": "ForecastBacktestModality"
    },
    "systems\\evo\\proposals\\assembler.py::ProposalAssembler": {
      "file": "systems\\evo\\proposals\\assembler.py",
      "kind": "Class",
      "name": "ProposalAssembler"
    },
    "systems\\evo\\proposals\\assembler.py::ProposalAssembler::__init__": {
      "file": "systems\\evo\\proposals\\assembler.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble": {
      "file": "systems\\evo\\proposals\\assembler.py",
      "kind": "Method",
      "name": "assemble"
    },
    "systems\\evo\\proposals\\assembler.py::ProposalAssembler::validate_completeness": {
      "file": "systems\\evo\\proposals\\assembler.py",
      "kind": "Method",
      "name": "validate_completeness"
    },
    "systems\\evo\\proposals\\assembler.py::ProposalAssembler::get": {
      "file": "systems\\evo\\proposals\\assembler.py",
      "kind": "Method",
      "name": "get"
    },
    "systems\\evo\\proposals\\assembler.py::ProposalAssembler::handover": {
      "file": "systems\\evo\\proposals\\assembler.py",
      "kind": "Method",
      "name": "handover"
    },
    "systems\\evo\\proposals\\assembler.py::ProposalAssembler::_score_risk": {
      "file": "systems\\evo\\proposals\\assembler.py",
      "kind": "Method",
      "name": "_score_risk"
    },
    "systems\\evo\\proposals\\review.py::ProposalReview": {
      "file": "systems\\evo\\proposals\\review.py",
      "kind": "Class",
      "name": "ProposalReview"
    },
    "systems\\evo\\proposals\\review.py::ProposalReview::__init__": {
      "file": "systems\\evo\\proposals\\review.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\proposals\\review.py::ProposalReview::review": {
      "file": "systems\\evo\\proposals\\review.py",
      "kind": "Method",
      "name": "review"
    },
    "systems\\evo\\replay\\metrics.py::EvoTelemetry": {
      "file": "systems\\evo\\replay\\metrics.py",
      "kind": "Class",
      "name": "EvoTelemetry"
    },
    "systems\\evo\\replay\\metrics.py::EvoTelemetry::record_event": {
      "file": "systems\\evo\\replay\\metrics.py",
      "kind": "Method",
      "name": "record_event"
    },
    "systems\\evo\\replay\\metrics.py::EvoTelemetry::proposal_emitted": {
      "file": "systems\\evo\\replay\\metrics.py",
      "kind": "Method",
      "name": "proposal_emitted"
    },
    "systems\\evo\\replay\\metrics.py::EvoTelemetry::replay_verified": {
      "file": "systems\\evo\\replay\\metrics.py",
      "kind": "Method",
      "name": "replay_verified"
    },
    "systems\\evo\\replay\\manager.py::ReplayCapsuleManager": {
      "file": "systems\\evo\\replay\\manager.py",
      "kind": "Class",
      "name": "ReplayCapsuleManager"
    },
    "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::__init__": {
      "file": "systems\\evo\\replay\\manager.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::add": {
      "file": "systems\\evo\\replay\\manager.py",
      "kind": "Method",
      "name": "add"
    },
    "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::manifest": {
      "file": "systems\\evo\\replay\\manager.py",
      "kind": "Method",
      "name": "manifest"
    },
    "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::verify": {
      "file": "systems\\evo\\replay\\manager.py",
      "kind": "Method",
      "name": "verify"
    },
    "systems\\evo\\replay\\builder.py::_stable_barcode": {
      "file": "systems\\evo\\replay\\builder.py",
      "kind": "Function",
      "name": "_stable_barcode"
    },
    "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder": {
      "file": "systems\\evo\\replay\\builder.py",
      "kind": "Class",
      "name": "ReplayCapsuleBuilder"
    },
    "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder::__init__": {
      "file": "systems\\evo\\replay\\builder.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder::build": {
      "file": "systems\\evo\\replay\\builder.py",
      "kind": "Method",
      "name": "build"
    },
    "systems\\evo\\telemetry\\metrics.py::EvoTelemetry": {
      "file": "systems\\evo\\telemetry\\metrics.py",
      "kind": "Class",
      "name": "EvoTelemetry"
    },
    "systems\\evo\\telemetry\\metrics.py::EvoTelemetry::record_event": {
      "file": "systems\\evo\\telemetry\\metrics.py",
      "kind": "Method",
      "name": "record_event"
    },
    "systems\\evo\\telemetry\\metrics.py::EvoTelemetry::proposal_emitted": {
      "file": "systems\\evo\\telemetry\\metrics.py",
      "kind": "Method",
      "name": "proposal_emitted"
    },
    "systems\\evo\\telemetry\\metrics.py::EvoTelemetry::replay_verified": {
      "file": "systems\\evo\\telemetry\\metrics.py",
      "kind": "Method",
      "name": "replay_verified"
    },
    "systems\\evo\\gates\\obviousness.py::ObviousnessGate": {
      "file": "systems\\evo\\gates\\obviousness.py",
      "kind": "Class",
      "name": "ObviousnessGate"
    },
    "systems\\evo\\gates\\obviousness.py::ObviousnessGate::__init__": {
      "file": "systems\\evo\\gates\\obviousness.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\gates\\obviousness.py::ObviousnessGate::score": {
      "file": "systems\\evo\\gates\\obviousness.py",
      "kind": "Method",
      "name": "score"
    },
    "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_per_conflict_features": {
      "file": "systems\\evo\\gates\\obviousness.py",
      "kind": "Method",
      "name": "_per_conflict_features"
    },
    "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine": {
      "file": "systems\\evo\\gates\\obviousness.py",
      "kind": "Method",
      "name": "_combine"
    },
    "systems\\evo\\clients\\nova_client.py::NovaClient": {
      "file": "systems\\evo\\clients\\nova_client.py",
      "kind": "Class",
      "name": "NovaClient"
    },
    "systems\\evo\\clients\\atune_client.py::_hash16": {
      "file": "systems\\evo\\clients\\atune_client.py",
      "kind": "Function",
      "name": "_hash16"
    },
    "systems\\evo\\clients\\atune_client.py::AtuneClient": {
      "file": "systems\\evo\\clients\\atune_client.py",
      "kind": "Class",
      "name": "AtuneClient"
    },
    "systems\\evo\\clients\\synapse_client.py::ArmSelectionRequest": {
      "file": "systems\\evo\\clients\\synapse_client.py",
      "kind": "Class",
      "name": "ArmSelectionRequest"
    },
    "systems\\evo\\clients\\synapse_client.py::ArmSelectionResponse": {
      "file": "systems\\evo\\clients\\synapse_client.py",
      "kind": "Class",
      "name": "ArmSelectionResponse"
    },
    "systems\\evo\\clients\\synapse_client.py::LogOutcomeRequest": {
      "file": "systems\\evo\\clients\\synapse_client.py",
      "kind": "Class",
      "name": "LogOutcomeRequest"
    },
    "systems\\evo\\clients\\synapse_client.py::SynapseClient": {
      "file": "systems\\evo\\clients\\synapse_client.py",
      "kind": "Class",
      "name": "SynapseClient"
    },
    "systems\\evo\\clients\\simula_client.py::SimulaClient": {
      "file": "systems\\evo\\clients\\simula_client.py",
      "kind": "Class",
      "name": "SimulaClient"
    },
    "systems\\evo\\scorecards\\exporter.py::_h": {
      "file": "systems\\evo\\scorecards\\exporter.py",
      "kind": "Function",
      "name": "_h"
    },
    "systems\\evo\\scorecards\\exporter.py::ScorecardExporter": {
      "file": "systems\\evo\\scorecards\\exporter.py",
      "kind": "Class",
      "name": "ScorecardExporter"
    },
    "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build": {
      "file": "systems\\evo\\scorecards\\exporter.py",
      "kind": "Method",
      "name": "build"
    },
    "systems\\evo\\repair\\tracker.py::RepairTicket": {
      "file": "systems\\evo\\repair\\tracker.py",
      "kind": "Class",
      "name": "RepairTicket"
    },
    "systems\\evo\\repair\\tracker.py::RepairTracker": {
      "file": "systems\\evo\\repair\\tracker.py",
      "kind": "Class",
      "name": "RepairTracker"
    },
    "systems\\evo\\repair\\tracker.py::RepairTracker::__init__": {
      "file": "systems\\evo\\repair\\tracker.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\repair\\tracker.py::RepairTracker::record": {
      "file": "systems\\evo\\repair\\tracker.py",
      "kind": "Method",
      "name": "record"
    },
    "systems\\evo\\repair\\tracker.py::RepairTracker::update": {
      "file": "systems\\evo\\repair\\tracker.py",
      "kind": "Method",
      "name": "update"
    },
    "systems\\evo\\repair\\tracker.py::RepairTracker::get": {
      "file": "systems\\evo\\repair\\tracker.py",
      "kind": "Method",
      "name": "get"
    },
    "systems\\evo\\repair\\tracker.py::RepairTracker::list": {
      "file": "systems\\evo\\repair\\tracker.py",
      "kind": "Method",
      "name": "list"
    },
    "systems\\evo\\briefs\\innovation.py::build_innovation_brief": {
      "file": "systems\\evo\\briefs\\innovation.py",
      "kind": "Function",
      "name": "build_innovation_brief"
    },
    "systems\\evo\\assemble\\assembler.py::ProposalAssembler": {
      "file": "systems\\evo\\assemble\\assembler.py",
      "kind": "Class",
      "name": "ProposalAssembler"
    },
    "systems\\evo\\assemble\\assembler.py::ProposalAssembler::__init__": {
      "file": "systems\\evo\\assemble\\assembler.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\assemble\\assembler.py::ProposalAssembler::assemble": {
      "file": "systems\\evo\\assemble\\assembler.py",
      "kind": "Method",
      "name": "assemble"
    },
    "systems\\evo\\assemble\\assembler.py::ProposalAssembler::validate_completeness": {
      "file": "systems\\evo\\assemble\\assembler.py",
      "kind": "Method",
      "name": "validate_completeness"
    },
    "systems\\evo\\assemble\\assembler.py::ProposalAssembler::get": {
      "file": "systems\\evo\\assemble\\assembler.py",
      "kind": "Method",
      "name": "get"
    },
    "systems\\evo\\assemble\\assembler.py::ProposalAssembler::handover": {
      "file": "systems\\evo\\assemble\\assembler.py",
      "kind": "Method",
      "name": "handover"
    },
    "systems\\evo\\conflicts\\store.py::ConflictStore": {
      "file": "systems\\evo\\conflicts\\store.py",
      "kind": "Class",
      "name": "ConflictStore"
    },
    "systems\\evo\\conflicts\\store.py::ConflictStore::__init__": {
      "file": "systems\\evo\\conflicts\\store.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\conflicts\\store.py::ConflictStore::record_conflict": {
      "file": "systems\\evo\\conflicts\\store.py",
      "kind": "Method",
      "name": "record_conflict"
    },
    "systems\\evo\\conflicts\\store.py::ConflictStore::intake_conflicts": {
      "file": "systems\\evo\\conflicts\\store.py",
      "kind": "Method",
      "name": "intake_conflicts"
    },
    "systems\\evo\\conflicts\\store.py::ConflictStore::get": {
      "file": "systems\\evo\\conflicts\\store.py",
      "kind": "Method",
      "name": "get"
    },
    "systems\\evo\\conflicts\\store.py::ConflictStore::list_open": {
      "file": "systems\\evo\\conflicts\\store.py",
      "kind": "Method",
      "name": "list_open"
    },
    "systems\\evo\\spec\\deriver.py::SpecDeriver": {
      "file": "systems\\evo\\spec\\deriver.py",
      "kind": "Class",
      "name": "SpecDeriver"
    },
    "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations": {
      "file": "systems\\evo\\spec\\deriver.py",
      "kind": "Method",
      "name": "derive_obligations"
    },
    "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_rollback": {
      "file": "systems\\evo\\spec\\deriver.py",
      "kind": "Method",
      "name": "derive_rollback"
    },
    "systems\\evo\\spec\\deriver.py::SpecDeriver::impact_table": {
      "file": "systems\\evo\\spec\\deriver.py",
      "kind": "Method",
      "name": "impact_table"
    },
    "systems\\evo\\spec\\validators.py::SpecValidators": {
      "file": "systems\\evo\\spec\\validators.py",
      "kind": "Class",
      "name": "SpecValidators"
    },
    "systems\\evo\\spec\\validators.py::SpecValidators::check_obligation_presence": {
      "file": "systems\\evo\\spec\\validators.py",
      "kind": "Method",
      "name": "check_obligation_presence"
    },
    "systems\\evo\\spec\\validators.py::SpecValidators::check_rollback_contract": {
      "file": "systems\\evo\\spec\\validators.py",
      "kind": "Method",
      "name": "check_rollback_contract"
    },
    "systems\\evo\\journal\\ledger.py::_neo_safe_exc": {
      "file": "systems\\evo\\journal\\ledger.py",
      "kind": "Function",
      "name": "_neo_safe_exc"
    },
    "systems\\evo\\journal\\ledger.py::EvoLedger": {
      "file": "systems\\evo\\journal\\ledger.py",
      "kind": "Class",
      "name": "EvoLedger"
    },
    "systems\\evo\\routing\\payloads.py::TargetHint": {
      "file": "systems\\evo\\routing\\payloads.py",
      "kind": "Class",
      "name": "TargetHint"
    },
    "systems\\evo\\routing\\payloads.py::SimulaCodegenRequest": {
      "file": "systems\\evo\\routing\\payloads.py",
      "kind": "Class",
      "name": "SimulaCodegenRequest"
    },
    "systems\\evo\\routing\\payloads.py::EquorAttestation": {
      "file": "systems\\evo\\routing\\payloads.py",
      "kind": "Class",
      "name": "EquorAttestation"
    },
    "systems\\evo\\routing\\payloads.py::RoutingError": {
      "file": "systems\\evo\\routing\\payloads.py",
      "kind": "Class",
      "name": "RoutingError"
    },
    "systems\\evo\\routing\\payloads.py::RoutingError::__init__": {
      "file": "systems\\evo\\routing\\payloads.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\routing\\payloads.py::AtuneDeliberationRequest": {
      "file": "systems\\evo\\routing\\payloads.py",
      "kind": "Class",
      "name": "AtuneDeliberationRequest"
    },
    "systems\\evo\\routing\\payloads.py::AtuneAttentionBid": {
      "file": "systems\\evo\\routing\\payloads.py",
      "kind": "Class",
      "name": "AtuneAttentionBid"
    },
    "systems\\evo\\routing\\router.py::RouterService": {
      "file": "systems\\evo\\routing\\router.py",
      "kind": "Class",
      "name": "RouterService"
    },
    "systems\\evo\\dialectics\\tension_miner.py::TensionMiner": {
      "file": "systems\\evo\\dialectics\\tension_miner.py",
      "kind": "Class",
      "name": "TensionMiner"
    },
    "systems\\evo\\graphs\\genome_map.py::GenomeMapper": {
      "file": "systems\\evo\\graphs\\genome_map.py",
      "kind": "Class",
      "name": "GenomeMapper"
    },
    "systems\\evo\\graphs\\genome_map.py::GenomeMapper::scan_repo": {
      "file": "systems\\evo\\graphs\\genome_map.py",
      "kind": "Method",
      "name": "scan_repo"
    },
    "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics": {
      "file": "systems\\evo\\graphs\\genome_map.py",
      "kind": "Method",
      "name": "_file_metrics"
    },
    "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller": {
      "file": "systems\\evo\\counterexamples\\distiller.py",
      "kind": "Class",
      "name": "CounterexampleDistiller"
    },
    "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller::distill": {
      "file": "systems\\evo\\counterexamples\\distiller.py",
      "kind": "Method",
      "name": "distill"
    },
    "systems\\evo\\policies\\sentinel.py::PolicySentinel": {
      "file": "systems\\evo\\policies\\sentinel.py",
      "kind": "Class",
      "name": "PolicySentinel"
    },
    "systems\\evo\\policies\\sentinel.py::PolicySentinel::__init__": {
      "file": "systems\\evo\\policies\\sentinel.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\evo\\metrics\\harvesters.py::_ms": {
      "file": "systems\\evo\\metrics\\harvesters.py",
      "kind": "Function",
      "name": "_ms"
    },
    "systems\\evo\\metrics\\harvesters.py::_avg": {
      "file": "systems\\evo\\metrics\\harvesters.py",
      "kind": "Function",
      "name": "_avg"
    },
    "systems\\evo\\metrics\\harvesters.py::_get_score": {
      "file": "systems\\evo\\metrics\\harvesters.py",
      "kind": "Function",
      "name": "_get_score"
    },
    "systems\\evo\\metrics\\harvesters.py::build_nova_metrics": {
      "file": "systems\\evo\\metrics\\harvesters.py",
      "kind": "Function",
      "name": "build_nova_metrics"
    },
    "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics": {
      "file": "systems\\evo\\metrics\\harvesters.py",
      "kind": "Function",
      "name": "derive_eval_metrics"
    },
    "systems\\evo\\metrics\\harvesters.py::merge_metrics": {
      "file": "systems\\evo\\metrics\\harvesters.py",
      "kind": "Function",
      "name": "merge_metrics"
    },
    "systems\\nova\\schemas.py::InnovationBrief": {
      "file": "systems\\nova\\schemas.py",
      "kind": "Class",
      "name": "InnovationBrief"
    },
    "systems\\nova\\schemas.py::InventionArtifact": {
      "file": "systems\\nova\\schemas.py",
      "kind": "Class",
      "name": "InventionArtifact"
    },
    "systems\\nova\\schemas.py::InventionCandidate": {
      "file": "systems\\nova\\schemas.py",
      "kind": "Class",
      "name": "InventionCandidate"
    },
    "systems\\nova\\schemas.py::DesignCapsule": {
      "file": "systems\\nova\\schemas.py",
      "kind": "Class",
      "name": "DesignCapsule"
    },
    "systems\\nova\\schemas.py::AuctionResult": {
      "file": "systems\\nova\\schemas.py",
      "kind": "Class",
      "name": "AuctionResult"
    },
    "systems\\nova\\schemas.py::RolloutRequest": {
      "file": "systems\\nova\\schemas.py",
      "kind": "Class",
      "name": "RolloutRequest"
    },
    "systems\\nova\\schemas.py::RolloutResult": {
      "file": "systems\\nova\\schemas.py",
      "kind": "Class",
      "name": "RolloutResult"
    },
    "systems\\nova\\ledger\\ledger.py::_barcode": {
      "file": "systems\\nova\\ledger\\ledger.py",
      "kind": "Function",
      "name": "_barcode"
    },
    "systems\\nova\\ledger\\ledger.py::_as_dict": {
      "file": "systems\\nova\\ledger\\ledger.py",
      "kind": "Function",
      "name": "_as_dict"
    },
    "systems\\nova\\ledger\\ledger.py::NovaLedger": {
      "file": "systems\\nova\\ledger\\ledger.py",
      "kind": "Class",
      "name": "NovaLedger"
    },
    "systems\\nova\\ledger\\ledger.py::NovaLedger::__init__": {
      "file": "systems\\nova\\ledger\\ledger.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\nova\\runners\\playbook_runner.py::PlaybookRunner": {
      "file": "systems\\nova\\runners\\playbook_runner.py",
      "kind": "Class",
      "name": "PlaybookRunner"
    },
    "systems\\nova\\runners\\playbook_runner.py::PlaybookRunner::__init__": {
      "file": "systems\\nova\\runners\\playbook_runner.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\nova\\runners\\playbook_runner.py::PlaybookRunner::_refresh_registry": {
      "file": "systems\\nova\\runners\\playbook_runner.py",
      "kind": "Method",
      "name": "_refresh_registry"
    },
    "systems\\nova\\runners\\eval_runner.py::EvalRunner": {
      "file": "systems\\nova\\runners\\eval_runner.py",
      "kind": "Class",
      "name": "EvalRunner"
    },
    "systems\\nova\\runners\\auction_client.py::_value": {
      "file": "systems\\nova\\runners\\auction_client.py",
      "kind": "Function",
      "name": "_value"
    },
    "systems\\nova\\runners\\auction_client.py::_receipt_hash": {
      "file": "systems\\nova\\runners\\auction_client.py",
      "kind": "Function",
      "name": "_receipt_hash"
    },
    "systems\\nova\\runners\\auction_client.py::AuctionClient": {
      "file": "systems\\nova\\runners\\auction_client.py",
      "kind": "Class",
      "name": "AuctionClient"
    },
    "systems\\nova\\runners\\rollout_client.py::RolloutClient": {
      "file": "systems\\nova\\runners\\rollout_client.py",
      "kind": "Class",
      "name": "RolloutClient"
    },
    "systems\\nova\\runners\\interpreter.py::Step": {
      "file": "systems\\nova\\runners\\interpreter.py",
      "kind": "Class",
      "name": "Step"
    },
    "systems\\nova\\runners\\interpreter.py::Plan": {
      "file": "systems\\nova\\runners\\interpreter.py",
      "kind": "Class",
      "name": "Plan"
    },
    "systems\\nova\\runners\\interpreter.py::MechanismInterpreter": {
      "file": "systems\\nova\\runners\\interpreter.py",
      "kind": "Class",
      "name": "MechanismInterpreter"
    },
    "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile": {
      "file": "systems\\nova\\runners\\interpreter.py",
      "kind": "Method",
      "name": "compile"
    },
    "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::simulate": {
      "file": "systems\\nova\\runners\\interpreter.py",
      "kind": "Method",
      "name": "simulate"
    },
    "systems\\nova\\runners\\patch_handoff.py::PatchHandoff": {
      "file": "systems\\nova\\runners\\patch_handoff.py",
      "kind": "Class",
      "name": "PatchHandoff"
    },
    "systems\\nova\\runners\\patch_handoff.py::PatchHandoff::__init__": {
      "file": "systems\\nova\\runners\\patch_handoff.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\nova\\runners\\patch_handoff.py::PatchHandoff::to_brief": {
      "file": "systems\\nova\\runners\\patch_handoff.py",
      "kind": "Method",
      "name": "to_brief"
    },
    "systems\\nova\\runners\\meta_playbook.py::MetaPlaybookComposer": {
      "file": "systems\\nova\\runners\\meta_playbook.py",
      "kind": "Class",
      "name": "MetaPlaybookComposer"
    },
    "systems\\nova\\runners\\portfolio_runner.py::PortfolioRunner": {
      "file": "systems\\nova\\runners\\portfolio_runner.py",
      "kind": "Class",
      "name": "PortfolioRunner"
    },
    "systems\\nova\\runners\\portfolio_runner.py::PortfolioRunner::__init__": {
      "file": "systems\\nova\\runners\\portfolio_runner.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\nova\\dsl\\specs.py::MechanismOp": {
      "file": "systems\\nova\\dsl\\specs.py",
      "kind": "Class",
      "name": "MechanismOp"
    },
    "systems\\nova\\dsl\\specs.py::MechanismSpec": {
      "file": "systems\\nova\\dsl\\specs.py",
      "kind": "Class",
      "name": "MechanismSpec"
    },
    "systems\\nova\\dsl\\specs.py::CapabilitySpec": {
      "file": "systems\\nova\\dsl\\specs.py",
      "kind": "Class",
      "name": "CapabilitySpec"
    },
    "systems\\nova\\dsl\\specs.py::ProofSpec": {
      "file": "systems\\nova\\dsl\\specs.py",
      "kind": "Class",
      "name": "ProofSpec"
    },
    "systems\\nova\\dsl\\interpreter.py::Step": {
      "file": "systems\\nova\\dsl\\interpreter.py",
      "kind": "Class",
      "name": "Step"
    },
    "systems\\nova\\dsl\\interpreter.py::Plan": {
      "file": "systems\\nova\\dsl\\interpreter.py",
      "kind": "Class",
      "name": "Plan"
    },
    "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter": {
      "file": "systems\\nova\\dsl\\interpreter.py",
      "kind": "Class",
      "name": "MechanismInterpreter"
    },
    "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile": {
      "file": "systems\\nova\\dsl\\interpreter.py",
      "kind": "Method",
      "name": "compile"
    },
    "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::simulate": {
      "file": "systems\\nova\\dsl\\interpreter.py",
      "kind": "Method",
      "name": "simulate"
    },
    "systems\\nova\\dsl\\lint.py::LintIssue": {
      "file": "systems\\nova\\dsl\\lint.py",
      "kind": "Class",
      "name": "LintIssue"
    },
    "systems\\nova\\dsl\\lint.py::_has_cycle": {
      "file": "systems\\nova\\dsl\\lint.py",
      "kind": "Function",
      "name": "_has_cycle"
    },
    "systems\\nova\\dsl\\lint.py::lint_mechanism": {
      "file": "systems\\nova\\dsl\\lint.py",
      "kind": "Function",
      "name": "lint_mechanism"
    },
    "systems\\nova\\dsl\\mutate.py::_is_number": {
      "file": "systems\\nova\\dsl\\mutate.py",
      "kind": "Function",
      "name": "_is_number"
    },
    "systems\\nova\\dsl\\mutate.py::_jiggle_number": {
      "file": "systems\\nova\\dsl\\mutate.py",
      "kind": "Function",
      "name": "_jiggle_number"
    },
    "systems\\nova\\dsl\\mutate.py::_clone_mech": {
      "file": "systems\\nova\\dsl\\mutate.py",
      "kind": "Function",
      "name": "_clone_mech"
    },
    "systems\\nova\\dsl\\mutate.py::MechanismMutator": {
      "file": "systems\\nova\\dsl\\mutate.py",
      "kind": "Class",
      "name": "MechanismMutator"
    },
    "systems\\nova\\dsl\\mutate.py::MechanismMutator::_jiggle_params": {
      "file": "systems\\nova\\dsl\\mutate.py",
      "kind": "Method",
      "name": "_jiggle_params"
    },
    "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_batch_after_first": {
      "file": "systems\\nova\\dsl\\mutate.py",
      "kind": "Method",
      "name": "_ensure_batch_after_first"
    },
    "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix": {
      "file": "systems\\nova\\dsl\\mutate.py",
      "kind": "Method",
      "name": "_ensure_critique_repair_suffix"
    },
    "systems\\nova\\dsl\\mutate.py::MechanismMutator::mutate_mechanism": {
      "file": "systems\\nova\\dsl\\mutate.py",
      "kind": "Method",
      "name": "mutate_mechanism"
    },
    "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate": {
      "file": "systems\\nova\\dsl\\mutate.py",
      "kind": "Method",
      "name": "augment_candidate"
    },
    "systems\\nova\\playbooks\\qdelites.py::QDElitesPlaybook": {
      "file": "systems\\nova\\playbooks\\qdelites.py",
      "kind": "Class",
      "name": "QDElitesPlaybook"
    },
    "systems\\nova\\playbooks\\tot_mcts.py::ToTMCTSPlaybook": {
      "file": "systems\\nova\\playbooks\\tot_mcts.py",
      "kind": "Class",
      "name": "ToTMCTSPlaybook"
    },
    "systems\\nova\\playbooks\\dreamcoder_lib.py::DreamCoderLibraryPlaybook": {
      "file": "systems\\nova\\playbooks\\dreamcoder_lib.py",
      "kind": "Class",
      "name": "DreamCoderLibraryPlaybook"
    },
    "systems\\nova\\playbooks\\registry.py::BasePlaybook": {
      "file": "systems\\nova\\playbooks\\registry.py",
      "kind": "Class",
      "name": "BasePlaybook"
    },
    "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader": {
      "file": "systems\\nova\\playbooks\\hotreload.py",
      "kind": "Class",
      "name": "PlaybookHotReloader"
    },
    "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::__init__": {
      "file": "systems\\nova\\playbooks\\hotreload.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::_iter_modules": {
      "file": "systems\\nova\\playbooks\\hotreload.py",
      "kind": "Method",
      "name": "_iter_modules"
    },
    "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::check_reload": {
      "file": "systems\\nova\\playbooks\\hotreload.py",
      "kind": "Method",
      "name": "check_reload"
    },
    "systems\\nova\\proof\\pcc.py::ProofResult": {
      "file": "systems\\nova\\proof\\pcc.py",
      "kind": "Class",
      "name": "ProofResult"
    },
    "systems\\nova\\proof\\pcc.py::ProofVM": {
      "file": "systems\\nova\\proof\\pcc.py",
      "kind": "Class",
      "name": "ProofVM"
    },
    "systems\\nova\\proof\\pcc.py::ProofVM::__get_pydantic_core_schema__": {
      "file": "systems\\nova\\proof\\pcc.py",
      "kind": "Method",
      "name": "__get_pydantic_core_schema__"
    },
    "systems\\nova\\proof\\pcc.py::ProofVM::_validate": {
      "file": "systems\\nova\\proof\\pcc.py",
      "kind": "Method",
      "name": "_validate"
    },
    "systems\\nova\\proof\\pcc.py::ProofVM::check": {
      "file": "systems\\nova\\proof\\pcc.py",
      "kind": "Method",
      "name": "check"
    },
    "systems\\nova\\proof\\pcc_ext.py::ProofVMExt": {
      "file": "systems\\nova\\proof\\pcc_ext.py",
      "kind": "Class",
      "name": "ProofVMExt"
    },
    "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::base": {
      "file": "systems\\nova\\proof\\pcc_ext.py",
      "kind": "Method",
      "name": "base"
    },
    "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check": {
      "file": "systems\\nova\\proof\\pcc_ext.py",
      "kind": "Method",
      "name": "check"
    },
    "systems\\nova\\proof\\pyd_types.py::_vm_serialize": {
      "file": "systems\\nova\\proof\\pyd_types.py",
      "kind": "Function",
      "name": "_vm_serialize"
    },
    "systems\\nova\\types\\patch.py::SimulaPatchBrief": {
      "file": "systems\\nova\\types\\patch.py",
      "kind": "Class",
      "name": "SimulaPatchBrief"
    },
    "systems\\nova\\types\\patch.py::SimulaPatchTicket": {
      "file": "systems\\nova\\types\\patch.py",
      "kind": "Class",
      "name": "SimulaPatchTicket"
    },
    "systems\\nova\\clients\\simula_client.py::_as_dict": {
      "file": "systems\\nova\\clients\\simula_client.py",
      "kind": "Function",
      "name": "_as_dict"
    },
    "systems\\nova\\clients\\simula_client.py::_resolve": {
      "file": "systems\\nova\\clients\\simula_client.py",
      "kind": "Function",
      "name": "_resolve"
    },
    "systems\\nova\\clients\\simula_client.py::SimulaClient": {
      "file": "systems\\nova\\clients\\simula_client.py",
      "kind": "Class",
      "name": "SimulaClient"
    },
    "systems\\nova\\clients\\synapse_client.py::SynapseBudgetClient": {
      "file": "systems\\nova\\clients\\synapse_client.py",
      "kind": "Class",
      "name": "SynapseBudgetClient"
    },
    "systems\\nova\\clients\\synapse_client.py::SynapseBudgetClient::__init__": {
      "file": "systems\\nova\\clients\\synapse_client.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\nova\\clients\\equor_client.py::EquorPolicyClient": {
      "file": "systems\\nova\\clients\\equor_client.py",
      "kind": "Class",
      "name": "EquorPolicyClient"
    },
    "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline": {
      "file": "systems\\nova\\pipelines\\winner_pipeline.py",
      "kind": "Class",
      "name": "WinnerPipeline"
    },
    "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::__init__": {
      "file": "systems\\nova\\pipelines\\winner_pipeline.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::_pick_winners": {
      "file": "systems\\nova\\pipelines\\winner_pipeline.py",
      "kind": "Method",
      "name": "_pick_winners"
    },
    "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::_build_simula_patch_brief": {
      "file": "systems\\nova\\pipelines\\winner_pipeline.py",
      "kind": "Method",
      "name": "_build_simula_patch_brief"
    },
    "systems\\nova\\insights\\self_model.py::ArmStats": {
      "file": "systems\\nova\\insights\\self_model.py",
      "kind": "Class",
      "name": "ArmStats"
    },
    "systems\\nova\\insights\\self_model.py::_h16": {
      "file": "systems\\nova\\insights\\self_model.py",
      "kind": "Function",
      "name": "_h16"
    },
    "systems\\nova\\insights\\self_model.py::NovaSelfModel": {
      "file": "systems\\nova\\insights\\self_model.py",
      "kind": "Class",
      "name": "NovaSelfModel"
    },
    "systems\\nova\\insights\\self_model.py::NovaSelfModel::__init__": {
      "file": "systems\\nova\\insights\\self_model.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\nova\\insights\\self_model.py::NovaSelfModel::_sig": {
      "file": "systems\\nova\\insights\\self_model.py",
      "kind": "Method",
      "name": "_sig"
    },
    "systems\\nova\\insights\\self_model.py::NovaSelfModel::update": {
      "file": "systems\\nova\\insights\\self_model.py",
      "kind": "Method",
      "name": "update"
    },
    "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors": {
      "file": "systems\\nova\\insights\\self_model.py",
      "kind": "Method",
      "name": "priors"
    },
    "systems\\nova\\insights\\self_model_store.py::SelfModelStore": {
      "file": "systems\\nova\\insights\\self_model_store.py",
      "kind": "Class",
      "name": "SelfModelStore"
    },
    "systems\\nova\\insights\\self_model_store.py::SelfModelStore::__init__": {
      "file": "systems\\nova\\insights\\self_model_store.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\nova\\insights\\self_model_store.py::SelfModelStore::_decay": {
      "file": "systems\\nova\\insights\\self_model_store.py",
      "kind": "Method",
      "name": "_decay"
    },
    "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load": {
      "file": "systems\\nova\\insights\\self_model_store.py",
      "kind": "Method",
      "name": "load"
    },
    "systems\\nova\\insights\\self_model_store.py::SelfModelStore::save": {
      "file": "systems\\nova\\insights\\self_model_store.py",
      "kind": "Method",
      "name": "save"
    },
    "systems\\nova\\novelty\\reservoir.py::_barcode": {
      "file": "systems\\nova\\novelty\\reservoir.py",
      "kind": "Function",
      "name": "_barcode"
    },
    "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir": {
      "file": "systems\\nova\\novelty\\reservoir.py",
      "kind": "Class",
      "name": "NoveltyReservoir"
    },
    "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::__init__": {
      "file": "systems\\nova\\novelty\\reservoir.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::key": {
      "file": "systems\\nova\\novelty\\reservoir.py",
      "kind": "Method",
      "name": "key"
    },
    "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::accept": {
      "file": "systems\\nova\\novelty\\reservoir.py",
      "kind": "Method",
      "name": "accept"
    },
    "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::filter_portfolio": {
      "file": "systems\\nova\\novelty\\reservoir.py",
      "kind": "Method",
      "name": "filter_portfolio"
    },
    "systems\\nova\\memory\\qora_bridge.py::QoraBridge": {
      "file": "systems\\nova\\memory\\qora_bridge.py",
      "kind": "Class",
      "name": "QoraBridge"
    },
    "systems\\nova\\hyper\\hyperengine.py::NovaHyperEngine": {
      "file": "systems\\nova\\hyper\\hyperengine.py",
      "kind": "Class",
      "name": "NovaHyperEngine"
    },
    "systems\\nova\\eval\\cost.py::estimate_cost_ms": {
      "file": "systems\\nova\\eval\\cost.py",
      "kind": "Function",
      "name": "estimate_cost_ms"
    },
    "systems\\nova\\eval\\metrics.py::_clamp": {
      "file": "systems\\nova\\eval\\metrics.py",
      "kind": "Function",
      "name": "_clamp"
    },
    "systems\\nova\\eval\\metrics.py::mechanism_complexity": {
      "file": "systems\\nova\\eval\\metrics.py",
      "kind": "Function",
      "name": "mechanism_complexity"
    },
    "systems\\nova\\eval\\metrics.py::risk_hint": {
      "file": "systems\\nova\\eval\\metrics.py",
      "kind": "Function",
      "name": "risk_hint"
    },
    "systems\\nova\\eval\\metrics.py::fae_composite": {
      "file": "systems\\nova\\eval\\metrics.py",
      "kind": "Function",
      "name": "fae_composite"
    },
    "systems\\nova\\telemetry\\hooks.py::_avg": {
      "file": "systems\\nova\\telemetry\\hooks.py",
      "kind": "Function",
      "name": "_avg"
    },
    "systems\\nova\\telemetry\\hooks.py::headers_for_propose": {
      "file": "systems\\nova\\telemetry\\hooks.py",
      "kind": "Function",
      "name": "headers_for_propose"
    },
    "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate": {
      "file": "systems\\nova\\telemetry\\hooks.py",
      "kind": "Function",
      "name": "headers_for_evaluate"
    },
    "systems\\nova\\telemetry\\hooks.py::headers_for_auction": {
      "file": "systems\\nova\\telemetry\\hooks.py",
      "kind": "Function",
      "name": "headers_for_auction"
    },
    "systems\\qora\\core\\architecture\\arch_patrol.py::_blake": {
      "file": "systems\\qora\\core\\architecture\\arch_patrol.py",
      "kind": "Function",
      "name": "_blake"
    },
    "systems\\qora\\core\\architecture\\arch_patrol.py::_read": {
      "file": "systems\\qora\\core\\architecture\\arch_patrol.py",
      "kind": "Function",
      "name": "_read"
    },
    "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file": {
      "file": "systems\\qora\\core\\architecture\\arch_patrol.py",
      "kind": "Function",
      "name": "_parse_tools_from_file"
    },
    "systems\\qora\\core\\architecture\\arch_patrol.py::V": {
      "file": "systems\\qora\\core\\architecture\\arch_patrol.py",
      "kind": "Class",
      "name": "V"
    },
    "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef": {
      "file": "systems\\qora\\core\\architecture\\arch_patrol.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "systems\\qora\\core\\architecture\\arch_patrol.py::_extract_tool_meta": {
      "file": "systems\\qora\\core\\architecture\\arch_patrol.py",
      "kind": "Function",
      "name": "_extract_tool_meta"
    },
    "systems\\qora\\core\\architecture\\arch_patrol.py::_infer_module": {
      "file": "systems\\qora\\core\\architecture\\arch_patrol.py",
      "kind": "Function",
      "name": "_infer_module"
    },
    "systems\\qora\\core\\architecture\\arch_execution.py::_uid": {
      "file": "systems\\qora\\core\\architecture\\arch_execution.py",
      "kind": "Function",
      "name": "_uid"
    },
    "systems\\qora\\core\\architecture\\arch_execution.py::_args_imply_external": {
      "file": "systems\\qora\\core\\architecture\\arch_execution.py",
      "kind": "Function",
      "name": "_args_imply_external"
    },
    "systems\\qora\\core\\architecture\\arch_execution.py::_resolve_qualname": {
      "file": "systems\\qora\\core\\architecture\\arch_execution.py",
      "kind": "Function",
      "name": "_resolve_qualname"
    },
    "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable": {
      "file": "systems\\qora\\core\\immune\\auto_instrument.py",
      "kind": "Function",
      "name": "_wrap_callable"
    },
    "systems\\qora\\core\\immune\\auto_instrument.py::wrapped": {
      "file": "systems\\qora\\core\\immune\\auto_instrument.py",
      "kind": "Function",
      "name": "wrapped"
    },
    "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class": {
      "file": "systems\\qora\\core\\immune\\auto_instrument.py",
      "kind": "Function",
      "name": "_instrument_class"
    },
    "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module": {
      "file": "systems\\qora\\core\\immune\\auto_instrument.py",
      "kind": "Function",
      "name": "_instrument_module"
    },
    "systems\\qora\\core\\immune\\auto_instrument.py::excepthook": {
      "file": "systems\\qora\\core\\immune\\auto_instrument.py",
      "kind": "Function",
      "name": "excepthook"
    },
    "systems\\qora\\core\\immune\\auto_instrument.py::thread_hook": {
      "file": "systems\\qora\\core\\immune\\auto_instrument.py",
      "kind": "Function",
      "name": "thread_hook"
    },
    "systems\\qora\\core\\immune\\auto_instrument.py::async_handler": {
      "file": "systems\\qora\\core\\immune\\auto_instrument.py",
      "kind": "Function",
      "name": "async_handler"
    },
    "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler": {
      "file": "systems\\qora\\core\\immune\\auto_instrument.py",
      "kind": "Class",
      "name": "ConflictLogHandler"
    },
    "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::__init__": {
      "file": "systems\\qora\\core\\immune\\auto_instrument.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::emit": {
      "file": "systems\\qora\\core\\immune\\auto_instrument.py",
      "kind": "Method",
      "name": "emit"
    },
    "systems\\qora\\core\\immune\\conflict_sdk.py::_redact": {
      "file": "systems\\qora\\core\\immune\\conflict_sdk.py",
      "kind": "Function",
      "name": "_redact"
    },
    "systems\\qora\\core\\immune\\conflict_sdk.py::_normalize_stack": {
      "file": "systems\\qora\\core\\immune\\conflict_sdk.py",
      "kind": "Function",
      "name": "_normalize_stack"
    },
    "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature": {
      "file": "systems\\qora\\core\\immune\\conflict_sdk.py",
      "kind": "Function",
      "name": "make_signature"
    },
    "systems\\qora\\manifest\\models.py::ContentRef": {
      "file": "systems\\qora\\manifest\\models.py",
      "kind": "Class",
      "name": "ContentRef"
    },
    "systems\\qora\\manifest\\models.py::SystemManifest": {
      "file": "systems\\qora\\manifest\\models.py",
      "kind": "Class",
      "name": "SystemManifest"
    },
    "systems\\qora\\manifest\\builder.py::_iter_py": {
      "file": "systems\\qora\\manifest\\builder.py",
      "kind": "Function",
      "name": "_iter_py"
    },
    "systems\\qora\\manifest\\builder.py::_blake": {
      "file": "systems\\qora\\manifest\\builder.py",
      "kind": "Function",
      "name": "_blake"
    },
    "systems\\qora\\manifest\\builder.py::_slice_ref": {
      "file": "systems\\qora\\manifest\\builder.py",
      "kind": "Function",
      "name": "_slice_ref"
    },
    "systems\\qora\\manifest\\builder.py::_scan_imports": {
      "file": "systems\\qora\\manifest\\builder.py",
      "kind": "Function",
      "name": "_scan_imports"
    },
    "systems\\qora\\manifest\\builder.py::_scan_endpoints": {
      "file": "systems\\qora\\manifest\\builder.py",
      "kind": "Function",
      "name": "_scan_endpoints"
    },
    "systems\\qora\\manifest\\builder.py::_scan_tools_and_models": {
      "file": "systems\\qora\\manifest\\builder.py",
      "kind": "Function",
      "name": "_scan_tools_and_models"
    },
    "systems\\qora\\manifest\\engine.py::Diagnostic": {
      "file": "systems\\qora\\manifest\\engine.py",
      "kind": "Class",
      "name": "Diagnostic"
    },
    "systems\\qora\\manifest\\engine.py::_file_has_headers": {
      "file": "systems\\qora\\manifest\\engine.py",
      "kind": "Function",
      "name": "_file_has_headers"
    },
    "systems\\qora\\manifest\\engine.py::run_checks_sync": {
      "file": "systems\\qora\\manifest\\engine.py",
      "kind": "Function",
      "name": "run_checks_sync"
    },
    "systems\\qora\\gcb\\models.py::SnippetRef": {
      "file": "systems\\qora\\gcb\\models.py",
      "kind": "Class",
      "name": "SnippetRef"
    },
    "systems\\qora\\gcb\\models.py::Koan": {
      "file": "systems\\qora\\gcb\\models.py",
      "kind": "Class",
      "name": "Koan"
    },
    "systems\\qora\\gcb\\models.py::GoldenContextBundle": {
      "file": "systems\\qora\\gcb\\models.py",
      "kind": "Class",
      "name": "GoldenContextBundle"
    },
    "systems\\qora\\gcb\\builder.py::build_gcb": {
      "file": "systems\\qora\\gcb\\builder.py",
      "kind": "Function",
      "name": "build_gcb"
    },
    "systems\\qora\\gcb\\builder.py::dispatch_gcb_to_simula": {
      "file": "systems\\qora\\gcb\\builder.py",
      "kind": "Function",
      "name": "dispatch_gcb_to_simula"
    },
    "systems\\synk\\core\\tools\\clusters.py::_centroid": {
      "file": "systems\\synk\\core\\tools\\clusters.py",
      "kind": "Function",
      "name": "_centroid"
    },
    "systems\\synk\\core\\tools\\mesa.py::CustomModel": {
      "file": "systems\\synk\\core\\tools\\mesa.py",
      "kind": "Class",
      "name": "CustomModel"
    },
    "systems\\synk\\core\\tools\\mesa.py::CustomModel::__init__": {
      "file": "systems\\synk\\core\\tools\\mesa.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synk\\core\\tools\\mesa.py::CustomModel::step": {
      "file": "systems\\synk\\core\\tools\\mesa.py",
      "kind": "Method",
      "name": "step"
    },
    "systems\\synk\\core\\tools\\native_clustering.py::choose_k": {
      "file": "systems\\synk\\core\\tools\\native_clustering.py",
      "kind": "Function",
      "name": "choose_k"
    },
    "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy": {
      "file": "systems\\synk\\core\\tools\\native_clustering.py",
      "kind": "Function",
      "name": "kmeans_numpy"
    },
    "systems\\synk\\core\\tools\\native_clustering.py::try_sklearn_kmeans": {
      "file": "systems\\synk\\core\\tools\\native_clustering.py",
      "kind": "Function",
      "name": "try_sklearn_kmeans"
    },
    "systems\\synk\\core\\tools\\neo.py::_safe_neo_props": {
      "file": "systems\\synk\\core\\tools\\neo.py",
      "kind": "Function",
      "name": "_safe_neo_props"
    },
    "systems\\synk\\core\\tools\\neo.py::_safe": {
      "file": "systems\\synk\\core\\tools\\neo.py",
      "kind": "Function",
      "name": "_safe"
    },
    "systems\\synk\\core\\tools\\neo.py::_get_or_make_event_id": {
      "file": "systems\\synk\\core\\tools\\neo.py",
      "kind": "Function",
      "name": "_get_or_make_event_id"
    },
    "systems\\synk\\core\\tools\\neo.py::matcher_str": {
      "file": "systems\\synk\\core\\tools\\neo.py",
      "kind": "Function",
      "name": "matcher_str"
    },
    "systems\\synk\\core\\tools\\neo.py::_ensure_list": {
      "file": "systems\\synk\\core\\tools\\neo.py",
      "kind": "Function",
      "name": "_ensure_list"
    },
    "systems\\synk\\core\\tools\\vector_store.py::_index_name": {
      "file": "systems\\synk\\core\\tools\\vector_store.py",
      "kind": "Function",
      "name": "_index_name"
    },
    "systems\\synk\\core\\tools\\vector_store.py::_quote_ident": {
      "file": "systems\\synk\\core\\tools\\vector_store.py",
      "kind": "Function",
      "name": "_quote_ident"
    },
    "systems\\synk\\core\\switchboard\\client.py::Switchboard": {
      "file": "systems\\synk\\core\\switchboard\\client.py",
      "kind": "Class",
      "name": "Switchboard"
    },
    "systems\\synk\\core\\switchboard\\client.py::Switchboard::__init__": {
      "file": "systems\\synk\\core\\switchboard\\client.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synk\\core\\switchboard\\flag_deps.py::require_flag_true": {
      "file": "systems\\synk\\core\\switchboard\\flag_deps.py",
      "kind": "Function",
      "name": "require_flag_true"
    },
    "systems\\synk\\core\\switchboard\\gatekit.py::route_gate": {
      "file": "systems\\synk\\core\\switchboard\\gatekit.py",
      "kind": "Function",
      "name": "route_gate"
    },
    "systems\\synk\\core\\switchboard\\gatekit.py::gated_async": {
      "file": "systems\\synk\\core\\switchboard\\gatekit.py",
      "kind": "Function",
      "name": "gated_async"
    },
    "systems\\synk\\core\\switchboard\\gatekit.py::deco": {
      "file": "systems\\synk\\core\\switchboard\\gatekit.py",
      "kind": "Function",
      "name": "deco"
    },
    "systems\\synk\\core\\switchboard\\gatekit.py::gated_sync": {
      "file": "systems\\synk\\core\\switchboard\\gatekit.py",
      "kind": "Function",
      "name": "gated_sync"
    },
    "systems\\synk\\core\\switchboard\\gatekit.py::wrapper": {
      "file": "systems\\synk\\core\\switchboard\\gatekit.py",
      "kind": "Function",
      "name": "wrapper"
    },
    "systems\\thread\\core\\identity_shift.py::_safe_label": {
      "file": "systems\\thread\\core\\identity_shift.py",
      "kind": "Function",
      "name": "_safe_label"
    },
    "systems\\thread\\core\\identity_shift_prompts.py::build_identity_shift_prompt": {
      "file": "systems\\thread\\core\\identity_shift_prompts.py",
      "kind": "Function",
      "name": "build_identity_shift_prompt"
    },
    "systems\\unity\\schemas.py::InputRef": {
      "file": "systems\\unity\\schemas.py",
      "kind": "Class",
      "name": "InputRef"
    },
    "systems\\unity\\schemas.py::DeliberationSpec": {
      "file": "systems\\unity\\schemas.py",
      "kind": "Class",
      "name": "DeliberationSpec"
    },
    "systems\\unity\\schemas.py::VerdictModel": {
      "file": "systems\\unity\\schemas.py",
      "kind": "Class",
      "name": "VerdictModel"
    },
    "systems\\unity\\schemas.py::DeliberationResponse": {
      "file": "systems\\unity\\schemas.py",
      "kind": "Class",
      "name": "DeliberationResponse"
    },
    "systems\\unity\\schemas.py::MetaCriticismProposalEvent": {
      "file": "systems\\unity\\schemas.py",
      "kind": "Class",
      "name": "MetaCriticismProposalEvent"
    },
    "systems\\unity\\schemas.py::RoomConfiguration": {
      "file": "systems\\unity\\schemas.py",
      "kind": "Class",
      "name": "RoomConfiguration"
    },
    "systems\\unity\\schemas.py::FederatedConsensusRequest": {
      "file": "systems\\unity\\schemas.py",
      "kind": "Class",
      "name": "FederatedConsensusRequest"
    },
    "systems\\unity\\schemas.py::FederatedConsensusResponse": {
      "file": "systems\\unity\\schemas.py",
      "kind": "Class",
      "name": "FederatedConsensusResponse"
    },
    "systems\\unity\\schemas.py::Cognit": {
      "file": "systems\\unity\\schemas.py",
      "kind": "Class",
      "name": "Cognit"
    },
    "systems\\unity\\schemas.py::BroadcastEvent": {
      "file": "systems\\unity\\schemas.py",
      "kind": "Class",
      "name": "BroadcastEvent"
    },
    "systems\\unity\\core\\neo\\graph_writes.py::_jsonable": {
      "file": "systems\\unity\\core\\neo\\graph_writes.py",
      "kind": "Function",
      "name": "_jsonable"
    },
    "systems\\unity\\core\\room\\adjudicator.py::Adjudicator": {
      "file": "systems\\unity\\core\\room\\adjudicator.py",
      "kind": "Class",
      "name": "Adjudicator"
    },
    "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::__new__": {
      "file": "systems\\unity\\core\\room\\adjudicator.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation": {
      "file": "systems\\unity\\core\\room\\adjudicator.py",
      "kind": "Method",
      "name": "_bayesian_aggregation"
    },
    "systems\\unity\\core\\room\\orchestrator.py::_as_dict": {
      "file": "systems\\unity\\core\\room\\orchestrator.py",
      "kind": "Function",
      "name": "_as_dict"
    },
    "systems\\unity\\core\\room\\orchestrator.py::_risk_level_from_urgency": {
      "file": "systems\\unity\\core\\room\\orchestrator.py",
      "kind": "Function",
      "name": "_risk_level_from_urgency"
    },
    "systems\\unity\\core\\room\\orchestrator.py::_pick_protocol_from_selection": {
      "file": "systems\\unity\\core\\room\\orchestrator.py",
      "kind": "Function",
      "name": "_pick_protocol_from_selection"
    },
    "systems\\unity\\core\\room\\orchestrator.py::DeliberationManager": {
      "file": "systems\\unity\\core\\room\\orchestrator.py",
      "kind": "Class",
      "name": "DeliberationManager"
    },
    "systems\\unity\\core\\room\\orchestrator.py::DeliberationManager::__new__": {
      "file": "systems\\unity\\core\\room\\orchestrator.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\unity\\core\\room\\orchestrator.py::DeliberationManager::__init__": {
      "file": "systems\\unity\\core\\room\\orchestrator.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\unity\\core\\room\\participants.py::ParticipantRegistry": {
      "file": "systems\\unity\\core\\room\\participants.py",
      "kind": "Class",
      "name": "ParticipantRegistry"
    },
    "systems\\unity\\core\\room\\participants.py::ParticipantRegistry::__new__": {
      "file": "systems\\unity\\core\\room\\participants.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\unity\\core\\room\\participants.py::ParticipantRegistry::get_role_info": {
      "file": "systems\\unity\\core\\room\\participants.py",
      "kind": "Method",
      "name": "get_role_info"
    },
    "systems\\unity\\core\\room\\participants.py::ParticipantRegistry::list_roles": {
      "file": "systems\\unity\\core\\room\\participants.py",
      "kind": "Method",
      "name": "list_roles"
    },
    "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner": {
      "file": "systems\\unity\\core\\room\\argument_map.py",
      "kind": "Class",
      "name": "ArgumentMiner"
    },
    "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::__init__": {
      "file": "systems\\unity\\core\\room\\argument_map.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_claim": {
      "file": "systems\\unity\\core\\room\\argument_map.py",
      "kind": "Method",
      "name": "add_claim"
    },
    "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_ensure_node": {
      "file": "systems\\unity\\core\\room\\argument_map.py",
      "kind": "Method",
      "name": "_ensure_node"
    },
    "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference": {
      "file": "systems\\unity\\core\\room\\argument_map.py",
      "kind": "Method",
      "name": "add_inference"
    },
    "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_support_ancestry": {
      "file": "systems\\unity\\core\\room\\argument_map.py",
      "kind": "Method",
      "name": "_support_ancestry"
    },
    "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_collect_base_leaves": {
      "file": "systems\\unity\\core\\room\\argument_map.py",
      "kind": "Method",
      "name": "_collect_base_leaves"
    },
    "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_defended_filter": {
      "file": "systems\\unity\\core\\room\\argument_map.py",
      "kind": "Method",
      "name": "_defended_filter"
    },
    "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::get_minimal_assumption_set": {
      "file": "systems\\unity\\core\\room\\argument_map.py",
      "kind": "Method",
      "name": "get_minimal_assumption_set"
    },
    "systems\\unity\\core\\protocols\\debate.py::_truncate": {
      "file": "systems\\unity\\core\\protocols\\debate.py",
      "kind": "Function",
      "name": "_truncate"
    },
    "systems\\unity\\core\\protocols\\debate.py::_dig": {
      "file": "systems\\unity\\core\\protocols\\debate.py",
      "kind": "Function",
      "name": "_dig"
    },
    "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id": {
      "file": "systems\\unity\\core\\protocols\\debate.py",
      "kind": "Function",
      "name": "_champion_arm_id"
    },
    "systems\\unity\\core\\protocols\\debate.py::DebateProtocol": {
      "file": "systems\\unity\\core\\protocols\\debate.py",
      "kind": "Class",
      "name": "DebateProtocol"
    },
    "systems\\unity\\core\\protocols\\debate.py::DebateProtocol::__init__": {
      "file": "systems\\unity\\core\\protocols\\debate.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\unity\\core\\protocols\\critique_and_repair.py::ProtocolState": {
      "file": "systems\\unity\\core\\protocols\\critique_and_repair.py",
      "kind": "Class",
      "name": "ProtocolState"
    },
    "systems\\unity\\core\\protocols\\critique_and_repair.py::CritiqueAndRepairProtocol": {
      "file": "systems\\unity\\core\\protocols\\critique_and_repair.py",
      "kind": "Class",
      "name": "CritiqueAndRepairProtocol"
    },
    "systems\\unity\\core\\protocols\\critique_and_repair.py::CritiqueAndRepairProtocol::__init__": {
      "file": "systems\\unity\\core\\protocols\\critique_and_repair.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\unity\\core\\protocols\\argument_mining.py::ArgumentMiningProtocol": {
      "file": "systems\\unity\\core\\protocols\\argument_mining.py",
      "kind": "Class",
      "name": "ArgumentMiningProtocol"
    },
    "systems\\unity\\core\\protocols\\argument_mining.py::ArgumentMiningProtocol::__init__": {
      "file": "systems\\unity\\core\\protocols\\argument_mining.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol": {
      "file": "systems\\unity\\core\\protocols\\meta_criticism.py",
      "kind": "Class",
      "name": "MetaCriticismProtocol"
    },
    "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::__init__": {
      "file": "systems\\unity\\core\\protocols\\meta_criticism.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency": {
      "file": "systems\\unity\\core\\protocols\\meta_criticism.py",
      "kind": "Method",
      "name": "_measure_efficiency"
    },
    "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_build_proposal": {
      "file": "systems\\unity\\core\\protocols\\meta_criticism.py",
      "kind": "Method",
      "name": "_build_proposal"
    },
    "systems\\unity\\core\\protocols\\federated_consensus.py::_to_verdict": {
      "file": "systems\\unity\\core\\protocols\\federated_consensus.py",
      "kind": "Function",
      "name": "_to_verdict"
    },
    "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate": {
      "file": "systems\\unity\\core\\protocols\\federated_consensus.py",
      "kind": "Function",
      "name": "_weighted_aggregate"
    },
    "systems\\unity\\core\\protocols\\federated_consensus.py::FederatedConsensusProtocol": {
      "file": "systems\\unity\\core\\protocols\\federated_consensus.py",
      "kind": "Class",
      "name": "FederatedConsensusProtocol"
    },
    "systems\\unity\\core\\protocols\\federated_consensus.py::FederatedConsensusProtocol::__init__": {
      "file": "systems\\unity\\core\\protocols\\federated_consensus.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\unity\\core\\protocols\\concurrent_competition.py::ConcurrentCompetitionProtocol": {
      "file": "systems\\unity\\core\\protocols\\concurrent_competition.py",
      "kind": "Class",
      "name": "ConcurrentCompetitionProtocol"
    },
    "systems\\unity\\core\\protocols\\concurrent_competition.py::ConcurrentCompetitionProtocol::__init__": {
      "file": "systems\\unity\\core\\protocols\\concurrent_competition.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\unity\\core\\protocols\\cognition.py::CognitionProtocol": {
      "file": "systems\\unity\\core\\protocols\\cognition.py",
      "kind": "Class",
      "name": "CognitionProtocol"
    },
    "systems\\unity\\core\\protocols\\cognition.py::CognitionProtocol::__init__": {
      "file": "systems\\unity\\core\\protocols\\cognition.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\unity\\core\\workspace\\global_workspace.py::AttentionMechanism": {
      "file": "systems\\unity\\core\\workspace\\global_workspace.py",
      "kind": "Class",
      "name": "AttentionMechanism"
    },
    "systems\\unity\\core\\workspace\\global_workspace.py::AttentionMechanism::__init__": {
      "file": "systems\\unity\\core\\workspace\\global_workspace.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\unity\\core\\workspace\\global_workspace.py::GlobalWorkspace": {
      "file": "systems\\unity\\core\\workspace\\global_workspace.py",
      "kind": "Class",
      "name": "GlobalWorkspace"
    },
    "systems\\unity\\core\\workspace\\global_workspace.py::GlobalWorkspace::__new__": {
      "file": "systems\\unity\\core\\workspace\\global_workspace.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\unity\\core\\t_o_m\\modeler.py::_tok": {
      "file": "systems\\unity\\core\\t_o_m\\modeler.py",
      "kind": "Function",
      "name": "_tok"
    },
    "systems\\unity\\core\\t_o_m\\modeler.py::_clean_keywords": {
      "file": "systems\\unity\\core\\t_o_m\\modeler.py",
      "kind": "Function",
      "name": "_clean_keywords"
    },
    "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine": {
      "file": "systems\\unity\\core\\t_o_m\\modeler.py",
      "kind": "Class",
      "name": "TheoryOfMindEngine"
    },
    "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::__new__": {
      "file": "systems\\unity\\core\\t_o_m\\modeler.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_last_token_from_state": {
      "file": "systems\\unity\\core\\t_o_m\\modeler.py",
      "kind": "Method",
      "name": "_last_token_from_state"
    },
    "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_unigram_top": {
      "file": "systems\\unity\\core\\t_o_m\\modeler.py",
      "kind": "Method",
      "name": "_unigram_top"
    },
    "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_predict_token_topk": {
      "file": "systems\\unity\\core\\t_o_m\\modeler.py",
      "kind": "Method",
      "name": "_predict_token_topk"
    },
    "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_compose_argument": {
      "file": "systems\\unity\\core\\t_o_m\\modeler.py",
      "kind": "Method",
      "name": "_compose_argument"
    },
    "systems\\unity\\core\\cognition\\llm_util.py::on_response": {
      "file": "systems\\unity\\core\\cognition\\llm_util.py",
      "kind": "Function",
      "name": "on_response"
    },
    "systems\\unity\\core\\cognition\\verifiers.py::safety_veto": {
      "file": "systems\\unity\\core\\cognition\\verifiers.py",
      "kind": "Function",
      "name": "safety_veto"
    },
    "systems\\unity\\core\\cognition\\verifiers.py::constraint_check": {
      "file": "systems\\unity\\core\\cognition\\verifiers.py",
      "kind": "Function",
      "name": "constraint_check"
    },
    "systems\\unity\\core\\policy\\safety_policy.py::clear_rules_cache": {
      "file": "systems\\unity\\core\\policy\\safety_policy.py",
      "kind": "Function",
      "name": "clear_rules_cache"
    },
    "systems\\unity\\core\\policy\\safety_policy.py::_coerce_text": {
      "file": "systems\\unity\\core\\policy\\safety_policy.py",
      "kind": "Function",
      "name": "_coerce_text"
    },
    "systems\\unity\\core\\policy\\safety_policy.py::_text_from_spec": {
      "file": "systems\\unity\\core\\policy\\safety_policy.py",
      "kind": "Function",
      "name": "_text_from_spec"
    },
    "systems\\voxis\\core\\voxis_pipeline.py::log": {
      "file": "systems\\voxis\\core\\voxis_pipeline.py",
      "kind": "Function",
      "name": "log"
    },
    "systems\\voxis\\core\\voxis_pipeline.py::convert_dates": {
      "file": "systems\\voxis\\core\\voxis_pipeline.py",
      "kind": "Function",
      "name": "convert_dates"
    },
    "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline": {
      "file": "systems\\voxis\\core\\voxis_pipeline.py",
      "kind": "Class",
      "name": "VoxisPipeline"
    },
    "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::__init__": {
      "file": "systems\\voxis\\core\\voxis_pipeline.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_build_atune_event": {
      "file": "systems\\voxis\\core\\voxis_pipeline.py",
      "kind": "Method",
      "name": "_build_atune_event"
    },
    "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_build_stage1_prompt": {
      "file": "systems\\voxis\\core\\voxis_pipeline.py",
      "kind": "Method",
      "name": "_build_stage1_prompt"
    },
    "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_build_stage2_prompt": {
      "file": "systems\\voxis\\core\\voxis_pipeline.py",
      "kind": "Method",
      "name": "_build_stage2_prompt"
    },
    "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_parse_tool_queries": {
      "file": "systems\\voxis\\core\\voxis_pipeline.py",
      "kind": "Method",
      "name": "_parse_tool_queries"
    },
    "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_apply_censorship": {
      "file": "systems\\voxis\\core\\voxis_pipeline.py",
      "kind": "Method",
      "name": "_apply_censorship"
    },
    "systems\\equor\\schemas.py::Facet": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "Facet"
    },
    "systems\\equor\\schemas.py::ConstitutionRule": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "ConstitutionRule"
    },
    "systems\\equor\\schemas.py::Profile": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "Profile"
    },
    "systems\\equor\\schemas.py::ComposeRequest": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "ComposeRequest"
    },
    "systems\\equor\\schemas.py::ComposeResponse": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "ComposeResponse"
    },
    "systems\\equor\\schemas.py::Attestation": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "Attestation"
    },
    "systems\\equor\\schemas.py::DriftReport": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "DriftReport"
    },
    "systems\\equor\\schemas.py::PatchProposalEvent": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "PatchProposalEvent"
    },
    "systems\\equor\\schemas.py::Invariant": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "Invariant"
    },
    "systems\\equor\\schemas.py::InvariantCheckResult": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "InvariantCheckResult"
    },
    "systems\\equor\\schemas.py::InternalStateMetrics": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "InternalStateMetrics"
    },
    "systems\\equor\\schemas.py::QualiaState": {
      "file": "systems\\equor\\schemas.py",
      "kind": "Class",
      "name": "QualiaState"
    },
    "systems\\equor\\core\\identity\\constitution.py::ConstitutionConflictError": {
      "file": "systems\\equor\\core\\identity\\constitution.py",
      "kind": "Class",
      "name": "ConstitutionConflictError"
    },
    "systems\\equor\\core\\identity\\constitution.py::ConstitutionConflictError::__init__": {
      "file": "systems\\equor\\core\\identity\\constitution.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\equor\\core\\identity\\constitution.py::PredicateUnsatisfiedError": {
      "file": "systems\\equor\\core\\identity\\constitution.py",
      "kind": "Class",
      "name": "PredicateUnsatisfiedError"
    },
    "systems\\equor\\core\\identity\\constitution.py::PredicateUnsatisfiedError::__init__": {
      "file": "systems\\equor\\core\\identity\\constitution.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\equor\\core\\identity\\constitution.py::ConstitutionService": {
      "file": "systems\\equor\\core\\identity\\constitution.py",
      "kind": "Class",
      "name": "ConstitutionService"
    },
    "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::__new__": {
      "file": "systems\\equor\\core\\identity\\constitution.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::_evaluate_predicate": {
      "file": "systems\\equor\\core\\identity\\constitution.py",
      "kind": "Method",
      "name": "_evaluate_predicate"
    },
    "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::check_formal_guards": {
      "file": "systems\\equor\\core\\identity\\constitution.py",
      "kind": "Method",
      "name": "check_formal_guards"
    },
    "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::apply_precedence": {
      "file": "systems\\equor\\core\\identity\\constitution.py",
      "kind": "Method",
      "name": "apply_precedence"
    },
    "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::check_for_conflicts": {
      "file": "systems\\equor\\core\\identity\\constitution.py",
      "kind": "Method",
      "name": "check_for_conflicts"
    },
    "systems\\equor\\core\\identity\\registry.py::RegistryError": {
      "file": "systems\\equor\\core\\identity\\registry.py",
      "kind": "Class",
      "name": "RegistryError"
    },
    "systems\\equor\\core\\identity\\registry.py::_ensure_list": {
      "file": "systems\\equor\\core\\identity\\registry.py",
      "kind": "Function",
      "name": "_ensure_list"
    },
    "systems\\equor\\core\\identity\\registry.py::_dedupe_preserve_order": {
      "file": "systems\\equor\\core\\identity\\registry.py",
      "kind": "Function",
      "name": "_dedupe_preserve_order"
    },
    "systems\\equor\\core\\identity\\registry.py::_node_id": {
      "file": "systems\\equor\\core\\identity\\registry.py",
      "kind": "Function",
      "name": "_node_id"
    },
    "systems\\equor\\core\\identity\\registry.py::_has_label": {
      "file": "systems\\equor\\core\\identity\\registry.py",
      "kind": "Function",
      "name": "_has_label"
    },
    "systems\\equor\\core\\identity\\registry.py::IdentityRegistry": {
      "file": "systems\\equor\\core\\identity\\registry.py",
      "kind": "Class",
      "name": "IdentityRegistry"
    },
    "systems\\equor\\core\\identity\\registry.py::IdentityRegistry::__new__": {
      "file": "systems\\equor\\core\\identity\\registry.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\equor\\core\\identity\\composer.py::CompositionError": {
      "file": "systems\\equor\\core\\identity\\composer.py",
      "kind": "Class",
      "name": "CompositionError"
    },
    "systems\\equor\\core\\identity\\composer.py::PromptComposer": {
      "file": "systems\\equor\\core\\identity\\composer.py",
      "kind": "Class",
      "name": "PromptComposer"
    },
    "systems\\equor\\core\\identity\\composer.py::PromptComposer::__new__": {
      "file": "systems\\equor\\core\\identity\\composer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text": {
      "file": "systems\\equor\\core\\identity\\composer.py",
      "kind": "Method",
      "name": "_format_patch_text"
    },
    "systems\\equor\\core\\identity\\homeostasis.py::HomeostasisMonitor": {
      "file": "systems\\equor\\core\\identity\\homeostasis.py",
      "kind": "Class",
      "name": "HomeostasisMonitor"
    },
    "systems\\equor\\core\\identity\\homeostasis.py::HomeostasisMonitor::__new__": {
      "file": "systems\\equor\\core\\identity\\homeostasis.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\equor\\core\\identity\\homeostasis.py::HomeostasisMonitor::get_monitor_for_agent": {
      "file": "systems\\equor\\core\\identity\\homeostasis.py",
      "kind": "Method",
      "name": "get_monitor_for_agent"
    },
    "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor": {
      "file": "systems\\equor\\core\\identity\\homeostasis.py",
      "kind": "Class",
      "name": "AgentMonitor"
    },
    "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::__init__": {
      "file": "systems\\equor\\core\\identity\\homeostasis.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::should_alert": {
      "file": "systems\\equor\\core\\identity\\homeostasis.py",
      "kind": "Method",
      "name": "should_alert"
    },
    "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::reset_alert_trigger": {
      "file": "systems\\equor\\core\\identity\\homeostasis.py",
      "kind": "Method",
      "name": "reset_alert_trigger"
    },
    "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report": {
      "file": "systems\\equor\\core\\identity\\homeostasis.py",
      "kind": "Method",
      "name": "generate_report"
    },
    "systems\\equor\\core\\identity\\invariants.py::InvariantAuditor": {
      "file": "systems\\equor\\core\\identity\\invariants.py",
      "kind": "Class",
      "name": "InvariantAuditor"
    },
    "systems\\equor\\core\\identity\\invariants.py::InvariantAuditor::__new__": {
      "file": "systems\\equor\\core\\identity\\invariants.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\equor\\core\\qualia\\manifold.py::_AEWeights": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Class",
      "name": "_AEWeights"
    },
    "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::to_npz": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "to_npz"
    },
    "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::from_npz": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "from_npz"
    },
    "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Class",
      "name": "TrainedAutoencoder"
    },
    "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::__init__": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::save_weights": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "save_weights"
    },
    "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::load_weights": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "load_weights"
    },
    "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_std": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "_std"
    },
    "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_standardize": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "_standardize"
    },
    "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_update_stats": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "_update_stats"
    },
    "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_eta": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "_eta"
    },
    "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::encode": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "encode"
    },
    "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "update"
    },
    "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Class",
      "name": "QualiaManifold"
    },
    "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::__new__": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::_init_model": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "_init_model"
    },
    "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::get_model": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "get_model"
    },
    "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::load_model_weights": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "load_model_weights"
    },
    "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "process_metrics"
    },
    "systems\\equor\\core\\qualia\\manifold.py::StateLogger": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Class",
      "name": "StateLogger"
    },
    "systems\\equor\\core\\qualia\\manifold.py::StateLogger::__new__": {
      "file": "systems\\equor\\core\\qualia\\manifold.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\equor\\core\\qualia\\trainer.py::_models_dir": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Function",
      "name": "_models_dir"
    },
    "systems\\equor\\core\\qualia\\trainer.py::_artifact_paths": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Function",
      "name": "_artifact_paths"
    },
    "systems\\equor\\core\\qualia\\trainer.py::_std_from": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Function",
      "name": "_std_from"
    },
    "systems\\equor\\core\\qualia\\trainer.py::_reconstruct": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Function",
      "name": "_reconstruct"
    },
    "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Class",
      "name": "AutoencoderTrainer"
    },
    "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::__init__": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_prime_stats": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Method",
      "name": "_prime_stats"
    },
    "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_epoch_loss": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Method",
      "name": "_epoch_loss"
    },
    "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Method",
      "name": "train"
    },
    "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::save_weights": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Method",
      "name": "save_weights"
    },
    "systems\\equor\\core\\qualia\\trainer.py::ManifoldTrainer": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Class",
      "name": "ManifoldTrainer"
    },
    "systems\\equor\\core\\qualia\\trainer.py::ManifoldTrainer::__new__": {
      "file": "systems\\equor\\core\\qualia\\trainer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\equor\\core\\self\\predictor.py::SelfModel": {
      "file": "systems\\equor\\core\\self\\predictor.py",
      "kind": "Class",
      "name": "SelfModel"
    },
    "systems\\equor\\core\\self\\predictor.py::SelfModel::__new__": {
      "file": "systems\\equor\\core\\self\\predictor.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\equor\\core\\self\\predictor.py::SelfModel::_pairs_where": {
      "file": "systems\\equor\\core\\self\\predictor.py",
      "kind": "Method",
      "name": "_pairs_where"
    },
    "systems\\equor\\kms\\keystore.py::_load_keys": {
      "file": "systems\\equor\\kms\\keystore.py",
      "kind": "Function",
      "name": "_load_keys"
    },
    "systems\\equor\\kms\\keystore.py::get_hmac_key_by_kid": {
      "file": "systems\\equor\\kms\\keystore.py",
      "kind": "Function",
      "name": "get_hmac_key_by_kid"
    },
    "systems\\equor\\kms\\keystore.py::list_kids": {
      "file": "systems\\equor\\kms\\keystore.py",
      "kind": "Function",
      "name": "list_kids"
    },
    "systems\\equor\\kms\\keystore.py::get_active_kid": {
      "file": "systems\\equor\\kms\\keystore.py",
      "kind": "Function",
      "name": "get_active_kid"
    },
    "systems\\synapse\\schemas.py::TaskContext": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "TaskContext"
    },
    "systems\\synapse\\schemas.py::TaskContext::Config": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "Config"
    },
    "systems\\synapse\\schemas.py::Candidate": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "Candidate"
    },
    "systems\\synapse\\schemas.py::SelectArmRequest": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "SelectArmRequest"
    },
    "systems\\synapse\\schemas.py::ArmScore": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "ArmScore"
    },
    "systems\\synapse\\schemas.py::SelectArmResponse": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "SelectArmResponse"
    },
    "systems\\synapse\\schemas.py::SimulateRequest": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "SimulateRequest"
    },
    "systems\\synapse\\schemas.py::SimulateResponse": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "SimulateResponse"
    },
    "systems\\synapse\\schemas.py::SMTCheckRequest": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "SMTCheckRequest"
    },
    "systems\\synapse\\schemas.py::SMTCheckResponse": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "SMTCheckResponse"
    },
    "systems\\synapse\\schemas.py::BudgetResponse": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "BudgetResponse"
    },
    "systems\\synapse\\schemas.py::ExplainRequest": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "ExplainRequest"
    },
    "systems\\synapse\\schemas.py::ExplainResponse": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "ExplainResponse"
    },
    "systems\\synapse\\schemas.py::LogOutcomeRequest": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "LogOutcomeRequest"
    },
    "systems\\synapse\\schemas.py::LogOutcomeResponse": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "LogOutcomeResponse"
    },
    "systems\\synapse\\schemas.py::PreferenceIngest": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "PreferenceIngest"
    },
    "systems\\synapse\\schemas.py::ContinueRequest": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "ContinueRequest"
    },
    "systems\\synapse\\schemas.py::ContinueResponse": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "ContinueResponse"
    },
    "systems\\synapse\\schemas.py::RepairRequest": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "RepairRequest"
    },
    "systems\\synapse\\schemas.py::RepairResponse": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "RepairResponse"
    },
    "systems\\synapse\\schemas.py::EpisodeSummary": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "EpisodeSummary"
    },
    "systems\\synapse\\schemas.py::ComparisonPairResponse": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "ComparisonPairResponse"
    },
    "systems\\synapse\\schemas.py::SubmitPreferenceRequest": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "SubmitPreferenceRequest"
    },
    "systems\\synapse\\schemas.py::PatchProposal": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "PatchProposal"
    },
    "systems\\synapse\\schemas.py::PolicyHintRequest": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "PolicyHintRequest"
    },
    "systems\\synapse\\schemas.py::PolicyHintRequest::Config": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "Config"
    },
    "systems\\synapse\\schemas.py::PolicyHintResponse": {
      "file": "systems\\synapse\\schemas.py",
      "kind": "Class",
      "name": "PolicyHintResponse"
    },
    "systems\\synapse\\schemas_metrics.py::ArmOutcome": {
      "file": "systems\\synapse\\schemas_metrics.py",
      "kind": "Class",
      "name": "ArmOutcome"
    },
    "systems\\synapse\\core\\registry.py::_coerce_policy_graph": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Function",
      "name": "_coerce_policy_graph"
    },
    "systems\\synapse\\core\\registry.py::_node_effects_says_dangerous": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Function",
      "name": "_node_effects_says_dangerous"
    },
    "systems\\synapse\\core\\registry.py::_default_llm_model": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Function",
      "name": "_default_llm_model"
    },
    "systems\\synapse\\core\\registry.py::_noop_pg_dict": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Function",
      "name": "_noop_pg_dict"
    },
    "systems\\synapse\\core\\registry.py::PolicyArm": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Class",
      "name": "PolicyArm"
    },
    "systems\\synapse\\core\\registry.py::PolicyArm::__init__": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\core\\registry.py::PolicyArm::is_safe_fallback": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "is_safe_fallback"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Class",
      "name": "ArmRegistry"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::__new__": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::__init__": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::get_arm": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "get_arm"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::get_arms_for_mode": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "get_arms_for_mode"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::list_arms_for_mode": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "list_arms_for_mode"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::list_modes": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "list_modes"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::all_arm_ids": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "all_arm_ids"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "add_arm"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::get_safe_fallback_arm": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "get_safe_fallback_arm"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "ensure_cold_start"
    },
    "systems\\synapse\\core\\registry.py::ArmRegistry::_safe_present_for": {
      "file": "systems\\synapse\\core\\registry.py",
      "kind": "Method",
      "name": "_safe_present_for"
    },
    "systems\\synapse\\core\\tactics.py::_stable_seed_from_ctx": {
      "file": "systems\\synapse\\core\\tactics.py",
      "kind": "Function",
      "name": "_stable_seed_from_ctx"
    },
    "systems\\synapse\\core\\tactics.py::_ensure_1d": {
      "file": "systems\\synapse\\core\\tactics.py",
      "kind": "Function",
      "name": "_ensure_1d"
    },
    "systems\\synapse\\core\\tactics.py::TacticalManager": {
      "file": "systems\\synapse\\core\\tactics.py",
      "kind": "Class",
      "name": "TacticalManager"
    },
    "systems\\synapse\\core\\tactics.py::TacticalManager::__new__": {
      "file": "systems\\synapse\\core\\tactics.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\core\\tactics.py::TacticalManager::_candidate_ids_from_request": {
      "file": "systems\\synapse\\core\\tactics.py",
      "kind": "Method",
      "name": "_candidate_ids_from_request"
    },
    "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set": {
      "file": "systems\\synapse\\core\\tactics.py",
      "kind": "Method",
      "name": "_build_candidate_set"
    },
    "systems\\synapse\\core\\tactics.py::TacticalManager::_score_candidates": {
      "file": "systems\\synapse\\core\\tactics.py",
      "kind": "Method",
      "name": "_score_candidates"
    },
    "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm": {
      "file": "systems\\synapse\\core\\tactics.py",
      "kind": "Method",
      "name": "select_arm"
    },
    "systems\\synapse\\core\\tactics.py::TacticalManager::update": {
      "file": "systems\\synapse\\core\\tactics.py",
      "kind": "Method",
      "name": "update"
    },
    "systems\\synapse\\core\\tactics.py::TacticalManager::get_last_scores_for_arm": {
      "file": "systems\\synapse\\core\\tactics.py",
      "kind": "Method",
      "name": "get_last_scores_for_arm"
    },
    "systems\\synapse\\core\\reward.py::RewardArbiter": {
      "file": "systems\\synapse\\core\\reward.py",
      "kind": "Class",
      "name": "RewardArbiter"
    },
    "systems\\synapse\\core\\reward.py::RewardArbiter::__new__": {
      "file": "systems\\synapse\\core\\reward.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\core\\reward.py::RewardArbiter::__init__": {
      "file": "systems\\synapse\\core\\reward.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\core\\reward.py::RewardArbiter::update_scalarization_weights": {
      "file": "systems\\synapse\\core\\reward.py",
      "kind": "Method",
      "name": "update_scalarization_weights"
    },
    "systems\\synapse\\core\\reward.py::RewardArbiter::_norm01": {
      "file": "systems\\synapse\\core\\reward.py",
      "kind": "Method",
      "name": "_norm01"
    },
    "systems\\synapse\\core\\reward.py::RewardArbiter::compute_reward_vector": {
      "file": "systems\\synapse\\core\\reward.py",
      "kind": "Method",
      "name": "compute_reward_vector"
    },
    "systems\\synapse\\core\\reward.py::RewardArbiter::scalarize_reward": {
      "file": "systems\\synapse\\core\\reward.py",
      "kind": "Method",
      "name": "scalarize_reward"
    },
    "systems\\synapse\\core\\planner.py::_ctx_pick": {
      "file": "systems\\synapse\\core\\planner.py",
      "kind": "Function",
      "name": "_ctx_pick"
    },
    "systems\\synapse\\core\\planner.py::MetacognitivePlanner": {
      "file": "systems\\synapse\\core\\planner.py",
      "kind": "Class",
      "name": "MetacognitivePlanner"
    },
    "systems\\synapse\\core\\planner.py::MetacognitivePlanner::__new__": {
      "file": "systems\\synapse\\core\\planner.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\core\\firewall.py::NeuroSymbolicFirewall": {
      "file": "systems\\synapse\\core\\firewall.py",
      "kind": "Class",
      "name": "NeuroSymbolicFirewall"
    },
    "systems\\synapse\\core\\firewall.py::NeuroSymbolicFirewall::__new__": {
      "file": "systems\\synapse\\core\\firewall.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\core\\firewall.py::NeuroSymbolicFirewall::get_safe_fallback_arm": {
      "file": "systems\\synapse\\core\\firewall.py",
      "kind": "Method",
      "name": "get_safe_fallback_arm"
    },
    "systems\\synapse\\core\\genesis.py::ToolGenesisModule": {
      "file": "systems\\synapse\\core\\genesis.py",
      "kind": "Class",
      "name": "ToolGenesisModule"
    },
    "systems\\synapse\\core\\genesis.py::ToolGenesisModule::__new__": {
      "file": "systems\\synapse\\core\\genesis.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\core\\genesis.py::ToolGenesisModule::on_response": {
      "file": "systems\\synapse\\core\\genesis.py",
      "kind": "Method",
      "name": "on_response"
    },
    "systems\\synapse\\core\\arm_genesis.py::_generate_base_graph": {
      "file": "systems\\synapse\\core\\arm_genesis.py",
      "kind": "Function",
      "name": "_generate_base_graph"
    },
    "systems\\synapse\\core\\arm_genesis.py::_mutations": {
      "file": "systems\\synapse\\core\\arm_genesis.py",
      "kind": "Function",
      "name": "_mutations"
    },
    "systems\\synapse\\core\\meta_controller.py::_load_json_env": {
      "file": "systems\\synapse\\core\\meta_controller.py",
      "kind": "Function",
      "name": "_load_json_env"
    },
    "systems\\synapse\\core\\meta_controller.py::_validate_strategy_map": {
      "file": "systems\\synapse\\core\\meta_controller.py",
      "kind": "Function",
      "name": "_validate_strategy_map"
    },
    "systems\\synapse\\core\\meta_controller.py::_validate_budget_map": {
      "file": "systems\\synapse\\core\\meta_controller.py",
      "kind": "Function",
      "name": "_validate_budget_map"
    },
    "systems\\synapse\\core\\meta_controller.py::MetaController": {
      "file": "systems\\synapse\\core\\meta_controller.py",
      "kind": "Class",
      "name": "MetaController"
    },
    "systems\\synapse\\core\\meta_controller.py::MetaController::__new__": {
      "file": "systems\\synapse\\core\\meta_controller.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\core\\meta_controller.py::MetaController::select_strategy": {
      "file": "systems\\synapse\\core\\meta_controller.py",
      "kind": "Method",
      "name": "select_strategy"
    },
    "systems\\synapse\\core\\meta_controller.py::MetaController::allocate_budget": {
      "file": "systems\\synapse\\core\\meta_controller.py",
      "kind": "Method",
      "name": "allocate_budget"
    },
    "systems\\synapse\\core\\snapshots.py::get_component_version": {
      "file": "systems\\synapse\\core\\snapshots.py",
      "kind": "Function",
      "name": "get_component_version"
    },
    "systems\\synapse\\core\\snapshots.py::stamp": {
      "file": "systems\\synapse\\core\\snapshots.py",
      "kind": "Function",
      "name": "stamp"
    },
    "systems\\synapse\\core\\governor.py::_proposal_id": {
      "file": "systems\\synapse\\core\\governor.py",
      "kind": "Function",
      "name": "_proposal_id"
    },
    "systems\\synapse\\core\\governor.py::Governor": {
      "file": "systems\\synapse\\core\\governor.py",
      "kind": "Class",
      "name": "Governor"
    },
    "systems\\synapse\\core\\governor.py::Governor::__new__": {
      "file": "systems\\synapse\\core\\governor.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\training\\meta_controller.py::MetaController": {
      "file": "systems\\synapse\\training\\meta_controller.py",
      "kind": "Class",
      "name": "MetaController"
    },
    "systems\\synapse\\training\\meta_controller.py::MetaController::__new__": {
      "file": "systems\\synapse\\training\\meta_controller.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\training\\adversary.py::AdversarialAgent": {
      "file": "systems\\synapse\\training\\adversary.py",
      "kind": "Class",
      "name": "AdversarialAgent"
    },
    "systems\\synapse\\training\\adversary.py::AdversarialAgent::__new__": {
      "file": "systems\\synapse\\training\\adversary.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\training\\adversary.py::AdversarialAgent::_generate_challenging_task_context": {
      "file": "systems\\synapse\\training\\adversary.py",
      "kind": "Method",
      "name": "_generate_challenging_task_context"
    },
    "systems\\synapse\\training\\adversary.py::AdversarialAgent::_update_task_values": {
      "file": "systems\\synapse\\training\\adversary.py",
      "kind": "Method",
      "name": "_update_task_values"
    },
    "systems\\synapse\\training\\bandit_state.py::mark_dirty": {
      "file": "systems\\synapse\\training\\bandit_state.py",
      "kind": "Function",
      "name": "mark_dirty"
    },
    "systems\\synapse\\training\\bandit_state.py::_drain_dirty": {
      "file": "systems\\synapse\\training\\bandit_state.py",
      "kind": "Function",
      "name": "_drain_dirty"
    },
    "systems\\synapse\\training\\bandit_state.py::start_background_flusher": {
      "file": "systems\\synapse\\training\\bandit_state.py",
      "kind": "Function",
      "name": "start_background_flusher"
    },
    "systems\\synapse\\training\\bandit_state.py::stop_background_flusher": {
      "file": "systems\\synapse\\training\\bandit_state.py",
      "kind": "Function",
      "name": "stop_background_flusher"
    },
    "systems\\synapse\\training\\neural_linear.py::_pack_matrix": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Function",
      "name": "_pack_matrix"
    },
    "systems\\synapse\\training\\neural_linear.py::_unpack_matrix": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Function",
      "name": "_unpack_matrix"
    },
    "systems\\synapse\\training\\neural_linear.py::_ensure_col_vec": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Function",
      "name": "_ensure_col_vec"
    },
    "systems\\synapse\\training\\neural_linear.py::_stable_cholesky": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Function",
      "name": "_stable_cholesky"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Class",
      "name": "NeuralLinearBanditHead"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::get_state": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "get_state"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::_posterior_mean": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "_posterior_mean"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::sample_theta": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "sample_theta"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::get_theta_mean": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "get_theta_mean"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::score": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "score"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::update": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "update"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Class",
      "name": "NeuralLinearArmManager"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "list_arms"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "_ensure_heads_mapping"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "get_theta_mean_for_arm"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::__new__": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::__init__": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::dimensions": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "dimensions"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_hidx": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "_hidx"
    },
    "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::encode": {
      "file": "systems\\synapse\\training\\neural_linear.py",
      "kind": "Method",
      "name": "encode"
    },
    "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer": {
      "file": "systems\\synapse\\training\\encoder_trainer.py",
      "kind": "Class",
      "name": "EncoderTrainer"
    },
    "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::train": {
      "file": "systems\\synapse\\training\\encoder_trainer.py",
      "kind": "Method",
      "name": "train"
    },
    "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::EncoderModel": {
      "file": "systems\\synapse\\training\\encoder_trainer.py",
      "kind": "Class",
      "name": "EncoderModel"
    },
    "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::EncoderModel::__init__": {
      "file": "systems\\synapse\\training\\encoder_trainer.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::EncoderModel::forward": {
      "file": "systems\\synapse\\training\\encoder_trainer.py",
      "kind": "Method",
      "name": "forward"
    },
    "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::EncoderModel::train": {
      "file": "systems\\synapse\\training\\encoder_trainer.py",
      "kind": "Method",
      "name": "train"
    },
    "systems\\synapse\\training\\self_model_trainer.py::_risk_score": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Function",
      "name": "_risk_score"
    },
    "systems\\synapse\\training\\self_model_trainer.py::_budget_score": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Function",
      "name": "_budget_score"
    },
    "systems\\synapse\\training\\self_model_trainer.py::_safe_len": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Function",
      "name": "_safe_len"
    },
    "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Function",
      "name": "_vectorize_context"
    },
    "systems\\synapse\\training\\self_model_trainer.py::_build_dataset": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Function",
      "name": "_build_dataset"
    },
    "systems\\synapse\\training\\self_model_trainer.py::_pad": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Function",
      "name": "_pad"
    },
    "systems\\synapse\\training\\self_model_trainer.py::_standardize": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Function",
      "name": "_standardize"
    },
    "systems\\synapse\\training\\self_model_trainer.py::_ridge_fit": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Function",
      "name": "_ridge_fit"
    },
    "systems\\synapse\\training\\self_model_trainer.py::_metrics": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Function",
      "name": "_metrics"
    },
    "systems\\synapse\\training\\self_model_trainer.py::SelfModelTrainer": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Class",
      "name": "SelfModelTrainer"
    },
    "systems\\synapse\\training\\self_model_trainer.py::SelfModelTrainer::__new__": {
      "file": "systems\\synapse\\training\\self_model_trainer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\training\\tom_trainer.py::_tok": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Function",
      "name": "_tok"
    },
    "systems\\synapse\\training\\tom_trainer.py::_build_sequences": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Function",
      "name": "_build_sequences"
    },
    "systems\\synapse\\training\\tom_trainer.py::_build_vocab": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Function",
      "name": "_build_vocab"
    },
    "systems\\synapse\\training\\tom_trainer.py::_id_or_unk": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Function",
      "name": "_id_or_unk"
    },
    "systems\\synapse\\training\\tom_trainer.py::_unigram_bigram_counts": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Function",
      "name": "_unigram_bigram_counts"
    },
    "systems\\synapse\\training\\tom_trainer.py::_perplexity": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Function",
      "name": "_perplexity"
    },
    "systems\\synapse\\training\\tom_trainer.py::_evaluate_role": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Function",
      "name": "_evaluate_role"
    },
    "systems\\synapse\\training\\tom_trainer.py::_topk_table": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Function",
      "name": "_topk_table"
    },
    "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Class",
      "name": "TheoryOfMindTrainer"
    },
    "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::__new__": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples": {
      "file": "systems\\synapse\\training\\tom_trainer.py",
      "kind": "Method",
      "name": "_create_training_samples"
    },
    "systems\\synapse\\training\\attention_trainer.py::_sigmoid": {
      "file": "systems\\synapse\\training\\attention_trainer.py",
      "kind": "Function",
      "name": "_sigmoid"
    },
    "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit": {
      "file": "systems\\synapse\\training\\attention_trainer.py",
      "kind": "Function",
      "name": "_vectorize_cognit"
    },
    "systems\\synapse\\training\\attention_trainer.py::_build_samples": {
      "file": "systems\\synapse\\training\\attention_trainer.py",
      "kind": "Function",
      "name": "_build_samples"
    },
    "systems\\synapse\\training\\attention_trainer.py::_train_logreg": {
      "file": "systems\\synapse\\training\\attention_trainer.py",
      "kind": "Function",
      "name": "_train_logreg"
    },
    "systems\\synapse\\training\\attention_trainer.py::batch_iter": {
      "file": "systems\\synapse\\training\\attention_trainer.py",
      "kind": "Function",
      "name": "batch_iter"
    },
    "systems\\synapse\\training\\attention_trainer.py::AttentionRankerTrainer": {
      "file": "systems\\synapse\\training\\attention_trainer.py",
      "kind": "Class",
      "name": "AttentionRankerTrainer"
    },
    "systems\\synapse\\training\\attention_trainer.py::AttentionRankerTrainer::__new__": {
      "file": "systems\\synapse\\training\\attention_trainer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\training\\attention_trainer.py::AttentionRankerTrainer::_create_training_samples": {
      "file": "systems\\synapse\\training\\attention_trainer.py",
      "kind": "Method",
      "name": "_create_training_samples"
    },
    "systems\\synapse\\sdk\\affordances.py::validate_affordance": {
      "file": "systems\\synapse\\sdk\\affordances.py",
      "kind": "Function",
      "name": "validate_affordance"
    },
    "systems\\synapse\\sdk\\affordances.py::normalize_affordances": {
      "file": "systems\\synapse\\sdk\\affordances.py",
      "kind": "Function",
      "name": "normalize_affordances"
    },
    "systems\\synapse\\sdk\\client.py::SynapseClient": {
      "file": "systems\\synapse\\sdk\\client.py",
      "kind": "Class",
      "name": "SynapseClient"
    },
    "systems\\synapse\\sdk\\context.py::build_context": {
      "file": "systems\\synapse\\sdk\\context.py",
      "kind": "Function",
      "name": "build_context"
    },
    "systems\\synapse\\sdk\\decorators.py::evolutionary": {
      "file": "systems\\synapse\\sdk\\decorators.py",
      "kind": "Function",
      "name": "evolutionary"
    },
    "systems\\synapse\\sdk\\decorators.py::deco": {
      "file": "systems\\synapse\\sdk\\decorators.py",
      "kind": "Function",
      "name": "deco"
    },
    "systems\\synapse\\sdk\\hints_extras.py::HintsExtras": {
      "file": "systems\\synapse\\sdk\\hints_extras.py",
      "kind": "Class",
      "name": "HintsExtras"
    },
    "systems\\synapse\\sdk\\hints_client.py::SynapseHintsClient": {
      "file": "systems\\synapse\\sdk\\hints_client.py",
      "kind": "Class",
      "name": "SynapseHintsClient"
    },
    "systems\\synapse\\sdk\\causal_client.py::SynapseCausalClient": {
      "file": "systems\\synapse\\sdk\\causal_client.py",
      "kind": "Class",
      "name": "SynapseCausalClient"
    },
    "systems\\synapse\\policy\\policy_dsl.py::PolicyNode": {
      "file": "systems\\synapse\\policy\\policy_dsl.py",
      "kind": "Class",
      "name": "PolicyNode"
    },
    "systems\\synapse\\policy\\policy_dsl.py::PolicyEdge": {
      "file": "systems\\synapse\\policy\\policy_dsl.py",
      "kind": "Class",
      "name": "PolicyEdge"
    },
    "systems\\synapse\\policy\\policy_dsl.py::PolicyConstraint": {
      "file": "systems\\synapse\\policy\\policy_dsl.py",
      "kind": "Class",
      "name": "PolicyConstraint"
    },
    "systems\\synapse\\policy\\policy_dsl.py::PolicyGraph": {
      "file": "systems\\synapse\\policy\\policy_dsl.py",
      "kind": "Class",
      "name": "PolicyGraph"
    },
    "systems\\synapse\\policy\\policy_dsl.py::PolicyGraph::canonical_hash": {
      "file": "systems\\synapse\\policy\\policy_dsl.py",
      "kind": "Method",
      "name": "canonical_hash"
    },
    "systems\\synapse\\critic\\offpolicy.py::_featurize_episode": {
      "file": "systems\\synapse\\critic\\offpolicy.py",
      "kind": "Function",
      "name": "_featurize_episode"
    },
    "systems\\synapse\\critic\\offpolicy.py::Critic": {
      "file": "systems\\synapse\\critic\\offpolicy.py",
      "kind": "Class",
      "name": "Critic"
    },
    "systems\\synapse\\critic\\offpolicy.py::Critic::__new__": {
      "file": "systems\\synapse\\critic\\offpolicy.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\critic\\offpolicy.py::Critic::_load_model": {
      "file": "systems\\synapse\\critic\\offpolicy.py",
      "kind": "Method",
      "name": "_load_model"
    },
    "systems\\synapse\\critic\\offpolicy.py::Critic::score": {
      "file": "systems\\synapse\\critic\\offpolicy.py",
      "kind": "Method",
      "name": "score"
    },
    "systems\\synapse\\firewall\\smt_guard.py::check_smt_constraints": {
      "file": "systems\\synapse\\firewall\\smt_guard.py",
      "kind": "Function",
      "name": "check_smt_constraints"
    },
    "systems\\synapse\\world\\simulator.py::SimulationPrediction": {
      "file": "systems\\synapse\\world\\simulator.py",
      "kind": "Class",
      "name": "SimulationPrediction"
    },
    "systems\\synapse\\world\\simulator.py::WorldModel": {
      "file": "systems\\synapse\\world\\simulator.py",
      "kind": "Class",
      "name": "WorldModel"
    },
    "systems\\synapse\\world\\simulator.py::WorldModel::__new__": {
      "file": "systems\\synapse\\world\\simulator.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\world\\simulator.py::WorldModel::load_model": {
      "file": "systems\\synapse\\world\\simulator.py",
      "kind": "Method",
      "name": "load_model"
    },
    "systems\\synapse\\world\\simulator.py::WorldModel::_featurize": {
      "file": "systems\\synapse\\world\\simulator.py",
      "kind": "Method",
      "name": "_featurize"
    },
    "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models": {
      "file": "systems\\synapse\\world\\simulator.py",
      "kind": "Method",
      "name": "_safe_sigma_from_models"
    },
    "systems\\synapse\\world\\diff_sim.py::_deepcopy_graph": {
      "file": "systems\\synapse\\world\\diff_sim.py",
      "kind": "Function",
      "name": "_deepcopy_graph"
    },
    "systems\\synapse\\world\\diff_sim.py::_evaluate": {
      "file": "systems\\synapse\\world\\diff_sim.py",
      "kind": "Function",
      "name": "_evaluate"
    },
    "systems\\synapse\\world\\diff_sim.py::_numeric_params": {
      "file": "systems\\synapse\\world\\diff_sim.py",
      "kind": "Function",
      "name": "_numeric_params"
    },
    "systems\\synapse\\world\\diff_sim.py::_guess_bounds": {
      "file": "systems\\synapse\\world\\diff_sim.py",
      "kind": "Function",
      "name": "_guess_bounds"
    },
    "systems\\synapse\\world\\diff_sim.py::_clamp": {
      "file": "systems\\synapse\\world\\diff_sim.py",
      "kind": "Function",
      "name": "_clamp"
    },
    "systems\\synapse\\world\\diff_sim.py::_finite_diff_grad": {
      "file": "systems\\synapse\\world\\diff_sim.py",
      "kind": "Function",
      "name": "_finite_diff_grad"
    },
    "systems\\synapse\\world\\diff_sim.py::grad_optimize": {
      "file": "systems\\synapse\\world\\diff_sim.py",
      "kind": "Function",
      "name": "grad_optimize"
    },
    "systems\\synapse\\world\\diff_sim.py::_apply_update": {
      "file": "systems\\synapse\\world\\diff_sim.py",
      "kind": "Function",
      "name": "_apply_update"
    },
    "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer": {
      "file": "systems\\synapse\\world\\world_model_trainer.py",
      "kind": "Class",
      "name": "WorldModelTrainer"
    },
    "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::__init__": {
      "file": "systems\\synapse\\world\\world_model_trainer.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_featurize_episode": {
      "file": "systems\\synapse\\world\\world_model_trainer.py",
      "kind": "Method",
      "name": "_featurize_episode"
    },
    "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_build_dataset": {
      "file": "systems\\synapse\\world\\world_model_trainer.py",
      "kind": "Method",
      "name": "_build_dataset"
    },
    "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_train_models": {
      "file": "systems\\synapse\\world\\world_model_trainer.py",
      "kind": "Method",
      "name": "_train_models"
    },
    "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate": {
      "file": "systems\\synapse\\world\\world_model_trainer.py",
      "kind": "Method",
      "name": "_evaluate"
    },
    "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_atomic_save": {
      "file": "systems\\synapse\\world\\world_model_trainer.py",
      "kind": "Method",
      "name": "_atomic_save"
    },
    "systems\\synapse\\explain\\minset.py::min_explanation": {
      "file": "systems\\synapse\\explain\\minset.py",
      "kind": "Function",
      "name": "min_explanation"
    },
    "systems\\synapse\\explain\\probes.py::_clamp": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Function",
      "name": "_clamp"
    },
    "systems\\synapse\\explain\\probes.py::_safe_float": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Function",
      "name": "_safe_float"
    },
    "systems\\synapse\\explain\\probes.py::_topk_stats": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Function",
      "name": "_topk_stats"
    },
    "systems\\synapse\\explain\\probes.py::_extract_sequence": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Function",
      "name": "_extract_sequence"
    },
    "systems\\synapse\\explain\\probes.py::_sim_uncertainty": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Function",
      "name": "_sim_uncertainty"
    },
    "systems\\synapse\\explain\\probes.py::_calc_spec_drift": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Function",
      "name": "_calc_spec_drift"
    },
    "systems\\synapse\\explain\\probes.py::_calc_overfit": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Function",
      "name": "_calc_overfit"
    },
    "systems\\synapse\\explain\\probes.py::_calc_fragility": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Function",
      "name": "_calc_fragility"
    },
    "systems\\synapse\\explain\\probes.py::_calc_loop": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Function",
      "name": "_calc_loop"
    },
    "systems\\synapse\\explain\\probes.py::MetaProbe": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Class",
      "name": "MetaProbe"
    },
    "systems\\synapse\\explain\\probes.py::MetaProbe::__new__": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk": {
      "file": "systems\\synapse\\explain\\probes.py",
      "kind": "Method",
      "name": "predict_risk"
    },
    "systems\\synapse\\qd\\map_elites.py::_norm_str": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Function",
      "name": "_norm_str"
    },
    "systems\\synapse\\qd\\map_elites.py::_risk_tier": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Function",
      "name": "_risk_tier"
    },
    "systems\\synapse\\qd\\map_elites.py::_cost_tier": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Function",
      "name": "_cost_tier"
    },
    "systems\\synapse\\qd\\map_elites.py::_task_family": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Function",
      "name": "_task_family"
    },
    "systems\\synapse\\qd\\map_elites.py::QDArchive": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Class",
      "name": "QDArchive"
    },
    "systems\\synapse\\qd\\map_elites.py::QDArchive::__new__": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\qd\\map_elites.py::QDArchive::__init__": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\qd\\map_elites.py::QDArchive::get_descriptor": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Method",
      "name": "get_descriptor"
    },
    "systems\\synapse\\qd\\map_elites.py::QDArchive::insert": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Method",
      "name": "insert"
    },
    "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Method",
      "name": "sample_niche"
    },
    "systems\\synapse\\qd\\map_elites.py::QDArchive::get_champion_from_niche": {
      "file": "systems\\synapse\\qd\\map_elites.py",
      "kind": "Method",
      "name": "get_champion_from_niche"
    },
    "systems\\synapse\\qd\\replicator.py::Replicator": {
      "file": "systems\\synapse\\qd\\replicator.py",
      "kind": "Class",
      "name": "Replicator"
    },
    "systems\\synapse\\qd\\replicator.py::Replicator::__new__": {
      "file": "systems\\synapse\\qd\\replicator.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\qd\\replicator.py::Replicator::__init__": {
      "file": "systems\\synapse\\qd\\replicator.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\qd\\replicator.py::Replicator::update_fitness": {
      "file": "systems\\synapse\\qd\\replicator.py",
      "kind": "Method",
      "name": "update_fitness"
    },
    "systems\\synapse\\qd\\replicator.py::Replicator::_normalize_shares": {
      "file": "systems\\synapse\\qd\\replicator.py",
      "kind": "Method",
      "name": "_normalize_shares"
    },
    "systems\\synapse\\qd\\replicator.py::Replicator::rebalance_shares": {
      "file": "systems\\synapse\\qd\\replicator.py",
      "kind": "Method",
      "name": "rebalance_shares"
    },
    "systems\\synapse\\qd\\replicator.py::Replicator::sample_niche": {
      "file": "systems\\synapse\\qd\\replicator.py",
      "kind": "Method",
      "name": "sample_niche"
    },
    "systems\\synapse\\qd\\replicator.py::Replicator::get_genesis_allocation": {
      "file": "systems\\synapse\\qd\\replicator.py",
      "kind": "Method",
      "name": "get_genesis_allocation"
    },
    "systems\\synapse\\economics\\roi.py::ROIManager": {
      "file": "systems\\synapse\\economics\\roi.py",
      "kind": "Class",
      "name": "ROIManager"
    },
    "systems\\synapse\\economics\\roi.py::ROIManager::__new__": {
      "file": "systems\\synapse\\economics\\roi.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\economics\\roi.py::ROIManager::__init__": {
      "file": "systems\\synapse\\economics\\roi.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\economics\\roi.py::ROIManager::update_roi": {
      "file": "systems\\synapse\\economics\\roi.py",
      "kind": "Method",
      "name": "update_roi"
    },
    "systems\\synapse\\economics\\roi.py::ROIManager::get_underperforming_arms": {
      "file": "systems\\synapse\\economics\\roi.py",
      "kind": "Method",
      "name": "get_underperforming_arms"
    },
    "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN": {
      "file": "systems\\synapse\\rerank\\episodic_knn.py",
      "kind": "Class",
      "name": "EpisodicKNN"
    },
    "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::__new__": {
      "file": "systems\\synapse\\rerank\\episodic_knn.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::__init__": {
      "file": "systems\\synapse\\rerank\\episodic_knn.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::update": {
      "file": "systems\\synapse\\rerank\\episodic_knn.py",
      "kind": "Method",
      "name": "update"
    },
    "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest": {
      "file": "systems\\synapse\\rerank\\episodic_knn.py",
      "kind": "Method",
      "name": "suggest"
    },
    "systems\\synapse\\meta\\optimizer.py::_EpisodeRow": {
      "file": "systems\\synapse\\meta\\optimizer.py",
      "kind": "Class",
      "name": "_EpisodeRow"
    },
    "systems\\synapse\\meta\\optimizer.py::MetaOptimizer": {
      "file": "systems\\synapse\\meta\\optimizer.py",
      "kind": "Class",
      "name": "MetaOptimizer"
    },
    "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::__new__": {
      "file": "systems\\synapse\\meta\\optimizer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model": {
      "file": "systems\\synapse\\meta\\optimizer.py",
      "kind": "Method",
      "name": "_fit_model"
    },
    "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_predict_reward": {
      "file": "systems\\synapse\\meta\\optimizer.py",
      "kind": "Method",
      "name": "_predict_reward"
    },
    "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_search_best": {
      "file": "systems\\synapse\\meta\\optimizer.py",
      "kind": "Method",
      "name": "_search_best"
    },
    "systems\\synapse\\safety\\sentinels.py::GoodhartSentinel": {
      "file": "systems\\synapse\\safety\\sentinels.py",
      "kind": "Class",
      "name": "GoodhartSentinel"
    },
    "systems\\synapse\\safety\\sentinels.py::GoodhartSentinel::__new__": {
      "file": "systems\\synapse\\safety\\sentinels.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\safety\\sentinels.py::GoodhartSentinel::_featurize_trace": {
      "file": "systems\\synapse\\safety\\sentinels.py",
      "kind": "Method",
      "name": "_featurize_trace"
    },
    "systems\\synapse\\safety\\sentinels.py::GoodhartSentinel::check": {
      "file": "systems\\synapse\\safety\\sentinels.py",
      "kind": "Method",
      "name": "check"
    },
    "systems\\synapse\\safety\\sentinels.py::SentinelManager": {
      "file": "systems\\synapse\\safety\\sentinels.py",
      "kind": "Class",
      "name": "SentinelManager"
    },
    "systems\\synapse\\safety\\sentinels.py::SentinelManager::__new__": {
      "file": "systems\\synapse\\safety\\sentinels.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\experiments\\active.py::_risk_from_tokens": {
      "file": "systems\\synapse\\experiments\\active.py",
      "kind": "Function",
      "name": "_risk_from_tokens"
    },
    "systems\\synapse\\experiments\\active.py::_budget_from_tokens": {
      "file": "systems\\synapse\\experiments\\active.py",
      "kind": "Function",
      "name": "_budget_from_tokens"
    },
    "systems\\synapse\\experiments\\active.py::_parse_niche_key": {
      "file": "systems\\synapse\\experiments\\active.py",
      "kind": "Function",
      "name": "_parse_niche_key"
    },
    "systems\\synapse\\experiments\\active.py::_parse_sim_uncertainty_key": {
      "file": "systems\\synapse\\experiments\\active.py",
      "kind": "Function",
      "name": "_parse_sim_uncertainty_key"
    },
    "systems\\synapse\\experiments\\active.py::ExperimentDesigner": {
      "file": "systems\\synapse\\experiments\\active.py",
      "kind": "Class",
      "name": "ExperimentDesigner"
    },
    "systems\\synapse\\experiments\\active.py::ExperimentDesigner::__new__": {
      "file": "systems\\synapse\\experiments\\active.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe": {
      "file": "systems\\synapse\\experiments\\active.py",
      "kind": "Method",
      "name": "design_probe"
    },
    "systems\\synapse\\values\\learner.py::ValueLearner": {
      "file": "systems\\synapse\\values\\learner.py",
      "kind": "Class",
      "name": "ValueLearner"
    },
    "systems\\synapse\\values\\learner.py::ValueLearner::__new__": {
      "file": "systems\\synapse\\values\\learner.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\values\\learner.py::ValueLearner::_bradley_terry_update": {
      "file": "systems\\synapse\\values\\learner.py",
      "kind": "Method",
      "name": "_bradley_terry_update"
    },
    "systems\\synapse\\robust\\ood.py::OODDetector": {
      "file": "systems\\synapse\\robust\\ood.py",
      "kind": "Class",
      "name": "OODDetector"
    },
    "systems\\synapse\\robust\\ood.py::OODDetector::__new__": {
      "file": "systems\\synapse\\robust\\ood.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\robust\\ood.py::OODDetector::__init__": {
      "file": "systems\\synapse\\robust\\ood.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\synapse\\robust\\ood.py::OODDetector::check_shift": {
      "file": "systems\\synapse\\robust\\ood.py",
      "kind": "Method",
      "name": "check_shift"
    },
    "systems\\synapse\\obs\\schemas.py::GlobalStats": {
      "file": "systems\\synapse\\obs\\schemas.py",
      "kind": "Class",
      "name": "GlobalStats"
    },
    "systems\\synapse\\obs\\schemas.py::NicheData": {
      "file": "systems\\synapse\\obs\\schemas.py",
      "kind": "Class",
      "name": "NicheData"
    },
    "systems\\synapse\\obs\\schemas.py::QDCoverage": {
      "file": "systems\\synapse\\obs\\schemas.py",
      "kind": "Class",
      "name": "QDCoverage"
    },
    "systems\\synapse\\obs\\schemas.py::ROITrend": {
      "file": "systems\\synapse\\obs\\schemas.py",
      "kind": "Class",
      "name": "ROITrend"
    },
    "systems\\synapse\\obs\\schemas.py::ROITrends": {
      "file": "systems\\synapse\\obs\\schemas.py",
      "kind": "Class",
      "name": "ROITrends"
    },
    "systems\\synapse\\obs\\schemas.py::EpisodeTrace": {
      "file": "systems\\synapse\\obs\\schemas.py",
      "kind": "Class",
      "name": "EpisodeTrace"
    },
    "systems\\synapse\\obs\\schemas_metrics.py::MetricPoint": {
      "file": "systems\\synapse\\obs\\schemas_metrics.py",
      "kind": "Class",
      "name": "MetricPoint"
    },
    "systems\\synapse\\obs\\schemas_metrics.py::MetricSeries": {
      "file": "systems\\synapse\\obs\\schemas_metrics.py",
      "kind": "Class",
      "name": "MetricSeries"
    },
    "systems\\synapse\\obs\\schemas_metrics.py::MetricSeriesRequest": {
      "file": "systems\\synapse\\obs\\schemas_metrics.py",
      "kind": "Class",
      "name": "MetricSeriesRequest"
    },
    "systems\\synapse\\obs\\schemas_metrics.py::AgentBadge": {
      "file": "systems\\synapse\\obs\\schemas_metrics.py",
      "kind": "Class",
      "name": "AgentBadge"
    },
    "systems\\synapse\\obs\\schemas_metrics.py::AgentsOverview": {
      "file": "systems\\synapse\\obs\\schemas_metrics.py",
      "kind": "Class",
      "name": "AgentsOverview"
    },
    "systems\\synapse\\skills\\schemas.py::Option": {
      "file": "systems\\synapse\\skills\\schemas.py",
      "kind": "Class",
      "name": "Option"
    },
    "systems\\synapse\\skills\\options.py::OptionMiner": {
      "file": "systems\\synapse\\skills\\options.py",
      "kind": "Class",
      "name": "OptionMiner"
    },
    "systems\\synapse\\skills\\options.py::OptionMiner::__new__": {
      "file": "systems\\synapse\\skills\\options.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\skills\\manager.py::SkillsManager": {
      "file": "systems\\synapse\\skills\\manager.py",
      "kind": "Class",
      "name": "SkillsManager"
    },
    "systems\\synapse\\skills\\manager.py::SkillsManager::__new__": {
      "file": "systems\\synapse\\skills\\manager.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems\\synapse\\skills\\manager.py::SkillsManager::select_best_option": {
      "file": "systems\\synapse\\skills\\manager.py",
      "kind": "Method",
      "name": "select_best_option"
    },
    "systems\\synapse\\skills\\executor.py::ExecutionState": {
      "file": "systems\\synapse\\skills\\executor.py",
      "kind": "Class",
      "name": "ExecutionState"
    },
    "systems\\synapse\\skills\\executor.py::OptionExecutor": {
      "file": "systems\\synapse\\skills\\executor.py",
      "kind": "Class",
      "name": "OptionExecutor"
    },
    "systems\\synapse\\skills\\executor.py::OptionExecutor::start_execution": {
      "file": "systems\\synapse\\skills\\executor.py",
      "kind": "Method",
      "name": "start_execution"
    },
    "systems\\synapse\\skills\\executor.py::OptionExecutor::continue_execution": {
      "file": "systems\\synapse\\skills\\executor.py",
      "kind": "Method",
      "name": "continue_execution"
    },
    "systems\\synapse\\skills\\executor.py::OptionExecutor::end_execution": {
      "file": "systems\\synapse\\skills\\executor.py",
      "kind": "Method",
      "name": "end_execution"
    },
    "systems\\simula\\config.py::_normalize_path_string": {
      "file": "systems\\simula\\config.py",
      "kind": "Function",
      "name": "_normalize_path_string"
    },
    "systems\\simula\\config.py::SandboxSettings": {
      "file": "systems\\simula\\config.py",
      "kind": "Class",
      "name": "SandboxSettings"
    },
    "systems\\simula\\config.py::TimeoutSettings": {
      "file": "systems\\simula\\config.py",
      "kind": "Class",
      "name": "TimeoutSettings"
    },
    "systems\\simula\\config.py::_default_workspace_root": {
      "file": "systems\\simula\\config.py",
      "kind": "Function",
      "name": "_default_workspace_root"
    },
    "systems\\simula\\config.py::_default_artifacts_root": {
      "file": "systems\\simula\\config.py",
      "kind": "Function",
      "name": "_default_artifacts_root"
    },
    "systems\\simula\\config.py::SimulaSettings": {
      "file": "systems\\simula\\config.py",
      "kind": "Class",
      "name": "SimulaSettings"
    },
    "systems\\simula\\config.py::SimulaSettings::_parse_allowed_roots": {
      "file": "systems\\simula\\config.py",
      "kind": "Method",
      "name": "_parse_allowed_roots"
    },
    "systems\\simula\\config.py::SimulaSettings::_parse_unsandbox_flag": {
      "file": "systems\\simula\\config.py",
      "kind": "Method",
      "name": "_parse_unsandbox_flag"
    },
    "systems\\simula\\config.py::SimulaSettings::_harmonize_paths": {
      "file": "systems\\simula\\config.py",
      "kind": "Method",
      "name": "_harmonize_paths"
    },
    "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator": {
      "file": "systems\\simula\\agent\\orchestrator.py",
      "kind": "Class",
      "name": "AgentOrchestrator"
    },
    "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::__init__": {
      "file": "systems\\simula\\agent\\orchestrator.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_build_axon_event": {
      "file": "systems\\simula\\agent\\orchestrator.py",
      "kind": "Method",
      "name": "_build_axon_event"
    },
    "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_handle_skill_continuation": {
      "file": "systems\\simula\\agent\\orchestrator.py",
      "kind": "Method",
      "name": "_handle_skill_continuation"
    },
    "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_create_plan": {
      "file": "systems\\simula\\agent\\orchestrator.py",
      "kind": "Method",
      "name": "_create_plan"
    },
    "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_update_plan": {
      "file": "systems\\simula\\agent\\orchestrator.py",
      "kind": "Method",
      "name": "_update_plan"
    },
    "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_on_llm_response": {
      "file": "systems\\simula\\agent\\orchestrator.py",
      "kind": "Method",
      "name": "_on_llm_response"
    },
    "systems\\simula\\client\\synapse_client.py::SynapseClient": {
      "file": "systems\\simula\\client\\synapse_client.py",
      "kind": "Class",
      "name": "SynapseClient"
    },
    "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config": {
      "file": "systems\\simula\\client\\synapse_client.py",
      "kind": "Method",
      "name": "arm_inference_config"
    },
    "systems\\simula\\code_sim\\eval_types.py::MockTelemetry": {
      "file": "systems\\simula\\code_sim\\eval_types.py",
      "kind": "Class",
      "name": "MockTelemetry"
    },
    "systems\\simula\\code_sim\\eval_types.py::MockTelemetry::reward": {
      "file": "systems\\simula\\code_sim\\eval_types.py",
      "kind": "Method",
      "name": "reward"
    },
    "systems\\simula\\code_sim\\eval_types.py::EvalResult": {
      "file": "systems\\simula\\code_sim\\eval_types.py",
      "kind": "Class",
      "name": "EvalResult"
    },
    "systems\\simula\\code_sim\\eval_types.py::EvalResult::as_dict": {
      "file": "systems\\simula\\code_sim\\eval_types.py",
      "kind": "Method",
      "name": "as_dict"
    },
    "systems\\simula\\code_sim\\eval_types.py::EvalResult::hard_gates_ok": {
      "file": "systems\\simula\\code_sim\\eval_types.py",
      "kind": "Method",
      "name": "hard_gates_ok"
    },
    "systems\\simula\\code_sim\\eval_types.py::RewardAggregator": {
      "file": "systems\\simula\\code_sim\\eval_types.py",
      "kind": "Class",
      "name": "RewardAggregator"
    },
    "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::__init__": {
      "file": "systems\\simula\\code_sim\\eval_types.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::_calibrate": {
      "file": "systems\\simula\\code_sim\\eval_types.py",
      "kind": "Method",
      "name": "_calibrate"
    },
    "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score": {
      "file": "systems\\simula\\code_sim\\eval_types.py",
      "kind": "Method",
      "name": "score"
    },
    "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::explain": {
      "file": "systems\\simula\\code_sim\\eval_types.py",
      "kind": "Method",
      "name": "explain"
    },
    "systems\\simula\\code_sim\\loop.py::JsonLogFormatter": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Class",
      "name": "JsonLogFormatter"
    },
    "systems\\simula\\code_sim\\loop.py::JsonLogFormatter::format": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Method",
      "name": "format"
    },
    "systems\\simula\\code_sim\\loop.py::setup_logging": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Function",
      "name": "setup_logging"
    },
    "systems\\simula\\code_sim\\loop.py::sha1": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Function",
      "name": "sha1"
    },
    "systems\\simula\\code_sim\\loop.py::SandboxCfg": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Class",
      "name": "SandboxCfg"
    },
    "systems\\simula\\code_sim\\loop.py::OrchestratorCfg": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Class",
      "name": "OrchestratorCfg"
    },
    "systems\\simula\\code_sim\\loop.py::SimulaConfig": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Class",
      "name": "SimulaConfig"
    },
    "systems\\simula\\code_sim\\loop.py::SimulaConfig::load": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Method",
      "name": "load"
    },
    "systems\\simula\\code_sim\\loop.py::ArtifactStore": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Class",
      "name": "ArtifactStore"
    },
    "systems\\simula\\code_sim\\loop.py::ArtifactStore::__init__": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\simula\\code_sim\\loop.py::ArtifactStore::write_text": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Method",
      "name": "write_text"
    },
    "systems\\simula\\code_sim\\loop.py::ArtifactStore::save_candidate": {
      "file": "systems\\simula\\code_sim\\loop.py",
      "kind": "Method",
      "name": "save_candidate"
    },
    "systems\\simula\\code_sim\\planner.py::_as_list": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "_as_list"
    },
    "systems\\simula\\code_sim\\planner.py::_require_keys": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "_require_keys"
    },
    "systems\\simula\\code_sim\\planner.py::_get": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "_get"
    },
    "systems\\simula\\code_sim\\planner.py::_get_path": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "_get_path"
    },
    "systems\\simula\\code_sim\\planner.py::_normalize_targets": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "_normalize_targets"
    },
    "systems\\simula\\code_sim\\planner.py::_normalize_tests": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "_normalize_tests"
    },
    "systems\\simula\\code_sim\\planner.py::_validate_iterations": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "_validate_iterations"
    },
    "systems\\simula\\code_sim\\planner.py::_validate_acceptance": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "_validate_acceptance"
    },
    "systems\\simula\\code_sim\\planner.py::_normalize_steps_list": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "_normalize_steps_list"
    },
    "systems\\simula\\code_sim\\planner.py::_build_step": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "_build_step"
    },
    "systems\\simula\\code_sim\\planner.py::plan_from_objective": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "plan_from_objective"
    },
    "systems\\simula\\code_sim\\planner.py::match_tests_in_repo": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "match_tests_in_repo"
    },
    "systems\\simula\\code_sim\\planner.py::pretty_plan": {
      "file": "systems\\simula\\code_sim\\planner.py",
      "kind": "Function",
      "name": "pretty_plan"
    },
    "systems\\simula\\code_sim\\prompts.py::_read_file_snippet": {
      "file": "systems\\simula\\code_sim\\prompts.py",
      "kind": "Function",
      "name": "_read_file_snippet"
    },
    "systems\\simula\\code_sim\\telemetry.py::_now_iso": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Function",
      "name": "_now_iso"
    },
    "systems\\simula\\code_sim\\telemetry.py::_redact": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Function",
      "name": "_redact"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Class",
      "name": "Telemetry"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::from_env": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "from_env"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::enable_if_env": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "enable_if_env"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::_ensure_dirs": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "_ensure_dirs"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::_job_file": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "_job_file"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::_write": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "_write"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::start_job": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "start_job"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::end_job": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "end_job"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::llm_call": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "llm_call"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::reward": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "reward"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::log_event": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "log_event"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::tool_event": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "tool_event"
    },
    "systems\\simula\\code_sim\\telemetry.py::Telemetry::graph_write": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "graph_write"
    },
    "systems\\simula\\code_sim\\telemetry.py::with_job_context": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Class",
      "name": "with_job_context"
    },
    "systems\\simula\\code_sim\\telemetry.py::with_job_context::__init__": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\simula\\code_sim\\telemetry.py::with_job_context::__enter__": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "__enter__"
    },
    "systems\\simula\\code_sim\\telemetry.py::with_job_context::__exit__": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Method",
      "name": "__exit__"
    },
    "systems\\simula\\code_sim\\telemetry.py::track_tool": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Function",
      "name": "track_tool"
    },
    "systems\\simula\\code_sim\\telemetry.py::_decorator": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Function",
      "name": "_decorator"
    },
    "systems\\simula\\code_sim\\telemetry.py::_sw": {
      "file": "systems\\simula\\code_sim\\telemetry.py",
      "kind": "Function",
      "name": "_sw"
    },
    "systems\\simula\\code_sim\\archive\\pareto.py::_write_jsonl": {
      "file": "systems\\simula\\code_sim\\archive\\pareto.py",
      "kind": "Function",
      "name": "_write_jsonl"
    },
    "systems\\simula\\code_sim\\archive\\pareto.py::_read_jsonl": {
      "file": "systems\\simula\\code_sim\\archive\\pareto.py",
      "kind": "Function",
      "name": "_read_jsonl"
    },
    "systems\\simula\\code_sim\\archive\\pareto.py::_dominates": {
      "file": "systems\\simula\\code_sim\\archive\\pareto.py",
      "kind": "Function",
      "name": "_dominates"
    },
    "systems\\simula\\code_sim\\archive\\pareto.py::add_candidate": {
      "file": "systems\\simula\\code_sim\\archive\\pareto.py",
      "kind": "Function",
      "name": "add_candidate"
    },
    "systems\\simula\\code_sim\\archive\\pareto.py::top_k_similar": {
      "file": "systems\\simula\\code_sim\\archive\\pareto.py",
      "kind": "Function",
      "name": "top_k_similar"
    },
    "systems\\simula\\code_sim\\evaluators\\contracts.py::_read": {
      "file": "systems\\simula\\code_sim\\evaluators\\contracts.py",
      "kind": "Function",
      "name": "_read"
    },
    "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present": {
      "file": "systems\\simula\\code_sim\\evaluators\\contracts.py",
      "kind": "Function",
      "name": "_approx_sig_present"
    },
    "systems\\simula\\code_sim\\evaluators\\contracts.py::_contains_tool_registration": {
      "file": "systems\\simula\\code_sim\\evaluators\\contracts.py",
      "kind": "Function",
      "name": "_contains_tool_registration"
    },
    "systems\\simula\\code_sim\\evaluators\\contracts.py::_git_changed": {
      "file": "systems\\simula\\code_sim\\evaluators\\contracts.py",
      "kind": "Function",
      "name": "_git_changed"
    },
    "systems\\simula\\code_sim\\evaluators\\contracts.py::run": {
      "file": "systems\\simula\\code_sim\\evaluators\\contracts.py",
      "kind": "Function",
      "name": "run"
    },
    "systems\\simula\\code_sim\\evaluators\\perf.py::_is_mapping": {
      "file": "systems\\simula\\code_sim\\evaluators\\perf.py",
      "kind": "Function",
      "name": "_is_mapping"
    },
    "systems\\simula\\code_sim\\evaluators\\perf.py::_get": {
      "file": "systems\\simula\\code_sim\\evaluators\\perf.py",
      "kind": "Function",
      "name": "_get"
    },
    "systems\\simula\\code_sim\\evaluators\\perf.py::_get_path": {
      "file": "systems\\simula\\code_sim\\evaluators\\perf.py",
      "kind": "Function",
      "name": "_get_path"
    },
    "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests": {
      "file": "systems\\simula\\code_sim\\evaluators\\perf.py",
      "kind": "Function",
      "name": "_extract_tests"
    },
    "systems\\simula\\code_sim\\evaluators\\perf.py::_expand_tests": {
      "file": "systems\\simula\\code_sim\\evaluators\\perf.py",
      "kind": "Function",
      "name": "_expand_tests"
    },
    "systems\\simula\\code_sim\\evaluators\\perf.py::_budget_seconds": {
      "file": "systems\\simula\\code_sim\\evaluators\\perf.py",
      "kind": "Function",
      "name": "_budget_seconds"
    },
    "systems\\simula\\code_sim\\evaluators\\perf.py::run": {
      "file": "systems\\simula\\code_sim\\evaluators\\perf.py",
      "kind": "Function",
      "name": "run"
    },
    "systems\\simula\\code_sim\\evaluators\\runtime.py::run": {
      "file": "systems\\simula\\code_sim\\evaluators\\runtime.py",
      "kind": "Function",
      "name": "run"
    },
    "systems\\simula\\code_sim\\evaluators\\static.py::_run": {
      "file": "systems\\simula\\code_sim\\evaluators\\static.py",
      "kind": "Function",
      "name": "_run"
    },
    "systems\\simula\\code_sim\\evaluators\\static.py::run": {
      "file": "systems\\simula\\code_sim\\evaluators\\static.py",
      "kind": "Function",
      "name": "run"
    },
    "systems\\simula\\code_sim\\evaluators\\tests.py::_is_mapping": {
      "file": "systems\\simula\\code_sim\\evaluators\\tests.py",
      "kind": "Function",
      "name": "_is_mapping"
    },
    "systems\\simula\\code_sim\\evaluators\\tests.py::_get": {
      "file": "systems\\simula\\code_sim\\evaluators\\tests.py",
      "kind": "Function",
      "name": "_get"
    },
    "systems\\simula\\code_sim\\evaluators\\tests.py::_get_path": {
      "file": "systems\\simula\\code_sim\\evaluators\\tests.py",
      "kind": "Function",
      "name": "_get_path"
    },
    "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests": {
      "file": "systems\\simula\\code_sim\\evaluators\\tests.py",
      "kind": "Function",
      "name": "_extract_tests"
    },
    "systems\\simula\\code_sim\\evaluators\\tests.py::_expand_test_selection": {
      "file": "systems\\simula\\code_sim\\evaluators\\tests.py",
      "kind": "Function",
      "name": "_expand_test_selection"
    },
    "systems\\simula\\code_sim\\evaluators\\tests.py::_coverage_per_file": {
      "file": "systems\\simula\\code_sim\\evaluators\\tests.py",
      "kind": "Function",
      "name": "_coverage_per_file"
    },
    "systems\\simula\\code_sim\\evaluators\\tests.py::_parse_counts": {
      "file": "systems\\simula\\code_sim\\evaluators\\tests.py",
      "kind": "Function",
      "name": "_parse_counts"
    },
    "systems\\simula\\code_sim\\evaluators\\tests.py::_ratio": {
      "file": "systems\\simula\\code_sim\\evaluators\\tests.py",
      "kind": "Function",
      "name": "_ratio"
    },
    "systems\\simula\\code_sim\\evaluators\\tests.py::run": {
      "file": "systems\\simula\\code_sim\\evaluators\\tests.py",
      "kind": "Function",
      "name": "run"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Class",
      "name": "EvalResult"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::as_dict": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Method",
      "name": "as_dict"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::unit_pass_ratio": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Method",
      "name": "unit_pass_ratio"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::integration_pass_ratio": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Method",
      "name": "integration_pass_ratio"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::static_score": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Method",
      "name": "static_score"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::security_score": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Method",
      "name": "security_score"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::contracts_score": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Method",
      "name": "contracts_score"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::perf_score": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Method",
      "name": "perf_score"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::coverage_delta_score": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Method",
      "name": "coverage_delta_score"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::policy_penalty": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Method",
      "name": "policy_penalty"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::summary": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Method",
      "name": "summary"
    },
    "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite": {
      "file": "systems\\simula\\code_sim\\evaluators\\__init__.py",
      "kind": "Function",
      "name": "run_evaluator_suite"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_read": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_read"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_rel_for_diff": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_rel_for_diff"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_unified_diff": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_unified_diff"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_strip_shebang_and_encoding"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_module_docstring": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_ensure_module_docstring"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_parse_sig"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_build_func_def_from_sig"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_ensure_import"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::has_import": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "has_import"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_ensure_logger"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_module_has_function": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_module_has_function"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_add_guard_raises"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_ensure_return_annotations"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_arg_annotations": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Function",
      "name": "_ensure_arg_annotations"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Class",
      "name": "AstMutator"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::set_aggressive": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Method",
      "name": "set_aggressive"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Method",
      "name": "mutate"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Method",
      "name": "_do_scaffold"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_imports": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Method",
      "name": "_do_imports"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_typing": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Method",
      "name": "_do_typing"
    },
    "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths": {
      "file": "systems\\simula\\code_sim\\mutators\\ast_refactor.py",
      "kind": "Method",
      "name": "_do_error_paths"
    },
    "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_strip_fences": {
      "file": "systems\\simula\\code_sim\\mutators\\prompt_patch.py",
      "kind": "Function",
      "name": "_strip_fences"
    },
    "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_coerce_primary_target_text": {
      "file": "systems\\simula\\code_sim\\mutators\\prompt_patch.py",
      "kind": "Function",
      "name": "_coerce_primary_target_text"
    },
    "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_unidiff": {
      "file": "systems\\simula\\code_sim\\mutators\\retrieval_edit.py",
      "kind": "Function",
      "name": "_unidiff"
    },
    "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_read": {
      "file": "systems\\simula\\code_sim\\mutators\\retrieval_edit.py",
      "kind": "Function",
      "name": "_read"
    },
    "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_ensure_line": {
      "file": "systems\\simula\\code_sim\\mutators\\retrieval_edit.py",
      "kind": "Function",
      "name": "_ensure_line"
    },
    "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_detect_registry_path": {
      "file": "systems\\simula\\code_sim\\mutators\\retrieval_edit.py",
      "kind": "Function",
      "name": "_detect_registry_path"
    },
    "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits": {
      "file": "systems\\simula\\code_sim\\mutators\\retrieval_edit.py",
      "kind": "Function",
      "name": "retrieval_guided_edits"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::default_neighbor_globs": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "default_neighbor_globs"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::_is_textual": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "_is_textual"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::_shorten": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "_shorten"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::_read_text": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "_read_text"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::_iter_globs": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "_iter_globs"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::_norm_rel": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "_norm_rel"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::Neighbor": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Class",
      "name": "Neighbor"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "_rank_neighbors"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::_pkg_root": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "_pkg_root"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "_collect_candidates"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "_high_signal_slice"
    },
    "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets": {
      "file": "systems\\simula\\code_sim\\retrieval\\context.py",
      "kind": "Function",
      "name": "gather_neighbor_snippets"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::_merge_env": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Function",
      "name": "_merge_env"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::SandboxConfig": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Class",
      "name": "SandboxConfig"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Function",
      "name": "_sanitize_llm_diff"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::AddOnlyApplyResult": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Class",
      "name": "AddOnlyApplyResult"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Function",
      "name": "_apply_add_only_diff_to_fs"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::LocalSession": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Class",
      "name": "LocalSession"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::LocalSession::__init__": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::LocalSession::run": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Method",
      "name": "run"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Class",
      "name": "DockerSession"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__init__": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_ensure_image_ready": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Method",
      "name": "_ensure_image_ready"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Method",
      "name": "_docker_base"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::run": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Method",
      "name": "run"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__del__": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Method",
      "name": "__del__"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSandbox": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Class",
      "name": "DockerSandbox"
    },
    "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSandbox::__init__": {
      "file": "systems\\simula\\code_sim\\sandbox\\sandbox.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\simula\\code_sim\\sandbox\\seeds.py::seed_config": {
      "file": "systems\\simula\\code_sim\\sandbox\\seeds.py",
      "kind": "Function",
      "name": "seed_config"
    },
    "systems\\simula\\code_sim\\sandbox\\seeds.py::ensure_toolchain": {
      "file": "systems\\simula\\code_sim\\sandbox\\seeds.py",
      "kind": "Function",
      "name": "ensure_toolchain"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Constraints": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "Constraints"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Constraints::from_dict": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::UnitTestsSpec": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "UnitTestsSpec"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::UnitTestsSpec::from_dict": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::ContractsSpec": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "ContractsSpec"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::ContractsSpec::from_dict": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::DocsSpec": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "DocsSpec"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::DocsSpec::from_dict": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::PerfSpec": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "PerfSpec"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::PerfSpec::from_dict": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "AcceptanceSpec"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec::from_dict": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::RuntimeSpec": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "RuntimeSpec"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::RuntimeSpec::from_dict": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Objective": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "Objective"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Objective::get": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "get"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::StepTarget": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "StepTarget"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::StepTarget::from_dict": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Step": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "Step"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Step::primary_target": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "primary_target"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Step::acceptance": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "acceptance"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Step::runtime": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Method",
      "name": "runtime"
    },
    "systems\\simula\\code_sim\\specs\\schema.py::Plan": {
      "file": "systems\\simula\\code_sim\\specs\\schema.py",
      "kind": "Class",
      "name": "Plan"
    },
    "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree": {
      "file": "systems\\simula\\code_sim\\utils\\repo_features.py",
      "kind": "Function",
      "name": "file_degree"
    },
    "systems\\simula\\code_sim\\utils\\repo_features.py::file_churn": {
      "file": "systems\\simula\\code_sim\\utils\\repo_features.py",
      "kind": "Function",
      "name": "file_churn"
    },
    "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy": {
      "file": "systems\\simula\\code_sim\\utils\\repo_features.py",
      "kind": "Function",
      "name": "plan_entropy"
    },
    "systems\\simula\\code_sim\\utils\\repo_features.py::features_for_file": {
      "file": "systems\\simula\\code_sim\\utils\\repo_features.py",
      "kind": "Function",
      "name": "features_for_file"
    },
    "systems\\simula\\policy\\emit.py::patch_to_policygraph": {
      "file": "systems\\simula\\policy\\emit.py",
      "kind": "Function",
      "name": "patch_to_policygraph"
    },
    "systems\\simula\\policy\\effects.py::EffectAnalyzer": {
      "file": "systems\\simula\\policy\\effects.py",
      "kind": "Class",
      "name": "EffectAnalyzer"
    },
    "systems\\simula\\policy\\effects.py::EffectAnalyzer::__init__": {
      "file": "systems\\simula\\policy\\effects.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\simula\\policy\\effects.py::EffectAnalyzer::visit_Import": {
      "file": "systems\\simula\\policy\\effects.py",
      "kind": "Method",
      "name": "visit_Import"
    },
    "systems\\simula\\policy\\effects.py::EffectAnalyzer::visit_ImportFrom": {
      "file": "systems\\simula\\policy\\effects.py",
      "kind": "Method",
      "name": "visit_ImportFrom"
    },
    "systems\\simula\\policy\\effects.py::EffectAnalyzer::visit_Call": {
      "file": "systems\\simula\\policy\\effects.py",
      "kind": "Method",
      "name": "visit_Call"
    },
    "systems\\simula\\policy\\effects.py::extract_effects_from_diff": {
      "file": "systems\\simula\\policy\\effects.py",
      "kind": "Function",
      "name": "extract_effects_from_diff"
    },
    "systems\\simula\\service\\deps.py::Settings": {
      "file": "systems\\simula\\service\\deps.py",
      "kind": "Class",
      "name": "Settings"
    },
    "systems\\simula\\service\\services\\codegen.py::JobContext": {
      "file": "systems\\simula\\service\\services\\codegen.py",
      "kind": "Class",
      "name": "JobContext"
    },
    "systems\\simula\\service\\services\\codegen.py::JobContext::__init__": {
      "file": "systems\\simula\\service\\services\\codegen.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\simula\\service\\services\\codegen.py::JobContext::_utc_iso": {
      "file": "systems\\simula\\service\\services\\codegen.py",
      "kind": "Method",
      "name": "_utc_iso"
    },
    "systems\\simula\\service\\services\\codegen.py::JobContext::_write_json_atomic": {
      "file": "systems\\simula\\service\\services\\codegen.py",
      "kind": "Method",
      "name": "_write_json_atomic"
    },
    "systems\\simula\\service\\services\\codegen.py::JobContext::log_event": {
      "file": "systems\\simula\\service\\services\\codegen.py",
      "kind": "Method",
      "name": "log_event"
    },
    "systems\\simula\\service\\services\\codegen.py::JobContext::setup_logging": {
      "file": "systems\\simula\\service\\services\\codegen.py",
      "kind": "Method",
      "name": "setup_logging"
    },
    "systems\\simula\\service\\services\\codegen.py::JobContext::teardown_logging": {
      "file": "systems\\simula\\service\\services\\codegen.py",
      "kind": "Method",
      "name": "teardown_logging"
    },
    "systems\\simula\\service\\services\\codegen.py::JobContext::finalize": {
      "file": "systems\\simula\\service\\services\\codegen.py",
      "kind": "Method",
      "name": "finalize"
    },
    "systems\\simula\\service\\services\\equor_bridge.py::_current_identity_id": {
      "file": "systems\\simula\\service\\services\\equor_bridge.py",
      "kind": "Function",
      "name": "_current_identity_id"
    },
    "systems\\simula\\service\\services\\equor_bridge.py::resolve_equor_for_agent": {
      "file": "systems\\simula\\service\\services\\equor_bridge.py",
      "kind": "Function",
      "name": "resolve_equor_for_agent"
    },
    "systems\\simula\\service\\services\\equor_bridge.py::log_call_result": {
      "file": "systems\\simula\\service\\services\\equor_bridge.py",
      "kind": "Function",
      "name": "log_call_result"
    },
    "systems\\simula\\service\\services\\prompts.py::_read_file_snippet": {
      "file": "systems\\simula\\service\\services\\prompts.py",
      "kind": "Function",
      "name": "_read_file_snippet"
    },
    "systems\\simula\\service\\services\\prompts.py::_gather_repo_context": {
      "file": "systems\\simula\\service\\services\\prompts.py",
      "kind": "Function",
      "name": "_gather_repo_context"
    },
    "systems\\simula\\service\\services\\vcs.py::_git_sync": {
      "file": "systems\\simula\\service\\services\\vcs.py",
      "kind": "Function",
      "name": "_git_sync"
    },
    "systems\\simula\\nscs\\ast_index.py::_fq": {
      "file": "systems\\simula\\nscs\\ast_index.py",
      "kind": "Function",
      "name": "_fq"
    },
    "systems\\simula\\nscs\\ast_index.py::_load_index": {
      "file": "systems\\simula\\nscs\\ast_index.py",
      "kind": "Function",
      "name": "_load_index"
    },
    "systems\\simula\\nscs\\ast_index.py::_save_index": {
      "file": "systems\\simula\\nscs\\ast_index.py",
      "kind": "Function",
      "name": "_save_index"
    },
    "systems\\simula\\nscs\\ast_index.py::index_python_files": {
      "file": "systems\\simula\\nscs\\ast_index.py",
      "kind": "Function",
      "name": "index_python_files"
    },
    "systems\\simula\\nscs\\ast_index.py::_V": {
      "file": "systems\\simula\\nscs\\ast_index.py",
      "kind": "Class",
      "name": "_V"
    },
    "systems\\simula\\nscs\\ast_index.py::_V::__init__": {
      "file": "systems\\simula\\nscs\\ast_index.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems\\simula\\nscs\\ast_index.py::_V::visit_ClassDef": {
      "file": "systems\\simula\\nscs\\ast_index.py",
      "kind": "Method",
      "name": "visit_ClassDef"
    },
    "systems\\simula\\nscs\\ast_index.py::_V::visit_FunctionDef": {
      "file": "systems\\simula\\nscs\\ast_index.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "systems\\simula\\nscs\\ast_index.py::neighbors_for_symbol": {
      "file": "systems\\simula\\nscs\\ast_index.py",
      "kind": "Function",
      "name": "neighbors_for_symbol"
    },
    "systems\\simula\\nscs\\ast_index.py::list_defs_in_file": {
      "file": "systems\\simula\\nscs\\ast_index.py",
      "kind": "Function",
      "name": "list_defs_in_file"
    },
    "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets": {
      "file": "systems\\simula\\nscs\\dossier.py",
      "kind": "Function",
      "name": "gather_neighbor_snippets"
    },
    "systems\\simula\\nscs\\dossier.py::build_dossier": {
      "file": "systems\\simula\\nscs\\dossier.py",
      "kind": "Function",
      "name": "build_dossier"
    },
    "systems\\simula\\nscs\\agent_tools.py::_sanitize_diff": {
      "file": "systems\\simula\\nscs\\agent_tools.py",
      "kind": "Function",
      "name": "_sanitize_diff"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_Known": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Class",
      "name": "_Known"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_Known::__init__": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Method",
      "name": "__init__"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_String": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Class",
      "name": "_String"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_String::__init__": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Method",
      "name": "__init__"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_array_keys": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_array_keys"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_object_keys": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_object_keys"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_is_array": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_is_array"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_is_object": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_is_object"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_is_string": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_is_string"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_index": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_index"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_loop": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_loop"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_ref": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_ref"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_relate": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_relate"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_transform": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_transform"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_wrap": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "_wrap"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "parse"
    },
    "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::stringify": {
      "file": "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py",
      "kind": "Function",
      "name": "stringify"
    },
    "systems/simula/nscs/twin/probes.py::inject_runtime_contracts": {
      "file": "systems/simula/nscs/twin/probes.py",
      "kind": "Function",
      "name": "inject_runtime_contracts"
    },
    "systems/simula/build/detect.py::detect_build_system": {
      "file": "systems/simula/build/detect.py",
      "kind": "Function",
      "name": "detect_build_system"
    },
    "test_all.py::mock_settings": {
      "file": "test_all.py",
      "kind": "Function",
      "name": "mock_settings"
    },
    "test_all.py::mock_sandbox": {
      "file": "test_all.py",
      "kind": "Function",
      "name": "mock_sandbox"
    },
    "context_store.py::ContextStore": {
      "file": "context_store.py",
      "kind": "Class",
      "name": "ContextStore"
    },
    "context_store.py::ContextStore::__init__": {
      "file": "context_store.py",
      "kind": "Method",
      "name": "__init__"
    },
    "context_store.py::ContextStore::cache_tool": {
      "file": "context_store.py",
      "kind": "Method",
      "name": "cache_tool"
    },
    "context_store.py::ContextStore::get_cached_tool": {
      "file": "context_store.py",
      "kind": "Method",
      "name": "get_cached_tool"
    },
    "context_store.py::ContextStore::prune_cache": {
      "file": "context_store.py",
      "kind": "Method",
      "name": "prune_cache"
    },
    "app.py::_name": {
      "file": "app.py",
      "kind": "Function",
      "name": "_name"
    },
    "app.py::_DebugTypeAdapter": {
      "file": "app.py",
      "kind": "Class",
      "name": "_DebugTypeAdapter"
    },
    "app.py::_DebugTypeAdapter::__init__": {
      "file": "app.py",
      "kind": "Method",
      "name": "__init__"
    },
    "collate.py::collate_dir": {
      "file": "collate.py",
      "kind": "Function",
      "name": "collate_dir"
    },
    "collate.py::main": {
      "file": "collate.py",
      "kind": "Function",
      "name": "main"
    },
    ".collate.py::collate_dir": {
      "file": ".collate.py",
      "kind": "Function",
      "name": "collate_dir"
    },
    ".collate.py::main": {
      "file": ".collate.py",
      "kind": "Function",
      "name": "main"
    },
    "autofix_f841.py::Finding": {
      "file": "autofix_f841.py",
      "kind": "Class",
      "name": "Finding"
    },
    "autofix_f841.py::ruff_f841": {
      "file": "autofix_f841.py",
      "kind": "Function",
      "name": "ruff_f841"
    },
    "autofix_f841.py::fix_line": {
      "file": "autofix_f841.py",
      "kind": "Function",
      "name": "fix_line"
    },
    "autofix_f841.py::repl": {
      "file": "autofix_f841.py",
      "kind": "Function",
      "name": "repl"
    },
    "autofix_f841.py::process_file": {
      "file": "autofix_f841.py",
      "kind": "Function",
      "name": "process_file"
    },
    "autofix_f841.py::main": {
      "file": "autofix_f841.py",
      "kind": "Function",
      "name": "main"
    },
    "api/endpoints/origin.py::check_admin": {
      "file": "api/endpoints/origin.py",
      "kind": "Function",
      "name": "check_admin"
    },
    "api/endpoints/origin.py::OriginIn": {
      "file": "api/endpoints/origin.py",
      "kind": "Class",
      "name": "OriginIn"
    },
    "api/endpoints/origin.py::OriginCreated": {
      "file": "api/endpoints/origin.py",
      "kind": "Class",
      "name": "OriginCreated"
    },
    "api/endpoints/origin.py::SearchIn": {
      "file": "api/endpoints/origin.py",
      "kind": "Class",
      "name": "SearchIn"
    },
    "api/endpoints/origin.py::SearchHit": {
      "file": "api/endpoints/origin.py",
      "kind": "Class",
      "name": "SearchHit"
    },
    "api/endpoints/origin.py::EdgeIn": {
      "file": "api/endpoints/origin.py",
      "kind": "Class",
      "name": "EdgeIn"
    },
    "api/endpoints/origin.py::EdgeCreateIn": {
      "file": "api/endpoints/origin.py",
      "kind": "Class",
      "name": "EdgeCreateIn"
    },
    "api/endpoints/origin.py::BatchCSVIn": {
      "file": "api/endpoints/origin.py",
      "kind": "Class",
      "name": "BatchCSVIn"
    },
    "api/endpoints/origin.py::_parse_tags": {
      "file": "api/endpoints/origin.py",
      "kind": "Function",
      "name": "_parse_tags"
    },
    "api/endpoints/evo/core.py::_stamp_cost": {
      "file": "api/endpoints/evo/core.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/core.py::ping": {
      "file": "api/endpoints/evo/core.py",
      "kind": "Function",
      "name": "ping"
    },
    "api/endpoints/evo/conflicts.py::_stamp_cost": {
      "file": "api/endpoints/evo/conflicts.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/conflicts.py::BatchRequest": {
      "file": "api/endpoints/evo/conflicts.py",
      "kind": "Class",
      "name": "BatchRequest"
    },
    "api/endpoints/evo/conflicts.py::create_conflict": {
      "file": "api/endpoints/evo/conflicts.py",
      "kind": "Function",
      "name": "create_conflict"
    },
    "api/endpoints/evo/conflicts.py::create_conflicts_batch": {
      "file": "api/endpoints/evo/conflicts.py",
      "kind": "Function",
      "name": "create_conflicts_batch"
    },
    "api/endpoints/evo/conflicts.py::list_open_conflicts": {
      "file": "api/endpoints/evo/conflicts.py",
      "kind": "Function",
      "name": "list_open_conflicts"
    },
    "api/endpoints/evo/conflicts.py::get_conflict": {
      "file": "api/endpoints/evo/conflicts.py",
      "kind": "Function",
      "name": "get_conflict"
    },
    "api/endpoints/evo/hypotheses.py::_stamp_cost": {
      "file": "api/endpoints/evo/hypotheses.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/hypotheses.py::SpawnRequest": {
      "file": "api/endpoints/evo/hypotheses.py",
      "kind": "Class",
      "name": "SpawnRequest"
    },
    "api/endpoints/evo/hypotheses.py::spawn_hypotheses": {
      "file": "api/endpoints/evo/hypotheses.py",
      "kind": "Function",
      "name": "spawn_hypotheses"
    },
    "api/endpoints/evo/proposals.py::_stamp_cost": {
      "file": "api/endpoints/evo/proposals.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/proposals.py::AssembleRequest": {
      "file": "api/endpoints/evo/proposals.py",
      "kind": "Class",
      "name": "AssembleRequest"
    },
    "api/endpoints/evo/proposals.py::assemble_proposal": {
      "file": "api/endpoints/evo/proposals.py",
      "kind": "Function",
      "name": "assemble_proposal"
    },
    "api/endpoints/evo/proposals.py::get_proposal": {
      "file": "api/endpoints/evo/proposals.py",
      "kind": "Function",
      "name": "get_proposal"
    },
    "api/endpoints/evo/proposals.py::handover_proposal": {
      "file": "api/endpoints/evo/proposals.py",
      "kind": "Function",
      "name": "handover_proposal"
    },
    "api/endpoints/evo/replay.py::_stamp_cost": {
      "file": "api/endpoints/evo/replay.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/replay.py::get_replay_manifest": {
      "file": "api/endpoints/evo/replay.py",
      "kind": "Function",
      "name": "get_replay_manifest"
    },
    "api/endpoints/evo/replay.py::verify_replay_capsule": {
      "file": "api/endpoints/evo/replay.py",
      "kind": "Function",
      "name": "verify_replay_capsule"
    },
    "api/endpoints/evo/escalate.py::_stamp_cost": {
      "file": "api/endpoints/evo/escalate.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/escalate.py::_coerce_conflict_ids": {
      "file": "api/endpoints/evo/escalate.py",
      "kind": "Function",
      "name": "_coerce_conflict_ids"
    },
    "api/endpoints/evo/obviousness.py::_stamp_cost": {
      "file": "api/endpoints/evo/obviousness.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/obviousness.py::ScoreRequest": {
      "file": "api/endpoints/evo/obviousness.py",
      "kind": "Class",
      "name": "ScoreRequest"
    },
    "api/endpoints/evo/obviousness.py::score_obviousness": {
      "file": "api/endpoints/evo/obviousness.py",
      "kind": "Function",
      "name": "score_obviousness"
    },
    "api/endpoints/evo/evidence.py::_stamp_cost": {
      "file": "api/endpoints/evo/evidence.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/evidence.py::PlanResponse": {
      "file": "api/endpoints/evo/evidence.py",
      "kind": "Class",
      "name": "PlanResponse"
    },
    "api/endpoints/evo/evidence.py::RequestResponse": {
      "file": "api/endpoints/evo/evidence.py",
      "kind": "Class",
      "name": "RequestResponse"
    },
    "api/endpoints/evo/evidence.py::AttachReplayRequest": {
      "file": "api/endpoints/evo/evidence.py",
      "kind": "Class",
      "name": "AttachReplayRequest"
    },
    "api/endpoints/evo/evidence.py::AttachReplayResponse": {
      "file": "api/endpoints/evo/evidence.py",
      "kind": "Class",
      "name": "AttachReplayResponse"
    },
    "api/endpoints/evo/evidence.py::plan_suite": {
      "file": "api/endpoints/evo/evidence.py",
      "kind": "Function",
      "name": "plan_suite"
    },
    "api/endpoints/evo/evidence.py::request_collection": {
      "file": "api/endpoints/evo/evidence.py",
      "kind": "Function",
      "name": "request_collection"
    },
    "api/endpoints/evo/evidence.py::collect": {
      "file": "api/endpoints/evo/evidence.py",
      "kind": "Function",
      "name": "collect"
    },
    "api/endpoints/evo/evidence.py::attach_replay": {
      "file": "api/endpoints/evo/evidence.py",
      "kind": "Function",
      "name": "attach_replay"
    },
    "api/endpoints/evo/scorecards.py::_stamp_cost": {
      "file": "api/endpoints/evo/scorecards.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/scorecards.py::_hash": {
      "file": "api/endpoints/evo/scorecards.py",
      "kind": "Function",
      "name": "_hash"
    },
    "api/endpoints/evo/scorecards.py::ExportRequest": {
      "file": "api/endpoints/evo/scorecards.py",
      "kind": "Class",
      "name": "ExportRequest"
    },
    "api/endpoints/evo/scorecards.py::export_scorecard": {
      "file": "api/endpoints/evo/scorecards.py",
      "kind": "Function",
      "name": "export_scorecard"
    },
    "api/endpoints/evo/repair.py::_stamp_cost": {
      "file": "api/endpoints/evo/repair.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/repair.py::RecordRequest": {
      "file": "api/endpoints/evo/repair.py",
      "kind": "Class",
      "name": "RecordRequest"
    },
    "api/endpoints/evo/repair.py::record": {
      "file": "api/endpoints/evo/repair.py",
      "kind": "Function",
      "name": "record"
    },
    "api/endpoints/evo/repair.py::UpdateRequest": {
      "file": "api/endpoints/evo/repair.py",
      "kind": "Class",
      "name": "UpdateRequest"
    },
    "api/endpoints/evo/repair.py::update": {
      "file": "api/endpoints/evo/repair.py",
      "kind": "Function",
      "name": "update"
    },
    "api/endpoints/evo/repair.py::get_ticket": {
      "file": "api/endpoints/evo/repair.py",
      "kind": "Function",
      "name": "get_ticket"
    },
    "api/endpoints/evo/repair.py::list_tickets": {
      "file": "api/endpoints/evo/repair.py",
      "kind": "Function",
      "name": "list_tickets"
    },
    "api/endpoints/evo/cycle.py::_stamp_cost": {
      "file": "api/endpoints/evo/cycle.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/evo/cycle.py::CycleRequest": {
      "file": "api/endpoints/evo/cycle.py",
      "kind": "Class",
      "name": "CycleRequest"
    },
    "api/endpoints/evo/diag.py::_stamp_cost": {
      "file": "api/endpoints/evo/diag.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/unity/deliberate.py::_to_dict": {
      "file": "api/endpoints/unity/deliberate.py",
      "kind": "Function",
      "name": "_to_dict"
    },
    "api/endpoints/unity/deliberate.py::_env_timeout_seconds": {
      "file": "api/endpoints/unity/deliberate.py",
      "kind": "Function",
      "name": "_env_timeout_seconds"
    },
    "api/endpoints/voxis/generate_phrase.py::_word_tokens": {
      "file": "api/endpoints/voxis/generate_phrase.py",
      "kind": "Function",
      "name": "_word_tokens"
    },
    "api/endpoints/voxis/generate_phrase.py::_six_word_score": {
      "file": "api/endpoints/voxis/generate_phrase.py",
      "kind": "Function",
      "name": "_six_word_score"
    },
    "api/endpoints/voxis/generate_phrase.py::_punctuation_ok": {
      "file": "api/endpoints/voxis/generate_phrase.py",
      "kind": "Function",
      "name": "_punctuation_ok"
    },
    "api/endpoints/voxis/generate_phrase.py::_overlap_ratio": {
      "file": "api/endpoints/voxis/generate_phrase.py",
      "kind": "Function",
      "name": "_overlap_ratio"
    },
    "api/endpoints/voxis/talk.py::VoxisTalkRequest": {
      "file": "api/endpoints/voxis/talk.py",
      "kind": "Class",
      "name": "VoxisTalkRequest"
    },
    "api/endpoints/synapse/tasks.py::_j": {
      "file": "api/endpoints/synapse/tasks.py",
      "kind": "Function",
      "name": "_j"
    },
    "api/endpoints/synapse/tasks.py::_is_no_arms_err": {
      "file": "api/endpoints/synapse/tasks.py",
      "kind": "Function",
      "name": "_is_no_arms_err"
    },
    "api/endpoints/synapse/dashboard_api.py::pack": {
      "file": "api/endpoints/synapse/dashboard_api.py",
      "kind": "Function",
      "name": "pack"
    },
    "api/endpoints/synapse/governor.py::_to_dict": {
      "file": "api/endpoints/synapse/governor.py",
      "kind": "Function",
      "name": "_to_dict"
    },
    "api/endpoints/synapse/governor.py::_proposal_id": {
      "file": "api/endpoints/synapse/governor.py",
      "kind": "Function",
      "name": "_proposal_id"
    },
    "api/endpoints/synapse/listener.py::_run": {
      "file": "api/endpoints/synapse/listener.py",
      "kind": "Function",
      "name": "_run"
    },
    "api/endpoints/synapse/listener.py::_apply_patch_to_worktree": {
      "file": "api/endpoints/synapse/listener.py",
      "kind": "Function",
      "name": "_apply_patch_to_worktree"
    },
    "api/endpoints/synapse/ui_api.py::to_summary": {
      "file": "api/endpoints/synapse/ui_api.py",
      "kind": "Function",
      "name": "to_summary"
    },
    "api/endpoints/synapse/predict.py::PredictRequest": {
      "file": "api/endpoints/synapse/predict.py",
      "kind": "Class",
      "name": "PredictRequest"
    },
    "api/endpoints/synapse/predict.py::PredictResponse": {
      "file": "api/endpoints/synapse/predict.py",
      "kind": "Class",
      "name": "PredictResponse"
    },
    "api/endpoints/synk/switchboard.py::FlagUpsert": {
      "file": "api/endpoints/synk/switchboard.py",
      "kind": "Class",
      "name": "FlagUpsert"
    },
    "api/endpoints/synk/switchboard.py::FlagOut": {
      "file": "api/endpoints/synk/switchboard.py",
      "kind": "Class",
      "name": "FlagOut"
    },
    "api/endpoints/synk/switchboard.py::_to_json": {
      "file": "api/endpoints/synk/switchboard.py",
      "kind": "Function",
      "name": "_to_json"
    },
    "api/endpoints/synk/switchboard.py::_from_json": {
      "file": "api/endpoints/synk/switchboard.py",
      "kind": "Function",
      "name": "_from_json"
    },
    "api/endpoints/synk/switchboard.py::_now_ms": {
      "file": "api/endpoints/synk/switchboard.py",
      "kind": "Function",
      "name": "_now_ms"
    },
    "api/endpoints/synk/switchboard.py::_actor_identity": {
      "file": "api/endpoints/synk/switchboard.py",
      "kind": "Function",
      "name": "_actor_identity"
    },
    "api/endpoints/equor/declare.py::_sha256_hex": {
      "file": "api/endpoints/equor/declare.py",
      "kind": "Function",
      "name": "_sha256_hex"
    },
    "api/endpoints/llm/call.py::TaskContext": {
      "file": "api/endpoints/llm/call.py",
      "kind": "Class",
      "name": "TaskContext"
    },
    "api/endpoints/llm/call.py::ProviderOverrides": {
      "file": "api/endpoints/llm/call.py",
      "kind": "Class",
      "name": "ProviderOverrides"
    },
    "api/endpoints/llm/call.py::LlmCallRequest": {
      "file": "api/endpoints/llm/call.py",
      "kind": "Class",
      "name": "LlmCallRequest"
    },
    "api/endpoints/llm/call.py::UsageDetails": {
      "file": "api/endpoints/llm/call.py",
      "kind": "Class",
      "name": "UsageDetails"
    },
    "api/endpoints/llm/call.py::Usage": {
      "file": "api/endpoints/llm/call.py",
      "kind": "Class",
      "name": "Usage"
    },
    "api/endpoints/llm/call.py::LlmCallResponse": {
      "file": "api/endpoints/llm/call.py",
      "kind": "Class",
      "name": "LlmCallResponse"
    },
    "api/endpoints/llm/call.py::_merge_policy": {
      "file": "api/endpoints/llm/call.py",
      "kind": "Function",
      "name": "_merge_policy"
    },
    "api/endpoints/llm/call.py::_bus_kwargs_from_overrides": {
      "file": "api/endpoints/llm/call.py",
      "kind": "Function",
      "name": "_bus_kwargs_from_overrides"
    },
    "api/endpoints/llm/call.py::_safe_int": {
      "file": "api/endpoints/llm/call.py",
      "kind": "Function",
      "name": "_safe_int"
    },
    "api/endpoints/llm/call.py::_extract_usage_tokens": {
      "file": "api/endpoints/llm/call.py",
      "kind": "Function",
      "name": "_extract_usage_tokens"
    },
    "api/endpoints/axon/core_routes.py::_remaining_ms": {
      "file": "api/endpoints/axon/core_routes.py",
      "kind": "Function",
      "name": "_remaining_ms"
    },
    "api/endpoints/axon/probecraft.py::SynthesisRequest": {
      "file": "api/endpoints/axon/probecraft.py",
      "kind": "Class",
      "name": "SynthesisRequest"
    },
    "api/endpoints/axon/probecraft.py::StatusUpdateRequest": {
      "file": "api/endpoints/axon/probecraft.py",
      "kind": "Class",
      "name": "StatusUpdateRequest"
    },
    "api/endpoints/axon/probecraft.py::_driver_name_to_class_name": {
      "file": "api/endpoints/axon/probecraft.py",
      "kind": "Function",
      "name": "_driver_name_to_class_name"
    },
    "api/endpoints/axon/probecraft_intake.py::_derive_driver_name": {
      "file": "api/endpoints/axon/probecraft_intake.py",
      "kind": "Function",
      "name": "_derive_driver_name"
    },
    "api/endpoints/axon/promote.py::PromoteRequest": {
      "file": "api/endpoints/axon/promote.py",
      "kind": "Class",
      "name": "PromoteRequest"
    },
    "api/endpoints/qora/arch_exec.py::SearchReq": {
      "file": "api/endpoints/qora/arch_exec.py",
      "kind": "Class",
      "name": "SearchReq"
    },
    "api/endpoints/qora/arch_exec.py::ExecByUidReq": {
      "file": "api/endpoints/qora/arch_exec.py",
      "kind": "Class",
      "name": "ExecByUidReq"
    },
    "api/endpoints/qora/arch_exec.py::ExecByQueryReq": {
      "file": "api/endpoints/qora/arch_exec.py",
      "kind": "Class",
      "name": "ExecByQueryReq"
    },
    "api/endpoints/qora/manifest.py::build": {
      "file": "api/endpoints/qora/manifest.py",
      "kind": "Function",
      "name": "build"
    },
    "api/endpoints/qora/manifest.py::latest": {
      "file": "api/endpoints/qora/manifest.py",
      "kind": "Function",
      "name": "latest"
    },
    "api/endpoints/qora/gcb.py::build": {
      "file": "api/endpoints/qora/gcb.py",
      "kind": "Function",
      "name": "build"
    },
    "api/endpoints/qora/gcb.py::dispatch": {
      "file": "api/endpoints/qora/gcb.py",
      "kind": "Function",
      "name": "dispatch"
    },
    "api/endpoints/qora/policy.py::DiffCheckRequest": {
      "file": "api/endpoints/qora/policy.py",
      "kind": "Class",
      "name": "DiffCheckRequest"
    },
    "api/endpoints/qora/policy.py::DiffCheckResponse": {
      "file": "api/endpoints/qora/policy.py",
      "kind": "Class",
      "name": "DiffCheckResponse"
    },
    "api/endpoints/qora/recipes.py::RecipeWrite": {
      "file": "api/endpoints/qora/recipes.py",
      "kind": "Class",
      "name": "RecipeWrite"
    },
    "api/endpoints/qora/recipes.py::RecipeFind": {
      "file": "api/endpoints/qora/recipes.py",
      "kind": "Class",
      "name": "RecipeFind"
    },
    "api/endpoints/qora/reindex.py::ReindexRequest": {
      "file": "api/endpoints/qora/reindex.py",
      "kind": "Class",
      "name": "ReindexRequest"
    },
    "api/endpoints/qora/reindex.py::ReindexResponse": {
      "file": "api/endpoints/qora/reindex.py",
      "kind": "Class",
      "name": "ReindexResponse"
    },
    "api/endpoints/qora/reindex.py::_git_changed_files": {
      "file": "api/endpoints/qora/reindex.py",
      "kind": "Function",
      "name": "_git_changed_files"
    },
    "api/endpoints/qora/annotate.py::AnnotateRequest": {
      "file": "api/endpoints/qora/annotate.py",
      "kind": "Class",
      "name": "AnnotateRequest"
    },
    "api/endpoints/qora/annotate.py::AnnotateResponse": {
      "file": "api/endpoints/qora/annotate.py",
      "kind": "Class",
      "name": "AnnotateResponse"
    },
    "api/endpoints/qora/annotate.py::_changed_files": {
      "file": "api/endpoints/qora/annotate.py",
      "kind": "Function",
      "name": "_changed_files"
    },
    "api/endpoints/qora/annotate.py::_mk_title_line": {
      "file": "api/endpoints/qora/annotate.py",
      "kind": "Function",
      "name": "_mk_title_line"
    },
    "api/endpoints/qora/annotate.py::_mk_section": {
      "file": "api/endpoints/qora/annotate.py",
      "kind": "Function",
      "name": "_mk_section"
    },
    "api/endpoints/qora/annotate.py::_mk_bullets": {
      "file": "api/endpoints/qora/annotate.py",
      "kind": "Function",
      "name": "_mk_bullets"
    },
    "api/endpoints/qora/impact.py::ImpactPlanRequest": {
      "file": "api/endpoints/qora/impact.py",
      "kind": "Class",
      "name": "ImpactPlanRequest"
    },
    "api/endpoints/qora/impact.py::ImpactPlanResponse": {
      "file": "api/endpoints/qora/impact.py",
      "kind": "Class",
      "name": "ImpactPlanResponse"
    },
    "api/endpoints/qora/impact.py::_risk_level": {
      "file": "api/endpoints/qora/impact.py",
      "kind": "Function",
      "name": "_risk_level"
    },
    "api/endpoints/qora/quality.py::MutationEstimateRequest": {
      "file": "api/endpoints/qora/quality.py",
      "kind": "Class",
      "name": "MutationEstimateRequest"
    },
    "api/endpoints/qora/quality.py::MutationEstimateResponse": {
      "file": "api/endpoints/qora/quality.py",
      "kind": "Class",
      "name": "MutationEstimateResponse"
    },
    "api/endpoints/qora/policypacks.py::PackFile": {
      "file": "api/endpoints/qora/policypacks.py",
      "kind": "Class",
      "name": "PackFile"
    },
    "api/endpoints/qora/policypacks.py::PackUpload": {
      "file": "api/endpoints/qora/policypacks.py",
      "kind": "Class",
      "name": "PackUpload"
    },
    "api/endpoints/qora/wm_search.py::SearchRequest": {
      "file": "api/endpoints/qora/wm_search.py",
      "kind": "Class",
      "name": "SearchRequest"
    },
    "api/endpoints/qora/wm_search.py::SearchHit": {
      "file": "api/endpoints/qora/wm_search.py",
      "kind": "Class",
      "name": "SearchHit"
    },
    "api/endpoints/qora/wm_search.py::SearchResponse": {
      "file": "api/endpoints/qora/wm_search.py",
      "kind": "Class",
      "name": "SearchResponse"
    },
    "api/endpoints/qora/wm_search.py::_read_text": {
      "file": "api/endpoints/qora/wm_search.py",
      "kind": "Function",
      "name": "_read_text"
    },
    "api/endpoints/qora/wm_search.py::_score": {
      "file": "api/endpoints/qora/wm_search.py",
      "kind": "Function",
      "name": "_score"
    },
    "api/endpoints/qora/wm_search.py::_first_line": {
      "file": "api/endpoints/qora/wm_search.py",
      "kind": "Function",
      "name": "_first_line"
    },
    "api/endpoints/qora/wm_search.py::_snippet": {
      "file": "api/endpoints/qora/wm_search.py",
      "kind": "Function",
      "name": "_snippet"
    },
    "api/endpoints/qora/plan.py::DecomposeFromDiffRequest": {
      "file": "api/endpoints/qora/plan.py",
      "kind": "Class",
      "name": "DecomposeFromDiffRequest"
    },
    "api/endpoints/qora/plan.py::RoleStep": {
      "file": "api/endpoints/qora/plan.py",
      "kind": "Class",
      "name": "RoleStep"
    },
    "api/endpoints/qora/plan.py::DecomposeResponse": {
      "file": "api/endpoints/qora/plan.py",
      "kind": "Class",
      "name": "DecomposeResponse"
    },
    "api/endpoints/qora/plan.py::DecomposeFromGoalRequest": {
      "file": "api/endpoints/qora/plan.py",
      "kind": "Class",
      "name": "DecomposeFromGoalRequest"
    },
    "api/endpoints/qora/plan.py::_mk_role_steps_from_impact": {
      "file": "api/endpoints/qora/plan.py",
      "kind": "Function",
      "name": "_mk_role_steps_from_impact"
    },
    "api/endpoints/qora/pr_synth.py::PRSynthRequest": {
      "file": "api/endpoints/qora/pr_synth.py",
      "kind": "Class",
      "name": "PRSynthRequest"
    },
    "api/endpoints/qora/pr_synth.py::PRSynthResponse": {
      "file": "api/endpoints/qora/pr_synth.py",
      "kind": "Class",
      "name": "PRSynthResponse"
    },
    "api/endpoints/qora/pr_synth.py::_changed_files": {
      "file": "api/endpoints/qora/pr_synth.py",
      "kind": "Function",
      "name": "_changed_files"
    },
    "api/endpoints/qora/wm_symbols.py::SymbolsResponse": {
      "file": "api/endpoints/qora/wm_symbols.py",
      "kind": "Class",
      "name": "SymbolsResponse"
    },
    "api/endpoints/qora/wm_symbols.py::_extract_symbols_py": {
      "file": "api/endpoints/qora/wm_symbols.py",
      "kind": "Function",
      "name": "_extract_symbols_py"
    },
    "api/endpoints/qora/wm_symbols.py::V": {
      "file": "api/endpoints/qora/wm_symbols.py",
      "kind": "Class",
      "name": "V"
    },
    "api/endpoints/qora/wm_symbols.py::V::visit_FunctionDef": {
      "file": "api/endpoints/qora/wm_symbols.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "api/endpoints/qora/wm_symbols.py::V::visit_AsyncFunctionDef": {
      "file": "api/endpoints/qora/wm_symbols.py",
      "kind": "Method",
      "name": "visit_AsyncFunctionDef"
    },
    "api/endpoints/qora/wm_symbols.py::V::visit_ClassDef": {
      "file": "api/endpoints/qora/wm_symbols.py",
      "kind": "Method",
      "name": "visit_ClassDef"
    },
    "api/endpoints/qora/bb.py::BBWrite": {
      "file": "api/endpoints/qora/bb.py",
      "kind": "Class",
      "name": "BBWrite"
    },
    "api/endpoints/qora/mutants.py::Mutant": {
      "file": "api/endpoints/qora/mutants.py",
      "kind": "Class",
      "name": "Mutant"
    },
    "api/endpoints/qora/mutants.py::EvalRequest": {
      "file": "api/endpoints/qora/mutants.py",
      "kind": "Class",
      "name": "EvalRequest"
    },
    "api/endpoints/qora/mutants.py::EvalResult": {
      "file": "api/endpoints/qora/mutants.py",
      "kind": "Class",
      "name": "EvalResult"
    },
    "api/endpoints/qora/mutants.py::EvalResponse": {
      "file": "api/endpoints/qora/mutants.py",
      "kind": "Class",
      "name": "EvalResponse"
    },
    "api/endpoints/qora/mutants.py::GenerateRequest": {
      "file": "api/endpoints/qora/mutants.py",
      "kind": "Class",
      "name": "GenerateRequest"
    },
    "api/endpoints/qora/mutants.py::GenerateResponse": {
      "file": "api/endpoints/qora/mutants.py",
      "kind": "Class",
      "name": "GenerateResponse"
    },
    "api/endpoints/qora/mutants.py::_changed_blocks": {
      "file": "api/endpoints/qora/mutants.py",
      "kind": "Function",
      "name": "_changed_blocks"
    },
    "api/endpoints/qora/mutants.py::_mutate_line": {
      "file": "api/endpoints/qora/mutants.py",
      "kind": "Function",
      "name": "_mutate_line"
    },
    "api/endpoints/qora/mutants.py::_diff_for_line": {
      "file": "api/endpoints/qora/mutants.py",
      "kind": "Function",
      "name": "_diff_for_line"
    },
    "api/endpoints/qora/xref.py::FindUsagesRequest": {
      "file": "api/endpoints/qora/xref.py",
      "kind": "Class",
      "name": "FindUsagesRequest"
    },
    "api/endpoints/qora/xref.py::UsageHit": {
      "file": "api/endpoints/qora/xref.py",
      "kind": "Class",
      "name": "UsageHit"
    },
    "api/endpoints/qora/xref.py::FindUsagesResponse": {
      "file": "api/endpoints/qora/xref.py",
      "kind": "Class",
      "name": "FindUsagesResponse"
    },
    "api/endpoints/qora/xref.py::_iter_files": {
      "file": "api/endpoints/qora/xref.py",
      "kind": "Function",
      "name": "_iter_files"
    },
    "api/endpoints/qora/xref.py::_identifier_pat": {
      "file": "api/endpoints/qora/xref.py",
      "kind": "Function",
      "name": "_identifier_pat"
    },
    "api/endpoints/qora/codemod.py::RenameRequest": {
      "file": "api/endpoints/qora/codemod.py",
      "kind": "Class",
      "name": "RenameRequest"
    },
    "api/endpoints/qora/codemod.py::ReplaceImportRequest": {
      "file": "api/endpoints/qora/codemod.py",
      "kind": "Class",
      "name": "ReplaceImportRequest"
    },
    "api/endpoints/qora/codemod.py::CodemodResponse": {
      "file": "api/endpoints/qora/codemod.py",
      "kind": "Class",
      "name": "CodemodResponse"
    },
    "api/endpoints/qora/codemod.py::_unified_diff": {
      "file": "api/endpoints/qora/codemod.py",
      "kind": "Function",
      "name": "_unified_diff"
    },
    "api/endpoints/qora/codemod.py::_regex_rename": {
      "file": "api/endpoints/qora/codemod.py",
      "kind": "Function",
      "name": "_regex_rename"
    },
    "api/endpoints/qora/codemod.py::Renamer": {
      "file": "api/endpoints/qora/codemod.py",
      "kind": "Class",
      "name": "Renamer"
    },
    "api/endpoints/qora/codemod.py::Renamer::__init__": {
      "file": "api/endpoints/qora/codemod.py",
      "kind": "Method",
      "name": "__init__"
    },
    "api/endpoints/qora/codemod.py::Renamer::leave_Name": {
      "file": "api/endpoints/qora/codemod.py",
      "kind": "Method",
      "name": "leave_Name"
    },
    "api/endpoints/qora/graph_export.py::GraphExportRequest": {
      "file": "api/endpoints/qora/graph_export.py",
      "kind": "Class",
      "name": "GraphExportRequest"
    },
    "api/endpoints/qora/graph_export.py::GraphExportResponse": {
      "file": "api/endpoints/qora/graph_export.py",
      "kind": "Class",
      "name": "GraphExportResponse"
    },
    "api/endpoints/qora/safety_scans.py::_have": {
      "file": "api/endpoints/qora/safety_scans.py",
      "kind": "Function",
      "name": "_have"
    },
    "api/endpoints/qora/safety_scans.py::_run": {
      "file": "api/endpoints/qora/safety_scans.py",
      "kind": "Function",
      "name": "_run"
    },
    "api/endpoints/qora/safety_scans.py::SafetyScanRequest": {
      "file": "api/endpoints/qora/safety_scans.py",
      "kind": "Class",
      "name": "SafetyScanRequest"
    },
    "api/endpoints/qora/safety_scans.py::SafetyScanResponse": {
      "file": "api/endpoints/qora/safety_scans.py",
      "kind": "Class",
      "name": "SafetyScanResponse"
    },
    "api/endpoints/qora/pr_macro.py::_run": {
      "file": "api/endpoints/qora/pr_macro.py",
      "kind": "Function",
      "name": "_run"
    },
    "api/endpoints/qora/pr_macro.py::_git": {
      "file": "api/endpoints/qora/pr_macro.py",
      "kind": "Function",
      "name": "_git"
    },
    "api/endpoints/qora/pr_macro.py::PRMacroRequest": {
      "file": "api/endpoints/qora/pr_macro.py",
      "kind": "Class",
      "name": "PRMacroRequest"
    },
    "api/endpoints/qora/pr_macro.py::PRMacroResponse": {
      "file": "api/endpoints/qora/pr_macro.py",
      "kind": "Class",
      "name": "PRMacroResponse"
    },
    "api/endpoints/qora/hygiene_check.py::HygieneRequest": {
      "file": "api/endpoints/qora/hygiene_check.py",
      "kind": "Class",
      "name": "HygieneRequest"
    },
    "api/endpoints/qora/hygiene_check.py::HygieneResponse": {
      "file": "api/endpoints/qora/hygiene_check.py",
      "kind": "Class",
      "name": "HygieneResponse"
    },
    "api/endpoints/qora/cache_hygiene.py::CacheGetReq": {
      "file": "api/endpoints/qora/cache_hygiene.py",
      "kind": "Class",
      "name": "CacheGetReq"
    },
    "api/endpoints/qora/cache_hygiene.py::CachePutReq": {
      "file": "api/endpoints/qora/cache_hygiene.py",
      "kind": "Class",
      "name": "CachePutReq"
    },
    "api/endpoints/qora/coverage_quick.py::CovReq": {
      "file": "api/endpoints/qora/coverage_quick.py",
      "kind": "Class",
      "name": "CovReq"
    },
    "api/endpoints/qora/pytest_parse.py::ParseReq": {
      "file": "api/endpoints/qora/pytest_parse.py",
      "kind": "Class",
      "name": "ParseReq"
    },
    "api/endpoints/qora/proposal_verify.py::_have": {
      "file": "api/endpoints/qora/proposal_verify.py",
      "kind": "Function",
      "name": "_have"
    },
    "api/endpoints/qora/proposal_verify.py::_run": {
      "file": "api/endpoints/qora/proposal_verify.py",
      "kind": "Function",
      "name": "_run"
    },
    "api/endpoints/qora/proposal_verify.py::VerifyReq": {
      "file": "api/endpoints/qora/proposal_verify.py",
      "kind": "Class",
      "name": "VerifyReq"
    },
    "api/endpoints/qora/proposal_verify.py::VerifyResp": {
      "file": "api/endpoints/qora/proposal_verify.py",
      "kind": "Class",
      "name": "VerifyResp"
    },
    "api/endpoints/qora/workspace_snapshot.py::_paths_from_diff": {
      "file": "api/endpoints/qora/workspace_snapshot.py",
      "kind": "Function",
      "name": "_paths_from_diff"
    },
    "api/endpoints/qora/workspace_snapshot.py::SnapReq": {
      "file": "api/endpoints/qora/workspace_snapshot.py",
      "kind": "Class",
      "name": "SnapReq"
    },
    "api/endpoints/qora/workspace_snapshot.py::SnapResp": {
      "file": "api/endpoints/qora/workspace_snapshot.py",
      "kind": "Class",
      "name": "SnapResp"
    },
    "api/endpoints/qora/dossier.py::DossierReq": {
      "file": "api/endpoints/qora/dossier.py",
      "kind": "Class",
      "name": "DossierReq"
    },
    "api/endpoints/qora/dossier.py::DossierResp": {
      "file": "api/endpoints/qora/dossier.py",
      "kind": "Class",
      "name": "DossierResp"
    },
    "api/endpoints/qora/dossier.py::_paths_from_diff": {
      "file": "api/endpoints/qora/dossier.py",
      "kind": "Function",
      "name": "_paths_from_diff"
    },
    "api/endpoints/qora/dossier.py::_read_safe": {
      "file": "api/endpoints/qora/dossier.py",
      "kind": "Function",
      "name": "_read_safe"
    },
    "api/endpoints/qora/dossier.py::_run_git": {
      "file": "api/endpoints/qora/dossier.py",
      "kind": "Function",
      "name": "_run_git"
    },
    "api/endpoints/qora/dossier.py::_codeowners_lookup": {
      "file": "api/endpoints/qora/dossier.py",
      "kind": "Function",
      "name": "_codeowners_lookup"
    },
    "api/endpoints/qora/dossier.py::_usages_grep": {
      "file": "api/endpoints/qora/dossier.py",
      "kind": "Function",
      "name": "_usages_grep"
    },
    "api/endpoints/qora/dossier.py::_git_blame_summary": {
      "file": "api/endpoints/qora/dossier.py",
      "kind": "Function",
      "name": "_git_blame_summary"
    },
    "api/endpoints/qora/pr_bundle.py::BundleReq": {
      "file": "api/endpoints/qora/pr_bundle.py",
      "kind": "Class",
      "name": "BundleReq"
    },
    "api/endpoints/qora/pr_bundle.py::BundleResp": {
      "file": "api/endpoints/qora/pr_bundle.py",
      "kind": "Class",
      "name": "BundleResp"
    },
    "api/endpoints/qora/pr_bundle.py::_write": {
      "file": "api/endpoints/qora/pr_bundle.py",
      "kind": "Function",
      "name": "_write"
    },
    "api/endpoints/qora/pr_bundle.py::_md_escape": {
      "file": "api/endpoints/qora/pr_bundle.py",
      "kind": "Function",
      "name": "_md_escape"
    },
    "api/endpoints/qora/spec_eval.py::Candidate": {
      "file": "api/endpoints/qora/spec_eval.py",
      "kind": "Class",
      "name": "Candidate"
    },
    "api/endpoints/qora/spec_eval.py::SpecEvalReq": {
      "file": "api/endpoints/qora/spec_eval.py",
      "kind": "Class",
      "name": "SpecEvalReq"
    },
    "api/endpoints/qora/spec_eval.py::CandidateResult": {
      "file": "api/endpoints/qora/spec_eval.py",
      "kind": "Class",
      "name": "CandidateResult"
    },
    "api/endpoints/qora/spec_eval.py::SpecEvalResp": {
      "file": "api/endpoints/qora/spec_eval.py",
      "kind": "Class",
      "name": "SpecEvalResp"
    },
    "api/endpoints/qora/secrets_scan.py::_have": {
      "file": "api/endpoints/qora/secrets_scan.py",
      "kind": "Function",
      "name": "_have"
    },
    "api/endpoints/qora/secrets_scan.py::_run": {
      "file": "api/endpoints/qora/secrets_scan.py",
      "kind": "Function",
      "name": "_run"
    },
    "api/endpoints/qora/secrets_scan.py::SecretsScanReq": {
      "file": "api/endpoints/qora/secrets_scan.py",
      "kind": "Class",
      "name": "SecretsScanReq"
    },
    "api/endpoints/qora/secrets_scan.py::SecretHit": {
      "file": "api/endpoints/qora/secrets_scan.py",
      "kind": "Class",
      "name": "SecretHit"
    },
    "api/endpoints/qora/secrets_scan.py::SecretsScanResp": {
      "file": "api/endpoints/qora/secrets_scan.py",
      "kind": "Class",
      "name": "SecretsScanResp"
    },
    "api/endpoints/qora/mutation_test.py::_have": {
      "file": "api/endpoints/qora/mutation_test.py",
      "kind": "Function",
      "name": "_have"
    },
    "api/endpoints/qora/mutation_test.py::_run": {
      "file": "api/endpoints/qora/mutation_test.py",
      "kind": "Function",
      "name": "_run"
    },
    "api/endpoints/qora/mutation_test.py::MutReq": {
      "file": "api/endpoints/qora/mutation_test.py",
      "kind": "Class",
      "name": "MutReq"
    },
    "api/endpoints/qora/mutation_test.py::MutResp": {
      "file": "api/endpoints/qora/mutation_test.py",
      "kind": "Class",
      "name": "MutResp"
    },
    "api/endpoints/qora/rg_search.py::_have": {
      "file": "api/endpoints/qora/rg_search.py",
      "kind": "Function",
      "name": "_have"
    },
    "api/endpoints/qora/rg_search.py::SearchReq": {
      "file": "api/endpoints/qora/rg_search.py",
      "kind": "Class",
      "name": "SearchReq"
    },
    "api/endpoints/qora/rg_search.py::Hit": {
      "file": "api/endpoints/qora/rg_search.py",
      "kind": "Class",
      "name": "Hit"
    },
    "api/endpoints/qora/rg_search.py::SearchResp": {
      "file": "api/endpoints/qora/rg_search.py",
      "kind": "Class",
      "name": "SearchResp"
    },
    "api/endpoints/qora/catalog_admin.py::_load": {
      "file": "api/endpoints/qora/catalog_admin.py",
      "kind": "Function",
      "name": "_load"
    },
    "api/endpoints/qora/catalog_admin.py::_save": {
      "file": "api/endpoints/qora/catalog_admin.py",
      "kind": "Function",
      "name": "_save"
    },
    "api/endpoints/qora/catalog_admin.py::ToolSpec": {
      "file": "api/endpoints/qora/catalog_admin.py",
      "kind": "Class",
      "name": "ToolSpec"
    },
    "api/endpoints/qora/catalog_admin.py::RegisterReq": {
      "file": "api/endpoints/qora/catalog_admin.py",
      "kind": "Class",
      "name": "RegisterReq"
    },
    "api/endpoints/qora/catalog_admin.py::RetireReq": {
      "file": "api/endpoints/qora/catalog_admin.py",
      "kind": "Class",
      "name": "RetireReq"
    },
    "api/endpoints/qora/shadow_run.py::_run": {
      "file": "api/endpoints/qora/shadow_run.py",
      "kind": "Function",
      "name": "_run"
    },
    "api/endpoints/qora/shadow_run.py::_worktree": {
      "file": "api/endpoints/qora/shadow_run.py",
      "kind": "Function",
      "name": "_worktree"
    },
    "api/endpoints/qora/shadow_run.py::ShadowReq": {
      "file": "api/endpoints/qora/shadow_run.py",
      "kind": "Class",
      "name": "ShadowReq"
    },
    "api/endpoints/qora/shadow_run.py::ShadowResp": {
      "file": "api/endpoints/qora/shadow_run.py",
      "kind": "Class",
      "name": "ShadowResp"
    },
    "api/endpoints/qora/shadow_run.py::_static_fallback": {
      "file": "api/endpoints/qora/shadow_run.py",
      "kind": "Function",
      "name": "_static_fallback"
    },
    "api/endpoints/qora/shadow_run.py::_tests_fallback": {
      "file": "api/endpoints/qora/shadow_run.py",
      "kind": "Function",
      "name": "_tests_fallback"
    },
    "api/endpoints/qora/rollback.py::_run": {
      "file": "api/endpoints/qora/rollback.py",
      "kind": "Function",
      "name": "_run"
    },
    "api/endpoints/qora/rollback.py::RollbackReq": {
      "file": "api/endpoints/qora/rollback.py",
      "kind": "Class",
      "name": "RollbackReq"
    },
    "api/endpoints/qora/rollback.py::RollbackResp": {
      "file": "api/endpoints/qora/rollback.py",
      "kind": "Class",
      "name": "RollbackResp"
    },
    "api/endpoints/qora/auto_pipeline.py::_run": {
      "file": "api/endpoints/qora/auto_pipeline.py",
      "kind": "Function",
      "name": "_run"
    },
    "api/endpoints/qora/auto_pipeline.py::_git": {
      "file": "api/endpoints/qora/auto_pipeline.py",
      "kind": "Function",
      "name": "_git"
    },
    "api/endpoints/qora/auto_pipeline.py::_slug_from_remote": {
      "file": "api/endpoints/qora/auto_pipeline.py",
      "kind": "Function",
      "name": "_slug_from_remote"
    },
    "api/endpoints/qora/auto_pipeline.py::_get_remote_slug": {
      "file": "api/endpoints/qora/auto_pipeline.py",
      "kind": "Function",
      "name": "_get_remote_slug"
    },
    "api/endpoints/qora/auto_pipeline.py::_gh_api": {
      "file": "api/endpoints/qora/auto_pipeline.py",
      "kind": "Function",
      "name": "_gh_api"
    },
    "api/endpoints/qora/auto_pipeline.py::AutoReq": {
      "file": "api/endpoints/qora/auto_pipeline.py",
      "kind": "Class",
      "name": "AutoReq"
    },
    "api/endpoints/qora/auto_pipeline.py::AutoResp": {
      "file": "api/endpoints/qora/auto_pipeline.py",
      "kind": "Class",
      "name": "AutoResp"
    },
    "api/endpoints/qora/git_ops.py::_run": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Function",
      "name": "_run"
    },
    "api/endpoints/qora/git_ops.py::_git": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Function",
      "name": "_git"
    },
    "api/endpoints/qora/git_ops.py::BranchFromDiffReq": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "BranchFromDiffReq"
    },
    "api/endpoints/qora/git_ops.py::BranchFromDiffResp": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "BranchFromDiffResp"
    },
    "api/endpoints/qora/git_ops.py::PrOpenReq": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "PrOpenReq"
    },
    "api/endpoints/qora/git_ops.py::PrOpenResp": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "PrOpenResp"
    },
    "api/endpoints/qora/git_ops.py::BranchRequest": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "BranchRequest"
    },
    "api/endpoints/qora/git_ops.py::BranchResponse": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "BranchResponse"
    },
    "api/endpoints/qora/git_ops.py::ApplyDiffRequest": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "ApplyDiffRequest"
    },
    "api/endpoints/qora/git_ops.py::ApplyDiffResponse": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "ApplyDiffResponse"
    },
    "api/endpoints/qora/git_ops.py::CommitRequest": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "CommitRequest"
    },
    "api/endpoints/qora/git_ops.py::CommitResponse": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "CommitResponse"
    },
    "api/endpoints/qora/git_ops.py::PushRequest": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "PushRequest"
    },
    "api/endpoints/qora/git_ops.py::PushResponse": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "PushResponse"
    },
    "api/endpoints/qora/git_ops.py::PRPrepareRequest": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "PRPrepareRequest"
    },
    "api/endpoints/qora/git_ops.py::PRPrepareResponse": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Class",
      "name": "PRPrepareResponse"
    },
    "api/endpoints/qora/git_ops.py::_ensure_repo": {
      "file": "api/endpoints/qora/git_ops.py",
      "kind": "Function",
      "name": "_ensure_repo"
    },
    "api/endpoints/qora/wm_admin.py::ReindexReq": {
      "file": "api/endpoints/qora/wm_admin.py",
      "kind": "Class",
      "name": "ReindexReq"
    },
    "api/endpoints/simula/replay.py::ReplayReq": {
      "file": "api/endpoints/simula/replay.py",
      "kind": "Class",
      "name": "ReplayReq"
    },
    "api/endpoints/simula/replay.py::ReplayResp": {
      "file": "api/endpoints/simula/replay.py",
      "kind": "Class",
      "name": "ReplayResp"
    },
    "api/endpoints/simula/jobs_codegen.py::TargetHint": {
      "file": "api/endpoints/simula/jobs_codegen.py",
      "kind": "Class",
      "name": "TargetHint"
    },
    "api/endpoints/simula/jobs_codegen.py::CodegenRequest": {
      "file": "api/endpoints/simula/jobs_codegen.py",
      "kind": "Class",
      "name": "CodegenRequest"
    },
    "api/endpoints/simula/jobs_codegen.py::CodegenResponse": {
      "file": "api/endpoints/simula/jobs_codegen.py",
      "kind": "Class",
      "name": "CodegenResponse"
    },
    "api/endpoints/simula/policy_validate.py::PolicyValidateReq": {
      "file": "api/endpoints/simula/policy_validate.py",
      "kind": "Class",
      "name": "PolicyValidateReq"
    },
    "api/endpoints/simula/policy_validate.py::PolicyValidateResp": {
      "file": "api/endpoints/simula/policy_validate.py",
      "kind": "Class",
      "name": "PolicyValidateResp"
    },
    "api/endpoints/simula/risk.py::RiskReq": {
      "file": "api/endpoints/simula/risk.py",
      "kind": "Class",
      "name": "RiskReq"
    },
    "api/endpoints/simula/risk.py::RiskResp": {
      "file": "api/endpoints/simula/risk.py",
      "kind": "Class",
      "name": "RiskResp"
    },
    "api/endpoints/simula/spec_eval_run.py::Candidate": {
      "file": "api/endpoints/simula/spec_eval_run.py",
      "kind": "Class",
      "name": "Candidate"
    },
    "api/endpoints/simula/spec_eval_run.py::SpecEvalReq": {
      "file": "api/endpoints/simula/spec_eval_run.py",
      "kind": "Class",
      "name": "SpecEvalReq"
    },
    "api/endpoints/simula/security.py::SecretsReq": {
      "file": "api/endpoints/simula/security.py",
      "kind": "Class",
      "name": "SecretsReq"
    },
    "api/endpoints/simula/security.py::HygieneReq": {
      "file": "api/endpoints/simula/security.py",
      "kind": "Class",
      "name": "HygieneReq"
    },
    "api/endpoints/simula/proposal_bundle.py::BundleReq": {
      "file": "api/endpoints/simula/proposal_bundle.py",
      "kind": "Class",
      "name": "BundleReq"
    },
    "api/endpoints/simula/github.py::PRCommentReq": {
      "file": "api/endpoints/simula/github.py",
      "kind": "Class",
      "name": "PRCommentReq"
    },
    "api/endpoints/simula/github.py::CommitStatusReq": {
      "file": "api/endpoints/simula/github.py",
      "kind": "Class",
      "name": "CommitStatusReq"
    },
    "api/endpoints/simula/artifacts.py::ArtifactListResponse": {
      "file": "api/endpoints/simula/artifacts.py",
      "kind": "Class",
      "name": "ArtifactListResponse"
    },
    "api/endpoints/simula/artifacts.py::ArtifactReadResponse": {
      "file": "api/endpoints/simula/artifacts.py",
      "kind": "Class",
      "name": "ArtifactReadResponse"
    },
    "api/endpoints/simula/artifacts.py::DeleteRequest": {
      "file": "api/endpoints/simula/artifacts.py",
      "kind": "Class",
      "name": "DeleteRequest"
    },
    "api/endpoints/simula/artifacts.py::DeleteResponse": {
      "file": "api/endpoints/simula/artifacts.py",
      "kind": "Class",
      "name": "DeleteResponse"
    },
    "api/endpoints/simula/jobs_codegen_guarded.py::GuardedCodegenReq": {
      "file": "api/endpoints/simula/jobs_codegen_guarded.py",
      "kind": "Class",
      "name": "GuardedCodegenReq"
    },
    "api/endpoints/atune/route_event.py::_best_actual_utility": {
      "file": "api/endpoints/atune/route_event.py",
      "kind": "Function",
      "name": "_best_actual_utility"
    },
    "api/endpoints/atune/route_event.py::_sign_token": {
      "file": "api/endpoints/atune/route_event.py",
      "kind": "Function",
      "name": "_sign_token"
    },
    "api/endpoints/atune/route_event.py::_alloc_budget_ms": {
      "file": "api/endpoints/atune/route_event.py",
      "kind": "Function",
      "name": "_alloc_budget_ms"
    },
    "api/endpoints/atune/trace.py::_read_jsonl": {
      "file": "api/endpoints/atune/trace.py",
      "kind": "Function",
      "name": "_read_jsonl"
    },
    "api/endpoints/atune/trace.py::_latest_match": {
      "file": "api/endpoints/atune/trace.py",
      "kind": "Function",
      "name": "_latest_match"
    },
    "api/endpoints/atune/meta_status.py::_env_flag": {
      "file": "api/endpoints/atune/meta_status.py",
      "kind": "Function",
      "name": "_env_flag"
    },
    "api/endpoints/nova/core.py::_stamp_cost": {
      "file": "api/endpoints/nova/core.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/nova/core.py::_hash": {
      "file": "api/endpoints/nova/core.py",
      "kind": "Function",
      "name": "_hash"
    },
    "api/endpoints/nova/handoff.py::_stamp_cost": {
      "file": "api/endpoints/nova/handoff.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/nova/handoff.py::HandoffRequest": {
      "file": "api/endpoints/nova/handoff.py",
      "kind": "Class",
      "name": "HandoffRequest"
    },
    "api/endpoints/nova/policy.py::_stamp_cost": {
      "file": "api/endpoints/nova/policy.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/nova/policy.py::PolicyCheckRequest": {
      "file": "api/endpoints/nova/policy.py",
      "kind": "Class",
      "name": "PolicyCheckRequest"
    },
    "api/endpoints/nova/winner.py::_stamp_cost": {
      "file": "api/endpoints/nova/winner.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/nova/winner.py::SubmitRequest": {
      "file": "api/endpoints/nova/winner.py",
      "kind": "Class",
      "name": "SubmitRequest"
    },
    "api/endpoints/nova/hyper.py::_stamp_cost": {
      "file": "api/endpoints/nova/hyper.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/endpoints/nova/hyper.py::HyperRunResult": {
      "file": "api/endpoints/nova/hyper.py",
      "kind": "Class",
      "name": "HyperRunResult"
    },
    "api/middleware/telemetry.py::_stamp_cost": {
      "file": "api/middleware/telemetry.py",
      "kind": "Function",
      "name": "_stamp_cost"
    },
    "api/middleware/telemetry.py::install": {
      "file": "api/middleware/telemetry.py",
      "kind": "Function",
      "name": "install"
    },
    "api/middleware/timing_headers.py::TimingHeadersMiddleware": {
      "file": "api/middleware/timing_headers.py",
      "kind": "Class",
      "name": "TimingHeadersMiddleware"
    },
    "api/middleware/timing_headers.py::TimingHeadersMiddleware::__init__": {
      "file": "api/middleware/timing_headers.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core/llm/embeddings_gemini.py::_is_debug": {
      "file": "core/llm/embeddings_gemini.py",
      "kind": "Function",
      "name": "_is_debug"
    },
    "core/llm/embeddings_gemini.py::_dbg_print": {
      "file": "core/llm/embeddings_gemini.py",
      "kind": "Function",
      "name": "_dbg_print"
    },
    "core/llm/embeddings_gemini.py::_truncate": {
      "file": "core/llm/embeddings_gemini.py",
      "kind": "Function",
      "name": "_truncate"
    },
    "core/llm/embeddings_gemini.py::_validate_dims": {
      "file": "core/llm/embeddings_gemini.py",
      "kind": "Function",
      "name": "_validate_dims"
    },
    "core/llm/embeddings_gemini.py::_ensure_list": {
      "file": "core/llm/embeddings_gemini.py",
      "kind": "Function",
      "name": "_ensure_list"
    },
    "core/llm/embeddings_gemini.py::_validate_text": {
      "file": "core/llm/embeddings_gemini.py",
      "kind": "Function",
      "name": "_validate_text"
    },
    "core/llm/embeddings_gemini.py::_embed_sync_call": {
      "file": "core/llm/embeddings_gemini.py",
      "kind": "Function",
      "name": "_embed_sync_call"
    },
    "core/llm/embeddings_gemini.py::_sync": {
      "file": "core/llm/embeddings_gemini.py",
      "kind": "Function",
      "name": "_sync"
    },
    "core/llm/gemini_cache.py::_require": {
      "file": "core/llm/gemini_cache.py",
      "kind": "Function",
      "name": "_require"
    },
    "core/llm/gemini_cache.py::_extract_system_instruction": {
      "file": "core/llm/gemini_cache.py",
      "kind": "Function",
      "name": "_extract_system_instruction"
    },
    "core/llm/gemini_cache.py::_call": {
      "file": "core/llm/gemini_cache.py",
      "kind": "Function",
      "name": "_call"
    },
    "core/llm/env_bootstrap.py::_load": {
      "file": "core/llm/env_bootstrap.py",
      "kind": "Function",
      "name": "_load"
    },
    "core/llm/formatters.py::ChatMessage": {
      "file": "core/llm/formatters.py",
      "kind": "Class",
      "name": "ChatMessage"
    },
    "core/llm/formatters.py::ToolSpec": {
      "file": "core/llm/formatters.py",
      "kind": "Class",
      "name": "ToolSpec"
    },
    "core/llm/formatters.py::_normalize_provider": {
      "file": "core/llm/formatters.py",
      "kind": "Function",
      "name": "_normalize_provider"
    },
    "core/llm/formatters.py::_sanitize_messages": {
      "file": "core/llm/formatters.py",
      "kind": "Function",
      "name": "_sanitize_messages"
    },
    "core/llm/formatters.py::_split_system": {
      "file": "core/llm/formatters.py",
      "kind": "Function",
      "name": "_split_system"
    },
    "core/llm/formatters.py::_to_openai_tools": {
      "file": "core/llm/formatters.py",
      "kind": "Function",
      "name": "_to_openai_tools"
    },
    "core/llm/formatters.py::_to_anthropic_tools": {
      "file": "core/llm/formatters.py",
      "kind": "Function",
      "name": "_to_anthropic_tools"
    },
    "core/llm/formatters.py::_to_gemini_tools": {
      "file": "core/llm/formatters.py",
      "kind": "Function",
      "name": "_to_gemini_tools"
    },
    "core/llm/formatters.py::_map_tool_choice": {
      "file": "core/llm/formatters.py",
      "kind": "Function",
      "name": "_map_tool_choice"
    },
    "core/llm/formatters.py::_json_mode_for_provider": {
      "file": "core/llm/formatters.py",
      "kind": "Function",
      "name": "_json_mode_for_provider"
    },
    "core/llm/formatters.py::format_messages_for_provider": {
      "file": "core/llm/formatters.py",
      "kind": "Function",
      "name": "format_messages_for_provider"
    },
    "core/llm/formatters.py::_to_gemini_contents": {
      "file": "core/llm/formatters.py",
      "kind": "Function",
      "name": "_to_gemini_contents"
    },
    "core/llm/call_llm.py::_try_parse_json": {
      "file": "core/llm/call_llm.py",
      "kind": "Function",
      "name": "_try_parse_json"
    },
    "core/llm/call_llm.py::_get_provider_from_model_name": {
      "file": "core/llm/call_llm.py",
      "kind": "Function",
      "name": "_get_provider_from_model_name"
    },
    "core/llm/utils.py::filter_kwargs": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "filter_kwargs"
    },
    "core/llm/utils.py::normalize_messages": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "normalize_messages"
    },
    "core/llm/utils.py::normalise_messages": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "normalise_messages"
    },
    "core/llm/utils.py::combine_with_system": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "combine_with_system"
    },
    "core/llm/utils.py::clamp": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "clamp"
    },
    "core/llm/utils.py::coerce_str": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "coerce_str"
    },
    "core/llm/utils.py::redact_secrets": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "redact_secrets"
    },
    "core/llm/utils.py::strip_code_fences": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "strip_code_fences"
    },
    "core/llm/utils.py::extract_json_block": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "extract_json_block"
    },
    "core/llm/utils.py::detect_json": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "detect_json"
    },
    "core/llm/utils.py::safe_truncate": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "safe_truncate"
    },
    "core/llm/utils.py::estimate_tokens": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "estimate_tokens"
    },
    "core/llm/utils.py::toxicity_hint": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "toxicity_hint"
    },
    "core/llm/utils.py::length_fit_score": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "length_fit_score"
    },
    "core/llm/utils.py::baseline_metrics": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "baseline_metrics"
    },
    "core/llm/utils.py::first_system_message": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "first_system_message"
    },
    "core/llm/utils.py::split_system_and_chat": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "split_system_and_chat"
    },
    "core/llm/utils.py::dedupe_system_message": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "dedupe_system_message"
    },
    "core/llm/utils.py::messages_checksum": {
      "file": "core/llm/utils.py",
      "kind": "Function",
      "name": "messages_checksum"
    },
    "core/llm/bus.py::EventBus": {
      "file": "core/llm/bus.py",
      "kind": "Class",
      "name": "EventBus"
    },
    "core/llm/bus.py::EventBus::__new__": {
      "file": "core/llm/bus.py",
      "kind": "Method",
      "name": "__new__"
    },
    "core/llm/bus.py::EventBus::subscribe": {
      "file": "core/llm/bus.py",
      "kind": "Method",
      "name": "subscribe"
    },
    "core/llm/bus.py::EventBus::_unsub": {
      "file": "core/llm/bus.py",
      "kind": "Method",
      "name": "_unsub"
    },
    "core/llm/bus.py::EventBus::unsubscribe": {
      "file": "core/llm/bus.py",
      "kind": "Method",
      "name": "unsubscribe"
    },
    "core/llm/bus.py::EventBus::_cb": {
      "file": "core/llm/bus.py",
      "kind": "Method",
      "name": "_cb"
    },
    "core/llm/school_bus.py::LLMService": {
      "file": "core/llm/school_bus.py",
      "kind": "Class",
      "name": "LLMService"
    },
    "core/llm/metrics.py::_coerce_float": {
      "file": "core/llm/metrics.py",
      "kind": "Function",
      "name": "_coerce_float"
    },
    "core/llm/metrics.py::_tokens_from_openai": {
      "file": "core/llm/metrics.py",
      "kind": "Function",
      "name": "_tokens_from_openai"
    },
    "core/llm/metrics.py::_tokens_from_anthropic": {
      "file": "core/llm/metrics.py",
      "kind": "Function",
      "name": "_tokens_from_anthropic"
    },
    "core/llm/metrics.py::extract_usage_tokens": {
      "file": "core/llm/metrics.py",
      "kind": "Function",
      "name": "extract_usage_tokens"
    },
    "core/llm/metrics.py::build_telemetry": {
      "file": "core/llm/metrics.py",
      "kind": "Function",
      "name": "build_telemetry"
    },
    "core/utils/paths.py::rel": {
      "file": "core/utils/paths.py",
      "kind": "Function",
      "name": "rel"
    },
    "core/utils/text.py::extract_body_from_node": {
      "file": "core/utils/text.py",
      "kind": "Function",
      "name": "extract_body_from_node"
    },
    "core/utils/text.py::clamp": {
      "file": "core/utils/text.py",
      "kind": "Function",
      "name": "clamp"
    },
    "core/utils/text.py::redact_secrets": {
      "file": "core/utils/text.py",
      "kind": "Function",
      "name": "redact_secrets"
    },
    "core/utils/text.py::safe_truncate": {
      "file": "core/utils/text.py",
      "kind": "Function",
      "name": "safe_truncate"
    },
    "core/utils/text.py::toxicity_hint": {
      "file": "core/utils/text.py",
      "kind": "Function",
      "name": "toxicity_hint"
    },
    "core/utils/text.py::baseline_metrics": {
      "file": "core/utils/text.py",
      "kind": "Function",
      "name": "baseline_metrics"
    },
    "core/utils/time.py::now": {
      "file": "core/utils/time.py",
      "kind": "Function",
      "name": "now"
    },
    "core/utils/time.py::now_iso": {
      "file": "core/utils/time.py",
      "kind": "Function",
      "name": "now_iso"
    },
    "core/utils/net_api.py::_aliasize": {
      "file": "core/utils/net_api.py",
      "kind": "Function",
      "name": "_aliasize"
    },
    "core/utils/net_api.py::_add_synonyms": {
      "file": "core/utils/net_api.py",
      "kind": "Function",
      "name": "_add_synonyms"
    },
    "core/utils/net_api.py::_EndpointsProxy": {
      "file": "core/utils/net_api.py",
      "kind": "Class",
      "name": "_EndpointsProxy"
    },
    "core/utils/net_api.py::_EndpointsProxy::__getattr__": {
      "file": "core/utils/net_api.py",
      "kind": "Method",
      "name": "__getattr__"
    },
    "core/utils/net_api.py::endpoints_report_str": {
      "file": "core/utils/net_api.py",
      "kind": "Function",
      "name": "endpoints_report_str"
    },
    "core/utils/safe_eval.py::safe_eval": {
      "file": "core/utils/safe_eval.py",
      "kind": "Function",
      "name": "safe_eval"
    },
    "core/utils/jsonsafe.py::_to_jsonable": {
      "file": "core/utils/jsonsafe.py",
      "kind": "Function",
      "name": "_to_jsonable"
    },
    "core/utils/jsonsafe.py::to_jsonable": {
      "file": "core/utils/jsonsafe.py",
      "kind": "Function",
      "name": "to_jsonable"
    },
    "core/utils/jsonsafe.py::dumps_json_safe": {
      "file": "core/utils/jsonsafe.py",
      "kind": "Function",
      "name": "dumps_json_safe"
    },
    "core/utils/eos_tool.py::eos_tool": {
      "file": "core/utils/eos_tool.py",
      "kind": "Function",
      "name": "eos_tool"
    },
    "core/utils/eos_tool.py::deco": {
      "file": "core/utils/eos_tool.py",
      "kind": "Function",
      "name": "deco"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Class",
      "name": "LiveEndpointRegistry"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::__init__": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::snapshot_aliases": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "snapshot_aliases"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::snapshot_routes": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "snapshot_routes"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::path": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "path"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::route": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "route"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::exists": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "exists"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::synonyms": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "synonyms"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::_resolve_alias": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "_resolve_alias"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "_normalize"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::_apply_synonyms": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "_apply_synonyms"
    },
    "core/utils/net_api_registry.py::LiveEndpointRegistry::_alias_from_path": {
      "file": "core/utils/net_api_registry.py",
      "kind": "Method",
      "name": "_alias_from_path"
    },
    "core/utils/bus_utils.py::subscribe": {
      "file": "core/utils/bus_utils.py",
      "kind": "Function",
      "name": "subscribe"
    },
    "core/utils/diff.py::changed_paths_from_unified_diff": {
      "file": "core/utils/diff.py",
      "kind": "Function",
      "name": "changed_paths_from_unified_diff"
    },
    "core/utils/embedcsv/embed_all.py::find_salience_csvs": {
      "file": "core/utils/embedcsv/embed_all.py",
      "kind": "Function",
      "name": "find_salience_csvs"
    },
    "core/utils/embedcsv/embed_all.py::main": {
      "file": "core/utils/embedcsv/embed_all.py",
      "kind": "Function",
      "name": "main"
    },
    "core/utils/embedcsv/upload_all.py::parse_embedding": {
      "file": "core/utils/embedcsv/upload_all.py",
      "kind": "Function",
      "name": "parse_embedding"
    },
    "core/utils/vector_ops/cluster.py::cluster_vectors": {
      "file": "core/utils/vector_ops/cluster.py",
      "kind": "Function",
      "name": "cluster_vectors"
    },
    "core/utils/vector_ops/dimreduce.py::reduce_vectors": {
      "file": "core/utils/vector_ops/dimreduce.py",
      "kind": "Function",
      "name": "reduce_vectors"
    },
    "core/utils/neo/cypher_query.py::_coerce_for_neo": {
      "file": "core/utils/neo/cypher_query.py",
      "kind": "Function",
      "name": "_coerce_for_neo"
    },
    "core/utils/neo/cypher_query.py::neoify_params": {
      "file": "core/utils/neo/cypher_query.py",
      "kind": "Function",
      "name": "neoify_params"
    },
    "core/utils/neo/neo_driver.py::get_driver": {
      "file": "core/utils/neo/neo_driver.py",
      "kind": "Function",
      "name": "get_driver"
    },
    "core/utils/neo/neo_safe.py::_is_neo_driver": {
      "file": "core/utils/neo/neo_safe.py",
      "kind": "Function",
      "name": "_is_neo_driver"
    },
    "core/utils/neo/neo_safe.py::coalesce_driver": {
      "file": "core/utils/neo/neo_safe.py",
      "kind": "Function",
      "name": "coalesce_driver"
    },
    "core/utils/neo/params.py::_coerce": {
      "file": "core/utils/neo/params.py",
      "kind": "Function",
      "name": "_coerce"
    },
    "core/utils/neo/params.py::neoify_params": {
      "file": "core/utils/neo/params.py",
      "kind": "Function",
      "name": "neoify_params"
    },
    "core/utils/cicd/listener.py::_proposal_payload": {
      "file": "core/utils/cicd/listener.py",
      "kind": "Function",
      "name": "_proposal_payload"
    },
    "core/utils/cicd/listener.py::_proposal_id": {
      "file": "core/utils/cicd/listener.py",
      "kind": "Function",
      "name": "_proposal_id"
    },
    "core/utils/cicd/listener.py::CICDListener": {
      "file": "core/utils/cicd/listener.py",
      "kind": "Class",
      "name": "CICDListener"
    },
    "core/utils/cicd/listener.py::CICDListener::__new__": {
      "file": "core/utils/cicd/listener.py",
      "kind": "Method",
      "name": "__new__"
    },
    "core/utils/cicd/listener.py::CICDListener::__init__": {
      "file": "core/utils/cicd/listener.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core/prompting/orchestrator.py::PolicyHint": {
      "file": "core/prompting/orchestrator.py",
      "kind": "Class",
      "name": "PolicyHint"
    },
    "core/prompting/orchestrator.py::OrchestratorResponse": {
      "file": "core/prompting/orchestrator.py",
      "kind": "Class",
      "name": "OrchestratorResponse"
    },
    "core/prompting/orchestrator.py::_resolve_spec": {
      "file": "core/prompting/orchestrator.py",
      "kind": "Function",
      "name": "_resolve_spec"
    },
    "core/prompting/spec.py::ProviderOverrides": {
      "file": "core/prompting/spec.py",
      "kind": "Class",
      "name": "ProviderOverrides"
    },
    "core/prompting/spec.py::Outputs": {
      "file": "core/prompting/spec.py",
      "kind": "Class",
      "name": "Outputs"
    },
    "core/prompting/spec.py::Outputs::_check_schema_source": {
      "file": "core/prompting/spec.py",
      "kind": "Method",
      "name": "_check_schema_source"
    },
    "core/prompting/spec.py::BudgetPolicy": {
      "file": "core/prompting/spec.py",
      "kind": "Class",
      "name": "BudgetPolicy"
    },
    "core/prompting/spec.py::IdentityBlock": {
      "file": "core/prompting/spec.py",
      "kind": "Class",
      "name": "IdentityBlock"
    },
    "core/prompting/spec.py::SafetySpec": {
      "file": "core/prompting/spec.py",
      "kind": "Class",
      "name": "SafetySpec"
    },
    "core/prompting/spec.py::PromptSpec": {
      "file": "core/prompting/spec.py",
      "kind": "Class",
      "name": "PromptSpec"
    },
    "core/prompting/spec.py::PromptSpec::_nonempty": {
      "file": "core/prompting/spec.py",
      "kind": "Method",
      "name": "_nonempty"
    },
    "core/prompting/lenses.py::_safe": {
      "file": "core/prompting/lenses.py",
      "kind": "Function",
      "name": "_safe"
    },
    "core/prompting/lenses.py::cap_list": {
      "file": "core/prompting/lenses.py",
      "kind": "Function",
      "name": "cap_list"
    },
    "core/prompting/lenses.py::cap_chars": {
      "file": "core/prompting/lenses.py",
      "kind": "Function",
      "name": "cap_chars"
    },
    "core/prompting/lenses.py::estimate_tokens": {
      "file": "core/prompting/lenses.py",
      "kind": "Function",
      "name": "estimate_tokens"
    },
    "core/prompting/validators.py::SchemaValidationError": {
      "file": "core/prompting/validators.py",
      "kind": "Class",
      "name": "SchemaValidationError"
    },
    "core/prompting/validators.py::load_schema": {
      "file": "core/prompting/validators.py",
      "kind": "Function",
      "name": "load_schema"
    },
    "core/prompting/validators.py::validate_json": {
      "file": "core/prompting/validators.py",
      "kind": "Function",
      "name": "validate_json"
    },
    "core/prompting/runtime.py::RenderedPrompt": {
      "file": "core/prompting/runtime.py",
      "kind": "Class",
      "name": "RenderedPrompt"
    },
    "core/prompting/runtime.py::LLMResponse": {
      "file": "core/prompting/runtime.py",
      "kind": "Class",
      "name": "LLMResponse"
    },
    "core/prompting/runtime.py::_locate_templates_yaml": {
      "file": "core/prompting/runtime.py",
      "kind": "Function",
      "name": "_locate_templates_yaml"
    },
    "core/prompting/runtime.py::_load_templates_yaml": {
      "file": "core/prompting/runtime.py",
      "kind": "Function",
      "name": "_load_templates_yaml"
    },
    "core/prompting/runtime.py::_build_jinja_env": {
      "file": "core/prompting/runtime.py",
      "kind": "Function",
      "name": "_build_jinja_env"
    },
    "core/prompting/runtime.py::DictLoader": {
      "file": "core/prompting/runtime.py",
      "kind": "Class",
      "name": "DictLoader"
    },
    "core/prompting/runtime.py::DictLoader::get_source": {
      "file": "core/prompting/runtime.py",
      "kind": "Method",
      "name": "get_source"
    },
    "core/prompting/runtime.py::_ensure_jinja_env": {
      "file": "core/prompting/runtime.py",
      "kind": "Function",
      "name": "_ensure_jinja_env"
    },
    "core/prompting/runtime.py::_template_hash": {
      "file": "core/prompting/runtime.py",
      "kind": "Function",
      "name": "_template_hash"
    },
    "core/prompting/cli.py::_load_json_maybe": {
      "file": "core/prompting/cli.py",
      "kind": "Function",
      "name": "_load_json_maybe"
    },
    "core/prompting/cli.py::_ensure_context": {
      "file": "core/prompting/cli.py",
      "kind": "Function",
      "name": "_ensure_context"
    },
    "core/prompting/cli.py::cmd_render": {
      "file": "core/prompting/cli.py",
      "kind": "Function",
      "name": "cmd_render"
    },
    "core/prompting/cli.py::_safe_await": {
      "file": "core/prompting/cli.py",
      "kind": "Function",
      "name": "_safe_await"
    },
    "core/prompting/cli.py::main": {
      "file": "core/prompting/cli.py",
      "kind": "Function",
      "name": "main"
    },
    "core/prompting/registry.py::_SpecEntry": {
      "file": "core/prompting/registry.py",
      "kind": "Class",
      "name": "_SpecEntry"
    },
    "core/prompting/registry.py::_SpecEntry::__init__": {
      "file": "core/prompting/registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core/prompting/registry.py::PromptSpecRegistry": {
      "file": "core/prompting/registry.py",
      "kind": "Class",
      "name": "PromptSpecRegistry"
    },
    "core/prompting/registry.py::PromptSpecRegistry::__init__": {
      "file": "core/prompting/registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core/prompting/registry.py::PromptSpecRegistry::_ensure_dir_exists": {
      "file": "core/prompting/registry.py",
      "kind": "Method",
      "name": "_ensure_dir_exists"
    },
    "core/prompting/registry.py::PromptSpecRegistry::_scan_and_load_files": {
      "file": "core/prompting/registry.py",
      "kind": "Method",
      "name": "_scan_and_load_files"
    },
    "core/prompting/registry.py::PromptSpecRegistry::_load_if_needed": {
      "file": "core/prompting/registry.py",
      "kind": "Method",
      "name": "_load_if_needed"
    },
    "core/prompting/registry.py::PromptSpecRegistry::_parse_spec_file": {
      "file": "core/prompting/registry.py",
      "kind": "Method",
      "name": "_parse_spec_file"
    },
    "core/prompting/registry.py::PromptSpecRegistry::get_by_id": {
      "file": "core/prompting/registry.py",
      "kind": "Method",
      "name": "get_by_id"
    },
    "core/prompting/registry.py::PromptSpecRegistry::get_by_scope": {
      "file": "core/prompting/registry.py",
      "kind": "Method",
      "name": "get_by_scope"
    },
    "core/prompting/registry.py::get_registry": {
      "file": "core/prompting/registry.py",
      "kind": "Function",
      "name": "get_registry"
    },
    "core/metrics/registry.py::Counter": {
      "file": "core/metrics/registry.py",
      "kind": "Class",
      "name": "Counter"
    },
    "core/metrics/registry.py::Counter::inc": {
      "file": "core/metrics/registry.py",
      "kind": "Method",
      "name": "inc"
    },
    "core/metrics/registry.py::Gauge": {
      "file": "core/metrics/registry.py",
      "kind": "Class",
      "name": "Gauge"
    },
    "core/metrics/registry.py::Gauge::set": {
      "file": "core/metrics/registry.py",
      "kind": "Method",
      "name": "set"
    },
    "core/metrics/registry.py::MetricsRegistry": {
      "file": "core/metrics/registry.py",
      "kind": "Class",
      "name": "MetricsRegistry"
    },
    "core/metrics/registry.py::MetricsRegistry::counter": {
      "file": "core/metrics/registry.py",
      "kind": "Method",
      "name": "counter"
    },
    "core/metrics/registry.py::MetricsRegistry::gauge": {
      "file": "core/metrics/registry.py",
      "kind": "Method",
      "name": "gauge"
    },
    "core/services/synapse.py::_jsonable": {
      "file": "core/services/synapse.py",
      "kind": "Function",
      "name": "_jsonable"
    },
    "core/services/synapse.py::_endpoint": {
      "file": "core/services/synapse.py",
      "kind": "Function",
      "name": "_endpoint"
    },
    "core/services/synapse.py::SynapseService": {
      "file": "core/services/synapse.py",
      "kind": "Class",
      "name": "SynapseService"
    },
    "core/services/equor.py::SynapseService": {
      "file": "core/services/equor.py",
      "kind": "Class",
      "name": "SynapseService"
    },
    "core/telemetry/schemas.py::MetricDatum": {
      "file": "core/telemetry/schemas.py",
      "kind": "Class",
      "name": "MetricDatum"
    },
    "core/telemetry/schemas.py::MetricBatch": {
      "file": "core/telemetry/schemas.py",
      "kind": "Class",
      "name": "MetricBatch"
    },
    "core/telemetry/context.py::TelemetryContext": {
      "file": "core/telemetry/context.py",
      "kind": "Class",
      "name": "TelemetryContext"
    },
    "core/telemetry/context.py::TelemetryContext::__init__": {
      "file": "core/telemetry/context.py",
      "kind": "Method",
      "name": "__init__"
    },
    "core/telemetry/context.py::TelemetryContext::note_request": {
      "file": "core/telemetry/context.py",
      "kind": "Method",
      "name": "note_request"
    },
    "core/telemetry/context.py::TelemetryContext::note_response": {
      "file": "core/telemetry/context.py",
      "kind": "Method",
      "name": "note_response"
    },
    "core/telemetry/context.py::TelemetryContext::snapshot": {
      "file": "core/telemetry/context.py",
      "kind": "Method",
      "name": "snapshot"
    },
    "core/telemetry/context.py::get_ctx": {
      "file": "core/telemetry/context.py",
      "kind": "Function",
      "name": "get_ctx"
    },
    "core/telemetry/context.py::bind_episode": {
      "file": "core/telemetry/context.py",
      "kind": "Function",
      "name": "bind_episode"
    },
    "core/telemetry/harvest.py::_to_int": {
      "file": "core/telemetry/harvest.py",
      "kind": "Function",
      "name": "_to_int"
    },
    "core/telemetry/harvest.py::_to_float": {
      "file": "core/telemetry/harvest.py",
      "kind": "Function",
      "name": "_to_float"
    },
    "core/telemetry/harvest.py::_set": {
      "file": "core/telemetry/harvest.py",
      "kind": "Function",
      "name": "_set"
    },
    "core/telemetry/harvest.py::_add": {
      "file": "core/telemetry/harvest.py",
      "kind": "Function",
      "name": "_add"
    },
    "core/telemetry/harvest.py::harvest_headers": {
      "file": "core/telemetry/harvest.py",
      "kind": "Function",
      "name": "harvest_headers"
    },
    "core/telemetry/harvest.py::merge_metrics": {
      "file": "core/telemetry/harvest.py",
      "kind": "Function",
      "name": "merge_metrics"
    },
    "core/telemetry/httpx_hooks.py::_infer_service_hint": {
      "file": "core/telemetry/httpx_hooks.py",
      "kind": "Function",
      "name": "_infer_service_hint"
    },
    "core/telemetry/httpx_hooks.py::instrument_client": {
      "file": "core/telemetry/httpx_hooks.py",
      "kind": "Function",
      "name": "instrument_client"
    },
    "core/telemetry/binders.py::_dig": {
      "file": "core/telemetry/binders.py",
      "kind": "Function",
      "name": "_dig"
    },
    "core/telemetry/binders.py::_coalesce": {
      "file": "core/telemetry/binders.py",
      "kind": "Function",
      "name": "_coalesce"
    },
    "core/telemetry/binders.py::bind_from_select_arm": {
      "file": "core/telemetry/binders.py",
      "kind": "Function",
      "name": "bind_from_select_arm"
    },
    "core/telemetry/budget.py::_nums": {
      "file": "core/telemetry/budget.py",
      "kind": "Function",
      "name": "_nums"
    },
    "core/telemetry/budget.py::compute_spent_ms": {
      "file": "core/telemetry/budget.py",
      "kind": "Function",
      "name": "compute_spent_ms"
    },
    "core/telemetry/budget.py::ensure_budget_fields": {
      "file": "core/telemetry/budget.py",
      "kind": "Function",
      "name": "ensure_budget_fields"
    },
    "core/telemetry/decorators.py::episode": {
      "file": "core/telemetry/decorators.py",
      "kind": "Function",
      "name": "episode"
    },
    "core/telemetry/decorators.py::_resolve": {
      "file": "core/telemetry/decorators.py",
      "kind": "Function",
      "name": "_resolve"
    },
    "core/telemetry/decorators.py::_decor": {
      "file": "core/telemetry/decorators.py",
      "kind": "Function",
      "name": "_decor"
    },
    "core/security/redact.py::redact": {
      "file": "core/security/redact.py",
      "kind": "Function",
      "name": "redact"
    },
    "launch/upload_embed.py::_is_neo_driver": {
      "file": "launch/upload_embed.py",
      "kind": "Function",
      "name": "_is_neo_driver"
    },
    "launch/upload_embed.py::coalesce_driver": {
      "file": "launch/upload_embed.py",
      "kind": "Function",
      "name": "coalesce_driver"
    },
    "launch/upload_embed.py::tool": {
      "file": "launch/upload_embed.py",
      "kind": "Function",
      "name": "tool"
    },
    "launch/upload_embed.py::decorator": {
      "file": "launch/upload_embed.py",
      "kind": "Function",
      "name": "decorator"
    },
    "launch/upload_embed.py::get_caller_name": {
      "file": "launch/upload_embed.py",
      "kind": "Function",
      "name": "get_caller_name"
    },
    "launch/upload_embed.py::safe_neo_value": {
      "file": "launch/upload_embed.py",
      "kind": "Function",
      "name": "safe_neo_value"
    },
    "launch/upload_embed.py::_safe_neo_value": {
      "file": "launch/upload_embed.py",
      "kind": "Function",
      "name": "_safe_neo_value"
    },
    "launch/upload_embed.py::tool_wrapper": {
      "file": "launch/upload_embed.py",
      "kind": "Function",
      "name": "tool_wrapper"
    },
    "launch/upload_embed.py::sync_wrapper": {
      "file": "launch/upload_embed.py",
      "kind": "Function",
      "name": "sync_wrapper"
    },
    "scripts/search_vectors.py::_prop_get": {
      "file": "scripts/search_vectors.py",
      "kind": "Function",
      "name": "_prop_get"
    },
    "scripts/search_vectors.py::format_node": {
      "file": "scripts/search_vectors.py",
      "kind": "Function",
      "name": "format_node"
    },
    "scripts/upload_embed.py::Row": {
      "file": "scripts/upload_embed.py",
      "kind": "Class",
      "name": "Row"
    },
    "scripts/upload_embed.py::infer_scorer_from_filename": {
      "file": "scripts/upload_embed.py",
      "kind": "Function",
      "name": "infer_scorer_from_filename"
    },
    "scripts/upload_embed.py::parse_tags": {
      "file": "scripts/upload_embed.py",
      "kind": "Function",
      "name": "parse_tags"
    },
    "scripts/upload_embed.py::read_rows_from_csv": {
      "file": "scripts/upload_embed.py",
      "kind": "Function",
      "name": "read_rows_from_csv"
    },
    "scripts/upload_embed.py::stable_uuid": {
      "file": "scripts/upload_embed.py",
      "kind": "Function",
      "name": "stable_uuid"
    },
    "scripts/upload_embed.py::dedupe_rows": {
      "file": "scripts/upload_embed.py",
      "kind": "Function",
      "name": "dedupe_rows"
    },
    "scripts/upload_embed.py::write_merged_csv": {
      "file": "scripts/upload_embed.py",
      "kind": "Function",
      "name": "write_merged_csv"
    },
    "scripts/cite_clean.py::strip_cites_token_only": {
      "file": "scripts/cite_clean.py",
      "kind": "Function",
      "name": "strip_cites_token_only"
    },
    "scripts/cite_clean.py::process_file": {
      "file": "scripts/cite_clean.py",
      "kind": "Function",
      "name": "process_file"
    },
    "scripts/cite_clean.py::main": {
      "file": "scripts/cite_clean.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts/eos_replay.py::_find_files_for_decision": {
      "file": "scripts/eos_replay.py",
      "kind": "Function",
      "name": "_find_files_for_decision"
    },
    "scripts/eos_replay.py::_load_by_barcode": {
      "file": "scripts/eos_replay.py",
      "kind": "Function",
      "name": "_load_by_barcode"
    },
    "scripts/eos_replay.py::main": {
      "file": "scripts/eos_replay.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts/get_defs.py::read_text": {
      "file": "scripts/get_defs.py",
      "kind": "Function",
      "name": "read_text"
    },
    "scripts/get_defs.py::call_name": {
      "file": "scripts/get_defs.py",
      "kind": "Function",
      "name": "call_name"
    },
    "scripts/get_defs.py::find_router_app_lines": {
      "file": "scripts/get_defs.py",
      "kind": "Function",
      "name": "find_router_app_lines"
    },
    "scripts/get_defs.py::gather_defs_from_file": {
      "file": "scripts/get_defs.py",
      "kind": "Function",
      "name": "gather_defs_from_file"
    },
    "scripts/get_defs.py::iter_python_files": {
      "file": "scripts/get_defs.py",
      "kind": "Function",
      "name": "iter_python_files"
    },
    "scripts/get_defs.py::collate": {
      "file": "scripts/get_defs.py",
      "kind": "Function",
      "name": "collate"
    },
    "scripts/get_defs.py::main": {
      "file": "scripts/get_defs.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts/get_gates.py::find_gate_keys": {
      "file": "scripts/get_gates.py",
      "kind": "Function",
      "name": "find_gate_keys"
    },
    "scripts/get_gates.py::main": {
      "file": "scripts/get_gates.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts/stray_prompts.py::scan_file": {
      "file": "scripts/stray_prompts.py",
      "kind": "Function",
      "name": "scan_file"
    },
    "scripts/stray_prompts.py::main": {
      "file": "scripts/stray_prompts.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts/schema_collate.py::now_iso": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "now_iso"
    },
    "scripts/schema_collate.py::read_text": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "read_text"
    },
    "scripts/schema_collate.py::expr_to_str": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "expr_to_str"
    },
    "scripts/schema_collate.py::const_value": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "const_value"
    },
    "scripts/schema_collate.py::hash_file": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "hash_file"
    },
    "scripts/schema_collate.py::is_pydantic_base": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "is_pydantic_base"
    },
    "scripts/schema_collate.py::is_dataclass": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "is_dataclass"
    },
    "scripts/schema_collate.py::collect_class_fields": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "collect_class_fields"
    },
    "scripts/schema_collate.py::arg_to_dict": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "arg_to_dict"
    },
    "scripts/schema_collate.py::signature_of": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "signature_of"
    },
    "scripts/schema_collate.py::decorator_names": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "decorator_names"
    },
    "scripts/schema_collate.py::parse_endpoint_decorator": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "parse_endpoint_decorator"
    },
    "scripts/schema_collate.py::FunctionInfo": {
      "file": "scripts/schema_collate.py",
      "kind": "Class",
      "name": "FunctionInfo"
    },
    "scripts/schema_collate.py::ClassInfo": {
      "file": "scripts/schema_collate.py",
      "kind": "Class",
      "name": "ClassInfo"
    },
    "scripts/schema_collate.py::ModuleInfo": {
      "file": "scripts/schema_collate.py",
      "kind": "Class",
      "name": "ModuleInfo"
    },
    "scripts/schema_collate.py::PyModuleScanner": {
      "file": "scripts/schema_collate.py",
      "kind": "Class",
      "name": "PyModuleScanner"
    },
    "scripts/schema_collate.py::PyModuleScanner::__init__": {
      "file": "scripts/schema_collate.py",
      "kind": "Method",
      "name": "__init__"
    },
    "scripts/schema_collate.py::PyModuleScanner::visit_FunctionDef": {
      "file": "scripts/schema_collate.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "scripts/schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef": {
      "file": "scripts/schema_collate.py",
      "kind": "Method",
      "name": "visit_AsyncFunctionDef"
    },
    "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef": {
      "file": "scripts/schema_collate.py",
      "kind": "Method",
      "name": "visit_ClassDef"
    },
    "scripts/schema_collate.py::scan_python_file": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "scan_python_file"
    },
    "scripts/schema_collate.py::walk_files": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "walk_files"
    },
    "scripts/schema_collate.py::build_json_report": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "build_json_report"
    },
    "scripts/schema_collate.py::md_escape": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "md_escape"
    },
    "scripts/schema_collate.py::build_markdown": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "build_markdown"
    },
    "scripts/schema_collate.py::build_state": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "build_state"
    },
    "scripts/schema_collate.py::diff_state": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "diff_state"
    },
    "scripts/schema_collate.py::run_scan": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "run_scan"
    },
    "scripts/schema_collate.py::main": {
      "file": "scripts/schema_collate.py",
      "kind": "Function",
      "name": "main"
    },
    "scripts/placeholder_find.py::is_texty": {
      "file": "scripts/placeholder_find.py",
      "kind": "Function",
      "name": "is_texty"
    },
    "scripts/placeholder_find.py::iter_files": {
      "file": "scripts/placeholder_find.py",
      "kind": "Function",
      "name": "iter_files"
    },
    "scripts/placeholder_find.py::read_text_safely": {
      "file": "scripts/placeholder_find.py",
      "kind": "Function",
      "name": "read_text_safely"
    },
    "scripts/placeholder_find.py::find_matches": {
      "file": "scripts/placeholder_find.py",
      "kind": "Function",
      "name": "find_matches"
    },
    "scripts/placeholder_find.py::scan": {
      "file": "scripts/placeholder_find.py",
      "kind": "Function",
      "name": "scan"
    },
    "scripts/placeholder_find.py::weight": {
      "file": "scripts/placeholder_find.py",
      "kind": "Function",
      "name": "weight"
    },
    "scripts/placeholder_find.py::write_report": {
      "file": "scripts/placeholder_find.py",
      "kind": "Function",
      "name": "write_report"
    },
    "scripts/placeholder_find.py::main": {
      "file": "scripts/placeholder_find.py",
      "kind": "Function",
      "name": "main"
    },
    "tests/confest.py::_simula_env": {
      "file": "tests/confest.py",
      "kind": "Function",
      "name": "_simula_env"
    },
    "tests/confest.py::_patch_http_client": {
      "file": "tests/confest.py",
      "kind": "Function",
      "name": "_patch_http_client"
    },
    "tests/test1.py::test_registry_has_callables": {
      "file": "tests/test1.py",
      "kind": "Function",
      "name": "test_registry_has_callables"
    },
    "tests/test1.py::test_specs_and_impls_align": {
      "file": "tests/test1.py",
      "kind": "Function",
      "name": "test_specs_and_impls_align"
    },
    "tests/test_2.py::test_list_tools_names_only": {
      "file": "tests/test_2.py",
      "kind": "Function",
      "name": "test_list_tools_names_only"
    },
    "tests/test_3.py::test_policy_validate_accepts_diff": {
      "file": "tests/test_3.py",
      "kind": "Function",
      "name": "test_policy_validate_accepts_diff"
    },
    "tests/test_3.py::test_guarded_forward_dry_run": {
      "file": "tests/test_3.py",
      "kind": "Function",
      "name": "test_guarded_forward_dry_run"
    },
    "systems/atune/processing/canonical.py::CanonicalEvent": {
      "file": "systems/atune/processing/canonical.py",
      "kind": "Class",
      "name": "CanonicalEvent"
    },
    "systems/atune/processing/canonical.py::Canonicalizer": {
      "file": "systems/atune/processing/canonical.py",
      "kind": "Class",
      "name": "Canonicalizer"
    },
    "systems/atune/processing/canonical.py::Canonicalizer::canonicalise": {
      "file": "systems/atune/processing/canonical.py",
      "kind": "Method",
      "name": "canonicalise"
    },
    "systems/atune/salience/heads.py::SalienceScore": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Class",
      "name": "SalienceScore"
    },
    "systems/atune/salience/heads.py::SalienceHead": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Class",
      "name": "SalienceHead"
    },
    "systems/atune/salience/heads.py::SalienceHead::name": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Method",
      "name": "name"
    },
    "systems/atune/salience/heads.py::NoveltyHead": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Class",
      "name": "NoveltyHead"
    },
    "systems/atune/salience/heads.py::NoveltyHead::__init__": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/salience/heads.py::NoveltyHead::name": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Method",
      "name": "name"
    },
    "systems/atune/salience/heads.py::KeywordHead": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Class",
      "name": "KeywordHead"
    },
    "systems/atune/salience/heads.py::KeywordHead::__init__": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/salience/heads.py::KeywordHead::name": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Method",
      "name": "name"
    },
    "systems/atune/salience/heads.py::RiskHead": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Class",
      "name": "RiskHead"
    },
    "systems/atune/salience/heads.py::RiskHead::__init__": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/salience/heads.py::RiskHead::name": {
      "file": "systems/atune/salience/heads.py",
      "kind": "Method",
      "name": "name"
    },
    "systems/atune/salience/engine.py::SalienceEngine": {
      "file": "systems/atune/salience/engine.py",
      "kind": "Class",
      "name": "SalienceEngine"
    },
    "systems/atune/salience/engine.py::SalienceEngine::__init__": {
      "file": "systems/atune/salience/engine.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/salience/gating.py::MetaAttentionGater": {
      "file": "systems/atune/salience/gating.py",
      "kind": "Class",
      "name": "MetaAttentionGater"
    },
    "systems/atune/salience/gating.py::MetaAttentionGater::__init__": {
      "file": "systems/atune/salience/gating.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/salience/gating.py::MetaAttentionGater::_relu": {
      "file": "systems/atune/salience/gating.py",
      "kind": "Method",
      "name": "_relu"
    },
    "systems/atune/salience/gating.py::MetaAttentionGater::_softmax": {
      "file": "systems/atune/salience/gating.py",
      "kind": "Method",
      "name": "_softmax"
    },
    "systems/atune/salience/gating.py::MetaAttentionGater::get_gates": {
      "file": "systems/atune/salience/gating.py",
      "kind": "Method",
      "name": "get_gates"
    },
    "systems/atune/salience/conformal.py::PerHeadConformal": {
      "file": "systems/atune/salience/conformal.py",
      "kind": "Class",
      "name": "PerHeadConformal"
    },
    "systems/atune/salience/conformal.py::PerHeadConformal::__init__": {
      "file": "systems/atune/salience/conformal.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/salience/conformal.py::PerHeadConformal::update": {
      "file": "systems/atune/salience/conformal.py",
      "kind": "Method",
      "name": "update"
    },
    "systems/atune/salience/conformal.py::PerHeadConformal::p_value": {
      "file": "systems/atune/salience/conformal.py",
      "kind": "Method",
      "name": "p_value"
    },
    "systems/atune/salience/conformal.py::PerHeadConformal::summary": {
      "file": "systems/atune/salience/conformal.py",
      "kind": "Method",
      "name": "summary"
    },
    "systems/atune/probes/engine.py::ProbeEngine": {
      "file": "systems/atune/probes/engine.py",
      "kind": "Class",
      "name": "ProbeEngine"
    },
    "systems/atune/probes/engine.py::ProbeEngine::__init__": {
      "file": "systems/atune/probes/engine.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/planner/fae.py::FAEScore": {
      "file": "systems/atune/planner/fae.py",
      "kind": "Class",
      "name": "FAEScore"
    },
    "systems/atune/planner/fae.py::FAE_Calculator": {
      "file": "systems/atune/planner/fae.py",
      "kind": "Class",
      "name": "FAE_Calculator"
    },
    "systems/atune/planner/fae.py::FAE_Calculator::__init__": {
      "file": "systems/atune/planner/fae.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae": {
      "file": "systems/atune/planner/fae.py",
      "kind": "Method",
      "name": "calculate_fae"
    },
    "systems/atune/planner/market.py::Bid": {
      "file": "systems/atune/planner/market.py",
      "kind": "Class",
      "name": "Bid"
    },
    "systems/atune/planner/market.py::_resolve_budget_ms": {
      "file": "systems/atune/planner/market.py",
      "kind": "Function",
      "name": "_resolve_budget_ms"
    },
    "systems/atune/planner/market.py::AttentionMarket": {
      "file": "systems/atune/planner/market.py",
      "kind": "Class",
      "name": "AttentionMarket"
    },
    "systems/atune/planner/market.py::AttentionMarket::__init__": {
      "file": "systems/atune/planner/market.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/planner/market.py::AttentionMarket::run_auction": {
      "file": "systems/atune/planner/market.py",
      "kind": "Method",
      "name": "run_auction"
    },
    "systems/atune/planner/intervention.py::create_signed_token": {
      "file": "systems/atune/planner/intervention.py",
      "kind": "Function",
      "name": "create_signed_token"
    },
    "systems/atune/planner/inference.py::GenerativeModel": {
      "file": "systems/atune/planner/inference.py",
      "kind": "Class",
      "name": "GenerativeModel"
    },
    "systems/atune/planner/inference.py::ActiveInferenceHead": {
      "file": "systems/atune/planner/inference.py",
      "kind": "Class",
      "name": "ActiveInferenceHead"
    },
    "systems/atune/planner/inference.py::ActiveInferenceHead::__init__": {
      "file": "systems/atune/planner/inference.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/planner/inference.py::ActiveInferenceHead::calculate_expected_free_energy": {
      "file": "systems/atune/planner/inference.py",
      "kind": "Method",
      "name": "calculate_expected_free_energy"
    },
    "systems/atune/planner/rollback.py::_atom": {
      "file": "systems/atune/planner/rollback.py",
      "kind": "Function",
      "name": "_atom"
    },
    "systems/atune/planner/rollback.py::_safe_noop_contract": {
      "file": "systems/atune/planner/rollback.py",
      "kind": "Function",
      "name": "_safe_noop_contract"
    },
    "systems/atune/planner/rollback.py::_map_params_from_result": {
      "file": "systems/atune/planner/rollback.py",
      "kind": "Function",
      "name": "_map_params_from_result"
    },
    "systems/atune/planner/rollback.py::synthesize_rollback_contract": {
      "file": "systems/atune/planner/rollback.py",
      "kind": "Function",
      "name": "synthesize_rollback_contract"
    },
    "systems/atune/planner/costs.py::scale_bid_costs": {
      "file": "systems/atune/planner/costs.py",
      "kind": "Function",
      "name": "scale_bid_costs"
    },
    "systems/atune/planner/secl_orchestrator.py::SECLSignals": {
      "file": "systems/atune/planner/secl_orchestrator.py",
      "kind": "Class",
      "name": "SECLSignals"
    },
    "systems/atune/planner/secl_orchestrator.py::SECLSignals::__init__": {
      "file": "systems/atune/planner/secl_orchestrator.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/planner/signals.py::SECLSignals": {
      "file": "systems/atune/planner/signals.py",
      "kind": "Class",
      "name": "SECLSignals"
    },
    "systems/atune/planner/signals.py::SECLSignals::__init__": {
      "file": "systems/atune/planner/signals.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/planner/market_strategies/pareto_knee.py::_fae_scalar": {
      "file": "systems/atune/planner/market_strategies/pareto_knee.py",
      "kind": "Function",
      "name": "_fae_scalar"
    },
    "systems/atune/planner/market_strategies/pareto_knee.py::select_with_pareto_knee": {
      "file": "systems/atune/planner/market_strategies/pareto_knee.py",
      "kind": "Function",
      "name": "select_with_pareto_knee"
    },
    "systems/atune/budgeter/manager.py::AttentionBudgetManager": {
      "file": "systems/atune/budgeter/manager.py",
      "kind": "Class",
      "name": "AttentionBudgetManager"
    },
    "systems/atune/budgeter/manager.py::AttentionBudgetManager::set_pool_ms_per_tick": {
      "file": "systems/atune/budgeter/manager.py",
      "kind": "Method",
      "name": "set_pool_ms_per_tick"
    },
    "systems/atune/budgeter/manager.py::AttentionBudgetManager::tick": {
      "file": "systems/atune/budgeter/manager.py",
      "kind": "Method",
      "name": "tick"
    },
    "systems/atune/budgeter/manager.py::AttentionBudgetManager::add_reserve": {
      "file": "systems/atune/budgeter/manager.py",
      "kind": "Method",
      "name": "add_reserve"
    },
    "systems/atune/budgeter/manager.py::AttentionBudgetManager::set_reserves": {
      "file": "systems/atune/budgeter/manager.py",
      "kind": "Method",
      "name": "set_reserves"
    },
    "systems/atune/budgeter/manager.py::AttentionBudgetManager::get_available_budget": {
      "file": "systems/atune/budgeter/manager.py",
      "kind": "Method",
      "name": "get_available_budget"
    },
    "systems/atune/budgeter/manager.py::AttentionBudgetManager::request_allocation": {
      "file": "systems/atune/budgeter/manager.py",
      "kind": "Method",
      "name": "request_allocation"
    },
    "systems/atune/budgeter/manager.py::AttentionBudgetManager::can_allocate_non_reserved": {
      "file": "systems/atune/budgeter/manager.py",
      "kind": "Method",
      "name": "can_allocate_non_reserved"
    },
    "systems/atune/budgeter/tempo.py::TempoForecaster": {
      "file": "systems/atune/budgeter/tempo.py",
      "kind": "Class",
      "name": "TempoForecaster"
    },
    "systems/atune/budgeter/tempo.py::TempoForecaster::__init__": {
      "file": "systems/atune/budgeter/tempo.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/budgeter/tempo.py::TempoForecaster::observe_event": {
      "file": "systems/atune/budgeter/tempo.py",
      "kind": "Method",
      "name": "observe_event"
    },
    "systems/atune/budgeter/tempo.py::TempoForecaster::forecast_and_reserve": {
      "file": "systems/atune/budgeter/tempo.py",
      "kind": "Method",
      "name": "forecast_and_reserve"
    },
    "systems/atune/knowledge/graph_interface.py::KnowledgeGraphInterface": {
      "file": "systems/atune/knowledge/graph_interface.py",
      "kind": "Class",
      "name": "KnowledgeGraphInterface"
    },
    "systems/atune/focus/field.py::SalienceFieldManager": {
      "file": "systems/atune/focus/field.py",
      "kind": "Class",
      "name": "SalienceFieldManager"
    },
    "systems/atune/focus/field.py::SalienceFieldManager::__init__": {
      "file": "systems/atune/focus/field.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/focus/field.py::SalienceFieldManager::deposit": {
      "file": "systems/atune/focus/field.py",
      "kind": "Method",
      "name": "deposit"
    },
    "systems/atune/focus/field.py::SalienceFieldManager::run_diffusion_step": {
      "file": "systems/atune/focus/field.py",
      "kind": "Method",
      "name": "run_diffusion_step"
    },
    "systems/atune/focus/field.py::SalienceFieldManager::detect_hotspots": {
      "file": "systems/atune/focus/field.py",
      "kind": "Method",
      "name": "detect_hotspots"
    },
    "systems/atune/focus/tuner.py::DiffusionTuner": {
      "file": "systems/atune/focus/tuner.py",
      "kind": "Class",
      "name": "DiffusionTuner"
    },
    "systems/atune/focus/tuner.py::DiffusionTuner::apply_hint": {
      "file": "systems/atune/focus/tuner.py",
      "kind": "Method",
      "name": "apply_hint"
    },
    "systems/atune/control/affect.py::AffectiveState": {
      "file": "systems/atune/control/affect.py",
      "kind": "Class",
      "name": "AffectiveState"
    },
    "systems/atune/control/affect.py::ControlModulations": {
      "file": "systems/atune/control/affect.py",
      "kind": "Class",
      "name": "ControlModulations"
    },
    "systems/atune/control/affect.py::AffectiveControlLoop": {
      "file": "systems/atune/control/affect.py",
      "kind": "Class",
      "name": "AffectiveControlLoop"
    },
    "systems/atune/control/affect.py::AffectiveControlLoop::__init__": {
      "file": "systems/atune/control/affect.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/control/affect.py::AffectiveControlLoop::update_state": {
      "file": "systems/atune/control/affect.py",
      "kind": "Method",
      "name": "update_state"
    },
    "systems/atune/control/affect.py::AffectiveControlLoop::get_current_modulations": {
      "file": "systems/atune/control/affect.py",
      "kind": "Method",
      "name": "get_current_modulations"
    },
    "systems/atune/memory/induction.py::SchemaInducer": {
      "file": "systems/atune/memory/induction.py",
      "kind": "Class",
      "name": "SchemaInducer"
    },
    "systems/atune/memory/store.py::MemoryStore": {
      "file": "systems/atune/memory/store.py",
      "kind": "Class",
      "name": "MemoryStore"
    },
    "systems/atune/memory/store.py::MemoryStore::__init__": {
      "file": "systems/atune/memory/store.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/memory/store.py::MemoryStore::add_focus_node": {
      "file": "systems/atune/memory/store.py",
      "kind": "Method",
      "name": "add_focus_node"
    },
    "systems/atune/memory/store.py::MemoryStore::get_all_nodes": {
      "file": "systems/atune/memory/store.py",
      "kind": "Method",
      "name": "get_all_nodes"
    },
    "systems/atune/memory/store.py::MemoryStore::update_schemas": {
      "file": "systems/atune/memory/store.py",
      "kind": "Method",
      "name": "update_schemas"
    },
    "systems/atune/memory/store.py::MemoryStore::match_event_to_schema": {
      "file": "systems/atune/memory/store.py",
      "kind": "Method",
      "name": "match_event_to_schema"
    },
    "systems/atune/memory/schemas.py::FocusNode": {
      "file": "systems/atune/memory/schemas.py",
      "kind": "Class",
      "name": "FocusNode"
    },
    "systems/atune/memory/schemas.py::Schema": {
      "file": "systems/atune/memory/schemas.py",
      "kind": "Class",
      "name": "Schema"
    },
    "systems/atune/causal/model.py::CausalVariable": {
      "file": "systems/atune/causal/model.py",
      "kind": "Class",
      "name": "CausalVariable"
    },
    "systems/atune/causal/model.py::StructuralEquation": {
      "file": "systems/atune/causal/model.py",
      "kind": "Class",
      "name": "StructuralEquation"
    },
    "systems/atune/causal/model.py::StructuralCausalModel": {
      "file": "systems/atune/causal/model.py",
      "kind": "Class",
      "name": "StructuralCausalModel"
    },
    "systems/atune/causal/discovery.py::CausalDiscoveryEngine": {
      "file": "systems/atune/causal/discovery.py",
      "kind": "Class",
      "name": "CausalDiscoveryEngine"
    },
    "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal": {
      "file": "systems/atune/causal/discovery.py",
      "kind": "Method",
      "name": "discover_scm_from_journal"
    },
    "systems/atune/causal/scm_consumer.py::SCMConsumer": {
      "file": "systems/atune/causal/scm_consumer.py",
      "kind": "Class",
      "name": "SCMConsumer"
    },
    "systems/atune/causal/scm_consumer.py::SCMConsumer::__init__": {
      "file": "systems/atune/causal/scm_consumer.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/journal/ledger.py::_digest_hex": {
      "file": "systems/atune/journal/ledger.py",
      "kind": "Function",
      "name": "_digest_hex"
    },
    "systems/atune/journal/ledger.py::WhyTrace": {
      "file": "systems/atune/journal/ledger.py",
      "kind": "Class",
      "name": "WhyTrace"
    },
    "systems/atune/journal/ledger.py::ReplayCapsule": {
      "file": "systems/atune/journal/ledger.py",
      "kind": "Class",
      "name": "ReplayCapsule"
    },
    "systems/atune/journal/ledger.py::_write_jsonl": {
      "file": "systems/atune/journal/ledger.py",
      "kind": "Function",
      "name": "_write_jsonl"
    },
    "systems/atune/journal/ledger.py::record": {
      "file": "systems/atune/journal/ledger.py",
      "kind": "Function",
      "name": "record"
    },
    "systems/atune/journal/why_helpers.py::_Point": {
      "file": "systems/atune/journal/why_helpers.py",
      "kind": "Class",
      "name": "_Point"
    },
    "systems/atune/journal/why_helpers.py::_terms": {
      "file": "systems/atune/journal/why_helpers.py",
      "kind": "Function",
      "name": "_terms"
    },
    "systems/atune/journal/why_helpers.py::_points": {
      "file": "systems/atune/journal/why_helpers.py",
      "kind": "Function",
      "name": "_points"
    },
    "systems/atune/journal/why_helpers.py::_dominates": {
      "file": "systems/atune/journal/why_helpers.py",
      "kind": "Function",
      "name": "_dominates"
    },
    "systems/atune/journal/why_helpers.py::_pareto_front": {
      "file": "systems/atune/journal/why_helpers.py",
      "kind": "Function",
      "name": "_pareto_front"
    },
    "systems/atune/journal/why_helpers.py::_normalize": {
      "file": "systems/atune/journal/why_helpers.py",
      "kind": "Function",
      "name": "_normalize"
    },
    "systems/atune/journal/why_helpers.py::_norm": {
      "file": "systems/atune/journal/why_helpers.py",
      "kind": "Function",
      "name": "_norm"
    },
    "systems/atune/journal/why_helpers.py::_knee_index": {
      "file": "systems/atune/journal/why_helpers.py",
      "kind": "Function",
      "name": "_knee_index"
    },
    "systems/atune/journal/why_helpers.py::summarize_pareto_knee": {
      "file": "systems/atune/journal/why_helpers.py",
      "kind": "Function",
      "name": "summarize_pareto_knee"
    },
    "systems/atune/safety/reflex_catalog.py::decide": {
      "file": "systems/atune/safety/reflex_catalog.py",
      "kind": "Function",
      "name": "decide"
    },
    "systems/atune/safety/reflex_catalog.py::apply_redactions": {
      "file": "systems/atune/safety/reflex_catalog.py",
      "kind": "Function",
      "name": "apply_redactions"
    },
    "systems/atune/safety/gating.py::EscalationReason": {
      "file": "systems/atune/safety/gating.py",
      "kind": "Class",
      "name": "EscalationReason"
    },
    "systems/atune/safety/gating.py::GateVerdict": {
      "file": "systems/atune/safety/gating.py",
      "kind": "Class",
      "name": "GateVerdict"
    },
    "systems/atune/safety/gating.py::ConformalGate": {
      "file": "systems/atune/safety/gating.py",
      "kind": "Class",
      "name": "ConformalGate"
    },
    "systems/atune/safety/gating.py::ConformalGate::__init__": {
      "file": "systems/atune/safety/gating.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/atune/ingest/followups.py::HarvestSummary": {
      "file": "systems/atune/ingest/followups.py",
      "kind": "Class",
      "name": "HarvestSummary"
    },
    "systems/atune/ingest/followups.py::_host_of": {
      "file": "systems/atune/ingest/followups.py",
      "kind": "Function",
      "name": "_host_of"
    },
    "systems/atune/ingest/followups.py::harvest_followup_event": {
      "file": "systems/atune/ingest/followups.py",
      "kind": "Function",
      "name": "harvest_followup_event"
    },
    "systems/atune/ingest/followups.py::harvest_batch_followups": {
      "file": "systems/atune/ingest/followups.py",
      "kind": "Function",
      "name": "harvest_batch_followups"
    },
    "systems/atune/ingest/followups.py::salience_hints_from_harvest": {
      "file": "systems/atune/ingest/followups.py",
      "kind": "Function",
      "name": "salience_hints_from_harvest"
    },
    "systems/atune/gaps/schema.py::RegretStats": {
      "file": "systems/atune/gaps/schema.py",
      "kind": "Class",
      "name": "RegretStats"
    },
    "systems/atune/gaps/schema.py::PostconditionFailure": {
      "file": "systems/atune/gaps/schema.py",
      "kind": "Class",
      "name": "PostconditionFailure"
    },
    "systems/atune/gaps/schema.py::ExemplarInput": {
      "file": "systems/atune/gaps/schema.py",
      "kind": "Class",
      "name": "ExemplarInput"
    },
    "systems/atune/gaps/schema.py::CapabilityGapEvent": {
      "file": "systems/atune/gaps/schema.py",
      "kind": "Class",
      "name": "CapabilityGapEvent"
    },
    "systems/atune/intent/constraints_merge.py::_merge_dict": {
      "file": "systems/atune/intent/constraints_merge.py",
      "kind": "Function",
      "name": "_merge_dict"
    },
    "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints": {
      "file": "systems/atune/intent/constraints_merge.py",
      "kind": "Function",
      "name": "merge_playbook_into_constraints"
    },
    "systems/atune/intent/gap_detector.py::detect_capability_gap": {
      "file": "systems/atune/intent/gap_detector.py",
      "kind": "Function",
      "name": "detect_capability_gap"
    },
    "systems/atune/intent/playbook_schema.py::ContractAtom": {
      "file": "systems/atune/intent/playbook_schema.py",
      "kind": "Class",
      "name": "ContractAtom"
    },
    "systems/atune/intent/playbook_schema.py::RateLimits": {
      "file": "systems/atune/intent/playbook_schema.py",
      "kind": "Class",
      "name": "RateLimits"
    },
    "systems/atune/intent/playbook_schema.py::Redactions": {
      "file": "systems/atune/intent/playbook_schema.py",
      "kind": "Class",
      "name": "Redactions"
    },
    "systems/atune/intent/playbook_schema.py::SafetyBlock": {
      "file": "systems/atune/intent/playbook_schema.py",
      "kind": "Class",
      "name": "SafetyBlock"
    },
    "systems/atune/intent/playbook_schema.py::Playbook": {
      "file": "systems/atune/intent/playbook_schema.py",
      "kind": "Class",
      "name": "Playbook"
    },
    "systems/atune/intent/playbook_schema.py::Playbook::Config": {
      "file": "systems/atune/intent/playbook_schema.py",
      "kind": "Class",
      "name": "Config"
    },
    "systems/atune/intent/playbook_schema.py::Playbook::_coerce_atoms": {
      "file": "systems/atune/intent/playbook_schema.py",
      "kind": "Method",
      "name": "_coerce_atoms"
    },
    "systems/atune/intent/playbook_schema.py::normalize_playbook": {
      "file": "systems/atune/intent/playbook_schema.py",
      "kind": "Function",
      "name": "normalize_playbook"
    },
    "systems/atune/metrics/secl_counters.py::bump": {
      "file": "systems/atune/metrics/secl_counters.py",
      "kind": "Function",
      "name": "bump"
    },
    "systems/atune/metrics/secl_counters.py::set_gauge": {
      "file": "systems/atune/metrics/secl_counters.py",
      "kind": "Function",
      "name": "set_gauge"
    },
    "systems/atune/metrics/secl_counters.py::set_info": {
      "file": "systems/atune/metrics/secl_counters.py",
      "kind": "Function",
      "name": "set_info"
    },
    "systems/atune/metrics/secl_counters.py::snapshot": {
      "file": "systems/atune/metrics/secl_counters.py",
      "kind": "Function",
      "name": "snapshot"
    },
    "systems/atune/metrics/budget_audit.py::audit_and_record": {
      "file": "systems/atune/metrics/budget_audit.py",
      "kind": "Function",
      "name": "audit_and_record"
    },
    "systems/atune/escalation/reasons.py::EscalationReason": {
      "file": "systems/atune/escalation/reasons.py",
      "kind": "Class",
      "name": "EscalationReason"
    },
    "systems/atune/escalation/reasons.py::reason_conformal_ood": {
      "file": "systems/atune/escalation/reasons.py",
      "kind": "Function",
      "name": "reason_conformal_ood"
    },
    "systems/atune/escalation/reasons.py::reason_postcond_violation": {
      "file": "systems/atune/escalation/reasons.py",
      "kind": "Function",
      "name": "reason_postcond_violation"
    },
    "systems/atune/escalation/reasons.py::reason_rollback_failed": {
      "file": "systems/atune/escalation/reasons.py",
      "kind": "Function",
      "name": "reason_rollback_failed"
    },
    "systems/atune/escalation/reasons.py::reason_twin_mismatch": {
      "file": "systems/atune/escalation/reasons.py",
      "kind": "Function",
      "name": "reason_twin_mismatch"
    },
    "systems/atune/escalation/build.py::build_escalation_payload": {
      "file": "systems/atune/escalation/build.py",
      "kind": "Function",
      "name": "build_escalation_payload"
    },
    "systems/axon/schemas.py::AxonEvent": {
      "file": "systems/axon/schemas.py",
      "kind": "Class",
      "name": "AxonEvent"
    },
    "systems/axon/schemas.py::AxonIntent": {
      "file": "systems/axon/schemas.py",
      "kind": "Class",
      "name": "AxonIntent"
    },
    "systems/axon/schemas.py::ActionResult": {
      "file": "systems/axon/schemas.py",
      "kind": "Class",
      "name": "ActionResult"
    },
    "systems/axon/dependencies.py::get_driver_registry": {
      "file": "systems/axon/dependencies.py",
      "kind": "Function",
      "name": "get_driver_registry"
    },
    "systems/axon/dependencies.py::get_journal": {
      "file": "systems/axon/dependencies.py",
      "kind": "Function",
      "name": "get_journal"
    },
    "systems/axon/dependencies.py::get_quarantine": {
      "file": "systems/axon/dependencies.py",
      "kind": "Function",
      "name": "get_quarantine"
    },
    "systems/axon/dependencies.py::get_lifecycle_manager": {
      "file": "systems/axon/dependencies.py",
      "kind": "Function",
      "name": "get_lifecycle_manager"
    },
    "systems/axon/dependencies.py::get_capability_validator": {
      "file": "systems/axon/dependencies.py",
      "kind": "Function",
      "name": "get_capability_validator"
    },
    "systems/axon/dependencies.py::get_conformal_predictor": {
      "file": "systems/axon/dependencies.py",
      "kind": "Function",
      "name": "get_conformal_predictor"
    },
    "systems/axon/dependencies.py::get_scorecard_manager": {
      "file": "systems/axon/dependencies.py",
      "kind": "Function",
      "name": "get_scorecard_manager"
    },
    "systems/axon/io/quarantine.py::Taint": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Class",
      "name": "Taint"
    },
    "systems/axon/io/quarantine.py::CanonicalizedPayload": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Class",
      "name": "CanonicalizedPayload"
    },
    "systems/axon/io/quarantine.py::HTMLSanitizer": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Class",
      "name": "HTMLSanitizer"
    },
    "systems/axon/io/quarantine.py::HTMLSanitizer::__init__": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/io/quarantine.py::HTMLSanitizer::handle_starttag": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Method",
      "name": "handle_starttag"
    },
    "systems/axon/io/quarantine.py::HTMLSanitizer::handle_endtag": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Method",
      "name": "handle_endtag"
    },
    "systems/axon/io/quarantine.py::HTMLSanitizer::handle_data": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Method",
      "name": "handle_data"
    },
    "systems/axon/io/quarantine.py::HTMLSanitizer::sanitize": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Method",
      "name": "sanitize"
    },
    "systems/axon/io/quarantine.py::Quarantine": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Class",
      "name": "Quarantine"
    },
    "systems/axon/io/quarantine.py::Quarantine::__init__": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/io/quarantine.py::Quarantine::process_and_canonicalize": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Method",
      "name": "process_and_canonicalize"
    },
    "systems/axon/io/quarantine.py::Quarantine::_canonicalize_html": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Method",
      "name": "_canonicalize_html"
    },
    "systems/axon/io/quarantine.py::Quarantine::_canonicalize_json": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Method",
      "name": "_canonicalize_json"
    },
    "systems/axon/io/quarantine.py::Quarantine::_canonicalize_text": {
      "file": "systems/axon/io/quarantine.py",
      "kind": "Method",
      "name": "_canonicalize_text"
    },
    "systems/axon/mesh/sdk.py::CapabilitySpec": {
      "file": "systems/axon/mesh/sdk.py",
      "kind": "Class",
      "name": "CapabilitySpec"
    },
    "systems/axon/mesh/sdk.py::HealthStatus": {
      "file": "systems/axon/mesh/sdk.py",
      "kind": "Class",
      "name": "HealthStatus"
    },
    "systems/axon/mesh/sdk.py::ReplayCapsule": {
      "file": "systems/axon/mesh/sdk.py",
      "kind": "Class",
      "name": "ReplayCapsule"
    },
    "systems/axon/mesh/sdk.py::DriverInterface": {
      "file": "systems/axon/mesh/sdk.py",
      "kind": "Class",
      "name": "DriverInterface"
    },
    "systems/axon/mesh/sdk.py::DriverInterface::describe": {
      "file": "systems/axon/mesh/sdk.py",
      "kind": "Method",
      "name": "describe"
    },
    "systems/axon/mesh/sdk.py::DriverInterface::pull": {
      "file": "systems/axon/mesh/sdk.py",
      "kind": "Method",
      "name": "pull"
    },
    "systems/axon/mesh/sdk.py::DriverInterface::push": {
      "file": "systems/axon/mesh/sdk.py",
      "kind": "Method",
      "name": "push"
    },
    "systems/axon/mesh/sdk.py::DriverInterface::self_test": {
      "file": "systems/axon/mesh/sdk.py",
      "kind": "Method",
      "name": "self_test"
    },
    "systems/axon/mesh/sdk.py::DriverInterface::repro_bundle": {
      "file": "systems/axon/mesh/sdk.py",
      "kind": "Method",
      "name": "repro_bundle"
    },
    "systems/axon/mesh/registry.py::DriverRegistry": {
      "file": "systems/axon/mesh/registry.py",
      "kind": "Class",
      "name": "DriverRegistry"
    },
    "systems/axon/mesh/registry.py::DriverRegistry::__init__": {
      "file": "systems/axon/mesh/registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/mesh/registry.py::DriverRegistry::_map_capabilities": {
      "file": "systems/axon/mesh/registry.py",
      "kind": "Method",
      "name": "_map_capabilities"
    },
    "systems/axon/mesh/registry.py::DriverRegistry::register": {
      "file": "systems/axon/mesh/registry.py",
      "kind": "Method",
      "name": "register"
    },
    "systems/axon/mesh/registry.py::DriverRegistry::update_driver_status": {
      "file": "systems/axon/mesh/registry.py",
      "kind": "Method",
      "name": "update_driver_status"
    },
    "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver": {
      "file": "systems/axon/mesh/registry.py",
      "kind": "Method",
      "name": "load_and_register_driver"
    },
    "systems/axon/mesh/registry.py::DriverRegistry::get_live_driver_for_capability": {
      "file": "systems/axon/mesh/registry.py",
      "kind": "Method",
      "name": "get_live_driver_for_capability"
    },
    "systems/axon/mesh/registry.py::DriverRegistry::get_shadow_drivers_for_capability": {
      "file": "systems/axon/mesh/registry.py",
      "kind": "Method",
      "name": "get_shadow_drivers_for_capability"
    },
    "systems/axon/mesh/lifecycle.py::DriverState": {
      "file": "systems/axon/mesh/lifecycle.py",
      "kind": "Class",
      "name": "DriverState"
    },
    "systems/axon/mesh/lifecycle.py::DriverLifecycleManager": {
      "file": "systems/axon/mesh/lifecycle.py",
      "kind": "Class",
      "name": "DriverLifecycleManager"
    },
    "systems/axon/mesh/lifecycle.py::DriverLifecycleManager::__init__": {
      "file": "systems/axon/mesh/lifecycle.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/mesh/lifecycle.py::DriverLifecycleManager::update_driver_status": {
      "file": "systems/axon/mesh/lifecycle.py",
      "kind": "Method",
      "name": "update_driver_status"
    },
    "systems/axon/mesh/lifecycle.py::DriverLifecycleManager::get_driver_state": {
      "file": "systems/axon/mesh/lifecycle.py",
      "kind": "Method",
      "name": "get_driver_state"
    },
    "systems/axon/mesh/lifecycle.py::DriverLifecycleManager::get_all_states": {
      "file": "systems/axon/mesh/lifecycle.py",
      "kind": "Method",
      "name": "get_all_states"
    },
    "systems/axon/mesh/scorecard.py::DriverScorecard": {
      "file": "systems/axon/mesh/scorecard.py",
      "kind": "Class",
      "name": "DriverScorecard"
    },
    "systems/axon/mesh/scorecard.py::DriverScorecard::success_rate": {
      "file": "systems/axon/mesh/scorecard.py",
      "kind": "Method",
      "name": "success_rate"
    },
    "systems/axon/mesh/scorecard.py::ScorecardManager": {
      "file": "systems/axon/mesh/scorecard.py",
      "kind": "Class",
      "name": "ScorecardManager"
    },
    "systems/axon/mesh/scorecard.py::ScorecardManager::__init__": {
      "file": "systems/axon/mesh/scorecard.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/mesh/scorecard.py::ScorecardManager::update_scorecard": {
      "file": "systems/axon/mesh/scorecard.py",
      "kind": "Method",
      "name": "update_scorecard"
    },
    "systems/axon/mesh/scorecard.py::ScorecardManager::get_all_scorecards": {
      "file": "systems/axon/mesh/scorecard.py",
      "kind": "Method",
      "name": "get_all_scorecards"
    },
    "systems/axon/mesh/attestation.py::AttestationPolicy": {
      "file": "systems/axon/mesh/attestation.py",
      "kind": "Class",
      "name": "AttestationPolicy"
    },
    "systems/axon/mesh/attestation.py::AttestationRecord": {
      "file": "systems/axon/mesh/attestation.py",
      "kind": "Class",
      "name": "AttestationRecord"
    },
    "systems/axon/mesh/attestation.py::_verify_hmac": {
      "file": "systems/axon/mesh/attestation.py",
      "kind": "Function",
      "name": "_verify_hmac"
    },
    "systems/axon/mesh/attestation.py::verify_attestation": {
      "file": "systems/axon/mesh/attestation.py",
      "kind": "Function",
      "name": "verify_attestation"
    },
    "systems/axon/mesh/autoroller.py::AutoRollConfig": {
      "file": "systems/axon/mesh/autoroller.py",
      "kind": "Class",
      "name": "AutoRollConfig"
    },
    "systems/axon/mesh/autoroller.py::AutoRoller": {
      "file": "systems/axon/mesh/autoroller.py",
      "kind": "Class",
      "name": "AutoRoller"
    },
    "systems/axon/mesh/autoroller.py::AutoRoller::__init__": {
      "file": "systems/axon/mesh/autoroller.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/mesh/autoroller.py::AutoRoller::_metrics": {
      "file": "systems/axon/mesh/autoroller.py",
      "kind": "Method",
      "name": "_metrics"
    },
    "systems/axon/mesh/autoroller.py::AutoRoller::_describe": {
      "file": "systems/axon/mesh/autoroller.py",
      "kind": "Method",
      "name": "_describe"
    },
    "systems/axon/mesh/autoroller.py::AutoRoller::_cooldown_ok": {
      "file": "systems/axon/mesh/autoroller.py",
      "kind": "Method",
      "name": "_cooldown_ok"
    },
    "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act": {
      "file": "systems/axon/mesh/autoroller.py",
      "kind": "Method",
      "name": "evaluate_and_act"
    },
    "systems/axon/mesh/autoroller.py::AutoRoller::_journal": {
      "file": "systems/axon/mesh/autoroller.py",
      "kind": "Method",
      "name": "_journal"
    },
    "systems/axon/mesh/promoter.py::PromotionPolicy": {
      "file": "systems/axon/mesh/promoter.py",
      "kind": "Class",
      "name": "PromotionPolicy"
    },
    "systems/axon/mesh/promoter.py::PromotionPolicy::__init__": {
      "file": "systems/axon/mesh/promoter.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/mesh/promoter.py::PromotionPolicy::ok": {
      "file": "systems/axon/mesh/promoter.py",
      "kind": "Method",
      "name": "ok"
    },
    "systems/axon/mesh/promoter.py::_status_eq": {
      "file": "systems/axon/mesh/promoter.py",
      "kind": "Function",
      "name": "_status_eq"
    },
    "systems/axon/mesh/promoter.py::_coerce_like": {
      "file": "systems/axon/mesh/promoter.py",
      "kind": "Function",
      "name": "_coerce_like"
    },
    "systems/axon/journal/mej.py::JournalEntry": {
      "file": "systems/axon/journal/mej.py",
      "kind": "Class",
      "name": "JournalEntry"
    },
    "systems/axon/journal/mej.py::to_deterministic_json": {
      "file": "systems/axon/journal/mej.py",
      "kind": "Function",
      "name": "to_deterministic_json"
    },
    "systems/axon/journal/mej.py::MerkleJournal": {
      "file": "systems/axon/journal/mej.py",
      "kind": "Class",
      "name": "MerkleJournal"
    },
    "systems/axon/journal/mej.py::MerkleJournal::__init__": {
      "file": "systems/axon/journal/mej.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/journal/mej.py::MerkleJournal::write_entry": {
      "file": "systems/axon/journal/mej.py",
      "kind": "Method",
      "name": "write_entry"
    },
    "systems/axon/drivers/rss_driver.py::RssDriver": {
      "file": "systems/axon/drivers/rss_driver.py",
      "kind": "Class",
      "name": "RssDriver"
    },
    "systems/axon/drivers/rss_driver.py::RssDriver::__init__": {
      "file": "systems/axon/drivers/rss_driver.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/drivers/rss_driver.py::RssDriver::describe": {
      "file": "systems/axon/drivers/rss_driver.py",
      "kind": "Method",
      "name": "describe"
    },
    "systems/axon/drivers/rss_driver.py::RssDriver::push": {
      "file": "systems/axon/drivers/rss_driver.py",
      "kind": "Method",
      "name": "push"
    },
    "systems/axon/drivers/rss_driver.py::RssDriver::repro_bundle": {
      "file": "systems/axon/drivers/rss_driver.py",
      "kind": "Method",
      "name": "repro_bundle"
    },
    "systems/axon/drivers/qora_search_driver.py::QoraSearchDriver": {
      "file": "systems/axon/drivers/qora_search_driver.py",
      "kind": "Class",
      "name": "QoraSearchDriver"
    },
    "systems/axon/drivers/qora_search_driver.py::QoraSearchDriver::describe": {
      "file": "systems/axon/drivers/qora_search_driver.py",
      "kind": "Method",
      "name": "describe"
    },
    "systems/axon/drivers/qora_search_driver.py::QoraSearchDriver::repro_bundle": {
      "file": "systems/axon/drivers/qora_search_driver.py",
      "kind": "Method",
      "name": "repro_bundle"
    },
    "systems/axon/safety/validation.py::Predicate": {
      "file": "systems/axon/safety/validation.py",
      "kind": "Class",
      "name": "Predicate"
    },
    "systems/axon/safety/validation.py::CapabilityValidator": {
      "file": "systems/axon/safety/validation.py",
      "kind": "Class",
      "name": "CapabilityValidator"
    },
    "systems/axon/safety/validation.py::CapabilityValidator::validate": {
      "file": "systems/axon/safety/validation.py",
      "kind": "Method",
      "name": "validate"
    },
    "systems/axon/safety/conformal.py::ConformalPredictor": {
      "file": "systems/axon/safety/conformal.py",
      "kind": "Class",
      "name": "ConformalPredictor"
    },
    "systems/axon/safety/conformal.py::ConformalPredictor::__init__": {
      "file": "systems/axon/safety/conformal.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/safety/conformal.py::ConformalPredictor::add_residual": {
      "file": "systems/axon/safety/conformal.py",
      "kind": "Method",
      "name": "add_residual"
    },
    "systems/axon/safety/conformal.py::ConformalPredictor::is_action_safe": {
      "file": "systems/axon/safety/conformal.py",
      "kind": "Method",
      "name": "is_action_safe"
    },
    "systems/axon/safety/reflex.py::ReflexVerdict": {
      "file": "systems/axon/safety/reflex.py",
      "kind": "Class",
      "name": "ReflexVerdict"
    },
    "systems/axon/safety/reflex.py::ReflexResult": {
      "file": "systems/axon/safety/reflex.py",
      "kind": "Class",
      "name": "ReflexResult"
    },
    "systems/axon/safety/reflex.py::ReflexEngine": {
      "file": "systems/axon/safety/reflex.py",
      "kind": "Class",
      "name": "ReflexEngine"
    },
    "systems/axon/safety/reflex.py::ReflexEngine::evaluate": {
      "file": "systems/axon/safety/reflex.py",
      "kind": "Method",
      "name": "evaluate"
    },
    "systems/axon/safety/circuit_breaker.py::_Stats": {
      "file": "systems/axon/safety/circuit_breaker.py",
      "kind": "Class",
      "name": "_Stats"
    },
    "systems/axon/safety/circuit_breaker.py::CircuitBreaker": {
      "file": "systems/axon/safety/circuit_breaker.py",
      "kind": "Class",
      "name": "CircuitBreaker"
    },
    "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__": {
      "file": "systems/axon/safety/circuit_breaker.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/axon/safety/circuit_breaker.py::CircuitBreaker::_prune": {
      "file": "systems/axon/safety/circuit_breaker.py",
      "kind": "Method",
      "name": "_prune"
    },
    "systems/axon/safety/circuit_breaker.py::CircuitBreaker::is_open": {
      "file": "systems/axon/safety/circuit_breaker.py",
      "kind": "Method",
      "name": "is_open"
    },
    "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record": {
      "file": "systems/axon/safety/circuit_breaker.py",
      "kind": "Method",
      "name": "record"
    },
    "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record_success": {
      "file": "systems/axon/safety/circuit_breaker.py",
      "kind": "Method",
      "name": "record_success"
    },
    "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record_failure": {
      "file": "systems/axon/safety/circuit_breaker.py",
      "kind": "Method",
      "name": "record_failure"
    },
    "systems/axon/safety/contracts.py::_getpath": {
      "file": "systems/axon/safety/contracts.py",
      "kind": "Function",
      "name": "_getpath"
    },
    "systems/axon/safety/contracts.py::_compare": {
      "file": "systems/axon/safety/contracts.py",
      "kind": "Function",
      "name": "_compare"
    },
    "systems/axon/safety/contracts.py::verify_preconditions": {
      "file": "systems/axon/safety/contracts.py",
      "kind": "Function",
      "name": "verify_preconditions"
    },
    "systems/axon/safety/contracts.py::verify_postconditions": {
      "file": "systems/axon/safety/contracts.py",
      "kind": "Function",
      "name": "verify_postconditions"
    },
    "systems/axon/learning/feedback.py::UpliftReport": {
      "file": "systems/axon/learning/feedback.py",
      "kind": "Class",
      "name": "UpliftReport"
    },
    "systems/axon/learning/feedback.py::_calculate_diff": {
      "file": "systems/axon/learning/feedback.py",
      "kind": "Function",
      "name": "_calculate_diff"
    },
    "systems/axon/security/attestation.py::verify_driver_attestation": {
      "file": "systems/axon/security/attestation.py",
      "kind": "Function",
      "name": "verify_driver_attestation"
    },
    "systems/axon/security/attestation.py::AttestationManager": {
      "file": "systems/axon/security/attestation.py",
      "kind": "Class",
      "name": "AttestationManager"
    },
    "systems/axon/security/attestation.py::AttestationManager::bind": {
      "file": "systems/axon/security/attestation.py",
      "kind": "Method",
      "name": "bind"
    },
    "systems/axon/security/attestation.py::AttestationManager::has_binding": {
      "file": "systems/axon/security/attestation.py",
      "kind": "Method",
      "name": "has_binding"
    },
    "systems/axon/security/attestation.py::AttestationManager::get_binding": {
      "file": "systems/axon/security/attestation.py",
      "kind": "Method",
      "name": "get_binding"
    },
    "systems/axon/security/attestation.py::AttestationManager::verify_binding": {
      "file": "systems/axon/security/attestation.py",
      "kind": "Method",
      "name": "verify_binding"
    },
    "systems/axon/ab/runner.py::_mk_shadow_intent": {
      "file": "systems/axon/ab/runner.py",
      "kind": "Function",
      "name": "_mk_shadow_intent"
    },
    "systems/axon/events/builder.py::_base_event": {
      "file": "systems/axon/events/builder.py",
      "kind": "Function",
      "name": "_base_event"
    },
    "systems/axon/events/builder.py::build_followups": {
      "file": "systems/axon/events/builder.py",
      "kind": "Function",
      "name": "build_followups"
    },
    "systems/axon/events/emitter.py::emit_followups_bg": {
      "file": "systems/axon/events/emitter.py",
      "kind": "Function",
      "name": "emit_followups_bg"
    },
    "systems/contra/manifest/models.py::Assertion": {
      "file": "systems/contra/manifest/models.py",
      "kind": "Class",
      "name": "Assertion"
    },
    "systems/contra/manifest/models.py::Diagnostic": {
      "file": "systems/contra/manifest/models.py",
      "kind": "Class",
      "name": "Diagnostic"
    },
    "systems/contra/manifest/assertions.py::CheckContext": {
      "file": "systems/contra/manifest/assertions.py",
      "kind": "Class",
      "name": "CheckContext"
    },
    "systems/contra/manifest/assertions.py::CheckContext::__init__": {
      "file": "systems/contra/manifest/assertions.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/contra/manifest/assertions.py::check_alias_parity": {
      "file": "systems/contra/manifest/assertions.py",
      "kind": "Function",
      "name": "check_alias_parity"
    },
    "systems/contra/manifest/assertions.py::check_header_discipline": {
      "file": "systems/contra/manifest/assertions.py",
      "kind": "Function",
      "name": "check_header_discipline"
    },
    "systems/contra/manifest/assertions.py::check_tool_required_args": {
      "file": "systems/contra/manifest/assertions.py",
      "kind": "Function",
      "name": "check_tool_required_args"
    },
    "systems/contra/manifest/assertions.py::check_pydantic_drift": {
      "file": "systems/contra/manifest/assertions.py",
      "kind": "Function",
      "name": "check_pydantic_drift"
    },
    "systems/contra/manifest/assertions.py::check_illegal_self_edge": {
      "file": "systems/contra/manifest/assertions.py",
      "kind": "Function",
      "name": "check_illegal_self_edge"
    },
    "systems/contra/manifest/selector.py::select_pairs": {
      "file": "systems/contra/manifest/selector.py",
      "kind": "Function",
      "name": "select_pairs"
    },
    "systems/contra/manifest/autofixers.py::propose_add_alias_patch": {
      "file": "systems/contra/manifest/autofixers.py",
      "kind": "Function",
      "name": "propose_add_alias_patch"
    },
    "systems/contra/manifest/autofixers.py::propose_header_middleware_patch": {
      "file": "systems/contra/manifest/autofixers.py",
      "kind": "Function",
      "name": "propose_header_middleware_patch"
    },
    "systems/contra/manifest/autofixers.py::propose_swap_http_to_inproc": {
      "file": "systems/contra/manifest/autofixers.py",
      "kind": "Function",
      "name": "propose_swap_http_to_inproc"
    },
    "systems/contra/manifest/__init__.py::ContraConfig": {
      "file": "systems/contra/manifest/__init__.py",
      "kind": "Class",
      "name": "ContraConfig"
    },
    "systems/contra/manifest/__init__.py::_encode_gcb_spec": {
      "file": "systems/contra/manifest/__init__.py",
      "kind": "Function",
      "name": "_encode_gcb_spec"
    },
    "systems/contra/manifest/__init__.py::_targets_to_hints": {
      "file": "systems/contra/manifest/__init__.py",
      "kind": "Function",
      "name": "_targets_to_hints"
    },
    "systems/contra/manifest/__init__.py::start_contra_daemon": {
      "file": "systems/contra/manifest/__init__.py",
      "kind": "Function",
      "name": "start_contra_daemon"
    },
    "systems/evo/config.py::EvoConfig": {
      "file": "systems/evo/config.py",
      "kind": "Class",
      "name": "EvoConfig"
    },
    "systems/evo/schemas.py::ConflictKind": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "ConflictKind"
    },
    "systems/evo/schemas.py::ConflictStatus": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "ConflictStatus"
    },
    "systems/evo/schemas.py::RiskLevel": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "RiskLevel"
    },
    "systems/evo/schemas.py::DecisionConfidence": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "DecisionConfidence"
    },
    "systems/evo/schemas.py::Reproducer": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "Reproducer"
    },
    "systems/evo/schemas.py::SpecCoverage": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "SpecCoverage"
    },
    "systems/evo/schemas.py::ConflictNode": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "ConflictNode"
    },
    "systems/evo/schemas.py::Hypothesis": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "Hypothesis"
    },
    "systems/evo/schemas.py::EvidenceBundle": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "EvidenceBundle"
    },
    "systems/evo/schemas.py::Proposal": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "Proposal"
    },
    "systems/evo/schemas.py::EvolutionProposal": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "EvolutionProposal"
    },
    "systems/evo/schemas.py::ObviousnessReport": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "ObviousnessReport"
    },
    "systems/evo/schemas.py::EscalationRequest": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "EscalationRequest"
    },
    "systems/evo/schemas.py::EscalationResult": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "EscalationResult"
    },
    "systems/evo/schemas.py::ReplayCapsule": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "ReplayCapsule"
    },
    "systems/evo/schemas.py::ReplayCapsule::Inputs": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "Inputs"
    },
    "systems/evo/schemas.py::ReplayCapsule::Versions": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "Versions"
    },
    "systems/evo/schemas.py::ReplayCapsule::Artifacts": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "Artifacts"
    },
    "systems/evo/schemas.py::WhyTrace": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "WhyTrace"
    },
    "systems/evo/schemas.py::InnovationBrief": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "InnovationBrief"
    },
    "systems/evo/schemas.py::CapabilitySpec": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "CapabilitySpec"
    },
    "systems/evo/schemas.py::SkillProfile": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "SkillProfile"
    },
    "systems/evo/schemas.py::PatchCandidate": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "PatchCandidate"
    },
    "systems/evo/schemas.py::MutationRecord": {
      "file": "systems/evo/schemas.py",
      "kind": "Class",
      "name": "MutationRecord"
    },
    "systems/evo/conflicts.py::ConflictsService": {
      "file": "systems/evo/conflicts.py",
      "kind": "Class",
      "name": "ConflictsService"
    },
    "systems/evo/conflicts.py::ConflictsService::__init__": {
      "file": "systems/evo/conflicts.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/conflicts.py::ConflictsService::record_conflict": {
      "file": "systems/evo/conflicts.py",
      "kind": "Method",
      "name": "record_conflict"
    },
    "systems/evo/conflicts.py::ConflictsService::batch": {
      "file": "systems/evo/conflicts.py",
      "kind": "Method",
      "name": "batch"
    },
    "systems/evo/conflicts.py::ConflictsService::link": {
      "file": "systems/evo/conflicts.py",
      "kind": "Method",
      "name": "link"
    },
    "systems/evo/conflicts.py::ConflictsService::list_open": {
      "file": "systems/evo/conflicts.py",
      "kind": "Method",
      "name": "list_open"
    },
    "systems/evo/conflicts.py::ConflictsService::get": {
      "file": "systems/evo/conflicts.py",
      "kind": "Method",
      "name": "get"
    },
    "systems/evo/conflicts.py::ConflictsService::set_status": {
      "file": "systems/evo/conflicts.py",
      "kind": "Method",
      "name": "set_status"
    },
    "systems/evo/engine.py::EvoEngine": {
      "file": "systems/evo/engine.py",
      "kind": "Class",
      "name": "EvoEngine"
    },
    "systems/evo/engine.py::EvoEngine::__init__": {
      "file": "systems/evo/engine.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/engine.py::EvoEngine::intake_conflicts": {
      "file": "systems/evo/engine.py",
      "kind": "Method",
      "name": "intake_conflicts"
    },
    "systems/evo/engine.py::EvoEngine::_make_brief": {
      "file": "systems/evo/engine.py",
      "kind": "Method",
      "name": "_make_brief"
    },
    "systems/evo/engine.py::EvoEngine::_format_attention_bid_event": {
      "file": "systems/evo/engine.py",
      "kind": "Method",
      "name": "_format_attention_bid_event"
    },
    "systems/evo/runtime.py::get_engine": {
      "file": "systems/evo/runtime.py",
      "kind": "Function",
      "name": "get_engine"
    },
    "systems/evo/hypotheses/factory.py::HypothesisFactory": {
      "file": "systems/evo/hypotheses/factory.py",
      "kind": "Class",
      "name": "HypothesisFactory"
    },
    "systems/evo/hypotheses/factory.py::HypothesisFactory::for_conflict": {
      "file": "systems/evo/hypotheses/factory.py",
      "kind": "Method",
      "name": "for_conflict"
    },
    "systems/evo/hypotheses/factory.py::HypothesisService": {
      "file": "systems/evo/hypotheses/factory.py",
      "kind": "Class",
      "name": "HypothesisService"
    },
    "systems/evo/hypotheses/factory.py::HypothesisService::__init__": {
      "file": "systems/evo/hypotheses/factory.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/hypotheses/factory.py::HypothesisService::spawn": {
      "file": "systems/evo/hypotheses/factory.py",
      "kind": "Method",
      "name": "spawn"
    },
    "systems/evo/evidence/collector.py::EvidenceOrchestrator": {
      "file": "systems/evo/evidence/collector.py",
      "kind": "Class",
      "name": "EvidenceOrchestrator"
    },
    "systems/evo/evidence/collector.py::EvidenceOrchestrator::__init__": {
      "file": "systems/evo/evidence/collector.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/evidence/collector.py::EvidenceOrchestrator::plan_suite": {
      "file": "systems/evo/evidence/collector.py",
      "kind": "Method",
      "name": "plan_suite"
    },
    "systems/evo/evidence/collector.py::EvidenceOrchestrator::request": {
      "file": "systems/evo/evidence/collector.py",
      "kind": "Method",
      "name": "request"
    },
    "systems/evo/evidence/collector.py::EvidenceOrchestrator::collect": {
      "file": "systems/evo/evidence/collector.py",
      "kind": "Method",
      "name": "collect"
    },
    "systems/evo/evidence/collector.py::EvidenceOrchestrator::attach_replay_capsule": {
      "file": "systems/evo/evidence/collector.py",
      "kind": "Method",
      "name": "attach_replay_capsule"
    },
    "systems/evo/evidence/modalities.py::EvidenceModality": {
      "file": "systems/evo/evidence/modalities.py",
      "kind": "Class",
      "name": "EvidenceModality"
    },
    "systems/evo/evidence/modalities.py::DiffRiskModality": {
      "file": "systems/evo/evidence/modalities.py",
      "kind": "Class",
      "name": "DiffRiskModality"
    },
    "systems/evo/evidence/modalities.py::InvariantsCheckModality": {
      "file": "systems/evo/evidence/modalities.py",
      "kind": "Class",
      "name": "InvariantsCheckModality"
    },
    "systems/evo/evidence/modalities.py::ForecastBacktestModality": {
      "file": "systems/evo/evidence/modalities.py",
      "kind": "Class",
      "name": "ForecastBacktestModality"
    },
    "systems/evo/proposals/assembler.py::ProposalAssembler": {
      "file": "systems/evo/proposals/assembler.py",
      "kind": "Class",
      "name": "ProposalAssembler"
    },
    "systems/evo/proposals/assembler.py::ProposalAssembler::__init__": {
      "file": "systems/evo/proposals/assembler.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/proposals/assembler.py::ProposalAssembler::assemble": {
      "file": "systems/evo/proposals/assembler.py",
      "kind": "Method",
      "name": "assemble"
    },
    "systems/evo/proposals/assembler.py::ProposalAssembler::validate_completeness": {
      "file": "systems/evo/proposals/assembler.py",
      "kind": "Method",
      "name": "validate_completeness"
    },
    "systems/evo/proposals/assembler.py::ProposalAssembler::get": {
      "file": "systems/evo/proposals/assembler.py",
      "kind": "Method",
      "name": "get"
    },
    "systems/evo/proposals/assembler.py::ProposalAssembler::handover": {
      "file": "systems/evo/proposals/assembler.py",
      "kind": "Method",
      "name": "handover"
    },
    "systems/evo/proposals/assembler.py::ProposalAssembler::_score_risk": {
      "file": "systems/evo/proposals/assembler.py",
      "kind": "Method",
      "name": "_score_risk"
    },
    "systems/evo/proposals/review.py::ProposalReview": {
      "file": "systems/evo/proposals/review.py",
      "kind": "Class",
      "name": "ProposalReview"
    },
    "systems/evo/proposals/review.py::ProposalReview::__init__": {
      "file": "systems/evo/proposals/review.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/proposals/review.py::ProposalReview::review": {
      "file": "systems/evo/proposals/review.py",
      "kind": "Method",
      "name": "review"
    },
    "systems/evo/replay/metrics.py::EvoTelemetry": {
      "file": "systems/evo/replay/metrics.py",
      "kind": "Class",
      "name": "EvoTelemetry"
    },
    "systems/evo/replay/metrics.py::EvoTelemetry::record_event": {
      "file": "systems/evo/replay/metrics.py",
      "kind": "Method",
      "name": "record_event"
    },
    "systems/evo/replay/metrics.py::EvoTelemetry::proposal_emitted": {
      "file": "systems/evo/replay/metrics.py",
      "kind": "Method",
      "name": "proposal_emitted"
    },
    "systems/evo/replay/metrics.py::EvoTelemetry::replay_verified": {
      "file": "systems/evo/replay/metrics.py",
      "kind": "Method",
      "name": "replay_verified"
    },
    "systems/evo/replay/manager.py::ReplayCapsuleManager": {
      "file": "systems/evo/replay/manager.py",
      "kind": "Class",
      "name": "ReplayCapsuleManager"
    },
    "systems/evo/replay/manager.py::ReplayCapsuleManager::__init__": {
      "file": "systems/evo/replay/manager.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/replay/manager.py::ReplayCapsuleManager::add": {
      "file": "systems/evo/replay/manager.py",
      "kind": "Method",
      "name": "add"
    },
    "systems/evo/replay/manager.py::ReplayCapsuleManager::manifest": {
      "file": "systems/evo/replay/manager.py",
      "kind": "Method",
      "name": "manifest"
    },
    "systems/evo/replay/manager.py::ReplayCapsuleManager::verify": {
      "file": "systems/evo/replay/manager.py",
      "kind": "Method",
      "name": "verify"
    },
    "systems/evo/replay/builder.py::_stable_barcode": {
      "file": "systems/evo/replay/builder.py",
      "kind": "Function",
      "name": "_stable_barcode"
    },
    "systems/evo/replay/builder.py::ReplayCapsuleBuilder": {
      "file": "systems/evo/replay/builder.py",
      "kind": "Class",
      "name": "ReplayCapsuleBuilder"
    },
    "systems/evo/replay/builder.py::ReplayCapsuleBuilder::__init__": {
      "file": "systems/evo/replay/builder.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/replay/builder.py::ReplayCapsuleBuilder::build": {
      "file": "systems/evo/replay/builder.py",
      "kind": "Method",
      "name": "build"
    },
    "systems/evo/telemetry/metrics.py::EvoTelemetry": {
      "file": "systems/evo/telemetry/metrics.py",
      "kind": "Class",
      "name": "EvoTelemetry"
    },
    "systems/evo/telemetry/metrics.py::EvoTelemetry::record_event": {
      "file": "systems/evo/telemetry/metrics.py",
      "kind": "Method",
      "name": "record_event"
    },
    "systems/evo/telemetry/metrics.py::EvoTelemetry::proposal_emitted": {
      "file": "systems/evo/telemetry/metrics.py",
      "kind": "Method",
      "name": "proposal_emitted"
    },
    "systems/evo/telemetry/metrics.py::EvoTelemetry::replay_verified": {
      "file": "systems/evo/telemetry/metrics.py",
      "kind": "Method",
      "name": "replay_verified"
    },
    "systems/evo/gates/obviousness.py::ObviousnessGate": {
      "file": "systems/evo/gates/obviousness.py",
      "kind": "Class",
      "name": "ObviousnessGate"
    },
    "systems/evo/gates/obviousness.py::ObviousnessGate::__init__": {
      "file": "systems/evo/gates/obviousness.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/gates/obviousness.py::ObviousnessGate::score": {
      "file": "systems/evo/gates/obviousness.py",
      "kind": "Method",
      "name": "score"
    },
    "systems/evo/gates/obviousness.py::ObviousnessGate::_per_conflict_features": {
      "file": "systems/evo/gates/obviousness.py",
      "kind": "Method",
      "name": "_per_conflict_features"
    },
    "systems/evo/gates/obviousness.py::ObviousnessGate::_combine": {
      "file": "systems/evo/gates/obviousness.py",
      "kind": "Method",
      "name": "_combine"
    },
    "systems/evo/clients/nova_client.py::NovaClient": {
      "file": "systems/evo/clients/nova_client.py",
      "kind": "Class",
      "name": "NovaClient"
    },
    "systems/evo/clients/atune_client.py::_hash16": {
      "file": "systems/evo/clients/atune_client.py",
      "kind": "Function",
      "name": "_hash16"
    },
    "systems/evo/clients/atune_client.py::AtuneClient": {
      "file": "systems/evo/clients/atune_client.py",
      "kind": "Class",
      "name": "AtuneClient"
    },
    "systems/evo/clients/synapse_client.py::SynapseClient": {
      "file": "systems/evo/clients/synapse_client.py",
      "kind": "Class",
      "name": "SynapseClient"
    },
    "systems/evo/clients/simula_client.py::SimulaClient": {
      "file": "systems/evo/clients/simula_client.py",
      "kind": "Class",
      "name": "SimulaClient"
    },
    "systems/evo/scorecards/exporter.py::_h": {
      "file": "systems/evo/scorecards/exporter.py",
      "kind": "Function",
      "name": "_h"
    },
    "systems/evo/scorecards/exporter.py::ScorecardExporter": {
      "file": "systems/evo/scorecards/exporter.py",
      "kind": "Class",
      "name": "ScorecardExporter"
    },
    "systems/evo/scorecards/exporter.py::ScorecardExporter::build": {
      "file": "systems/evo/scorecards/exporter.py",
      "kind": "Method",
      "name": "build"
    },
    "systems/evo/repair/tracker.py::RepairTicket": {
      "file": "systems/evo/repair/tracker.py",
      "kind": "Class",
      "name": "RepairTicket"
    },
    "systems/evo/repair/tracker.py::RepairTracker": {
      "file": "systems/evo/repair/tracker.py",
      "kind": "Class",
      "name": "RepairTracker"
    },
    "systems/evo/repair/tracker.py::RepairTracker::__init__": {
      "file": "systems/evo/repair/tracker.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/repair/tracker.py::RepairTracker::record": {
      "file": "systems/evo/repair/tracker.py",
      "kind": "Method",
      "name": "record"
    },
    "systems/evo/repair/tracker.py::RepairTracker::update": {
      "file": "systems/evo/repair/tracker.py",
      "kind": "Method",
      "name": "update"
    },
    "systems/evo/repair/tracker.py::RepairTracker::get": {
      "file": "systems/evo/repair/tracker.py",
      "kind": "Method",
      "name": "get"
    },
    "systems/evo/repair/tracker.py::RepairTracker::list": {
      "file": "systems/evo/repair/tracker.py",
      "kind": "Method",
      "name": "list"
    },
    "systems/evo/briefs/innovation.py::build_innovation_brief": {
      "file": "systems/evo/briefs/innovation.py",
      "kind": "Function",
      "name": "build_innovation_brief"
    },
    "systems/evo/assemble/assembler.py::ProposalAssembler": {
      "file": "systems/evo/assemble/assembler.py",
      "kind": "Class",
      "name": "ProposalAssembler"
    },
    "systems/evo/assemble/assembler.py::ProposalAssembler::__init__": {
      "file": "systems/evo/assemble/assembler.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/assemble/assembler.py::ProposalAssembler::assemble": {
      "file": "systems/evo/assemble/assembler.py",
      "kind": "Method",
      "name": "assemble"
    },
    "systems/evo/assemble/assembler.py::ProposalAssembler::validate_completeness": {
      "file": "systems/evo/assemble/assembler.py",
      "kind": "Method",
      "name": "validate_completeness"
    },
    "systems/evo/assemble/assembler.py::ProposalAssembler::get": {
      "file": "systems/evo/assemble/assembler.py",
      "kind": "Method",
      "name": "get"
    },
    "systems/evo/assemble/assembler.py::ProposalAssembler::handover": {
      "file": "systems/evo/assemble/assembler.py",
      "kind": "Method",
      "name": "handover"
    },
    "systems/evo/conflicts/store.py::ConflictStore": {
      "file": "systems/evo/conflicts/store.py",
      "kind": "Class",
      "name": "ConflictStore"
    },
    "systems/evo/conflicts/store.py::ConflictStore::__init__": {
      "file": "systems/evo/conflicts/store.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/conflicts/store.py::ConflictStore::record_conflict": {
      "file": "systems/evo/conflicts/store.py",
      "kind": "Method",
      "name": "record_conflict"
    },
    "systems/evo/conflicts/store.py::ConflictStore::intake_conflicts": {
      "file": "systems/evo/conflicts/store.py",
      "kind": "Method",
      "name": "intake_conflicts"
    },
    "systems/evo/conflicts/store.py::ConflictStore::get": {
      "file": "systems/evo/conflicts/store.py",
      "kind": "Method",
      "name": "get"
    },
    "systems/evo/conflicts/store.py::ConflictStore::list_open": {
      "file": "systems/evo/conflicts/store.py",
      "kind": "Method",
      "name": "list_open"
    },
    "systems/evo/spec/deriver.py::SpecDeriver": {
      "file": "systems/evo/spec/deriver.py",
      "kind": "Class",
      "name": "SpecDeriver"
    },
    "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations": {
      "file": "systems/evo/spec/deriver.py",
      "kind": "Method",
      "name": "derive_obligations"
    },
    "systems/evo/spec/deriver.py::SpecDeriver::derive_rollback": {
      "file": "systems/evo/spec/deriver.py",
      "kind": "Method",
      "name": "derive_rollback"
    },
    "systems/evo/spec/deriver.py::SpecDeriver::impact_table": {
      "file": "systems/evo/spec/deriver.py",
      "kind": "Method",
      "name": "impact_table"
    },
    "systems/evo/spec/validators.py::SpecValidators": {
      "file": "systems/evo/spec/validators.py",
      "kind": "Class",
      "name": "SpecValidators"
    },
    "systems/evo/spec/validators.py::SpecValidators::check_obligation_presence": {
      "file": "systems/evo/spec/validators.py",
      "kind": "Method",
      "name": "check_obligation_presence"
    },
    "systems/evo/spec/validators.py::SpecValidators::check_rollback_contract": {
      "file": "systems/evo/spec/validators.py",
      "kind": "Method",
      "name": "check_rollback_contract"
    },
    "systems/evo/journal/ledger.py::_neo_safe_exc": {
      "file": "systems/evo/journal/ledger.py",
      "kind": "Function",
      "name": "_neo_safe_exc"
    },
    "systems/evo/journal/ledger.py::EvoLedger": {
      "file": "systems/evo/journal/ledger.py",
      "kind": "Class",
      "name": "EvoLedger"
    },
    "systems/evo/routing/payloads.py::TargetHint": {
      "file": "systems/evo/routing/payloads.py",
      "kind": "Class",
      "name": "TargetHint"
    },
    "systems/evo/routing/payloads.py::SimulaCodegenRequest": {
      "file": "systems/evo/routing/payloads.py",
      "kind": "Class",
      "name": "SimulaCodegenRequest"
    },
    "systems/evo/routing/payloads.py::EquorAttestation": {
      "file": "systems/evo/routing/payloads.py",
      "kind": "Class",
      "name": "EquorAttestation"
    },
    "systems/evo/routing/payloads.py::RoutingError": {
      "file": "systems/evo/routing/payloads.py",
      "kind": "Class",
      "name": "RoutingError"
    },
    "systems/evo/routing/payloads.py::RoutingError::__init__": {
      "file": "systems/evo/routing/payloads.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/routing/payloads.py::AtuneDeliberationRequest": {
      "file": "systems/evo/routing/payloads.py",
      "kind": "Class",
      "name": "AtuneDeliberationRequest"
    },
    "systems/evo/routing/payloads.py::AtuneAttentionBid": {
      "file": "systems/evo/routing/payloads.py",
      "kind": "Class",
      "name": "AtuneAttentionBid"
    },
    "systems/evo/routing/router.py::RouterService": {
      "file": "systems/evo/routing/router.py",
      "kind": "Class",
      "name": "RouterService"
    },
    "systems/evo/dialectics/tension_miner.py::TensionMiner": {
      "file": "systems/evo/dialectics/tension_miner.py",
      "kind": "Class",
      "name": "TensionMiner"
    },
    "systems/evo/graphs/genome_map.py::GenomeMapper": {
      "file": "systems/evo/graphs/genome_map.py",
      "kind": "Class",
      "name": "GenomeMapper"
    },
    "systems/evo/graphs/genome_map.py::GenomeMapper::scan_repo": {
      "file": "systems/evo/graphs/genome_map.py",
      "kind": "Method",
      "name": "scan_repo"
    },
    "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics": {
      "file": "systems/evo/graphs/genome_map.py",
      "kind": "Method",
      "name": "_file_metrics"
    },
    "systems/evo/counterexamples/distiller.py::CounterexampleDistiller": {
      "file": "systems/evo/counterexamples/distiller.py",
      "kind": "Class",
      "name": "CounterexampleDistiller"
    },
    "systems/evo/counterexamples/distiller.py::CounterexampleDistiller::distill": {
      "file": "systems/evo/counterexamples/distiller.py",
      "kind": "Method",
      "name": "distill"
    },
    "systems/evo/policies/sentinel.py::PolicySentinel": {
      "file": "systems/evo/policies/sentinel.py",
      "kind": "Class",
      "name": "PolicySentinel"
    },
    "systems/evo/policies/sentinel.py::PolicySentinel::__init__": {
      "file": "systems/evo/policies/sentinel.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/evo/metrics/harvesters.py::_ms": {
      "file": "systems/evo/metrics/harvesters.py",
      "kind": "Function",
      "name": "_ms"
    },
    "systems/evo/metrics/harvesters.py::_avg": {
      "file": "systems/evo/metrics/harvesters.py",
      "kind": "Function",
      "name": "_avg"
    },
    "systems/evo/metrics/harvesters.py::_get_score": {
      "file": "systems/evo/metrics/harvesters.py",
      "kind": "Function",
      "name": "_get_score"
    },
    "systems/evo/metrics/harvesters.py::build_nova_metrics": {
      "file": "systems/evo/metrics/harvesters.py",
      "kind": "Function",
      "name": "build_nova_metrics"
    },
    "systems/evo/metrics/harvesters.py::derive_eval_metrics": {
      "file": "systems/evo/metrics/harvesters.py",
      "kind": "Function",
      "name": "derive_eval_metrics"
    },
    "systems/evo/metrics/harvesters.py::merge_metrics": {
      "file": "systems/evo/metrics/harvesters.py",
      "kind": "Function",
      "name": "merge_metrics"
    },
    "systems/nova/schemas.py::InnovationBrief": {
      "file": "systems/nova/schemas.py",
      "kind": "Class",
      "name": "InnovationBrief"
    },
    "systems/nova/schemas.py::InventionArtifact": {
      "file": "systems/nova/schemas.py",
      "kind": "Class",
      "name": "InventionArtifact"
    },
    "systems/nova/schemas.py::InventionCandidate": {
      "file": "systems/nova/schemas.py",
      "kind": "Class",
      "name": "InventionCandidate"
    },
    "systems/nova/schemas.py::DesignCapsule": {
      "file": "systems/nova/schemas.py",
      "kind": "Class",
      "name": "DesignCapsule"
    },
    "systems/nova/schemas.py::AuctionResult": {
      "file": "systems/nova/schemas.py",
      "kind": "Class",
      "name": "AuctionResult"
    },
    "systems/nova/schemas.py::RolloutRequest": {
      "file": "systems/nova/schemas.py",
      "kind": "Class",
      "name": "RolloutRequest"
    },
    "systems/nova/schemas.py::RolloutResult": {
      "file": "systems/nova/schemas.py",
      "kind": "Class",
      "name": "RolloutResult"
    },
    "systems/nova/ledger/ledger.py::_barcode": {
      "file": "systems/nova/ledger/ledger.py",
      "kind": "Function",
      "name": "_barcode"
    },
    "systems/nova/ledger/ledger.py::_as_dict": {
      "file": "systems/nova/ledger/ledger.py",
      "kind": "Function",
      "name": "_as_dict"
    },
    "systems/nova/ledger/ledger.py::NovaLedger": {
      "file": "systems/nova/ledger/ledger.py",
      "kind": "Class",
      "name": "NovaLedger"
    },
    "systems/nova/ledger/ledger.py::NovaLedger::__init__": {
      "file": "systems/nova/ledger/ledger.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/nova/runners/playbook_runner.py::PlaybookRunner": {
      "file": "systems/nova/runners/playbook_runner.py",
      "kind": "Class",
      "name": "PlaybookRunner"
    },
    "systems/nova/runners/playbook_runner.py::PlaybookRunner::__init__": {
      "file": "systems/nova/runners/playbook_runner.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/nova/runners/playbook_runner.py::PlaybookRunner::_refresh_registry": {
      "file": "systems/nova/runners/playbook_runner.py",
      "kind": "Method",
      "name": "_refresh_registry"
    },
    "systems/nova/runners/eval_runner.py::EvalRunner": {
      "file": "systems/nova/runners/eval_runner.py",
      "kind": "Class",
      "name": "EvalRunner"
    },
    "systems/nova/runners/auction_client.py::_value": {
      "file": "systems/nova/runners/auction_client.py",
      "kind": "Function",
      "name": "_value"
    },
    "systems/nova/runners/auction_client.py::_receipt_hash": {
      "file": "systems/nova/runners/auction_client.py",
      "kind": "Function",
      "name": "_receipt_hash"
    },
    "systems/nova/runners/auction_client.py::AuctionClient": {
      "file": "systems/nova/runners/auction_client.py",
      "kind": "Class",
      "name": "AuctionClient"
    },
    "systems/nova/runners/rollout_client.py::RolloutClient": {
      "file": "systems/nova/runners/rollout_client.py",
      "kind": "Class",
      "name": "RolloutClient"
    },
    "systems/nova/runners/interpreter.py::Step": {
      "file": "systems/nova/runners/interpreter.py",
      "kind": "Class",
      "name": "Step"
    },
    "systems/nova/runners/interpreter.py::Plan": {
      "file": "systems/nova/runners/interpreter.py",
      "kind": "Class",
      "name": "Plan"
    },
    "systems/nova/runners/interpreter.py::MechanismInterpreter": {
      "file": "systems/nova/runners/interpreter.py",
      "kind": "Class",
      "name": "MechanismInterpreter"
    },
    "systems/nova/runners/interpreter.py::MechanismInterpreter::compile": {
      "file": "systems/nova/runners/interpreter.py",
      "kind": "Method",
      "name": "compile"
    },
    "systems/nova/runners/interpreter.py::MechanismInterpreter::simulate": {
      "file": "systems/nova/runners/interpreter.py",
      "kind": "Method",
      "name": "simulate"
    },
    "systems/nova/runners/patch_handoff.py::PatchHandoff": {
      "file": "systems/nova/runners/patch_handoff.py",
      "kind": "Class",
      "name": "PatchHandoff"
    },
    "systems/nova/runners/patch_handoff.py::PatchHandoff::__init__": {
      "file": "systems/nova/runners/patch_handoff.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/nova/runners/patch_handoff.py::PatchHandoff::to_brief": {
      "file": "systems/nova/runners/patch_handoff.py",
      "kind": "Method",
      "name": "to_brief"
    },
    "systems/nova/runners/meta_playbook.py::MetaPlaybookComposer": {
      "file": "systems/nova/runners/meta_playbook.py",
      "kind": "Class",
      "name": "MetaPlaybookComposer"
    },
    "systems/nova/runners/portfolio_runner.py::PortfolioRunner": {
      "file": "systems/nova/runners/portfolio_runner.py",
      "kind": "Class",
      "name": "PortfolioRunner"
    },
    "systems/nova/runners/portfolio_runner.py::PortfolioRunner::__init__": {
      "file": "systems/nova/runners/portfolio_runner.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/nova/dsl/specs.py::MechanismOp": {
      "file": "systems/nova/dsl/specs.py",
      "kind": "Class",
      "name": "MechanismOp"
    },
    "systems/nova/dsl/specs.py::MechanismSpec": {
      "file": "systems/nova/dsl/specs.py",
      "kind": "Class",
      "name": "MechanismSpec"
    },
    "systems/nova/dsl/specs.py::CapabilitySpec": {
      "file": "systems/nova/dsl/specs.py",
      "kind": "Class",
      "name": "CapabilitySpec"
    },
    "systems/nova/dsl/specs.py::ProofSpec": {
      "file": "systems/nova/dsl/specs.py",
      "kind": "Class",
      "name": "ProofSpec"
    },
    "systems/nova/dsl/interpreter.py::Step": {
      "file": "systems/nova/dsl/interpreter.py",
      "kind": "Class",
      "name": "Step"
    },
    "systems/nova/dsl/interpreter.py::Plan": {
      "file": "systems/nova/dsl/interpreter.py",
      "kind": "Class",
      "name": "Plan"
    },
    "systems/nova/dsl/interpreter.py::MechanismInterpreter": {
      "file": "systems/nova/dsl/interpreter.py",
      "kind": "Class",
      "name": "MechanismInterpreter"
    },
    "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile": {
      "file": "systems/nova/dsl/interpreter.py",
      "kind": "Method",
      "name": "compile"
    },
    "systems/nova/dsl/interpreter.py::MechanismInterpreter::simulate": {
      "file": "systems/nova/dsl/interpreter.py",
      "kind": "Method",
      "name": "simulate"
    },
    "systems/nova/dsl/lint.py::LintIssue": {
      "file": "systems/nova/dsl/lint.py",
      "kind": "Class",
      "name": "LintIssue"
    },
    "systems/nova/dsl/lint.py::_has_cycle": {
      "file": "systems/nova/dsl/lint.py",
      "kind": "Function",
      "name": "_has_cycle"
    },
    "systems/nova/dsl/lint.py::lint_mechanism": {
      "file": "systems/nova/dsl/lint.py",
      "kind": "Function",
      "name": "lint_mechanism"
    },
    "systems/nova/dsl/mutate.py::_is_number": {
      "file": "systems/nova/dsl/mutate.py",
      "kind": "Function",
      "name": "_is_number"
    },
    "systems/nova/dsl/mutate.py::_jiggle_number": {
      "file": "systems/nova/dsl/mutate.py",
      "kind": "Function",
      "name": "_jiggle_number"
    },
    "systems/nova/dsl/mutate.py::_clone_mech": {
      "file": "systems/nova/dsl/mutate.py",
      "kind": "Function",
      "name": "_clone_mech"
    },
    "systems/nova/dsl/mutate.py::MechanismMutator": {
      "file": "systems/nova/dsl/mutate.py",
      "kind": "Class",
      "name": "MechanismMutator"
    },
    "systems/nova/dsl/mutate.py::MechanismMutator::_jiggle_params": {
      "file": "systems/nova/dsl/mutate.py",
      "kind": "Method",
      "name": "_jiggle_params"
    },
    "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_batch_after_first": {
      "file": "systems/nova/dsl/mutate.py",
      "kind": "Method",
      "name": "_ensure_batch_after_first"
    },
    "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix": {
      "file": "systems/nova/dsl/mutate.py",
      "kind": "Method",
      "name": "_ensure_critique_repair_suffix"
    },
    "systems/nova/dsl/mutate.py::MechanismMutator::mutate_mechanism": {
      "file": "systems/nova/dsl/mutate.py",
      "kind": "Method",
      "name": "mutate_mechanism"
    },
    "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate": {
      "file": "systems/nova/dsl/mutate.py",
      "kind": "Method",
      "name": "augment_candidate"
    },
    "systems/nova/playbooks/qdelites.py::QDElitesPlaybook": {
      "file": "systems/nova/playbooks/qdelites.py",
      "kind": "Class",
      "name": "QDElitesPlaybook"
    },
    "systems/nova/playbooks/tot_mcts.py::ToTMCTSPlaybook": {
      "file": "systems/nova/playbooks/tot_mcts.py",
      "kind": "Class",
      "name": "ToTMCTSPlaybook"
    },
    "systems/nova/playbooks/dreamcoder_lib.py::DreamCoderLibraryPlaybook": {
      "file": "systems/nova/playbooks/dreamcoder_lib.py",
      "kind": "Class",
      "name": "DreamCoderLibraryPlaybook"
    },
    "systems/nova/playbooks/registry.py::BasePlaybook": {
      "file": "systems/nova/playbooks/registry.py",
      "kind": "Class",
      "name": "BasePlaybook"
    },
    "systems/nova/playbooks/hotreload.py::PlaybookHotReloader": {
      "file": "systems/nova/playbooks/hotreload.py",
      "kind": "Class",
      "name": "PlaybookHotReloader"
    },
    "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::__init__": {
      "file": "systems/nova/playbooks/hotreload.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::_iter_modules": {
      "file": "systems/nova/playbooks/hotreload.py",
      "kind": "Method",
      "name": "_iter_modules"
    },
    "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::check_reload": {
      "file": "systems/nova/playbooks/hotreload.py",
      "kind": "Method",
      "name": "check_reload"
    },
    "systems/nova/proof/pcc.py::ProofResult": {
      "file": "systems/nova/proof/pcc.py",
      "kind": "Class",
      "name": "ProofResult"
    },
    "systems/nova/proof/pcc.py::ProofVM": {
      "file": "systems/nova/proof/pcc.py",
      "kind": "Class",
      "name": "ProofVM"
    },
    "systems/nova/proof/pcc.py::ProofVM::__get_pydantic_core_schema__": {
      "file": "systems/nova/proof/pcc.py",
      "kind": "Method",
      "name": "__get_pydantic_core_schema__"
    },
    "systems/nova/proof/pcc.py::ProofVM::_validate": {
      "file": "systems/nova/proof/pcc.py",
      "kind": "Method",
      "name": "_validate"
    },
    "systems/nova/proof/pcc.py::ProofVM::check": {
      "file": "systems/nova/proof/pcc.py",
      "kind": "Method",
      "name": "check"
    },
    "systems/nova/proof/pcc_ext.py::ProofVMExt": {
      "file": "systems/nova/proof/pcc_ext.py",
      "kind": "Class",
      "name": "ProofVMExt"
    },
    "systems/nova/proof/pcc_ext.py::ProofVMExt::base": {
      "file": "systems/nova/proof/pcc_ext.py",
      "kind": "Method",
      "name": "base"
    },
    "systems/nova/proof/pcc_ext.py::ProofVMExt::check": {
      "file": "systems/nova/proof/pcc_ext.py",
      "kind": "Method",
      "name": "check"
    },
    "systems/nova/proof/pyd_types.py::_vm_serialize": {
      "file": "systems/nova/proof/pyd_types.py",
      "kind": "Function",
      "name": "_vm_serialize"
    },
    "systems/nova/types/patch.py::SimulaPatchBrief": {
      "file": "systems/nova/types/patch.py",
      "kind": "Class",
      "name": "SimulaPatchBrief"
    },
    "systems/nova/types/patch.py::SimulaPatchTicket": {
      "file": "systems/nova/types/patch.py",
      "kind": "Class",
      "name": "SimulaPatchTicket"
    },
    "systems/nova/clients/simula_client.py::_as_dict": {
      "file": "systems/nova/clients/simula_client.py",
      "kind": "Function",
      "name": "_as_dict"
    },
    "systems/nova/clients/simula_client.py::_resolve": {
      "file": "systems/nova/clients/simula_client.py",
      "kind": "Function",
      "name": "_resolve"
    },
    "systems/nova/clients/simula_client.py::SimulaClient": {
      "file": "systems/nova/clients/simula_client.py",
      "kind": "Class",
      "name": "SimulaClient"
    },
    "systems/nova/clients/synapse_client.py::SynapseBudgetClient": {
      "file": "systems/nova/clients/synapse_client.py",
      "kind": "Class",
      "name": "SynapseBudgetClient"
    },
    "systems/nova/clients/synapse_client.py::SynapseBudgetClient::__init__": {
      "file": "systems/nova/clients/synapse_client.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/nova/clients/equor_client.py::EquorPolicyClient": {
      "file": "systems/nova/clients/equor_client.py",
      "kind": "Class",
      "name": "EquorPolicyClient"
    },
    "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline": {
      "file": "systems/nova/pipelines/winner_pipeline.py",
      "kind": "Class",
      "name": "WinnerPipeline"
    },
    "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::__init__": {
      "file": "systems/nova/pipelines/winner_pipeline.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::_pick_winners": {
      "file": "systems/nova/pipelines/winner_pipeline.py",
      "kind": "Method",
      "name": "_pick_winners"
    },
    "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::_build_simula_patch_brief": {
      "file": "systems/nova/pipelines/winner_pipeline.py",
      "kind": "Method",
      "name": "_build_simula_patch_brief"
    },
    "systems/nova/insights/self_model.py::ArmStats": {
      "file": "systems/nova/insights/self_model.py",
      "kind": "Class",
      "name": "ArmStats"
    },
    "systems/nova/insights/self_model.py::_h16": {
      "file": "systems/nova/insights/self_model.py",
      "kind": "Function",
      "name": "_h16"
    },
    "systems/nova/insights/self_model.py::NovaSelfModel": {
      "file": "systems/nova/insights/self_model.py",
      "kind": "Class",
      "name": "NovaSelfModel"
    },
    "systems/nova/insights/self_model.py::NovaSelfModel::__init__": {
      "file": "systems/nova/insights/self_model.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/nova/insights/self_model.py::NovaSelfModel::_sig": {
      "file": "systems/nova/insights/self_model.py",
      "kind": "Method",
      "name": "_sig"
    },
    "systems/nova/insights/self_model.py::NovaSelfModel::update": {
      "file": "systems/nova/insights/self_model.py",
      "kind": "Method",
      "name": "update"
    },
    "systems/nova/insights/self_model.py::NovaSelfModel::priors": {
      "file": "systems/nova/insights/self_model.py",
      "kind": "Method",
      "name": "priors"
    },
    "systems/nova/insights/self_model_store.py::SelfModelStore": {
      "file": "systems/nova/insights/self_model_store.py",
      "kind": "Class",
      "name": "SelfModelStore"
    },
    "systems/nova/insights/self_model_store.py::SelfModelStore::__init__": {
      "file": "systems/nova/insights/self_model_store.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/nova/insights/self_model_store.py::SelfModelStore::_decay": {
      "file": "systems/nova/insights/self_model_store.py",
      "kind": "Method",
      "name": "_decay"
    },
    "systems/nova/insights/self_model_store.py::SelfModelStore::load": {
      "file": "systems/nova/insights/self_model_store.py",
      "kind": "Method",
      "name": "load"
    },
    "systems/nova/insights/self_model_store.py::SelfModelStore::save": {
      "file": "systems/nova/insights/self_model_store.py",
      "kind": "Method",
      "name": "save"
    },
    "systems/nova/novelty/reservoir.py::_barcode": {
      "file": "systems/nova/novelty/reservoir.py",
      "kind": "Function",
      "name": "_barcode"
    },
    "systems/nova/novelty/reservoir.py::NoveltyReservoir": {
      "file": "systems/nova/novelty/reservoir.py",
      "kind": "Class",
      "name": "NoveltyReservoir"
    },
    "systems/nova/novelty/reservoir.py::NoveltyReservoir::__init__": {
      "file": "systems/nova/novelty/reservoir.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/nova/novelty/reservoir.py::NoveltyReservoir::key": {
      "file": "systems/nova/novelty/reservoir.py",
      "kind": "Method",
      "name": "key"
    },
    "systems/nova/novelty/reservoir.py::NoveltyReservoir::accept": {
      "file": "systems/nova/novelty/reservoir.py",
      "kind": "Method",
      "name": "accept"
    },
    "systems/nova/novelty/reservoir.py::NoveltyReservoir::filter_portfolio": {
      "file": "systems/nova/novelty/reservoir.py",
      "kind": "Method",
      "name": "filter_portfolio"
    },
    "systems/nova/memory/qora_bridge.py::QoraBridge": {
      "file": "systems/nova/memory/qora_bridge.py",
      "kind": "Class",
      "name": "QoraBridge"
    },
    "systems/nova/hyper/hyperengine.py::NovaHyperEngine": {
      "file": "systems/nova/hyper/hyperengine.py",
      "kind": "Class",
      "name": "NovaHyperEngine"
    },
    "systems/nova/eval/cost.py::estimate_cost_ms": {
      "file": "systems/nova/eval/cost.py",
      "kind": "Function",
      "name": "estimate_cost_ms"
    },
    "systems/nova/eval/metrics.py::_clamp": {
      "file": "systems/nova/eval/metrics.py",
      "kind": "Function",
      "name": "_clamp"
    },
    "systems/nova/eval/metrics.py::mechanism_complexity": {
      "file": "systems/nova/eval/metrics.py",
      "kind": "Function",
      "name": "mechanism_complexity"
    },
    "systems/nova/eval/metrics.py::risk_hint": {
      "file": "systems/nova/eval/metrics.py",
      "kind": "Function",
      "name": "risk_hint"
    },
    "systems/nova/eval/metrics.py::fae_composite": {
      "file": "systems/nova/eval/metrics.py",
      "kind": "Function",
      "name": "fae_composite"
    },
    "systems/nova/telemetry/hooks.py::_avg": {
      "file": "systems/nova/telemetry/hooks.py",
      "kind": "Function",
      "name": "_avg"
    },
    "systems/nova/telemetry/hooks.py::headers_for_propose": {
      "file": "systems/nova/telemetry/hooks.py",
      "kind": "Function",
      "name": "headers_for_propose"
    },
    "systems/nova/telemetry/hooks.py::headers_for_evaluate": {
      "file": "systems/nova/telemetry/hooks.py",
      "kind": "Function",
      "name": "headers_for_evaluate"
    },
    "systems/nova/telemetry/hooks.py::headers_for_auction": {
      "file": "systems/nova/telemetry/hooks.py",
      "kind": "Function",
      "name": "headers_for_auction"
    },
    "systems/qora/client.py::_hdr": {
      "file": "systems/qora/client.py",
      "kind": "Function",
      "name": "_hdr"
    },
    "systems/qora/client.py::_clean_params": {
      "file": "systems/qora/client.py",
      "kind": "Function",
      "name": "_clean_params"
    },
    "systems/qora/api_client.py::_qora_key": {
      "file": "systems/qora/api_client.py",
      "kind": "Function",
      "name": "_qora_key"
    },
    "systems/qora/api_client.py::_headers": {
      "file": "systems/qora/api_client.py",
      "kind": "Function",
      "name": "_headers"
    },
    "systems/qora/storage.py::load_json": {
      "file": "systems/qora/storage.py",
      "kind": "Function",
      "name": "load_json"
    },
    "systems/qora/storage.py::save_json": {
      "file": "systems/qora/storage.py",
      "kind": "Function",
      "name": "save_json"
    },
    "systems/qora/core/architecture/arch_patrol.py::_blake": {
      "file": "systems/qora/core/architecture/arch_patrol.py",
      "kind": "Function",
      "name": "_blake"
    },
    "systems/qora/core/architecture/arch_patrol.py::_read": {
      "file": "systems/qora/core/architecture/arch_patrol.py",
      "kind": "Function",
      "name": "_read"
    },
    "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file": {
      "file": "systems/qora/core/architecture/arch_patrol.py",
      "kind": "Function",
      "name": "_parse_tools_from_file"
    },
    "systems/qora/core/architecture/arch_patrol.py::V": {
      "file": "systems/qora/core/architecture/arch_patrol.py",
      "kind": "Class",
      "name": "V"
    },
    "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef": {
      "file": "systems/qora/core/architecture/arch_patrol.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "systems/qora/core/architecture/arch_patrol.py::_extract_tool_meta": {
      "file": "systems/qora/core/architecture/arch_patrol.py",
      "kind": "Function",
      "name": "_extract_tool_meta"
    },
    "systems/qora/core/architecture/arch_patrol.py::_infer_module": {
      "file": "systems/qora/core/architecture/arch_patrol.py",
      "kind": "Function",
      "name": "_infer_module"
    },
    "systems/qora/core/architecture/arch_execution.py::_uid": {
      "file": "systems/qora/core/architecture/arch_execution.py",
      "kind": "Function",
      "name": "_uid"
    },
    "systems/qora/core/architecture/arch_execution.py::_args_imply_external": {
      "file": "systems/qora/core/architecture/arch_execution.py",
      "kind": "Function",
      "name": "_args_imply_external"
    },
    "systems/qora/core/architecture/arch_execution.py::_resolve_qualname": {
      "file": "systems/qora/core/architecture/arch_execution.py",
      "kind": "Function",
      "name": "_resolve_qualname"
    },
    "systems/qora/core/immune/auto_instrument.py::_wrap_callable": {
      "file": "systems/qora/core/immune/auto_instrument.py",
      "kind": "Function",
      "name": "_wrap_callable"
    },
    "systems/qora/core/immune/auto_instrument.py::wrapped": {
      "file": "systems/qora/core/immune/auto_instrument.py",
      "kind": "Function",
      "name": "wrapped"
    },
    "systems/qora/core/immune/auto_instrument.py::_instrument_class": {
      "file": "systems/qora/core/immune/auto_instrument.py",
      "kind": "Function",
      "name": "_instrument_class"
    },
    "systems/qora/core/immune/auto_instrument.py::_instrument_module": {
      "file": "systems/qora/core/immune/auto_instrument.py",
      "kind": "Function",
      "name": "_instrument_module"
    },
    "systems/qora/core/immune/auto_instrument.py::excepthook": {
      "file": "systems/qora/core/immune/auto_instrument.py",
      "kind": "Function",
      "name": "excepthook"
    },
    "systems/qora/core/immune/auto_instrument.py::thread_hook": {
      "file": "systems/qora/core/immune/auto_instrument.py",
      "kind": "Function",
      "name": "thread_hook"
    },
    "systems/qora/core/immune/auto_instrument.py::async_handler": {
      "file": "systems/qora/core/immune/auto_instrument.py",
      "kind": "Function",
      "name": "async_handler"
    },
    "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler": {
      "file": "systems/qora/core/immune/auto_instrument.py",
      "kind": "Class",
      "name": "ConflictLogHandler"
    },
    "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::__init__": {
      "file": "systems/qora/core/immune/auto_instrument.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::emit": {
      "file": "systems/qora/core/immune/auto_instrument.py",
      "kind": "Method",
      "name": "emit"
    },
    "systems/qora/core/immune/conflict_sdk.py::_redact": {
      "file": "systems/qora/core/immune/conflict_sdk.py",
      "kind": "Function",
      "name": "_redact"
    },
    "systems/qora/core/immune/conflict_sdk.py::_normalize_stack": {
      "file": "systems/qora/core/immune/conflict_sdk.py",
      "kind": "Function",
      "name": "_normalize_stack"
    },
    "systems/qora/core/immune/conflict_sdk.py::make_signature": {
      "file": "systems/qora/core/immune/conflict_sdk.py",
      "kind": "Function",
      "name": "make_signature"
    },
    "systems/qora/manifest/models.py::ContentRef": {
      "file": "systems/qora/manifest/models.py",
      "kind": "Class",
      "name": "ContentRef"
    },
    "systems/qora/manifest/models.py::SystemManifest": {
      "file": "systems/qora/manifest/models.py",
      "kind": "Class",
      "name": "SystemManifest"
    },
    "systems/qora/manifest/builder.py::_iter_py": {
      "file": "systems/qora/manifest/builder.py",
      "kind": "Function",
      "name": "_iter_py"
    },
    "systems/qora/manifest/builder.py::_blake": {
      "file": "systems/qora/manifest/builder.py",
      "kind": "Function",
      "name": "_blake"
    },
    "systems/qora/manifest/builder.py::_slice_ref": {
      "file": "systems/qora/manifest/builder.py",
      "kind": "Function",
      "name": "_slice_ref"
    },
    "systems/qora/manifest/builder.py::_scan_imports": {
      "file": "systems/qora/manifest/builder.py",
      "kind": "Function",
      "name": "_scan_imports"
    },
    "systems/qora/manifest/builder.py::_scan_endpoints": {
      "file": "systems/qora/manifest/builder.py",
      "kind": "Function",
      "name": "_scan_endpoints"
    },
    "systems/qora/manifest/builder.py::_scan_tools_and_models": {
      "file": "systems/qora/manifest/builder.py",
      "kind": "Function",
      "name": "_scan_tools_and_models"
    },
    "systems/qora/manifest/engine.py::Diagnostic": {
      "file": "systems/qora/manifest/engine.py",
      "kind": "Class",
      "name": "Diagnostic"
    },
    "systems/qora/manifest/engine.py::_file_has_headers": {
      "file": "systems/qora/manifest/engine.py",
      "kind": "Function",
      "name": "_file_has_headers"
    },
    "systems/qora/manifest/engine.py::run_checks_sync": {
      "file": "systems/qora/manifest/engine.py",
      "kind": "Function",
      "name": "run_checks_sync"
    },
    "systems/qora/gcb/models.py::SnippetRef": {
      "file": "systems/qora/gcb/models.py",
      "kind": "Class",
      "name": "SnippetRef"
    },
    "systems/qora/gcb/models.py::Koan": {
      "file": "systems/qora/gcb/models.py",
      "kind": "Class",
      "name": "Koan"
    },
    "systems/qora/gcb/models.py::GoldenContextBundle": {
      "file": "systems/qora/gcb/models.py",
      "kind": "Class",
      "name": "GoldenContextBundle"
    },
    "systems/qora/gcb/builder.py::build_gcb": {
      "file": "systems/qora/gcb/builder.py",
      "kind": "Function",
      "name": "build_gcb"
    },
    "systems/qora/gcb/builder.py::dispatch_gcb_to_simula": {
      "file": "systems/qora/gcb/builder.py",
      "kind": "Function",
      "name": "dispatch_gcb_to_simula"
    },
    "systems/qora/wm/service.py::BlackboardService": {
      "file": "systems/qora/wm/service.py",
      "kind": "Class",
      "name": "BlackboardService"
    },
    "systems/qora/wm/service.py::BlackboardService::_get_client": {
      "file": "systems/qora/wm/service.py",
      "kind": "Method",
      "name": "_get_client"
    },
    "systems/qora/wm/service.py::DossierBuilder": {
      "file": "systems/qora/wm/service.py",
      "kind": "Class",
      "name": "DossierBuilder"
    },
    "systems/qora/wm/service.py::DossierBuilder::_split_target": {
      "file": "systems/qora/wm/service.py",
      "kind": "Method",
      "name": "_split_target"
    },
    "systems/qora/wm/service.py::DossierBuilder::_read_ast": {
      "file": "systems/qora/wm/service.py",
      "kind": "Method",
      "name": "_read_ast"
    },
    "systems/qora/wm/service.py::DossierBuilder::_collect_imports": {
      "file": "systems/qora/wm/service.py",
      "kind": "Method",
      "name": "_collect_imports"
    },
    "systems/qora/wm/service.py::DossierBuilder::dossier": {
      "file": "systems/qora/wm/service.py",
      "kind": "Method",
      "name": "dossier"
    },
    "systems/qora/wm/service.py::WMIndex": {
      "file": "systems/qora/wm/service.py",
      "kind": "Class",
      "name": "WMIndex"
    },
    "systems/qora/wm/service.py::WMIndex::add_file": {
      "file": "systems/qora/wm/service.py",
      "kind": "Method",
      "name": "add_file"
    },
    "systems/qora/wm/service.py::WMService": {
      "file": "systems/qora/wm/service.py",
      "kind": "Class",
      "name": "WMService"
    },
    "systems/qora/wm/service.py::WMService::index_file": {
      "file": "systems/qora/wm/service.py",
      "kind": "Method",
      "name": "index_file"
    },
    "systems/qora/wm/service.py::WMService::dossier": {
      "file": "systems/qora/wm/service.py",
      "kind": "Method",
      "name": "dossier"
    },
    "systems/qora/wm/service.py::WMService::subgraph": {
      "file": "systems/qora/wm/service.py",
      "kind": "Method",
      "name": "subgraph"
    },
    "systems/qora/wm/indexer.py::_iter_py": {
      "file": "systems/qora/wm/indexer.py",
      "kind": "Function",
      "name": "_iter_py"
    },
    "systems/qora/wm/indexer.py::bootstrap_index": {
      "file": "systems/qora/wm/indexer.py",
      "kind": "Function",
      "name": "bootstrap_index"
    },
    "systems/qora/index/hot_path.py::symbol_slice": {
      "file": "systems/qora/index/hot_path.py",
      "kind": "Function",
      "name": "symbol_slice"
    },
    "systems/qora/dossier/merger.py::merge": {
      "file": "systems/qora/dossier/merger.py",
      "kind": "Function",
      "name": "merge"
    },
    "systems/qora/service/schemas.py::DossierRequest": {
      "file": "systems/qora/service/schemas.py",
      "kind": "Class",
      "name": "DossierRequest"
    },
    "systems/qora/service/schemas.py::DossierResponse": {
      "file": "systems/qora/service/schemas.py",
      "kind": "Class",
      "name": "DossierResponse"
    },
    "systems/qora/service/schemas.py::SubgraphResponse": {
      "file": "systems/qora/service/schemas.py",
      "kind": "Class",
      "name": "SubgraphResponse"
    },
    "systems/qora/service/schemas.py::BbWrite": {
      "file": "systems/qora/service/schemas.py",
      "kind": "Class",
      "name": "BbWrite"
    },
    "systems/qora/service/schemas.py::BbReadResponse": {
      "file": "systems/qora/service/schemas.py",
      "kind": "Class",
      "name": "BbReadResponse"
    },
    "systems/qora/service/schemas.py::IndexFileRequest": {
      "file": "systems/qora/service/schemas.py",
      "kind": "Class",
      "name": "IndexFileRequest"
    },
    "systems/qora/service/security.py::require_qora_key": {
      "file": "systems/qora/service/security.py",
      "kind": "Function",
      "name": "require_qora_key"
    },
    "systems/qora/recipes/registry.py::DiffCheckRequest": {
      "file": "systems/qora/recipes/registry.py",
      "kind": "Class",
      "name": "DiffCheckRequest"
    },
    "systems/qora/recipes/registry.py::DiffCheckResponse": {
      "file": "systems/qora/recipes/registry.py",
      "kind": "Class",
      "name": "DiffCheckResponse"
    },
    "systems/qora/policy/packs.py::list_packs": {
      "file": "systems/qora/policy/packs.py",
      "kind": "Function",
      "name": "list_packs"
    },
    "systems/qora/policy/packs.py::write_pack": {
      "file": "systems/qora/policy/packs.py",
      "kind": "Function",
      "name": "write_pack"
    },
    "systems/qora/policy/packs.py::read_pack": {
      "file": "systems/qora/policy/packs.py",
      "kind": "Function",
      "name": "read_pack"
    },
    "systems/synk/core/tools/clusters.py::_centroid": {
      "file": "systems/synk/core/tools/clusters.py",
      "kind": "Function",
      "name": "_centroid"
    },
    "systems/synk/core/tools/mesa.py::CustomModel": {
      "file": "systems/synk/core/tools/mesa.py",
      "kind": "Class",
      "name": "CustomModel"
    },
    "systems/synk/core/tools/mesa.py::CustomModel::__init__": {
      "file": "systems/synk/core/tools/mesa.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synk/core/tools/mesa.py::CustomModel::step": {
      "file": "systems/synk/core/tools/mesa.py",
      "kind": "Method",
      "name": "step"
    },
    "systems/synk/core/tools/native_clustering.py::choose_k": {
      "file": "systems/synk/core/tools/native_clustering.py",
      "kind": "Function",
      "name": "choose_k"
    },
    "systems/synk/core/tools/native_clustering.py::kmeans_numpy": {
      "file": "systems/synk/core/tools/native_clustering.py",
      "kind": "Function",
      "name": "kmeans_numpy"
    },
    "systems/synk/core/tools/native_clustering.py::try_sklearn_kmeans": {
      "file": "systems/synk/core/tools/native_clustering.py",
      "kind": "Function",
      "name": "try_sklearn_kmeans"
    },
    "systems/synk/core/tools/neo.py::_safe_neo_props": {
      "file": "systems/synk/core/tools/neo.py",
      "kind": "Function",
      "name": "_safe_neo_props"
    },
    "systems/synk/core/tools/neo.py::_safe": {
      "file": "systems/synk/core/tools/neo.py",
      "kind": "Function",
      "name": "_safe"
    },
    "systems/synk/core/tools/neo.py::_get_or_make_event_id": {
      "file": "systems/synk/core/tools/neo.py",
      "kind": "Function",
      "name": "_get_or_make_event_id"
    },
    "systems/synk/core/tools/neo.py::matcher_str": {
      "file": "systems/synk/core/tools/neo.py",
      "kind": "Function",
      "name": "matcher_str"
    },
    "systems/synk/core/tools/neo.py::_ensure_list": {
      "file": "systems/synk/core/tools/neo.py",
      "kind": "Function",
      "name": "_ensure_list"
    },
    "systems/synk/core/tools/vector_store.py::_index_name": {
      "file": "systems/synk/core/tools/vector_store.py",
      "kind": "Function",
      "name": "_index_name"
    },
    "systems/synk/core/tools/vector_store.py::_quote_ident": {
      "file": "systems/synk/core/tools/vector_store.py",
      "kind": "Function",
      "name": "_quote_ident"
    },
    "systems/synk/core/switchboard/client.py::Switchboard": {
      "file": "systems/synk/core/switchboard/client.py",
      "kind": "Class",
      "name": "Switchboard"
    },
    "systems/synk/core/switchboard/client.py::Switchboard::__init__": {
      "file": "systems/synk/core/switchboard/client.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synk/core/switchboard/flag_deps.py::require_flag_true": {
      "file": "systems/synk/core/switchboard/flag_deps.py",
      "kind": "Function",
      "name": "require_flag_true"
    },
    "systems/synk/core/switchboard/gatekit.py::route_gate": {
      "file": "systems/synk/core/switchboard/gatekit.py",
      "kind": "Function",
      "name": "route_gate"
    },
    "systems/synk/core/switchboard/gatekit.py::gated_async": {
      "file": "systems/synk/core/switchboard/gatekit.py",
      "kind": "Function",
      "name": "gated_async"
    },
    "systems/synk/core/switchboard/gatekit.py::deco": {
      "file": "systems/synk/core/switchboard/gatekit.py",
      "kind": "Function",
      "name": "deco"
    },
    "systems/synk/core/switchboard/gatekit.py::gated_sync": {
      "file": "systems/synk/core/switchboard/gatekit.py",
      "kind": "Function",
      "name": "gated_sync"
    },
    "systems/synk/core/switchboard/gatekit.py::wrapper": {
      "file": "systems/synk/core/switchboard/gatekit.py",
      "kind": "Function",
      "name": "wrapper"
    },
    "systems/thread/core/identity_shift.py::_safe_label": {
      "file": "systems/thread/core/identity_shift.py",
      "kind": "Function",
      "name": "_safe_label"
    },
    "systems/thread/core/identity_shift_prompts.py::build_identity_shift_prompt": {
      "file": "systems/thread/core/identity_shift_prompts.py",
      "kind": "Function",
      "name": "build_identity_shift_prompt"
    },
    "systems/unity/schemas.py::InputRef": {
      "file": "systems/unity/schemas.py",
      "kind": "Class",
      "name": "InputRef"
    },
    "systems/unity/schemas.py::DeliberationSpec": {
      "file": "systems/unity/schemas.py",
      "kind": "Class",
      "name": "DeliberationSpec"
    },
    "systems/unity/schemas.py::VerdictModel": {
      "file": "systems/unity/schemas.py",
      "kind": "Class",
      "name": "VerdictModel"
    },
    "systems/unity/schemas.py::DeliberationResponse": {
      "file": "systems/unity/schemas.py",
      "kind": "Class",
      "name": "DeliberationResponse"
    },
    "systems/unity/schemas.py::MetaCriticismProposalEvent": {
      "file": "systems/unity/schemas.py",
      "kind": "Class",
      "name": "MetaCriticismProposalEvent"
    },
    "systems/unity/schemas.py::RoomConfiguration": {
      "file": "systems/unity/schemas.py",
      "kind": "Class",
      "name": "RoomConfiguration"
    },
    "systems/unity/schemas.py::FederatedConsensusRequest": {
      "file": "systems/unity/schemas.py",
      "kind": "Class",
      "name": "FederatedConsensusRequest"
    },
    "systems/unity/schemas.py::FederatedConsensusResponse": {
      "file": "systems/unity/schemas.py",
      "kind": "Class",
      "name": "FederatedConsensusResponse"
    },
    "systems/unity/schemas.py::Cognit": {
      "file": "systems/unity/schemas.py",
      "kind": "Class",
      "name": "Cognit"
    },
    "systems/unity/schemas.py::BroadcastEvent": {
      "file": "systems/unity/schemas.py",
      "kind": "Class",
      "name": "BroadcastEvent"
    },
    "systems/unity/core/neo/graph_writes.py::_jsonable": {
      "file": "systems/unity/core/neo/graph_writes.py",
      "kind": "Function",
      "name": "_jsonable"
    },
    "systems/unity/core/room/adjudicator.py::Adjudicator": {
      "file": "systems/unity/core/room/adjudicator.py",
      "kind": "Class",
      "name": "Adjudicator"
    },
    "systems/unity/core/room/adjudicator.py::Adjudicator::__new__": {
      "file": "systems/unity/core/room/adjudicator.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation": {
      "file": "systems/unity/core/room/adjudicator.py",
      "kind": "Method",
      "name": "_bayesian_aggregation"
    },
    "systems/unity/core/room/orchestrator.py::_as_dict": {
      "file": "systems/unity/core/room/orchestrator.py",
      "kind": "Function",
      "name": "_as_dict"
    },
    "systems/unity/core/room/orchestrator.py::_risk_level_from_urgency": {
      "file": "systems/unity/core/room/orchestrator.py",
      "kind": "Function",
      "name": "_risk_level_from_urgency"
    },
    "systems/unity/core/room/orchestrator.py::_pick_protocol_from_selection": {
      "file": "systems/unity/core/room/orchestrator.py",
      "kind": "Function",
      "name": "_pick_protocol_from_selection"
    },
    "systems/unity/core/room/orchestrator.py::DeliberationManager": {
      "file": "systems/unity/core/room/orchestrator.py",
      "kind": "Class",
      "name": "DeliberationManager"
    },
    "systems/unity/core/room/orchestrator.py::DeliberationManager::__new__": {
      "file": "systems/unity/core/room/orchestrator.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/unity/core/room/orchestrator.py::DeliberationManager::__init__": {
      "file": "systems/unity/core/room/orchestrator.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/unity/core/room/participants.py::ParticipantRegistry": {
      "file": "systems/unity/core/room/participants.py",
      "kind": "Class",
      "name": "ParticipantRegistry"
    },
    "systems/unity/core/room/participants.py::ParticipantRegistry::__new__": {
      "file": "systems/unity/core/room/participants.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/unity/core/room/participants.py::ParticipantRegistry::get_role_info": {
      "file": "systems/unity/core/room/participants.py",
      "kind": "Method",
      "name": "get_role_info"
    },
    "systems/unity/core/room/participants.py::ParticipantRegistry::list_roles": {
      "file": "systems/unity/core/room/participants.py",
      "kind": "Method",
      "name": "list_roles"
    },
    "systems/unity/core/room/argument_map.py::ArgumentMiner": {
      "file": "systems/unity/core/room/argument_map.py",
      "kind": "Class",
      "name": "ArgumentMiner"
    },
    "systems/unity/core/room/argument_map.py::ArgumentMiner::__init__": {
      "file": "systems/unity/core/room/argument_map.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/unity/core/room/argument_map.py::ArgumentMiner::add_claim": {
      "file": "systems/unity/core/room/argument_map.py",
      "kind": "Method",
      "name": "add_claim"
    },
    "systems/unity/core/room/argument_map.py::ArgumentMiner::_ensure_node": {
      "file": "systems/unity/core/room/argument_map.py",
      "kind": "Method",
      "name": "_ensure_node"
    },
    "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference": {
      "file": "systems/unity/core/room/argument_map.py",
      "kind": "Method",
      "name": "add_inference"
    },
    "systems/unity/core/room/argument_map.py::ArgumentMiner::_support_ancestry": {
      "file": "systems/unity/core/room/argument_map.py",
      "kind": "Method",
      "name": "_support_ancestry"
    },
    "systems/unity/core/room/argument_map.py::ArgumentMiner::_collect_base_leaves": {
      "file": "systems/unity/core/room/argument_map.py",
      "kind": "Method",
      "name": "_collect_base_leaves"
    },
    "systems/unity/core/room/argument_map.py::ArgumentMiner::_defended_filter": {
      "file": "systems/unity/core/room/argument_map.py",
      "kind": "Method",
      "name": "_defended_filter"
    },
    "systems/unity/core/room/argument_map.py::ArgumentMiner::get_minimal_assumption_set": {
      "file": "systems/unity/core/room/argument_map.py",
      "kind": "Method",
      "name": "get_minimal_assumption_set"
    },
    "systems/unity/core/protocols/debate.py::_truncate": {
      "file": "systems/unity/core/protocols/debate.py",
      "kind": "Function",
      "name": "_truncate"
    },
    "systems/unity/core/protocols/debate.py::_dig": {
      "file": "systems/unity/core/protocols/debate.py",
      "kind": "Function",
      "name": "_dig"
    },
    "systems/unity/core/protocols/debate.py::_champion_arm_id": {
      "file": "systems/unity/core/protocols/debate.py",
      "kind": "Function",
      "name": "_champion_arm_id"
    },
    "systems/unity/core/protocols/debate.py::DebateProtocol": {
      "file": "systems/unity/core/protocols/debate.py",
      "kind": "Class",
      "name": "DebateProtocol"
    },
    "systems/unity/core/protocols/debate.py::DebateProtocol::__init__": {
      "file": "systems/unity/core/protocols/debate.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/unity/core/protocols/critique_and_repair.py::ProtocolState": {
      "file": "systems/unity/core/protocols/critique_and_repair.py",
      "kind": "Class",
      "name": "ProtocolState"
    },
    "systems/unity/core/protocols/critique_and_repair.py::CritiqueAndRepairProtocol": {
      "file": "systems/unity/core/protocols/critique_and_repair.py",
      "kind": "Class",
      "name": "CritiqueAndRepairProtocol"
    },
    "systems/unity/core/protocols/critique_and_repair.py::CritiqueAndRepairProtocol::__init__": {
      "file": "systems/unity/core/protocols/critique_and_repair.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/unity/core/protocols/argument_mining.py::ArgumentMiningProtocol": {
      "file": "systems/unity/core/protocols/argument_mining.py",
      "kind": "Class",
      "name": "ArgumentMiningProtocol"
    },
    "systems/unity/core/protocols/argument_mining.py::ArgumentMiningProtocol::__init__": {
      "file": "systems/unity/core/protocols/argument_mining.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol": {
      "file": "systems/unity/core/protocols/meta_criticism.py",
      "kind": "Class",
      "name": "MetaCriticismProtocol"
    },
    "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::__init__": {
      "file": "systems/unity/core/protocols/meta_criticism.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency": {
      "file": "systems/unity/core/protocols/meta_criticism.py",
      "kind": "Method",
      "name": "_measure_efficiency"
    },
    "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_build_proposal": {
      "file": "systems/unity/core/protocols/meta_criticism.py",
      "kind": "Method",
      "name": "_build_proposal"
    },
    "systems/unity/core/protocols/federated_consensus.py::_to_verdict": {
      "file": "systems/unity/core/protocols/federated_consensus.py",
      "kind": "Function",
      "name": "_to_verdict"
    },
    "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate": {
      "file": "systems/unity/core/protocols/federated_consensus.py",
      "kind": "Function",
      "name": "_weighted_aggregate"
    },
    "systems/unity/core/protocols/federated_consensus.py::FederatedConsensusProtocol": {
      "file": "systems/unity/core/protocols/federated_consensus.py",
      "kind": "Class",
      "name": "FederatedConsensusProtocol"
    },
    "systems/unity/core/protocols/federated_consensus.py::FederatedConsensusProtocol::__init__": {
      "file": "systems/unity/core/protocols/federated_consensus.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/unity/core/protocols/concurrent_competition.py::ConcurrentCompetitionProtocol": {
      "file": "systems/unity/core/protocols/concurrent_competition.py",
      "kind": "Class",
      "name": "ConcurrentCompetitionProtocol"
    },
    "systems/unity/core/protocols/concurrent_competition.py::ConcurrentCompetitionProtocol::__init__": {
      "file": "systems/unity/core/protocols/concurrent_competition.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/unity/core/protocols/cognition.py::CognitionProtocol": {
      "file": "systems/unity/core/protocols/cognition.py",
      "kind": "Class",
      "name": "CognitionProtocol"
    },
    "systems/unity/core/protocols/cognition.py::CognitionProtocol::__init__": {
      "file": "systems/unity/core/protocols/cognition.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/unity/core/workspace/global_workspace.py::AttentionMechanism": {
      "file": "systems/unity/core/workspace/global_workspace.py",
      "kind": "Class",
      "name": "AttentionMechanism"
    },
    "systems/unity/core/workspace/global_workspace.py::AttentionMechanism::__init__": {
      "file": "systems/unity/core/workspace/global_workspace.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/unity/core/workspace/global_workspace.py::GlobalWorkspace": {
      "file": "systems/unity/core/workspace/global_workspace.py",
      "kind": "Class",
      "name": "GlobalWorkspace"
    },
    "systems/unity/core/workspace/global_workspace.py::GlobalWorkspace::__new__": {
      "file": "systems/unity/core/workspace/global_workspace.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/unity/core/t_o_m/modeler.py::_tok": {
      "file": "systems/unity/core/t_o_m/modeler.py",
      "kind": "Function",
      "name": "_tok"
    },
    "systems/unity/core/t_o_m/modeler.py::_clean_keywords": {
      "file": "systems/unity/core/t_o_m/modeler.py",
      "kind": "Function",
      "name": "_clean_keywords"
    },
    "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine": {
      "file": "systems/unity/core/t_o_m/modeler.py",
      "kind": "Class",
      "name": "TheoryOfMindEngine"
    },
    "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::__new__": {
      "file": "systems/unity/core/t_o_m/modeler.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_last_token_from_state": {
      "file": "systems/unity/core/t_o_m/modeler.py",
      "kind": "Method",
      "name": "_last_token_from_state"
    },
    "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_unigram_top": {
      "file": "systems/unity/core/t_o_m/modeler.py",
      "kind": "Method",
      "name": "_unigram_top"
    },
    "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_predict_token_topk": {
      "file": "systems/unity/core/t_o_m/modeler.py",
      "kind": "Method",
      "name": "_predict_token_topk"
    },
    "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_compose_argument": {
      "file": "systems/unity/core/t_o_m/modeler.py",
      "kind": "Method",
      "name": "_compose_argument"
    },
    "systems/unity/core/cognition/llm_util.py::on_response": {
      "file": "systems/unity/core/cognition/llm_util.py",
      "kind": "Function",
      "name": "on_response"
    },
    "systems/unity/core/cognition/verifiers.py::safety_veto": {
      "file": "systems/unity/core/cognition/verifiers.py",
      "kind": "Function",
      "name": "safety_veto"
    },
    "systems/unity/core/cognition/verifiers.py::constraint_check": {
      "file": "systems/unity/core/cognition/verifiers.py",
      "kind": "Function",
      "name": "constraint_check"
    },
    "systems/unity/core/policy/safety_policy.py::clear_rules_cache": {
      "file": "systems/unity/core/policy/safety_policy.py",
      "kind": "Function",
      "name": "clear_rules_cache"
    },
    "systems/unity/core/policy/safety_policy.py::_coerce_text": {
      "file": "systems/unity/core/policy/safety_policy.py",
      "kind": "Function",
      "name": "_coerce_text"
    },
    "systems/unity/core/policy/safety_policy.py::_text_from_spec": {
      "file": "systems/unity/core/policy/safety_policy.py",
      "kind": "Function",
      "name": "_text_from_spec"
    },
    "systems/voxis/core/voxis_pipeline.py::log": {
      "file": "systems/voxis/core/voxis_pipeline.py",
      "kind": "Function",
      "name": "log"
    },
    "systems/voxis/core/voxis_pipeline.py::convert_dates": {
      "file": "systems/voxis/core/voxis_pipeline.py",
      "kind": "Function",
      "name": "convert_dates"
    },
    "systems/voxis/core/voxis_pipeline.py::VoxisPipeline": {
      "file": "systems/voxis/core/voxis_pipeline.py",
      "kind": "Class",
      "name": "VoxisPipeline"
    },
    "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::__init__": {
      "file": "systems/voxis/core/voxis_pipeline.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_build_atune_event": {
      "file": "systems/voxis/core/voxis_pipeline.py",
      "kind": "Method",
      "name": "_build_atune_event"
    },
    "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_build_stage1_prompt": {
      "file": "systems/voxis/core/voxis_pipeline.py",
      "kind": "Method",
      "name": "_build_stage1_prompt"
    },
    "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_build_stage2_prompt": {
      "file": "systems/voxis/core/voxis_pipeline.py",
      "kind": "Method",
      "name": "_build_stage2_prompt"
    },
    "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_parse_tool_queries": {
      "file": "systems/voxis/core/voxis_pipeline.py",
      "kind": "Method",
      "name": "_parse_tool_queries"
    },
    "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_apply_censorship": {
      "file": "systems/voxis/core/voxis_pipeline.py",
      "kind": "Method",
      "name": "_apply_censorship"
    },
    "systems/equor/schemas.py::Facet": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "Facet"
    },
    "systems/equor/schemas.py::ConstitutionRule": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "ConstitutionRule"
    },
    "systems/equor/schemas.py::Profile": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "Profile"
    },
    "systems/equor/schemas.py::ComposeRequest": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "ComposeRequest"
    },
    "systems/equor/schemas.py::ComposeResponse": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "ComposeResponse"
    },
    "systems/equor/schemas.py::Attestation": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "Attestation"
    },
    "systems/equor/schemas.py::DriftReport": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "DriftReport"
    },
    "systems/equor/schemas.py::PatchProposalEvent": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "PatchProposalEvent"
    },
    "systems/equor/schemas.py::Invariant": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "Invariant"
    },
    "systems/equor/schemas.py::InvariantCheckResult": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "InvariantCheckResult"
    },
    "systems/equor/schemas.py::InternalStateMetrics": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "InternalStateMetrics"
    },
    "systems/equor/schemas.py::QualiaState": {
      "file": "systems/equor/schemas.py",
      "kind": "Class",
      "name": "QualiaState"
    },
    "systems/equor/core/identity/constitution.py::ConstitutionConflictError": {
      "file": "systems/equor/core/identity/constitution.py",
      "kind": "Class",
      "name": "ConstitutionConflictError"
    },
    "systems/equor/core/identity/constitution.py::ConstitutionConflictError::__init__": {
      "file": "systems/equor/core/identity/constitution.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/equor/core/identity/constitution.py::PredicateUnsatisfiedError": {
      "file": "systems/equor/core/identity/constitution.py",
      "kind": "Class",
      "name": "PredicateUnsatisfiedError"
    },
    "systems/equor/core/identity/constitution.py::PredicateUnsatisfiedError::__init__": {
      "file": "systems/equor/core/identity/constitution.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/equor/core/identity/constitution.py::ConstitutionService": {
      "file": "systems/equor/core/identity/constitution.py",
      "kind": "Class",
      "name": "ConstitutionService"
    },
    "systems/equor/core/identity/constitution.py::ConstitutionService::__new__": {
      "file": "systems/equor/core/identity/constitution.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/equor/core/identity/constitution.py::ConstitutionService::_evaluate_predicate": {
      "file": "systems/equor/core/identity/constitution.py",
      "kind": "Method",
      "name": "_evaluate_predicate"
    },
    "systems/equor/core/identity/constitution.py::ConstitutionService::check_formal_guards": {
      "file": "systems/equor/core/identity/constitution.py",
      "kind": "Method",
      "name": "check_formal_guards"
    },
    "systems/equor/core/identity/constitution.py::ConstitutionService::apply_precedence": {
      "file": "systems/equor/core/identity/constitution.py",
      "kind": "Method",
      "name": "apply_precedence"
    },
    "systems/equor/core/identity/constitution.py::ConstitutionService::check_for_conflicts": {
      "file": "systems/equor/core/identity/constitution.py",
      "kind": "Method",
      "name": "check_for_conflicts"
    },
    "systems/equor/core/identity/registry.py::RegistryError": {
      "file": "systems/equor/core/identity/registry.py",
      "kind": "Class",
      "name": "RegistryError"
    },
    "systems/equor/core/identity/registry.py::_ensure_list": {
      "file": "systems/equor/core/identity/registry.py",
      "kind": "Function",
      "name": "_ensure_list"
    },
    "systems/equor/core/identity/registry.py::_dedupe_preserve_order": {
      "file": "systems/equor/core/identity/registry.py",
      "kind": "Function",
      "name": "_dedupe_preserve_order"
    },
    "systems/equor/core/identity/registry.py::_node_id": {
      "file": "systems/equor/core/identity/registry.py",
      "kind": "Function",
      "name": "_node_id"
    },
    "systems/equor/core/identity/registry.py::_has_label": {
      "file": "systems/equor/core/identity/registry.py",
      "kind": "Function",
      "name": "_has_label"
    },
    "systems/equor/core/identity/registry.py::IdentityRegistry": {
      "file": "systems/equor/core/identity/registry.py",
      "kind": "Class",
      "name": "IdentityRegistry"
    },
    "systems/equor/core/identity/registry.py::IdentityRegistry::__new__": {
      "file": "systems/equor/core/identity/registry.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/equor/core/identity/composer.py::CompositionError": {
      "file": "systems/equor/core/identity/composer.py",
      "kind": "Class",
      "name": "CompositionError"
    },
    "systems/equor/core/identity/composer.py::PromptComposer": {
      "file": "systems/equor/core/identity/composer.py",
      "kind": "Class",
      "name": "PromptComposer"
    },
    "systems/equor/core/identity/composer.py::PromptComposer::__new__": {
      "file": "systems/equor/core/identity/composer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text": {
      "file": "systems/equor/core/identity/composer.py",
      "kind": "Method",
      "name": "_format_patch_text"
    },
    "systems/equor/core/identity/homeostasis.py::HomeostasisMonitor": {
      "file": "systems/equor/core/identity/homeostasis.py",
      "kind": "Class",
      "name": "HomeostasisMonitor"
    },
    "systems/equor/core/identity/homeostasis.py::HomeostasisMonitor::__new__": {
      "file": "systems/equor/core/identity/homeostasis.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/equor/core/identity/homeostasis.py::HomeostasisMonitor::get_monitor_for_agent": {
      "file": "systems/equor/core/identity/homeostasis.py",
      "kind": "Method",
      "name": "get_monitor_for_agent"
    },
    "systems/equor/core/identity/homeostasis.py::AgentMonitor": {
      "file": "systems/equor/core/identity/homeostasis.py",
      "kind": "Class",
      "name": "AgentMonitor"
    },
    "systems/equor/core/identity/homeostasis.py::AgentMonitor::__init__": {
      "file": "systems/equor/core/identity/homeostasis.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/equor/core/identity/homeostasis.py::AgentMonitor::should_alert": {
      "file": "systems/equor/core/identity/homeostasis.py",
      "kind": "Method",
      "name": "should_alert"
    },
    "systems/equor/core/identity/homeostasis.py::AgentMonitor::reset_alert_trigger": {
      "file": "systems/equor/core/identity/homeostasis.py",
      "kind": "Method",
      "name": "reset_alert_trigger"
    },
    "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report": {
      "file": "systems/equor/core/identity/homeostasis.py",
      "kind": "Method",
      "name": "generate_report"
    },
    "systems/equor/core/identity/invariants.py::InvariantAuditor": {
      "file": "systems/equor/core/identity/invariants.py",
      "kind": "Class",
      "name": "InvariantAuditor"
    },
    "systems/equor/core/identity/invariants.py::InvariantAuditor::__new__": {
      "file": "systems/equor/core/identity/invariants.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/equor/core/qualia/manifold.py::_AEWeights": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Class",
      "name": "_AEWeights"
    },
    "systems/equor/core/qualia/manifold.py::_AEWeights::to_npz": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "to_npz"
    },
    "systems/equor/core/qualia/manifold.py::_AEWeights::from_npz": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "from_npz"
    },
    "systems/equor/core/qualia/manifold.py::TrainedAutoencoder": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Class",
      "name": "TrainedAutoencoder"
    },
    "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::__init__": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::save_weights": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "save_weights"
    },
    "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::load_weights": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "load_weights"
    },
    "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_std": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "_std"
    },
    "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_standardize": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "_standardize"
    },
    "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_update_stats": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "_update_stats"
    },
    "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_eta": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "_eta"
    },
    "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::encode": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "encode"
    },
    "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "update"
    },
    "systems/equor/core/qualia/manifold.py::QualiaManifold": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Class",
      "name": "QualiaManifold"
    },
    "systems/equor/core/qualia/manifold.py::QualiaManifold::__new__": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/equor/core/qualia/manifold.py::QualiaManifold::_init_model": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "_init_model"
    },
    "systems/equor/core/qualia/manifold.py::QualiaManifold::get_model": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "get_model"
    },
    "systems/equor/core/qualia/manifold.py::QualiaManifold::load_model_weights": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "load_model_weights"
    },
    "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "process_metrics"
    },
    "systems/equor/core/qualia/manifold.py::StateLogger": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Class",
      "name": "StateLogger"
    },
    "systems/equor/core/qualia/manifold.py::StateLogger::__new__": {
      "file": "systems/equor/core/qualia/manifold.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/equor/core/qualia/trainer.py::_models_dir": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Function",
      "name": "_models_dir"
    },
    "systems/equor/core/qualia/trainer.py::_artifact_paths": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Function",
      "name": "_artifact_paths"
    },
    "systems/equor/core/qualia/trainer.py::_std_from": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Function",
      "name": "_std_from"
    },
    "systems/equor/core/qualia/trainer.py::_reconstruct": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Function",
      "name": "_reconstruct"
    },
    "systems/equor/core/qualia/trainer.py::AutoencoderTrainer": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Class",
      "name": "AutoencoderTrainer"
    },
    "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::__init__": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_prime_stats": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Method",
      "name": "_prime_stats"
    },
    "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_epoch_loss": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Method",
      "name": "_epoch_loss"
    },
    "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Method",
      "name": "train"
    },
    "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::save_weights": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Method",
      "name": "save_weights"
    },
    "systems/equor/core/qualia/trainer.py::ManifoldTrainer": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Class",
      "name": "ManifoldTrainer"
    },
    "systems/equor/core/qualia/trainer.py::ManifoldTrainer::__new__": {
      "file": "systems/equor/core/qualia/trainer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/equor/core/self/predictor.py::SelfModel": {
      "file": "systems/equor/core/self/predictor.py",
      "kind": "Class",
      "name": "SelfModel"
    },
    "systems/equor/core/self/predictor.py::SelfModel::__new__": {
      "file": "systems/equor/core/self/predictor.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/equor/core/self/predictor.py::SelfModel::_pairs_where": {
      "file": "systems/equor/core/self/predictor.py",
      "kind": "Method",
      "name": "_pairs_where"
    },
    "systems/equor/kms/keystore.py::_load_keys": {
      "file": "systems/equor/kms/keystore.py",
      "kind": "Function",
      "name": "_load_keys"
    },
    "systems/equor/kms/keystore.py::get_hmac_key_by_kid": {
      "file": "systems/equor/kms/keystore.py",
      "kind": "Function",
      "name": "get_hmac_key_by_kid"
    },
    "systems/equor/kms/keystore.py::list_kids": {
      "file": "systems/equor/kms/keystore.py",
      "kind": "Function",
      "name": "list_kids"
    },
    "systems/equor/kms/keystore.py::get_active_kid": {
      "file": "systems/equor/kms/keystore.py",
      "kind": "Function",
      "name": "get_active_kid"
    },
    "systems/synapse/schemas.py::TaskContext": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "TaskContext"
    },
    "systems/synapse/schemas.py::TaskContext::Config": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "Config"
    },
    "systems/synapse/schemas.py::Candidate": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "Candidate"
    },
    "systems/synapse/schemas.py::SelectArmRequest": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "SelectArmRequest"
    },
    "systems/synapse/schemas.py::ArmScore": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "ArmScore"
    },
    "systems/synapse/schemas.py::SelectArmResponse": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "SelectArmResponse"
    },
    "systems/synapse/schemas.py::SimulateRequest": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "SimulateRequest"
    },
    "systems/synapse/schemas.py::SimulateResponse": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "SimulateResponse"
    },
    "systems/synapse/schemas.py::SMTCheckRequest": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "SMTCheckRequest"
    },
    "systems/synapse/schemas.py::SMTCheckResponse": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "SMTCheckResponse"
    },
    "systems/synapse/schemas.py::BudgetResponse": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "BudgetResponse"
    },
    "systems/synapse/schemas.py::ExplainRequest": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "ExplainRequest"
    },
    "systems/synapse/schemas.py::ExplainResponse": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "ExplainResponse"
    },
    "systems/synapse/schemas.py::LogOutcomeRequest": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "LogOutcomeRequest"
    },
    "systems/synapse/schemas.py::LogOutcomeResponse": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "LogOutcomeResponse"
    },
    "systems/synapse/schemas.py::PreferenceIngest": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "PreferenceIngest"
    },
    "systems/synapse/schemas.py::ContinueRequest": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "ContinueRequest"
    },
    "systems/synapse/schemas.py::ContinueResponse": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "ContinueResponse"
    },
    "systems/synapse/schemas.py::RepairRequest": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "RepairRequest"
    },
    "systems/synapse/schemas.py::RepairResponse": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "RepairResponse"
    },
    "systems/synapse/schemas.py::EpisodeSummary": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "EpisodeSummary"
    },
    "systems/synapse/schemas.py::ComparisonPairResponse": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "ComparisonPairResponse"
    },
    "systems/synapse/schemas.py::SubmitPreferenceRequest": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "SubmitPreferenceRequest"
    },
    "systems/synapse/schemas.py::PatchProposal": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "PatchProposal"
    },
    "systems/synapse/schemas.py::PolicyHintRequest": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "PolicyHintRequest"
    },
    "systems/synapse/schemas.py::PolicyHintRequest::Config": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "Config"
    },
    "systems/synapse/schemas.py::PolicyHintResponse": {
      "file": "systems/synapse/schemas.py",
      "kind": "Class",
      "name": "PolicyHintResponse"
    },
    "systems/synapse/schemas_metrics.py::ArmOutcome": {
      "file": "systems/synapse/schemas_metrics.py",
      "kind": "Class",
      "name": "ArmOutcome"
    },
    "systems/synapse/core/registry.py::_coerce_policy_graph": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Function",
      "name": "_coerce_policy_graph"
    },
    "systems/synapse/core/registry.py::_node_effects_says_dangerous": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Function",
      "name": "_node_effects_says_dangerous"
    },
    "systems/synapse/core/registry.py::_default_llm_model": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Function",
      "name": "_default_llm_model"
    },
    "systems/synapse/core/registry.py::_noop_pg_dict": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Function",
      "name": "_noop_pg_dict"
    },
    "systems/synapse/core/registry.py::PolicyArm": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Class",
      "name": "PolicyArm"
    },
    "systems/synapse/core/registry.py::PolicyArm::__init__": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/core/registry.py::PolicyArm::is_safe_fallback": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "is_safe_fallback"
    },
    "systems/synapse/core/registry.py::ArmRegistry": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Class",
      "name": "ArmRegistry"
    },
    "systems/synapse/core/registry.py::ArmRegistry::__new__": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/core/registry.py::ArmRegistry::__init__": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/core/registry.py::ArmRegistry::get_arm": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "get_arm"
    },
    "systems/synapse/core/registry.py::ArmRegistry::get_arms_for_mode": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "get_arms_for_mode"
    },
    "systems/synapse/core/registry.py::ArmRegistry::list_arms_for_mode": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "list_arms_for_mode"
    },
    "systems/synapse/core/registry.py::ArmRegistry::list_modes": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "list_modes"
    },
    "systems/synapse/core/registry.py::ArmRegistry::all_arm_ids": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "all_arm_ids"
    },
    "systems/synapse/core/registry.py::ArmRegistry::add_arm": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "add_arm"
    },
    "systems/synapse/core/registry.py::ArmRegistry::get_safe_fallback_arm": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "get_safe_fallback_arm"
    },
    "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "ensure_cold_start"
    },
    "systems/synapse/core/registry.py::ArmRegistry::_safe_present_for": {
      "file": "systems/synapse/core/registry.py",
      "kind": "Method",
      "name": "_safe_present_for"
    },
    "systems/synapse/core/tactics.py::_stable_seed_from_ctx": {
      "file": "systems/synapse/core/tactics.py",
      "kind": "Function",
      "name": "_stable_seed_from_ctx"
    },
    "systems/synapse/core/tactics.py::_ensure_1d": {
      "file": "systems/synapse/core/tactics.py",
      "kind": "Function",
      "name": "_ensure_1d"
    },
    "systems/synapse/core/tactics.py::TacticalManager": {
      "file": "systems/synapse/core/tactics.py",
      "kind": "Class",
      "name": "TacticalManager"
    },
    "systems/synapse/core/tactics.py::TacticalManager::__new__": {
      "file": "systems/synapse/core/tactics.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/core/tactics.py::TacticalManager::_candidate_ids_from_request": {
      "file": "systems/synapse/core/tactics.py",
      "kind": "Method",
      "name": "_candidate_ids_from_request"
    },
    "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set": {
      "file": "systems/synapse/core/tactics.py",
      "kind": "Method",
      "name": "_build_candidate_set"
    },
    "systems/synapse/core/tactics.py::TacticalManager::_score_candidates": {
      "file": "systems/synapse/core/tactics.py",
      "kind": "Method",
      "name": "_score_candidates"
    },
    "systems/synapse/core/tactics.py::TacticalManager::select_arm": {
      "file": "systems/synapse/core/tactics.py",
      "kind": "Method",
      "name": "select_arm"
    },
    "systems/synapse/core/tactics.py::TacticalManager::update": {
      "file": "systems/synapse/core/tactics.py",
      "kind": "Method",
      "name": "update"
    },
    "systems/synapse/core/tactics.py::TacticalManager::get_last_scores_for_arm": {
      "file": "systems/synapse/core/tactics.py",
      "kind": "Method",
      "name": "get_last_scores_for_arm"
    },
    "systems/synapse/core/reward.py::_to_json_str": {
      "file": "systems/synapse/core/reward.py",
      "kind": "Function",
      "name": "_to_json_str"
    },
    "systems/synapse/core/reward.py::RewardArbiter": {
      "file": "systems/synapse/core/reward.py",
      "kind": "Class",
      "name": "RewardArbiter"
    },
    "systems/synapse/core/reward.py::RewardArbiter::__new__": {
      "file": "systems/synapse/core/reward.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/core/reward.py::RewardArbiter::__init__": {
      "file": "systems/synapse/core/reward.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/core/reward.py::RewardArbiter::update_scalarization_weights": {
      "file": "systems/synapse/core/reward.py",
      "kind": "Method",
      "name": "update_scalarization_weights"
    },
    "systems/synapse/core/reward.py::RewardArbiter::_norm01": {
      "file": "systems/synapse/core/reward.py",
      "kind": "Method",
      "name": "_norm01"
    },
    "systems/synapse/core/reward.py::RewardArbiter::compute_reward_vector": {
      "file": "systems/synapse/core/reward.py",
      "kind": "Method",
      "name": "compute_reward_vector"
    },
    "systems/synapse/core/reward.py::RewardArbiter::scalarize_reward": {
      "file": "systems/synapse/core/reward.py",
      "kind": "Method",
      "name": "scalarize_reward"
    },
    "systems/synapse/core/planner.py::_ctx_pick": {
      "file": "systems/synapse/core/planner.py",
      "kind": "Function",
      "name": "_ctx_pick"
    },
    "systems/synapse/core/planner.py::MetacognitivePlanner": {
      "file": "systems/synapse/core/planner.py",
      "kind": "Class",
      "name": "MetacognitivePlanner"
    },
    "systems/synapse/core/planner.py::MetacognitivePlanner::__new__": {
      "file": "systems/synapse/core/planner.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/core/firewall.py::NeuroSymbolicFirewall": {
      "file": "systems/synapse/core/firewall.py",
      "kind": "Class",
      "name": "NeuroSymbolicFirewall"
    },
    "systems/synapse/core/firewall.py::NeuroSymbolicFirewall::__new__": {
      "file": "systems/synapse/core/firewall.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/core/firewall.py::NeuroSymbolicFirewall::get_safe_fallback_arm": {
      "file": "systems/synapse/core/firewall.py",
      "kind": "Method",
      "name": "get_safe_fallback_arm"
    },
    "systems/synapse/core/genesis.py::ToolGenesisModule": {
      "file": "systems/synapse/core/genesis.py",
      "kind": "Class",
      "name": "ToolGenesisModule"
    },
    "systems/synapse/core/genesis.py::ToolGenesisModule::__new__": {
      "file": "systems/synapse/core/genesis.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/core/genesis.py::ToolGenesisModule::on_response": {
      "file": "systems/synapse/core/genesis.py",
      "kind": "Method",
      "name": "on_response"
    },
    "systems/synapse/core/episode.py::_jsonable": {
      "file": "systems/synapse/core/episode.py",
      "kind": "Function",
      "name": "_jsonable"
    },
    "systems/synapse/core/arm_genesis.py::_generate_base_graph": {
      "file": "systems/synapse/core/arm_genesis.py",
      "kind": "Function",
      "name": "_generate_base_graph"
    },
    "systems/synapse/core/arm_genesis.py::_mutations": {
      "file": "systems/synapse/core/arm_genesis.py",
      "kind": "Function",
      "name": "_mutations"
    },
    "systems/synapse/core/meta_controller.py::_load_json_env": {
      "file": "systems/synapse/core/meta_controller.py",
      "kind": "Function",
      "name": "_load_json_env"
    },
    "systems/synapse/core/meta_controller.py::_validate_strategy_map": {
      "file": "systems/synapse/core/meta_controller.py",
      "kind": "Function",
      "name": "_validate_strategy_map"
    },
    "systems/synapse/core/meta_controller.py::_validate_budget_map": {
      "file": "systems/synapse/core/meta_controller.py",
      "kind": "Function",
      "name": "_validate_budget_map"
    },
    "systems/synapse/core/meta_controller.py::MetaController": {
      "file": "systems/synapse/core/meta_controller.py",
      "kind": "Class",
      "name": "MetaController"
    },
    "systems/synapse/core/meta_controller.py::MetaController::__new__": {
      "file": "systems/synapse/core/meta_controller.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/core/meta_controller.py::MetaController::select_strategy": {
      "file": "systems/synapse/core/meta_controller.py",
      "kind": "Method",
      "name": "select_strategy"
    },
    "systems/synapse/core/meta_controller.py::MetaController::allocate_budget": {
      "file": "systems/synapse/core/meta_controller.py",
      "kind": "Method",
      "name": "allocate_budget"
    },
    "systems/synapse/core/snapshots.py::get_component_version": {
      "file": "systems/synapse/core/snapshots.py",
      "kind": "Function",
      "name": "get_component_version"
    },
    "systems/synapse/core/snapshots.py::stamp": {
      "file": "systems/synapse/core/snapshots.py",
      "kind": "Function",
      "name": "stamp"
    },
    "systems/synapse/core/governor.py::_proposal_id": {
      "file": "systems/synapse/core/governor.py",
      "kind": "Function",
      "name": "_proposal_id"
    },
    "systems/synapse/core/governor.py::Governor": {
      "file": "systems/synapse/core/governor.py",
      "kind": "Class",
      "name": "Governor"
    },
    "systems/synapse/core/governor.py::Governor::__new__": {
      "file": "systems/synapse/core/governor.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/training/meta_controller.py::MetaController": {
      "file": "systems/synapse/training/meta_controller.py",
      "kind": "Class",
      "name": "MetaController"
    },
    "systems/synapse/training/meta_controller.py::MetaController::__new__": {
      "file": "systems/synapse/training/meta_controller.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/training/adversary.py::AdversarialAgent": {
      "file": "systems/synapse/training/adversary.py",
      "kind": "Class",
      "name": "AdversarialAgent"
    },
    "systems/synapse/training/adversary.py::AdversarialAgent::__new__": {
      "file": "systems/synapse/training/adversary.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/training/adversary.py::AdversarialAgent::_generate_challenging_task_context": {
      "file": "systems/synapse/training/adversary.py",
      "kind": "Method",
      "name": "_generate_challenging_task_context"
    },
    "systems/synapse/training/adversary.py::AdversarialAgent::_update_task_values": {
      "file": "systems/synapse/training/adversary.py",
      "kind": "Method",
      "name": "_update_task_values"
    },
    "systems/synapse/training/bandit_state.py::mark_dirty": {
      "file": "systems/synapse/training/bandit_state.py",
      "kind": "Function",
      "name": "mark_dirty"
    },
    "systems/synapse/training/bandit_state.py::_drain_dirty": {
      "file": "systems/synapse/training/bandit_state.py",
      "kind": "Function",
      "name": "_drain_dirty"
    },
    "systems/synapse/training/bandit_state.py::start_background_flusher": {
      "file": "systems/synapse/training/bandit_state.py",
      "kind": "Function",
      "name": "start_background_flusher"
    },
    "systems/synapse/training/bandit_state.py::stop_background_flusher": {
      "file": "systems/synapse/training/bandit_state.py",
      "kind": "Function",
      "name": "stop_background_flusher"
    },
    "systems/synapse/training/neural_linear.py::_pack_matrix": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Function",
      "name": "_pack_matrix"
    },
    "systems/synapse/training/neural_linear.py::_unpack_matrix": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Function",
      "name": "_unpack_matrix"
    },
    "systems/synapse/training/neural_linear.py::_ensure_col_vec": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Function",
      "name": "_ensure_col_vec"
    },
    "systems/synapse/training/neural_linear.py::_stable_cholesky": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Function",
      "name": "_stable_cholesky"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Class",
      "name": "NeuralLinearBanditHead"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::get_state": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "get_state"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::_posterior_mean": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "_posterior_mean"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::sample_theta": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "sample_theta"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::get_theta_mean": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "get_theta_mean"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::score": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "score"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::update": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "update"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearArmManager": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Class",
      "name": "NeuralLinearArmManager"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "list_arms"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "_ensure_heads_mapping"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "get_theta_mean_for_arm"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::__new__": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::__init__": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::dimensions": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "dimensions"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_hidx": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "_hidx"
    },
    "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::encode": {
      "file": "systems/synapse/training/neural_linear.py",
      "kind": "Method",
      "name": "encode"
    },
    "systems/synapse/training/encoder_trainer.py::EncoderTrainer": {
      "file": "systems/synapse/training/encoder_trainer.py",
      "kind": "Class",
      "name": "EncoderTrainer"
    },
    "systems/synapse/training/encoder_trainer.py::EncoderTrainer::train": {
      "file": "systems/synapse/training/encoder_trainer.py",
      "kind": "Method",
      "name": "train"
    },
    "systems/synapse/training/encoder_trainer.py::EncoderTrainer::EncoderModel": {
      "file": "systems/synapse/training/encoder_trainer.py",
      "kind": "Class",
      "name": "EncoderModel"
    },
    "systems/synapse/training/encoder_trainer.py::EncoderTrainer::EncoderModel::__init__": {
      "file": "systems/synapse/training/encoder_trainer.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/training/encoder_trainer.py::EncoderTrainer::EncoderModel::forward": {
      "file": "systems/synapse/training/encoder_trainer.py",
      "kind": "Method",
      "name": "forward"
    },
    "systems/synapse/training/encoder_trainer.py::EncoderTrainer::EncoderModel::train": {
      "file": "systems/synapse/training/encoder_trainer.py",
      "kind": "Method",
      "name": "train"
    },
    "systems/synapse/training/self_model_trainer.py::_risk_score": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Function",
      "name": "_risk_score"
    },
    "systems/synapse/training/self_model_trainer.py::_budget_score": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Function",
      "name": "_budget_score"
    },
    "systems/synapse/training/self_model_trainer.py::_safe_len": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Function",
      "name": "_safe_len"
    },
    "systems/synapse/training/self_model_trainer.py::_vectorize_context": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Function",
      "name": "_vectorize_context"
    },
    "systems/synapse/training/self_model_trainer.py::_build_dataset": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Function",
      "name": "_build_dataset"
    },
    "systems/synapse/training/self_model_trainer.py::_pad": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Function",
      "name": "_pad"
    },
    "systems/synapse/training/self_model_trainer.py::_standardize": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Function",
      "name": "_standardize"
    },
    "systems/synapse/training/self_model_trainer.py::_ridge_fit": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Function",
      "name": "_ridge_fit"
    },
    "systems/synapse/training/self_model_trainer.py::_metrics": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Function",
      "name": "_metrics"
    },
    "systems/synapse/training/self_model_trainer.py::SelfModelTrainer": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Class",
      "name": "SelfModelTrainer"
    },
    "systems/synapse/training/self_model_trainer.py::SelfModelTrainer::__new__": {
      "file": "systems/synapse/training/self_model_trainer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/training/tom_trainer.py::_tok": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Function",
      "name": "_tok"
    },
    "systems/synapse/training/tom_trainer.py::_build_sequences": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Function",
      "name": "_build_sequences"
    },
    "systems/synapse/training/tom_trainer.py::_build_vocab": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Function",
      "name": "_build_vocab"
    },
    "systems/synapse/training/tom_trainer.py::_id_or_unk": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Function",
      "name": "_id_or_unk"
    },
    "systems/synapse/training/tom_trainer.py::_unigram_bigram_counts": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Function",
      "name": "_unigram_bigram_counts"
    },
    "systems/synapse/training/tom_trainer.py::_perplexity": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Function",
      "name": "_perplexity"
    },
    "systems/synapse/training/tom_trainer.py::_evaluate_role": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Function",
      "name": "_evaluate_role"
    },
    "systems/synapse/training/tom_trainer.py::_topk_table": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Function",
      "name": "_topk_table"
    },
    "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Class",
      "name": "TheoryOfMindTrainer"
    },
    "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::__new__": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples": {
      "file": "systems/synapse/training/tom_trainer.py",
      "kind": "Method",
      "name": "_create_training_samples"
    },
    "systems/synapse/training/attention_trainer.py::_sigmoid": {
      "file": "systems/synapse/training/attention_trainer.py",
      "kind": "Function",
      "name": "_sigmoid"
    },
    "systems/synapse/training/attention_trainer.py::_vectorize_cognit": {
      "file": "systems/synapse/training/attention_trainer.py",
      "kind": "Function",
      "name": "_vectorize_cognit"
    },
    "systems/synapse/training/attention_trainer.py::_build_samples": {
      "file": "systems/synapse/training/attention_trainer.py",
      "kind": "Function",
      "name": "_build_samples"
    },
    "systems/synapse/training/attention_trainer.py::_train_logreg": {
      "file": "systems/synapse/training/attention_trainer.py",
      "kind": "Function",
      "name": "_train_logreg"
    },
    "systems/synapse/training/attention_trainer.py::batch_iter": {
      "file": "systems/synapse/training/attention_trainer.py",
      "kind": "Function",
      "name": "batch_iter"
    },
    "systems/synapse/training/attention_trainer.py::AttentionRankerTrainer": {
      "file": "systems/synapse/training/attention_trainer.py",
      "kind": "Class",
      "name": "AttentionRankerTrainer"
    },
    "systems/synapse/training/attention_trainer.py::AttentionRankerTrainer::__new__": {
      "file": "systems/synapse/training/attention_trainer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/training/attention_trainer.py::AttentionRankerTrainer::_create_training_samples": {
      "file": "systems/synapse/training/attention_trainer.py",
      "kind": "Method",
      "name": "_create_training_samples"
    },
    "systems/synapse/sdk/affordances.py::validate_affordance": {
      "file": "systems/synapse/sdk/affordances.py",
      "kind": "Function",
      "name": "validate_affordance"
    },
    "systems/synapse/sdk/affordances.py::normalize_affordances": {
      "file": "systems/synapse/sdk/affordances.py",
      "kind": "Function",
      "name": "normalize_affordances"
    },
    "systems/synapse/sdk/client.py::SynapseClient": {
      "file": "systems/synapse/sdk/client.py",
      "kind": "Class",
      "name": "SynapseClient"
    },
    "systems/synapse/sdk/context.py::build_context": {
      "file": "systems/synapse/sdk/context.py",
      "kind": "Function",
      "name": "build_context"
    },
    "systems/synapse/sdk/decorators.py::evolutionary": {
      "file": "systems/synapse/sdk/decorators.py",
      "kind": "Function",
      "name": "evolutionary"
    },
    "systems/synapse/sdk/decorators.py::deco": {
      "file": "systems/synapse/sdk/decorators.py",
      "kind": "Function",
      "name": "deco"
    },
    "systems/synapse/sdk/hints_extras.py::HintsExtras": {
      "file": "systems/synapse/sdk/hints_extras.py",
      "kind": "Class",
      "name": "HintsExtras"
    },
    "systems/synapse/sdk/hints_client.py::SynapseHintsClient": {
      "file": "systems/synapse/sdk/hints_client.py",
      "kind": "Class",
      "name": "SynapseHintsClient"
    },
    "systems/synapse/sdk/causal_client.py::SynapseCausalClient": {
      "file": "systems/synapse/sdk/causal_client.py",
      "kind": "Class",
      "name": "SynapseCausalClient"
    },
    "systems/synapse/policy/policy_dsl.py::PolicyNode": {
      "file": "systems/synapse/policy/policy_dsl.py",
      "kind": "Class",
      "name": "PolicyNode"
    },
    "systems/synapse/policy/policy_dsl.py::PolicyEdge": {
      "file": "systems/synapse/policy/policy_dsl.py",
      "kind": "Class",
      "name": "PolicyEdge"
    },
    "systems/synapse/policy/policy_dsl.py::PolicyConstraint": {
      "file": "systems/synapse/policy/policy_dsl.py",
      "kind": "Class",
      "name": "PolicyConstraint"
    },
    "systems/synapse/policy/policy_dsl.py::PolicyGraph": {
      "file": "systems/synapse/policy/policy_dsl.py",
      "kind": "Class",
      "name": "PolicyGraph"
    },
    "systems/synapse/policy/policy_dsl.py::PolicyGraph::canonical_hash": {
      "file": "systems/synapse/policy/policy_dsl.py",
      "kind": "Method",
      "name": "canonical_hash"
    },
    "systems/synapse/critic/offpolicy.py::_featurize_episode": {
      "file": "systems/synapse/critic/offpolicy.py",
      "kind": "Function",
      "name": "_featurize_episode"
    },
    "systems/synapse/critic/offpolicy.py::Critic": {
      "file": "systems/synapse/critic/offpolicy.py",
      "kind": "Class",
      "name": "Critic"
    },
    "systems/synapse/critic/offpolicy.py::Critic::__new__": {
      "file": "systems/synapse/critic/offpolicy.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/critic/offpolicy.py::Critic::_load_model": {
      "file": "systems/synapse/critic/offpolicy.py",
      "kind": "Method",
      "name": "_load_model"
    },
    "systems/synapse/critic/offpolicy.py::Critic::score": {
      "file": "systems/synapse/critic/offpolicy.py",
      "kind": "Method",
      "name": "score"
    },
    "systems/synapse/firewall/smt_guard.py::check_smt_constraints": {
      "file": "systems/synapse/firewall/smt_guard.py",
      "kind": "Function",
      "name": "check_smt_constraints"
    },
    "systems/synapse/world/simulator.py::SimulationPrediction": {
      "file": "systems/synapse/world/simulator.py",
      "kind": "Class",
      "name": "SimulationPrediction"
    },
    "systems/synapse/world/simulator.py::WorldModel": {
      "file": "systems/synapse/world/simulator.py",
      "kind": "Class",
      "name": "WorldModel"
    },
    "systems/synapse/world/simulator.py::WorldModel::__new__": {
      "file": "systems/synapse/world/simulator.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/world/simulator.py::WorldModel::load_model": {
      "file": "systems/synapse/world/simulator.py",
      "kind": "Method",
      "name": "load_model"
    },
    "systems/synapse/world/simulator.py::WorldModel::_featurize": {
      "file": "systems/synapse/world/simulator.py",
      "kind": "Method",
      "name": "_featurize"
    },
    "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models": {
      "file": "systems/synapse/world/simulator.py",
      "kind": "Method",
      "name": "_safe_sigma_from_models"
    },
    "systems/synapse/world/diff_sim.py::_deepcopy_graph": {
      "file": "systems/synapse/world/diff_sim.py",
      "kind": "Function",
      "name": "_deepcopy_graph"
    },
    "systems/synapse/world/diff_sim.py::_evaluate": {
      "file": "systems/synapse/world/diff_sim.py",
      "kind": "Function",
      "name": "_evaluate"
    },
    "systems/synapse/world/diff_sim.py::_numeric_params": {
      "file": "systems/synapse/world/diff_sim.py",
      "kind": "Function",
      "name": "_numeric_params"
    },
    "systems/synapse/world/diff_sim.py::_guess_bounds": {
      "file": "systems/synapse/world/diff_sim.py",
      "kind": "Function",
      "name": "_guess_bounds"
    },
    "systems/synapse/world/diff_sim.py::_clamp": {
      "file": "systems/synapse/world/diff_sim.py",
      "kind": "Function",
      "name": "_clamp"
    },
    "systems/synapse/world/diff_sim.py::_finite_diff_grad": {
      "file": "systems/synapse/world/diff_sim.py",
      "kind": "Function",
      "name": "_finite_diff_grad"
    },
    "systems/synapse/world/diff_sim.py::grad_optimize": {
      "file": "systems/synapse/world/diff_sim.py",
      "kind": "Function",
      "name": "grad_optimize"
    },
    "systems/synapse/world/diff_sim.py::_apply_update": {
      "file": "systems/synapse/world/diff_sim.py",
      "kind": "Function",
      "name": "_apply_update"
    },
    "systems/synapse/world/world_model_trainer.py::WorldModelTrainer": {
      "file": "systems/synapse/world/world_model_trainer.py",
      "kind": "Class",
      "name": "WorldModelTrainer"
    },
    "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::__init__": {
      "file": "systems/synapse/world/world_model_trainer.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_featurize_episode": {
      "file": "systems/synapse/world/world_model_trainer.py",
      "kind": "Method",
      "name": "_featurize_episode"
    },
    "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_build_dataset": {
      "file": "systems/synapse/world/world_model_trainer.py",
      "kind": "Method",
      "name": "_build_dataset"
    },
    "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_train_models": {
      "file": "systems/synapse/world/world_model_trainer.py",
      "kind": "Method",
      "name": "_train_models"
    },
    "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate": {
      "file": "systems/synapse/world/world_model_trainer.py",
      "kind": "Method",
      "name": "_evaluate"
    },
    "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_atomic_save": {
      "file": "systems/synapse/world/world_model_trainer.py",
      "kind": "Method",
      "name": "_atomic_save"
    },
    "systems/synapse/explain/minset.py::min_explanation": {
      "file": "systems/synapse/explain/minset.py",
      "kind": "Function",
      "name": "min_explanation"
    },
    "systems/synapse/explain/probes.py::_clamp": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Function",
      "name": "_clamp"
    },
    "systems/synapse/explain/probes.py::_safe_float": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Function",
      "name": "_safe_float"
    },
    "systems/synapse/explain/probes.py::_topk_stats": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Function",
      "name": "_topk_stats"
    },
    "systems/synapse/explain/probes.py::_extract_sequence": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Function",
      "name": "_extract_sequence"
    },
    "systems/synapse/explain/probes.py::_sim_uncertainty": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Function",
      "name": "_sim_uncertainty"
    },
    "systems/synapse/explain/probes.py::_calc_spec_drift": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Function",
      "name": "_calc_spec_drift"
    },
    "systems/synapse/explain/probes.py::_calc_overfit": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Function",
      "name": "_calc_overfit"
    },
    "systems/synapse/explain/probes.py::_calc_fragility": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Function",
      "name": "_calc_fragility"
    },
    "systems/synapse/explain/probes.py::_calc_loop": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Function",
      "name": "_calc_loop"
    },
    "systems/synapse/explain/probes.py::MetaProbe": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Class",
      "name": "MetaProbe"
    },
    "systems/synapse/explain/probes.py::MetaProbe::__new__": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/explain/probes.py::MetaProbe::predict_risk": {
      "file": "systems/synapse/explain/probes.py",
      "kind": "Method",
      "name": "predict_risk"
    },
    "systems/synapse/qd/map_elites.py::_norm_str": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Function",
      "name": "_norm_str"
    },
    "systems/synapse/qd/map_elites.py::_risk_tier": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Function",
      "name": "_risk_tier"
    },
    "systems/synapse/qd/map_elites.py::_cost_tier": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Function",
      "name": "_cost_tier"
    },
    "systems/synapse/qd/map_elites.py::_task_family": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Function",
      "name": "_task_family"
    },
    "systems/synapse/qd/map_elites.py::QDArchive": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Class",
      "name": "QDArchive"
    },
    "systems/synapse/qd/map_elites.py::QDArchive::__new__": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/qd/map_elites.py::QDArchive::__init__": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/qd/map_elites.py::QDArchive::get_descriptor": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Method",
      "name": "get_descriptor"
    },
    "systems/synapse/qd/map_elites.py::QDArchive::insert": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Method",
      "name": "insert"
    },
    "systems/synapse/qd/map_elites.py::QDArchive::sample_niche": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Method",
      "name": "sample_niche"
    },
    "systems/synapse/qd/map_elites.py::QDArchive::get_champion_from_niche": {
      "file": "systems/synapse/qd/map_elites.py",
      "kind": "Method",
      "name": "get_champion_from_niche"
    },
    "systems/synapse/qd/replicator.py::Replicator": {
      "file": "systems/synapse/qd/replicator.py",
      "kind": "Class",
      "name": "Replicator"
    },
    "systems/synapse/qd/replicator.py::Replicator::__new__": {
      "file": "systems/synapse/qd/replicator.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/qd/replicator.py::Replicator::__init__": {
      "file": "systems/synapse/qd/replicator.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/qd/replicator.py::Replicator::update_fitness": {
      "file": "systems/synapse/qd/replicator.py",
      "kind": "Method",
      "name": "update_fitness"
    },
    "systems/synapse/qd/replicator.py::Replicator::_normalize_shares": {
      "file": "systems/synapse/qd/replicator.py",
      "kind": "Method",
      "name": "_normalize_shares"
    },
    "systems/synapse/qd/replicator.py::Replicator::rebalance_shares": {
      "file": "systems/synapse/qd/replicator.py",
      "kind": "Method",
      "name": "rebalance_shares"
    },
    "systems/synapse/qd/replicator.py::Replicator::sample_niche": {
      "file": "systems/synapse/qd/replicator.py",
      "kind": "Method",
      "name": "sample_niche"
    },
    "systems/synapse/qd/replicator.py::Replicator::get_genesis_allocation": {
      "file": "systems/synapse/qd/replicator.py",
      "kind": "Method",
      "name": "get_genesis_allocation"
    },
    "systems/synapse/economics/roi.py::ROIManager": {
      "file": "systems/synapse/economics/roi.py",
      "kind": "Class",
      "name": "ROIManager"
    },
    "systems/synapse/economics/roi.py::ROIManager::__new__": {
      "file": "systems/synapse/economics/roi.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/economics/roi.py::ROIManager::__init__": {
      "file": "systems/synapse/economics/roi.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/economics/roi.py::ROIManager::update_roi": {
      "file": "systems/synapse/economics/roi.py",
      "kind": "Method",
      "name": "update_roi"
    },
    "systems/synapse/economics/roi.py::ROIManager::get_underperforming_arms": {
      "file": "systems/synapse/economics/roi.py",
      "kind": "Method",
      "name": "get_underperforming_arms"
    },
    "systems/synapse/rerank/episodic_knn.py::EpisodicKNN": {
      "file": "systems/synapse/rerank/episodic_knn.py",
      "kind": "Class",
      "name": "EpisodicKNN"
    },
    "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::__new__": {
      "file": "systems/synapse/rerank/episodic_knn.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::__init__": {
      "file": "systems/synapse/rerank/episodic_knn.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::update": {
      "file": "systems/synapse/rerank/episodic_knn.py",
      "kind": "Method",
      "name": "update"
    },
    "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest": {
      "file": "systems/synapse/rerank/episodic_knn.py",
      "kind": "Method",
      "name": "suggest"
    },
    "systems/synapse/meta/optimizer.py::_EpisodeRow": {
      "file": "systems/synapse/meta/optimizer.py",
      "kind": "Class",
      "name": "_EpisodeRow"
    },
    "systems/synapse/meta/optimizer.py::MetaOptimizer": {
      "file": "systems/synapse/meta/optimizer.py",
      "kind": "Class",
      "name": "MetaOptimizer"
    },
    "systems/synapse/meta/optimizer.py::MetaOptimizer::__new__": {
      "file": "systems/synapse/meta/optimizer.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model": {
      "file": "systems/synapse/meta/optimizer.py",
      "kind": "Method",
      "name": "_fit_model"
    },
    "systems/synapse/meta/optimizer.py::MetaOptimizer::_predict_reward": {
      "file": "systems/synapse/meta/optimizer.py",
      "kind": "Method",
      "name": "_predict_reward"
    },
    "systems/synapse/meta/optimizer.py::MetaOptimizer::_search_best": {
      "file": "systems/synapse/meta/optimizer.py",
      "kind": "Method",
      "name": "_search_best"
    },
    "systems/synapse/safety/sentinels.py::GoodhartSentinel": {
      "file": "systems/synapse/safety/sentinels.py",
      "kind": "Class",
      "name": "GoodhartSentinel"
    },
    "systems/synapse/safety/sentinels.py::GoodhartSentinel::__new__": {
      "file": "systems/synapse/safety/sentinels.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/safety/sentinels.py::GoodhartSentinel::_featurize_trace": {
      "file": "systems/synapse/safety/sentinels.py",
      "kind": "Method",
      "name": "_featurize_trace"
    },
    "systems/synapse/safety/sentinels.py::GoodhartSentinel::check": {
      "file": "systems/synapse/safety/sentinels.py",
      "kind": "Method",
      "name": "check"
    },
    "systems/synapse/safety/sentinels.py::SentinelManager": {
      "file": "systems/synapse/safety/sentinels.py",
      "kind": "Class",
      "name": "SentinelManager"
    },
    "systems/synapse/safety/sentinels.py::SentinelManager::__new__": {
      "file": "systems/synapse/safety/sentinels.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/experiments/active.py::_risk_from_tokens": {
      "file": "systems/synapse/experiments/active.py",
      "kind": "Function",
      "name": "_risk_from_tokens"
    },
    "systems/synapse/experiments/active.py::_budget_from_tokens": {
      "file": "systems/synapse/experiments/active.py",
      "kind": "Function",
      "name": "_budget_from_tokens"
    },
    "systems/synapse/experiments/active.py::_parse_niche_key": {
      "file": "systems/synapse/experiments/active.py",
      "kind": "Function",
      "name": "_parse_niche_key"
    },
    "systems/synapse/experiments/active.py::_parse_sim_uncertainty_key": {
      "file": "systems/synapse/experiments/active.py",
      "kind": "Function",
      "name": "_parse_sim_uncertainty_key"
    },
    "systems/synapse/experiments/active.py::ExperimentDesigner": {
      "file": "systems/synapse/experiments/active.py",
      "kind": "Class",
      "name": "ExperimentDesigner"
    },
    "systems/synapse/experiments/active.py::ExperimentDesigner::__new__": {
      "file": "systems/synapse/experiments/active.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe": {
      "file": "systems/synapse/experiments/active.py",
      "kind": "Method",
      "name": "design_probe"
    },
    "systems/synapse/values/learner.py::ValueLearner": {
      "file": "systems/synapse/values/learner.py",
      "kind": "Class",
      "name": "ValueLearner"
    },
    "systems/synapse/values/learner.py::ValueLearner::__new__": {
      "file": "systems/synapse/values/learner.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/values/learner.py::ValueLearner::_bradley_terry_update": {
      "file": "systems/synapse/values/learner.py",
      "kind": "Method",
      "name": "_bradley_terry_update"
    },
    "systems/synapse/robust/ood.py::OODDetector": {
      "file": "systems/synapse/robust/ood.py",
      "kind": "Class",
      "name": "OODDetector"
    },
    "systems/synapse/robust/ood.py::OODDetector::__new__": {
      "file": "systems/synapse/robust/ood.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/robust/ood.py::OODDetector::__init__": {
      "file": "systems/synapse/robust/ood.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/synapse/robust/ood.py::OODDetector::check_shift": {
      "file": "systems/synapse/robust/ood.py",
      "kind": "Method",
      "name": "check_shift"
    },
    "systems/synapse/obs/schemas.py::GlobalStats": {
      "file": "systems/synapse/obs/schemas.py",
      "kind": "Class",
      "name": "GlobalStats"
    },
    "systems/synapse/obs/schemas.py::NicheData": {
      "file": "systems/synapse/obs/schemas.py",
      "kind": "Class",
      "name": "NicheData"
    },
    "systems/synapse/obs/schemas.py::QDCoverage": {
      "file": "systems/synapse/obs/schemas.py",
      "kind": "Class",
      "name": "QDCoverage"
    },
    "systems/synapse/obs/schemas.py::ROITrend": {
      "file": "systems/synapse/obs/schemas.py",
      "kind": "Class",
      "name": "ROITrend"
    },
    "systems/synapse/obs/schemas.py::ROITrends": {
      "file": "systems/synapse/obs/schemas.py",
      "kind": "Class",
      "name": "ROITrends"
    },
    "systems/synapse/obs/schemas.py::EpisodeTrace": {
      "file": "systems/synapse/obs/schemas.py",
      "kind": "Class",
      "name": "EpisodeTrace"
    },
    "systems/synapse/obs/schemas_metrics.py::MetricPoint": {
      "file": "systems/synapse/obs/schemas_metrics.py",
      "kind": "Class",
      "name": "MetricPoint"
    },
    "systems/synapse/obs/schemas_metrics.py::MetricSeries": {
      "file": "systems/synapse/obs/schemas_metrics.py",
      "kind": "Class",
      "name": "MetricSeries"
    },
    "systems/synapse/obs/schemas_metrics.py::MetricSeriesRequest": {
      "file": "systems/synapse/obs/schemas_metrics.py",
      "kind": "Class",
      "name": "MetricSeriesRequest"
    },
    "systems/synapse/obs/schemas_metrics.py::AgentBadge": {
      "file": "systems/synapse/obs/schemas_metrics.py",
      "kind": "Class",
      "name": "AgentBadge"
    },
    "systems/synapse/obs/schemas_metrics.py::AgentsOverview": {
      "file": "systems/synapse/obs/schemas_metrics.py",
      "kind": "Class",
      "name": "AgentsOverview"
    },
    "systems/synapse/obs/queries_metrics.py::_metric_key": {
      "file": "systems/synapse/obs/queries_metrics.py",
      "kind": "Function",
      "name": "_metric_key"
    },
    "systems/synapse/obs/queries_metrics.py::_group_key": {
      "file": "systems/synapse/obs/queries_metrics.py",
      "kind": "Function",
      "name": "_group_key"
    },
    "systems/synapse/obs/queries_metrics.py::_window_ms": {
      "file": "systems/synapse/obs/queries_metrics.py",
      "kind": "Function",
      "name": "_window_ms"
    },
    "systems/synapse/obs/queries_p95_cypher.py::p95_query": {
      "file": "systems/synapse/obs/queries_p95_cypher.py",
      "kind": "Function",
      "name": "p95_query"
    },
    "systems/synapse/obs/queries_budget.py::_window_ms": {
      "file": "systems/synapse/obs/queries_budget.py",
      "kind": "Function",
      "name": "_window_ms"
    },
    "systems/synapse/skills/schemas.py::Option": {
      "file": "systems/synapse/skills/schemas.py",
      "kind": "Class",
      "name": "Option"
    },
    "systems/synapse/skills/options.py::OptionMiner": {
      "file": "systems/synapse/skills/options.py",
      "kind": "Class",
      "name": "OptionMiner"
    },
    "systems/synapse/skills/options.py::OptionMiner::__new__": {
      "file": "systems/synapse/skills/options.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/skills/manager.py::SkillsManager": {
      "file": "systems/synapse/skills/manager.py",
      "kind": "Class",
      "name": "SkillsManager"
    },
    "systems/synapse/skills/manager.py::SkillsManager::__new__": {
      "file": "systems/synapse/skills/manager.py",
      "kind": "Method",
      "name": "__new__"
    },
    "systems/synapse/skills/manager.py::SkillsManager::select_best_option": {
      "file": "systems/synapse/skills/manager.py",
      "kind": "Method",
      "name": "select_best_option"
    },
    "systems/synapse/skills/executor.py::ExecutionState": {
      "file": "systems/synapse/skills/executor.py",
      "kind": "Class",
      "name": "ExecutionState"
    },
    "systems/synapse/skills/executor.py::OptionExecutor": {
      "file": "systems/synapse/skills/executor.py",
      "kind": "Class",
      "name": "OptionExecutor"
    },
    "systems/synapse/skills/executor.py::OptionExecutor::start_execution": {
      "file": "systems/synapse/skills/executor.py",
      "kind": "Method",
      "name": "start_execution"
    },
    "systems/synapse/skills/executor.py::OptionExecutor::continue_execution": {
      "file": "systems/synapse/skills/executor.py",
      "kind": "Method",
      "name": "continue_execution"
    },
    "systems/synapse/skills/executor.py::OptionExecutor::end_execution": {
      "file": "systems/synapse/skills/executor.py",
      "kind": "Method",
      "name": "end_execution"
    },
    "systems/synapse/skills/safe_rename.py::SafeRenameSpec": {
      "file": "systems/synapse/skills/safe_rename.py",
      "kind": "Class",
      "name": "SafeRenameSpec"
    },
    "systems/synapse/skills/extract_interface.py::ExtractInterfaceSpec": {
      "file": "systems/synapse/skills/extract_interface.py",
      "kind": "Class",
      "name": "ExtractInterfaceSpec"
    },
    "systems/synapse/skills/introduce_adapter.py::IntroduceAdapterSpec": {
      "file": "systems/synapse/skills/introduce_adapter.py",
      "kind": "Class",
      "name": "IntroduceAdapterSpec"
    },
    "systems/simula/agent/tools.py::_discover_functions": {
      "file": "systems/simula/agent/tools.py",
      "kind": "Function",
      "name": "_discover_functions"
    },
    "systems/simula/agent/tool_registry.py::_wrap": {
      "file": "systems/simula/agent/tool_registry.py",
      "kind": "Function",
      "name": "_wrap"
    },
    "systems/simula/agent/events.py::llm_tool_response_topic": {
      "file": "systems/simula/agent/events.py",
      "kind": "Function",
      "name": "llm_tool_response_topic"
    },
    "systems/simula/agent/strategies/apply_refactor_smart.py::_split_unified_diff": {
      "file": "systems/simula/agent/strategies/apply_refactor_smart.py",
      "kind": "Function",
      "name": "_split_unified_diff"
    },
    "systems/simula/agent/orchestrator/utils.py::_j": {
      "file": "systems/simula/agent/orchestrator/utils.py",
      "kind": "Function",
      "name": "_j"
    },
    "systems/simula/agent/orchestrator/utils.py::_neo4j_down": {
      "file": "systems/simula/agent/orchestrator/utils.py",
      "kind": "Function",
      "name": "_neo4j_down"
    },
    "systems/simula/agent/orchestrator/utils.py::_paths_from_unified_diff": {
      "file": "systems/simula/agent/orchestrator/utils.py",
      "kind": "Function",
      "name": "_paths_from_unified_diff"
    },
    "systems/simula/agent/orchestrator/utils.py::_guess_target_from_step_text": {
      "file": "systems/simula/agent/orchestrator/utils.py",
      "kind": "Function",
      "name": "_guess_target_from_step_text"
    },
    "systems/simula/agent/orchestrator/utils.py::_timeit": {
      "file": "systems/simula/agent/orchestrator/utils.py",
      "kind": "Class",
      "name": "_timeit"
    },
    "systems/simula/agent/orchestrator/utils.py::_timeit::__init__": {
      "file": "systems/simula/agent/orchestrator/utils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/agent/orchestrator/utils.py::_timeit::__enter__": {
      "file": "systems/simula/agent/orchestrator/utils.py",
      "kind": "Method",
      "name": "__enter__"
    },
    "systems/simula/agent/orchestrator/utils.py::_timeit::__exit__": {
      "file": "systems/simula/agent/orchestrator/utils.py",
      "kind": "Method",
      "name": "__exit__"
    },
    "systems/simula/agent/orchestrator/utils.py::_fallback_step_details": {
      "file": "systems/simula/agent/orchestrator/utils.py",
      "kind": "Function",
      "name": "_fallback_step_details"
    },
    "systems/simula/agent/orchestrator/services.py::AgentOrchestrator": {
      "file": "systems/simula/agent/orchestrator/services.py",
      "kind": "Class",
      "name": "AgentOrchestrator"
    },
    "systems/simula/agent/orchestrator/services.py::_Sim": {
      "file": "systems/simula/agent/orchestrator/services.py",
      "kind": "Class",
      "name": "_Sim"
    },
    "systems/simula/agent/orchestrator/services.py::_Sim::model_dump": {
      "file": "systems/simula/agent/orchestrator/services.py",
      "kind": "Method",
      "name": "model_dump"
    },
    "systems/simula/agent/orchestrator/services.py::_build_axon_event": {
      "file": "systems/simula/agent/orchestrator/services.py",
      "kind": "Function",
      "name": "_build_axon_event"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Class",
      "name": "ContextStore"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore::__init__": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore::load": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Method",
      "name": "load"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore::_default_state": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Method",
      "name": "_default_state"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore::save": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Method",
      "name": "save"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore::set_status": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Method",
      "name": "set_status"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore::update_dossier": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Method",
      "name": "update_dossier"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore::add_failure": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Method",
      "name": "add_failure"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore::remember_fact": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Method",
      "name": "remember_fact"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore::get_fact": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Method",
      "name": "get_fact"
    },
    "systems/simula/agent/orchestrator/context.py::ContextStore::push_summary": {
      "file": "systems/simula/agent/orchestrator/context.py",
      "kind": "Method",
      "name": "push_summary"
    },
    "systems/simula/client/synapse_client.py::SynapseClient": {
      "file": "systems/simula/client/synapse_client.py",
      "kind": "Class",
      "name": "SynapseClient"
    },
    "systems/simula/client/synapse_bridge.py::new_decision_id": {
      "file": "systems/simula/client/synapse_bridge.py",
      "kind": "Function",
      "name": "new_decision_id"
    },
    "systems/simula/client/synapse_bridge.py::Metrics": {
      "file": "systems/simula/client/synapse_bridge.py",
      "kind": "Class",
      "name": "Metrics"
    },
    "systems/simula/client/synapse_bridge.py::SynapseSession": {
      "file": "systems/simula/client/synapse_bridge.py",
      "kind": "Class",
      "name": "SynapseSession"
    },
    "systems/simula/client/synapse_bridge.py::SynapseSession::_ctx": {
      "file": "systems/simula/client/synapse_bridge.py",
      "kind": "Method",
      "name": "_ctx"
    },
    "systems/simula/client/synapse_bridge.py::SynapseSession::add_tool_call": {
      "file": "systems/simula/client/synapse_bridge.py",
      "kind": "Method",
      "name": "add_tool_call"
    },
    "systems/simula/code_sim/eval_types.py::MockTelemetry": {
      "file": "systems/simula/code_sim/eval_types.py",
      "kind": "Class",
      "name": "MockTelemetry"
    },
    "systems/simula/code_sim/eval_types.py::MockTelemetry::reward": {
      "file": "systems/simula/code_sim/eval_types.py",
      "kind": "Method",
      "name": "reward"
    },
    "systems/simula/code_sim/eval_types.py::EvalResult": {
      "file": "systems/simula/code_sim/eval_types.py",
      "kind": "Class",
      "name": "EvalResult"
    },
    "systems/simula/code_sim/eval_types.py::EvalResult::as_dict": {
      "file": "systems/simula/code_sim/eval_types.py",
      "kind": "Method",
      "name": "as_dict"
    },
    "systems/simula/code_sim/eval_types.py::EvalResult::hard_gates_ok": {
      "file": "systems/simula/code_sim/eval_types.py",
      "kind": "Method",
      "name": "hard_gates_ok"
    },
    "systems/simula/code_sim/eval_types.py::RewardAggregator": {
      "file": "systems/simula/code_sim/eval_types.py",
      "kind": "Class",
      "name": "RewardAggregator"
    },
    "systems/simula/code_sim/eval_types.py::RewardAggregator::__init__": {
      "file": "systems/simula/code_sim/eval_types.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/code_sim/eval_types.py::RewardAggregator::_calibrate": {
      "file": "systems/simula/code_sim/eval_types.py",
      "kind": "Method",
      "name": "_calibrate"
    },
    "systems/simula/code_sim/eval_types.py::RewardAggregator::score": {
      "file": "systems/simula/code_sim/eval_types.py",
      "kind": "Method",
      "name": "score"
    },
    "systems/simula/code_sim/eval_types.py::RewardAggregator::explain": {
      "file": "systems/simula/code_sim/eval_types.py",
      "kind": "Method",
      "name": "explain"
    },
    "systems/simula/code_sim/loop.py::JsonLogFormatter": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Class",
      "name": "JsonLogFormatter"
    },
    "systems/simula/code_sim/loop.py::JsonLogFormatter::format": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Method",
      "name": "format"
    },
    "systems/simula/code_sim/loop.py::setup_logging": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Function",
      "name": "setup_logging"
    },
    "systems/simula/code_sim/loop.py::sha1": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Function",
      "name": "sha1"
    },
    "systems/simula/code_sim/loop.py::SandboxCfg": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Class",
      "name": "SandboxCfg"
    },
    "systems/simula/code_sim/loop.py::OrchestratorCfg": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Class",
      "name": "OrchestratorCfg"
    },
    "systems/simula/code_sim/loop.py::SimulaConfig": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Class",
      "name": "SimulaConfig"
    },
    "systems/simula/code_sim/loop.py::SimulaConfig::load": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Method",
      "name": "load"
    },
    "systems/simula/code_sim/loop.py::ArtifactStore": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Class",
      "name": "ArtifactStore"
    },
    "systems/simula/code_sim/loop.py::ArtifactStore::__init__": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/code_sim/loop.py::ArtifactStore::write_text": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Method",
      "name": "write_text"
    },
    "systems/simula/code_sim/loop.py::ArtifactStore::save_candidate": {
      "file": "systems/simula/code_sim/loop.py",
      "kind": "Method",
      "name": "save_candidate"
    },
    "systems/simula/code_sim/planner.py::_as_list": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_as_list"
    },
    "systems/simula/code_sim/planner.py::_require_keys": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_require_keys"
    },
    "systems/simula/code_sim/planner.py::_get": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_get"
    },
    "systems/simula/code_sim/planner.py::_get_path": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_get_path"
    },
    "systems/simula/code_sim/planner.py::_normalize_targets": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_normalize_targets"
    },
    "systems/simula/code_sim/planner.py::_to_file_dict": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_to_file_dict"
    },
    "systems/simula/code_sim/planner.py::_normalize_tests": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_normalize_tests"
    },
    "systems/simula/code_sim/planner.py::_validate_iterations": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_validate_iterations"
    },
    "systems/simula/code_sim/planner.py::_validate_acceptance": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_validate_acceptance"
    },
    "systems/simula/code_sim/planner.py::_normalize_steps_list": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_normalize_steps_list"
    },
    "systems/simula/code_sim/planner.py::_listify": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_listify"
    },
    "systems/simula/code_sim/planner.py::_build_step": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "_build_step"
    },
    "systems/simula/code_sim/planner.py::plan_from_objective": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "plan_from_objective"
    },
    "systems/simula/code_sim/planner.py::match_tests_in_repo": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "match_tests_in_repo"
    },
    "systems/simula/code_sim/planner.py::pretty_plan": {
      "file": "systems/simula/code_sim/planner.py",
      "kind": "Function",
      "name": "pretty_plan"
    },
    "systems/simula/code_sim/prompts.py::_read_file_snippet": {
      "file": "systems/simula/code_sim/prompts.py",
      "kind": "Function",
      "name": "_read_file_snippet"
    },
    "systems/simula/code_sim/telemetry.py::_now_iso": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Function",
      "name": "_now_iso"
    },
    "systems/simula/code_sim/telemetry.py::_redact": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Function",
      "name": "_redact"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Class",
      "name": "Telemetry"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::from_env": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "from_env"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::enable_if_env": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "enable_if_env"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::_ensure_dirs": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "_ensure_dirs"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::_job_file": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "_job_file"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::_write": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "_write"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::start_job": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "start_job"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::end_job": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "end_job"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::llm_call": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "llm_call"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::reward": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "reward"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::log_event": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "log_event"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::tool_event": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "tool_event"
    },
    "systems/simula/code_sim/telemetry.py::Telemetry::graph_write": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "graph_write"
    },
    "systems/simula/code_sim/telemetry.py::with_job_context": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Class",
      "name": "with_job_context"
    },
    "systems/simula/code_sim/telemetry.py::with_job_context::__init__": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/code_sim/telemetry.py::with_job_context::__enter__": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "__enter__"
    },
    "systems/simula/code_sim/telemetry.py::with_job_context::__exit__": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Method",
      "name": "__exit__"
    },
    "systems/simula/code_sim/telemetry.py::track_tool": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Function",
      "name": "track_tool"
    },
    "systems/simula/code_sim/telemetry.py::_decorator": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Function",
      "name": "_decorator"
    },
    "systems/simula/code_sim/telemetry.py::_sw": {
      "file": "systems/simula/code_sim/telemetry.py",
      "kind": "Function",
      "name": "_sw"
    },
    "systems/simula/code_sim/diffutils.py::_is_ws_only_change_line": {
      "file": "systems/simula/code_sim/diffutils.py",
      "kind": "Function",
      "name": "_is_ws_only_change_line"
    },
    "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks": {
      "file": "systems/simula/code_sim/diffutils.py",
      "kind": "Function",
      "name": "drop_whitespace_only_hunks"
    },
    "systems/simula/code_sim/diffutils.py::_flush_hunk": {
      "file": "systems/simula/code_sim/diffutils.py",
      "kind": "Function",
      "name": "_flush_hunk"
    },
    "systems/simula/code_sim/archive/pareto.py::_write_jsonl": {
      "file": "systems/simula/code_sim/archive/pareto.py",
      "kind": "Function",
      "name": "_write_jsonl"
    },
    "systems/simula/code_sim/archive/pareto.py::_read_jsonl": {
      "file": "systems/simula/code_sim/archive/pareto.py",
      "kind": "Function",
      "name": "_read_jsonl"
    },
    "systems/simula/code_sim/archive/pareto.py::_dominates": {
      "file": "systems/simula/code_sim/archive/pareto.py",
      "kind": "Function",
      "name": "_dominates"
    },
    "systems/simula/code_sim/archive/pareto.py::add_candidate": {
      "file": "systems/simula/code_sim/archive/pareto.py",
      "kind": "Function",
      "name": "add_candidate"
    },
    "systems/simula/code_sim/archive/pareto.py::top_k_similar": {
      "file": "systems/simula/code_sim/archive/pareto.py",
      "kind": "Function",
      "name": "top_k_similar"
    },
    "systems/simula/code_sim/evaluators/contracts.py::_read": {
      "file": "systems/simula/code_sim/evaluators/contracts.py",
      "kind": "Function",
      "name": "_read"
    },
    "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present": {
      "file": "systems/simula/code_sim/evaluators/contracts.py",
      "kind": "Function",
      "name": "_approx_sig_present"
    },
    "systems/simula/code_sim/evaluators/contracts.py::_contains_tool_registration": {
      "file": "systems/simula/code_sim/evaluators/contracts.py",
      "kind": "Function",
      "name": "_contains_tool_registration"
    },
    "systems/simula/code_sim/evaluators/contracts.py::_git_changed": {
      "file": "systems/simula/code_sim/evaluators/contracts.py",
      "kind": "Function",
      "name": "_git_changed"
    },
    "systems/simula/code_sim/evaluators/contracts.py::run": {
      "file": "systems/simula/code_sim/evaluators/contracts.py",
      "kind": "Function",
      "name": "run"
    },
    "systems/simula/code_sim/evaluators/perf.py::_is_mapping": {
      "file": "systems/simula/code_sim/evaluators/perf.py",
      "kind": "Function",
      "name": "_is_mapping"
    },
    "systems/simula/code_sim/evaluators/perf.py::_get": {
      "file": "systems/simula/code_sim/evaluators/perf.py",
      "kind": "Function",
      "name": "_get"
    },
    "systems/simula/code_sim/evaluators/perf.py::_get_path": {
      "file": "systems/simula/code_sim/evaluators/perf.py",
      "kind": "Function",
      "name": "_get_path"
    },
    "systems/simula/code_sim/evaluators/perf.py::_extract_tests": {
      "file": "systems/simula/code_sim/evaluators/perf.py",
      "kind": "Function",
      "name": "_extract_tests"
    },
    "systems/simula/code_sim/evaluators/perf.py::_expand_tests": {
      "file": "systems/simula/code_sim/evaluators/perf.py",
      "kind": "Function",
      "name": "_expand_tests"
    },
    "systems/simula/code_sim/evaluators/perf.py::_budget_seconds": {
      "file": "systems/simula/code_sim/evaluators/perf.py",
      "kind": "Function",
      "name": "_budget_seconds"
    },
    "systems/simula/code_sim/evaluators/perf.py::run": {
      "file": "systems/simula/code_sim/evaluators/perf.py",
      "kind": "Function",
      "name": "run"
    },
    "systems/simula/code_sim/evaluators/runtime.py::run": {
      "file": "systems/simula/code_sim/evaluators/runtime.py",
      "kind": "Function",
      "name": "run"
    },
    "systems/simula/code_sim/evaluators/static.py::_run": {
      "file": "systems/simula/code_sim/evaluators/static.py",
      "kind": "Function",
      "name": "_run"
    },
    "systems/simula/code_sim/evaluators/static.py::run": {
      "file": "systems/simula/code_sim/evaluators/static.py",
      "kind": "Function",
      "name": "run"
    },
    "systems/simula/code_sim/evaluators/tests.py::_is_mapping": {
      "file": "systems/simula/code_sim/evaluators/tests.py",
      "kind": "Function",
      "name": "_is_mapping"
    },
    "systems/simula/code_sim/evaluators/tests.py::_get": {
      "file": "systems/simula/code_sim/evaluators/tests.py",
      "kind": "Function",
      "name": "_get"
    },
    "systems/simula/code_sim/evaluators/tests.py::_get_path": {
      "file": "systems/simula/code_sim/evaluators/tests.py",
      "kind": "Function",
      "name": "_get_path"
    },
    "systems/simula/code_sim/evaluators/tests.py::_extract_tests": {
      "file": "systems/simula/code_sim/evaluators/tests.py",
      "kind": "Function",
      "name": "_extract_tests"
    },
    "systems/simula/code_sim/evaluators/tests.py::_expand_test_selection": {
      "file": "systems/simula/code_sim/evaluators/tests.py",
      "kind": "Function",
      "name": "_expand_test_selection"
    },
    "systems/simula/code_sim/evaluators/tests.py::_coverage_per_file": {
      "file": "systems/simula/code_sim/evaluators/tests.py",
      "kind": "Function",
      "name": "_coverage_per_file"
    },
    "systems/simula/code_sim/evaluators/tests.py::_parse_counts": {
      "file": "systems/simula/code_sim/evaluators/tests.py",
      "kind": "Function",
      "name": "_parse_counts"
    },
    "systems/simula/code_sim/evaluators/tests.py::_ratio": {
      "file": "systems/simula/code_sim/evaluators/tests.py",
      "kind": "Function",
      "name": "_ratio"
    },
    "systems/simula/code_sim/evaluators/tests.py::run": {
      "file": "systems/simula/code_sim/evaluators/tests.py",
      "kind": "Function",
      "name": "run"
    },
    "systems/simula/code_sim/evaluators/__init__.py::EvalResult": {
      "file": "systems/simula/code_sim/evaluators/__init__.py",
      "kind": "Class",
      "name": "EvalResult"
    },
    "systems/simula/code_sim/evaluators/__init__.py::EvalResult::as_dict": {
      "file": "systems/simula/code_sim/evaluators/__init__.py",
      "kind": "Method",
      "name": "as_dict"
    },
    "systems/simula/code_sim/evaluators/__init__.py::EvalResult::unit_pass_ratio": {
      "file": "systems/simula/code_sim/evaluators/__init__.py",
      "kind": "Method",
      "name": "unit_pass_ratio"
    },
    "systems/simula/code_sim/evaluators/__init__.py::EvalResult::static_score": {
      "file": "systems/simula/code_sim/evaluators/__init__.py",
      "kind": "Method",
      "name": "static_score"
    },
    "systems/simula/code_sim/evaluators/__init__.py::EvalResult::security_score": {
      "file": "systems/simula/code_sim/evaluators/__init__.py",
      "kind": "Method",
      "name": "security_score"
    },
    "systems/simula/code_sim/evaluators/__init__.py::EvalResult::contracts_score": {
      "file": "systems/simula/code_sim/evaluators/__init__.py",
      "kind": "Method",
      "name": "contracts_score"
    },
    "systems/simula/code_sim/evaluators/__init__.py::EvalResult::summary": {
      "file": "systems/simula/code_sim/evaluators/__init__.py",
      "kind": "Method",
      "name": "summary"
    },
    "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite": {
      "file": "systems/simula/code_sim/evaluators/__init__.py",
      "kind": "Function",
      "name": "run_evaluator_suite"
    },
    "systems/simula/code_sim/evaluators/impact.py::ImpactReport": {
      "file": "systems/simula/code_sim/evaluators/impact.py",
      "kind": "Class",
      "name": "ImpactReport"
    },
    "systems/simula/code_sim/evaluators/impact.py::_iter_tests": {
      "file": "systems/simula/code_sim/evaluators/impact.py",
      "kind": "Function",
      "name": "_iter_tests"
    },
    "systems/simula/code_sim/evaluators/impact.py::_module_name_from_path": {
      "file": "systems/simula/code_sim/evaluators/impact.py",
      "kind": "Function",
      "name": "_module_name_from_path"
    },
    "systems/simula/code_sim/evaluators/impact.py::_collect_imports": {
      "file": "systems/simula/code_sim/evaluators/impact.py",
      "kind": "Function",
      "name": "_collect_imports"
    },
    "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module": {
      "file": "systems/simula/code_sim/evaluators/impact.py",
      "kind": "Function",
      "name": "_likely_test_for_module"
    },
    "systems/simula/code_sim/evaluators/impact.py::_nodeids_from_files": {
      "file": "systems/simula/code_sim/evaluators/impact.py",
      "kind": "Function",
      "name": "_nodeids_from_files"
    },
    "systems/simula/code_sim/evaluators/impact.py::compute_impact": {
      "file": "systems/simula/code_sim/evaluators/impact.py",
      "kind": "Function",
      "name": "compute_impact"
    },
    "systems/simula/code_sim/evaluators/risk.py::HygieneStatus": {
      "file": "systems/simula/code_sim/evaluators/risk.py",
      "kind": "Class",
      "name": "HygieneStatus"
    },
    "systems/simula/code_sim/evaluators/risk.py::risk_score": {
      "file": "systems/simula/code_sim/evaluators/risk.py",
      "kind": "Function",
      "name": "risk_score"
    },
    "systems/simula/code_sim/evaluators/risk.py::summarize": {
      "file": "systems/simula/code_sim/evaluators/risk.py",
      "kind": "Function",
      "name": "summarize"
    },
    "systems/simula/code_sim/evaluators/security.py::SecurityGateResult": {
      "file": "systems/simula/code_sim/evaluators/security.py",
      "kind": "Class",
      "name": "SecurityGateResult"
    },
    "systems/simula/code_sim/evaluators/security.py::SecurityGateResult::summary": {
      "file": "systems/simula/code_sim/evaluators/security.py",
      "kind": "Method",
      "name": "summary"
    },
    "systems/simula/code_sim/evaluators/security.py::scan_diff_for_secrets": {
      "file": "systems/simula/code_sim/evaluators/security.py",
      "kind": "Function",
      "name": "scan_diff_for_secrets"
    },
    "systems/simula/code_sim/evaluators/security.py::scan_diff_for_disallowed_licenses": {
      "file": "systems/simula/code_sim/evaluators/security.py",
      "kind": "Function",
      "name": "scan_diff_for_disallowed_licenses"
    },
    "systems/simula/code_sim/evaluators/security.py::scan_diff_for_credential_files": {
      "file": "systems/simula/code_sim/evaluators/security.py",
      "kind": "Function",
      "name": "scan_diff_for_credential_files"
    },
    "systems/simula/code_sim/evaluators/coverage_delta.py::DeltaCoverage": {
      "file": "systems/simula/code_sim/evaluators/coverage_delta.py",
      "kind": "Class",
      "name": "DeltaCoverage"
    },
    "systems/simula/code_sim/evaluators/coverage_delta.py::DeltaCoverage::summary": {
      "file": "systems/simula/code_sim/evaluators/coverage_delta.py",
      "kind": "Method",
      "name": "summary"
    },
    "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff": {
      "file": "systems/simula/code_sim/evaluators/coverage_delta.py",
      "kind": "Function",
      "name": "_changed_lines_from_unified_diff"
    },
    "systems/simula/code_sim/evaluators/coverage_delta.py::load_coverage_json": {
      "file": "systems/simula/code_sim/evaluators/coverage_delta.py",
      "kind": "Function",
      "name": "load_coverage_json"
    },
    "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage": {
      "file": "systems/simula/code_sim/evaluators/coverage_delta.py",
      "kind": "Function",
      "name": "compute_delta_coverage"
    },
    "systems/simula/code_sim/evaluators/spec_miner.py::AcceptanceHint": {
      "file": "systems/simula/code_sim/evaluators/spec_miner.py",
      "kind": "Class",
      "name": "AcceptanceHint"
    },
    "systems/simula/code_sim/evaluators/spec_miner.py::_suggestion": {
      "file": "systems/simula/code_sim/evaluators/spec_miner.py",
      "kind": "Function",
      "name": "_suggestion"
    },
    "systems/simula/code_sim/evaluators/spec_miner.py::derive_acceptance": {
      "file": "systems/simula/code_sim/evaluators/spec_miner.py",
      "kind": "Function",
      "name": "derive_acceptance"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_read": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_read"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_rel_for_diff": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_rel_for_diff"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_unified_diff": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_unified_diff"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_strip_shebang_and_encoding"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_module_docstring": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_ensure_module_docstring"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_parse_sig"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_build_func_def_from_sig"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_ensure_import"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::has_import": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "has_import"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_ensure_logger"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_module_has_function": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_module_has_function"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_add_guard_raises"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_ensure_return_annotations"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_arg_annotations": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Function",
      "name": "_ensure_arg_annotations"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Class",
      "name": "AstMutator"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::set_aggressive": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Method",
      "name": "set_aggressive"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Method",
      "name": "mutate"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Method",
      "name": "_do_scaffold"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_imports": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Method",
      "name": "_do_imports"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_typing": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Method",
      "name": "_do_typing"
    },
    "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths": {
      "file": "systems/simula/code_sim/mutators/ast_refactor.py",
      "kind": "Method",
      "name": "_do_error_paths"
    },
    "systems/simula/code_sim/mutators/prompt_patch.py::_strip_fences": {
      "file": "systems/simula/code_sim/mutators/prompt_patch.py",
      "kind": "Function",
      "name": "_strip_fences"
    },
    "systems/simula/code_sim/mutators/prompt_patch.py::_coerce_primary_target_text": {
      "file": "systems/simula/code_sim/mutators/prompt_patch.py",
      "kind": "Function",
      "name": "_coerce_primary_target_text"
    },
    "systems/simula/code_sim/mutators/retrieval_edit.py::_unidiff": {
      "file": "systems/simula/code_sim/mutators/retrieval_edit.py",
      "kind": "Function",
      "name": "_unidiff"
    },
    "systems/simula/code_sim/mutators/retrieval_edit.py::_read": {
      "file": "systems/simula/code_sim/mutators/retrieval_edit.py",
      "kind": "Function",
      "name": "_read"
    },
    "systems/simula/code_sim/mutators/retrieval_edit.py::_ensure_line": {
      "file": "systems/simula/code_sim/mutators/retrieval_edit.py",
      "kind": "Function",
      "name": "_ensure_line"
    },
    "systems/simula/code_sim/mutators/retrieval_edit.py::_detect_registry_path": {
      "file": "systems/simula/code_sim/mutators/retrieval_edit.py",
      "kind": "Function",
      "name": "_detect_registry_path"
    },
    "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits": {
      "file": "systems/simula/code_sim/mutators/retrieval_edit.py",
      "kind": "Function",
      "name": "retrieval_guided_edits"
    },
    "systems/simula/code_sim/mutators/mutants.py::Mutant": {
      "file": "systems/simula/code_sim/mutators/mutants.py",
      "kind": "Class",
      "name": "Mutant"
    },
    "systems/simula/code_sim/mutators/mutants.py::_mutate": {
      "file": "systems/simula/code_sim/mutators/mutants.py",
      "kind": "Function",
      "name": "_mutate"
    },
    "systems/simula/code_sim/mutators/mutants.py::Rewriter": {
      "file": "systems/simula/code_sim/mutators/mutants.py",
      "kind": "Class",
      "name": "Rewriter"
    },
    "systems/simula/code_sim/mutators/mutants.py::Rewriter::visit": {
      "file": "systems/simula/code_sim/mutators/mutants.py",
      "kind": "Method",
      "name": "visit"
    },
    "systems/simula/code_sim/mutators/mutants.py::_unified": {
      "file": "systems/simula/code_sim/mutators/mutants.py",
      "kind": "Function",
      "name": "_unified"
    },
    "systems/simula/code_sim/mutators/mutants.py::generate_mutants": {
      "file": "systems/simula/code_sim/mutators/mutants.py",
      "kind": "Function",
      "name": "generate_mutants"
    },
    "systems/simula/code_sim/mutators/runner.py::MutationResult": {
      "file": "systems/simula/code_sim/mutators/runner.py",
      "kind": "Class",
      "name": "MutationResult"
    },
    "systems/simula/code_sim/retrieval/context.py::default_neighbor_globs": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "default_neighbor_globs"
    },
    "systems/simula/code_sim/retrieval/context.py::_is_textual": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "_is_textual"
    },
    "systems/simula/code_sim/retrieval/context.py::_shorten": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "_shorten"
    },
    "systems/simula/code_sim/retrieval/context.py::_read_text": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "_read_text"
    },
    "systems/simula/code_sim/retrieval/context.py::_iter_globs": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "_iter_globs"
    },
    "systems/simula/code_sim/retrieval/context.py::_norm_rel": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "_norm_rel"
    },
    "systems/simula/code_sim/retrieval/context.py::Neighbor": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Class",
      "name": "Neighbor"
    },
    "systems/simula/code_sim/retrieval/context.py::_rank_neighbors": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "_rank_neighbors"
    },
    "systems/simula/code_sim/retrieval/context.py::_pkg_root": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "_pkg_root"
    },
    "systems/simula/code_sim/retrieval/context.py::_collect_candidates": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "_collect_candidates"
    },
    "systems/simula/code_sim/retrieval/context.py::_high_signal_slice": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "_high_signal_slice"
    },
    "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets": {
      "file": "systems/simula/code_sim/retrieval/context.py",
      "kind": "Function",
      "name": "gather_neighbor_snippets"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::SandboxConfig": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Class",
      "name": "SandboxConfig"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::BaseSession": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Class",
      "name": "BaseSession"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::BaseSession::__init__": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::BaseSession::python_exe": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Method",
      "name": "python_exe"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::BaseSession::__del__": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Method",
      "name": "__del__"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::DockerSession": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Class",
      "name": "DockerSession"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::DockerSession::python_exe": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Method",
      "name": "python_exe"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::DockerSession::_docker_base_cmd": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Method",
      "name": "_docker_base_cmd"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::LocalSession": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Class",
      "name": "LocalSession"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::LocalSession::python_exe": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Method",
      "name": "python_exe"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::DockerSandbox": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Class",
      "name": "DockerSandbox"
    },
    "systems/simula/code_sim/sandbox/sandbox.py::DockerSandbox::__init__": {
      "file": "systems/simula/code_sim/sandbox/sandbox.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/code_sim/sandbox/seeds.py::seed_config": {
      "file": "systems/simula/code_sim/sandbox/seeds.py",
      "kind": "Function",
      "name": "seed_config"
    },
    "systems/simula/code_sim/sandbox/quality.py::QualityMixin": {
      "file": "systems/simula/code_sim/sandbox/quality.py",
      "kind": "Class",
      "name": "QualityMixin"
    },
    "systems/simula/code_sim/sandbox/snapshots.py::Snapshot": {
      "file": "systems/simula/code_sim/sandbox/snapshots.py",
      "kind": "Class",
      "name": "Snapshot"
    },
    "systems/simula/code_sim/sandbox/profiles.py::SandboxProfile": {
      "file": "systems/simula/code_sim/sandbox/profiles.py",
      "kind": "Class",
      "name": "SandboxProfile"
    },
    "systems/simula/code_sim/sandbox/profiles.py::current_profile": {
      "file": "systems/simula/code_sim/sandbox/profiles.py",
      "kind": "Function",
      "name": "current_profile"
    },
    "systems/simula/code_sim/specs/schema.py::Constraints": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "Constraints"
    },
    "systems/simula/code_sim/specs/schema.py::Constraints::from_dict": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems/simula/code_sim/specs/schema.py::UnitTestsSpec": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "UnitTestsSpec"
    },
    "systems/simula/code_sim/specs/schema.py::UnitTestsSpec::from_dict": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems/simula/code_sim/specs/schema.py::ContractsSpec": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "ContractsSpec"
    },
    "systems/simula/code_sim/specs/schema.py::ContractsSpec::from_dict": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems/simula/code_sim/specs/schema.py::DocsSpec": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "DocsSpec"
    },
    "systems/simula/code_sim/specs/schema.py::DocsSpec::from_dict": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems/simula/code_sim/specs/schema.py::PerfSpec": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "PerfSpec"
    },
    "systems/simula/code_sim/specs/schema.py::PerfSpec::from_dict": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems/simula/code_sim/specs/schema.py::AcceptanceSpec": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "AcceptanceSpec"
    },
    "systems/simula/code_sim/specs/schema.py::AcceptanceSpec::from_dict": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems/simula/code_sim/specs/schema.py::RuntimeSpec": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "RuntimeSpec"
    },
    "systems/simula/code_sim/specs/schema.py::RuntimeSpec::from_dict": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems/simula/code_sim/specs/schema.py::Objective": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "Objective"
    },
    "systems/simula/code_sim/specs/schema.py::Objective::from_dict": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems/simula/code_sim/specs/schema.py::Objective::get": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "get"
    },
    "systems/simula/code_sim/specs/schema.py::StepTarget": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "StepTarget"
    },
    "systems/simula/code_sim/specs/schema.py::StepTarget::from_dict": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems/simula/code_sim/specs/schema.py::Step": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "Step"
    },
    "systems/simula/code_sim/specs/schema.py::Step::from_dict": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "from_dict"
    },
    "systems/simula/code_sim/specs/schema.py::Step::primary_target": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "primary_target"
    },
    "systems/simula/code_sim/specs/schema.py::Step::acceptance": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "acceptance"
    },
    "systems/simula/code_sim/specs/schema.py::Step::runtime": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Method",
      "name": "runtime"
    },
    "systems/simula/code_sim/specs/schema.py::Plan": {
      "file": "systems/simula/code_sim/specs/schema.py",
      "kind": "Class",
      "name": "Plan"
    },
    "systems/simula/code_sim/specs/synthesize.py::_sanitize": {
      "file": "systems/simula/code_sim/specs/synthesize.py",
      "kind": "Function",
      "name": "_sanitize"
    },
    "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout": {
      "file": "systems/simula/code_sim/specs/synthesize.py",
      "kind": "Function",
      "name": "write_tests_from_stdout"
    },
    "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests": {
      "file": "systems/simula/code_sim/specs/synthesize.py",
      "kind": "Function",
      "name": "write_oracle_tests"
    },
    "systems/simula/code_sim/specs/oracles.py::_extract_examples_from_docstring": {
      "file": "systems/simula/code_sim/specs/oracles.py",
      "kind": "Function",
      "name": "_extract_examples_from_docstring"
    },
    "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests": {
      "file": "systems/simula/code_sim/specs/oracles.py",
      "kind": "Function",
      "name": "generate_oracle_tests"
    },
    "systems/simula/code_sim/specs/minimize_trace.py::minimize_pytest_stdout": {
      "file": "systems/simula/code_sim/specs/minimize_trace.py",
      "kind": "Function",
      "name": "minimize_pytest_stdout"
    },
    "systems/simula/code_sim/utils/repo_features.py::file_degree": {
      "file": "systems/simula/code_sim/utils/repo_features.py",
      "kind": "Function",
      "name": "file_degree"
    },
    "systems/simula/code_sim/utils/repo_features.py::file_churn": {
      "file": "systems/simula/code_sim/utils/repo_features.py",
      "kind": "Function",
      "name": "file_churn"
    },
    "systems/simula/code_sim/utils/repo_features.py::plan_entropy": {
      "file": "systems/simula/code_sim/utils/repo_features.py",
      "kind": "Function",
      "name": "plan_entropy"
    },
    "systems/simula/code_sim/utils/repo_features.py::features_for_file": {
      "file": "systems/simula/code_sim/utils/repo_features.py",
      "kind": "Function",
      "name": "features_for_file"
    },
    "systems/simula/code_sim/repair/ddmin.py::_split_hunks": {
      "file": "systems/simula/code_sim/repair/ddmin.py",
      "kind": "Function",
      "name": "_split_hunks"
    },
    "systems/simula/code_sim/repair/ddmin.py::DDMinResult": {
      "file": "systems/simula/code_sim/repair/ddmin.py",
      "kind": "Class",
      "name": "DDMinResult"
    },
    "systems/simula/code_sim/repair/templates.py::Patch": {
      "file": "systems/simula/code_sim/repair/templates.py",
      "kind": "Class",
      "name": "Patch"
    },
    "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer": {
      "file": "systems/simula/code_sim/repair/templates.py",
      "kind": "Class",
      "name": "GuardNoneTransformer"
    },
    "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::__init__": {
      "file": "systems/simula/code_sim/repair/templates.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::leave_FunctionDef": {
      "file": "systems/simula/code_sim/repair/templates.py",
      "kind": "Method",
      "name": "leave_FunctionDef"
    },
    "systems/simula/code_sim/repair/templates.py::ImportFixTransformer": {
      "file": "systems/simula/code_sim/repair/templates.py",
      "kind": "Class",
      "name": "ImportFixTransformer"
    },
    "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::__init__": {
      "file": "systems/simula/code_sim/repair/templates.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::visit_FunctionDef": {
      "file": "systems/simula/code_sim/repair/templates.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::leave_Module": {
      "file": "systems/simula/code_sim/repair/templates.py",
      "kind": "Method",
      "name": "leave_Module"
    },
    "systems/simula/code_sim/repair/engine.py::RepairOutcome": {
      "file": "systems/simula/code_sim/repair/engine.py",
      "kind": "Class",
      "name": "RepairOutcome"
    },
    "systems/simula/code_sim/repair/engine.py::_generate_patches": {
      "file": "systems/simula/code_sim/repair/engine.py",
      "kind": "Function",
      "name": "_generate_patches"
    },
    "systems/simula/code_sim/diagnostics/error_parser.py::Failure": {
      "file": "systems/simula/code_sim/diagnostics/error_parser.py",
      "kind": "Class",
      "name": "Failure"
    },
    "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output": {
      "file": "systems/simula/code_sim/diagnostics/error_parser.py",
      "kind": "Function",
      "name": "parse_pytest_output"
    },
    "systems/simula/code_sim/diagnostics/error_parser.py::_flush": {
      "file": "systems/simula/code_sim/diagnostics/error_parser.py",
      "kind": "Function",
      "name": "_flush"
    },
    "systems/simula/code_sim/cache/patch_cache.py::_repo_root": {
      "file": "systems/simula/code_sim/cache/patch_cache.py",
      "kind": "Function",
      "name": "_repo_root"
    },
    "systems/simula/code_sim/cache/patch_cache.py::_cache_path": {
      "file": "systems/simula/code_sim/cache/patch_cache.py",
      "kind": "Function",
      "name": "_cache_path"
    },
    "systems/simula/code_sim/cache/patch_cache.py::_load": {
      "file": "systems/simula/code_sim/cache/patch_cache.py",
      "kind": "Function",
      "name": "_load"
    },
    "systems/simula/code_sim/cache/patch_cache.py::_save": {
      "file": "systems/simula/code_sim/cache/patch_cache.py",
      "kind": "Function",
      "name": "_save"
    },
    "systems/simula/code_sim/cache/patch_cache.py::_key": {
      "file": "systems/simula/code_sim/cache/patch_cache.py",
      "kind": "Function",
      "name": "_key"
    },
    "systems/simula/code_sim/cache/patch_cache.py::CacheEntry": {
      "file": "systems/simula/code_sim/cache/patch_cache.py",
      "kind": "Class",
      "name": "CacheEntry"
    },
    "systems/simula/code_sim/cache/patch_cache.py::get": {
      "file": "systems/simula/code_sim/cache/patch_cache.py",
      "kind": "Function",
      "name": "get"
    },
    "systems/simula/code_sim/cache/patch_cache.py::put": {
      "file": "systems/simula/code_sim/cache/patch_cache.py",
      "kind": "Function",
      "name": "put"
    },
    "systems/simula/code_sim/portfolio/strategies.py::CandidatePatch": {
      "file": "systems/simula/code_sim/portfolio/strategies.py",
      "kind": "Class",
      "name": "CandidatePatch"
    },
    "systems/simula/code_sim/portfolio/strategies.py::_read": {
      "file": "systems/simula/code_sim/portfolio/strategies.py",
      "kind": "Function",
      "name": "_read"
    },
    "systems/simula/code_sim/portfolio/strategies.py::_unified": {
      "file": "systems/simula/code_sim/portfolio/strategies.py",
      "kind": "Function",
      "name": "_unified"
    },
    "systems/simula/code_sim/portfolio/strategies.py::_insert_guard_none": {
      "file": "systems/simula/code_sim/portfolio/strategies.py",
      "kind": "Function",
      "name": "_insert_guard_none"
    },
    "systems/simula/code_sim/portfolio/strategies.py::Rewriter": {
      "file": "systems/simula/code_sim/portfolio/strategies.py",
      "kind": "Class",
      "name": "Rewriter"
    },
    "systems/simula/code_sim/portfolio/strategies.py::Rewriter::visit_FunctionDef": {
      "file": "systems/simula/code_sim/portfolio/strategies.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "systems/simula/code_sim/portfolio/strategies.py::_insert_logging": {
      "file": "systems/simula/code_sim/portfolio/strategies.py",
      "kind": "Function",
      "name": "_insert_logging"
    },
    "systems/simula/code_sim/portfolio/strategies.py::_docstring_update": {
      "file": "systems/simula/code_sim/portfolio/strategies.py",
      "kind": "Function",
      "name": "_docstring_update"
    },
    "systems/simula/code_sim/portfolio/strategies.py::generate_candidates": {
      "file": "systems/simula/code_sim/portfolio/strategies.py",
      "kind": "Function",
      "name": "generate_candidates"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::CandidatePatch": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Class",
      "name": "CandidatePatch"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::_read_text": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Function",
      "name": "_read_text"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::_unified": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Function",
      "name": "_unified"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Function",
      "name": "_extract_function"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function_to_module": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Function",
      "name": "_extract_function_to_module"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::_rename_function": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Function",
      "name": "_rename_function"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::Ren": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Class",
      "name": "Ren"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::Ren::visit_FunctionDef": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::Ren::visit_Call": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Method",
      "name": "visit_Call"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::_tighten_signature": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Function",
      "name": "_tighten_signature"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::Tight": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Class",
      "name": "Tight"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::Tight::visit_FunctionDef": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates": {
      "file": "systems/simula/code_sim/portfolio/strategies_structural.py",
      "kind": "Function",
      "name": "generate_structural_candidates"
    },
    "systems/simula/code_sim/report/proposal_report.py::_kv": {
      "file": "systems/simula/code_sim/report/proposal_report.py",
      "kind": "Function",
      "name": "_kv"
    },
    "systems/simula/code_sim/report/proposal_report.py::build_report_md": {
      "file": "systems/simula/code_sim/report/proposal_report.py",
      "kind": "Function",
      "name": "build_report_md"
    },
    "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only": {
      "file": "systems/simula/code_sim/diff/minimize.py",
      "kind": "Function",
      "name": "_is_whitespace_only"
    },
    "systems/simula/code_sim/diff/minimize.py::_strip_payload": {
      "file": "systems/simula/code_sim/diff/minimize.py",
      "kind": "Function",
      "name": "_strip_payload"
    },
    "systems/simula/code_sim/diff/minimize.py::drop_whitespace_only_hunks": {
      "file": "systems/simula/code_sim/diff/minimize.py",
      "kind": "Function",
      "name": "drop_whitespace_only_hunks"
    },
    "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests": {
      "file": "systems/simula/code_sim/impact/scope_map.py",
      "kind": "Function",
      "name": "map_symbols_to_tests"
    },
    "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph": {
      "file": "systems/simula/code_sim/impact/py_callgraph.py",
      "kind": "Function",
      "name": "build_callgraph"
    },
    "systems/simula/code_sim/impact/index.py::ImpactIndex": {
      "file": "systems/simula/code_sim/impact/index.py",
      "kind": "Class",
      "name": "ImpactIndex"
    },
    "systems/simula/code_sim/impact/index.py::load_index": {
      "file": "systems/simula/code_sim/impact/index.py",
      "kind": "Function",
      "name": "load_index"
    },
    "systems/simula/code_sim/impact/index.py::save_index": {
      "file": "systems/simula/code_sim/impact/index.py",
      "kind": "Function",
      "name": "save_index"
    },
    "systems/simula/code_sim/impact/index.py::update_callgraph": {
      "file": "systems/simula/code_sim/impact/index.py",
      "kind": "Function",
      "name": "update_callgraph"
    },
    "systems/simula/code_sim/impact/index.py::record_symbol_tests": {
      "file": "systems/simula/code_sim/impact/index.py",
      "kind": "Function",
      "name": "record_symbol_tests"
    },
    "systems/simula/code_sim/impact/index.py::k_expr_for_changed": {
      "file": "systems/simula/code_sim/impact/index.py",
      "kind": "Function",
      "name": "k_expr_for_changed"
    },
    "systems/simula/code_sim/security/secret_scan.py::Finding": {
      "file": "systems/simula/code_sim/security/secret_scan.py",
      "kind": "Class",
      "name": "Finding"
    },
    "systems/simula/code_sim/security/secret_scan.py::scan_text": {
      "file": "systems/simula/code_sim/security/secret_scan.py",
      "kind": "Function",
      "name": "scan_text"
    },
    "systems/simula/code_sim/security/secret_scan.py::scan_diff_for_secrets": {
      "file": "systems/simula/code_sim/security/secret_scan.py",
      "kind": "Function",
      "name": "scan_diff_for_secrets"
    },
    "systems/simula/policy/emit.py::patch_to_policygraph": {
      "file": "systems/simula/policy/emit.py",
      "kind": "Function",
      "name": "patch_to_policygraph"
    },
    "systems/simula/policy/effects.py::EffectAnalyzer": {
      "file": "systems/simula/policy/effects.py",
      "kind": "Class",
      "name": "EffectAnalyzer"
    },
    "systems/simula/policy/effects.py::EffectAnalyzer::__init__": {
      "file": "systems/simula/policy/effects.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/policy/effects.py::EffectAnalyzer::visit_Import": {
      "file": "systems/simula/policy/effects.py",
      "kind": "Method",
      "name": "visit_Import"
    },
    "systems/simula/policy/effects.py::EffectAnalyzer::visit_ImportFrom": {
      "file": "systems/simula/policy/effects.py",
      "kind": "Method",
      "name": "visit_ImportFrom"
    },
    "systems/simula/policy/effects.py::EffectAnalyzer::visit_Call": {
      "file": "systems/simula/policy/effects.py",
      "kind": "Method",
      "name": "visit_Call"
    },
    "systems/simula/policy/effects.py::extract_effects_from_diff": {
      "file": "systems/simula/policy/effects.py",
      "kind": "Function",
      "name": "extract_effects_from_diff"
    },
    "systems/simula/policy/eos_checker.py::PolicyFinding": {
      "file": "systems/simula/policy/eos_checker.py",
      "kind": "Class",
      "name": "PolicyFinding"
    },
    "systems/simula/policy/eos_checker.py::PolicyReport": {
      "file": "systems/simula/policy/eos_checker.py",
      "kind": "Class",
      "name": "PolicyReport"
    },
    "systems/simula/policy/eos_checker.py::PolicyReport::summary": {
      "file": "systems/simula/policy/eos_checker.py",
      "kind": "Method",
      "name": "summary"
    },
    "systems/simula/policy/eos_checker.py::load_policy_packs": {
      "file": "systems/simula/policy/eos_checker.py",
      "kind": "Function",
      "name": "load_policy_packs"
    },
    "systems/simula/policy/eos_checker.py::check_diff_against_policies": {
      "file": "systems/simula/policy/eos_checker.py",
      "kind": "Function",
      "name": "check_diff_against_policies"
    },
    "systems/simula/policy/packs.py::PolicyFinding": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Class",
      "name": "PolicyFinding"
    },
    "systems/simula/policy/packs.py::PolicyReport": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Class",
      "name": "PolicyReport"
    },
    "systems/simula/policy/packs.py::PolicyReport::summary": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Method",
      "name": "summary"
    },
    "systems/simula/policy/packs.py::PolicyPack": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Class",
      "name": "PolicyPack"
    },
    "systems/simula/policy/packs.py::_repo_root": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Function",
      "name": "_repo_root"
    },
    "systems/simula/policy/packs.py::_policy_dir": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Function",
      "name": "_policy_dir"
    },
    "systems/simula/policy/packs.py::_load_one": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Function",
      "name": "_load_one"
    },
    "systems/simula/policy/packs.py::load_policy_packs": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Function",
      "name": "load_policy_packs"
    },
    "systems/simula/policy/packs.py::_paths_from_diff": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Function",
      "name": "_paths_from_diff"
    },
    "systems/simula/policy/packs.py::_hunks_from_diff": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Function",
      "name": "_hunks_from_diff"
    },
    "systems/simula/policy/packs.py::check_diff_against_policies": {
      "file": "systems/simula/policy/packs.py",
      "kind": "Function",
      "name": "check_diff_against_policies"
    },
    "systems/simula/service/deps.py::Settings": {
      "file": "systems/simula/service/deps.py",
      "kind": "Class",
      "name": "Settings"
    },
    "systems/simula/service/services/codegen.py::JobContext": {
      "file": "systems/simula/service/services/codegen.py",
      "kind": "Class",
      "name": "JobContext"
    },
    "systems/simula/service/services/codegen.py::JobContext::__init__": {
      "file": "systems/simula/service/services/codegen.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/service/services/codegen.py::JobContext::_utc_iso": {
      "file": "systems/simula/service/services/codegen.py",
      "kind": "Method",
      "name": "_utc_iso"
    },
    "systems/simula/service/services/codegen.py::JobContext::setup_logging": {
      "file": "systems/simula/service/services/codegen.py",
      "kind": "Method",
      "name": "setup_logging"
    },
    "systems/simula/service/services/codegen.py::JobContext::teardown_logging": {
      "file": "systems/simula/service/services/codegen.py",
      "kind": "Method",
      "name": "teardown_logging"
    },
    "systems/simula/service/services/codegen.py::JobContext::finalize": {
      "file": "systems/simula/service/services/codegen.py",
      "kind": "Method",
      "name": "finalize"
    },
    "systems/simula/service/services/equor_bridge.py::_current_identity_id": {
      "file": "systems/simula/service/services/equor_bridge.py",
      "kind": "Function",
      "name": "_current_identity_id"
    },
    "systems/simula/service/services/equor_bridge.py::resolve_equor_for_agent": {
      "file": "systems/simula/service/services/equor_bridge.py",
      "kind": "Function",
      "name": "resolve_equor_for_agent"
    },
    "systems/simula/service/services/equor_bridge.py::log_call_result": {
      "file": "systems/simula/service/services/equor_bridge.py",
      "kind": "Function",
      "name": "log_call_result"
    },
    "systems/simula/service/services/prompts.py::_read_file_snippet": {
      "file": "systems/simula/service/services/prompts.py",
      "kind": "Function",
      "name": "_read_file_snippet"
    },
    "systems/simula/service/services/prompts.py::_gather_repo_context": {
      "file": "systems/simula/service/services/prompts.py",
      "kind": "Function",
      "name": "_gather_repo_context"
    },
    "systems/simula/service/services/validator.py::_is_subpath": {
      "file": "systems/simula/service/services/validator.py",
      "kind": "Function",
      "name": "_is_subpath"
    },
    "systems/simula/service/services/validator.py::safe_patch_paths": {
      "file": "systems/simula/service/services/validator.py",
      "kind": "Function",
      "name": "safe_patch_paths"
    },
    "systems/simula/service/services/vcs.py::_git_sync": {
      "file": "systems/simula/service/services/vcs.py",
      "kind": "Function",
      "name": "_git_sync"
    },
    "systems/simula/nscs/language_adapters.py::_is_node_repo": {
      "file": "systems/simula/nscs/language_adapters.py",
      "kind": "Function",
      "name": "_is_node_repo"
    },
    "systems/simula/nscs/language_adapters.py::_is_python_repo": {
      "file": "systems/simula/nscs/language_adapters.py",
      "kind": "Function",
      "name": "_is_python_repo"
    },
    "systems/simula/nscs/language_adapters_go.py::is_go_repo": {
      "file": "systems/simula/nscs/language_adapters_go.py",
      "kind": "Function",
      "name": "is_go_repo"
    },
    "systems/simula/nscs/language_adapters_java.py::is_java_repo": {
      "file": "systems/simula/nscs/language_adapters_java.py",
      "kind": "Function",
      "name": "is_java_repo"
    },
    "systems/simula/nscs/language_adapters_rust.py::is_rust_repo": {
      "file": "systems/simula/nscs/language_adapters_rust.py",
      "kind": "Function",
      "name": "is_rust_repo"
    },
    "systems/simula/nscs/specs/dsl.py::APISignature": {
      "file": "systems/simula/nscs/specs/dsl.py",
      "kind": "Class",
      "name": "APISignature"
    },
    "systems/simula/nscs/specs/dsl.py::Invariant": {
      "file": "systems/simula/nscs/specs/dsl.py",
      "kind": "Class",
      "name": "Invariant"
    },
    "systems/simula/nscs/specs/dsl.py::PerfBudget": {
      "file": "systems/simula/nscs/specs/dsl.py",
      "kind": "Class",
      "name": "PerfBudget"
    },
    "systems/simula/nscs/specs/dsl.py::ModuleSpec": {
      "file": "systems/simula/nscs/specs/dsl.py",
      "kind": "Class",
      "name": "ModuleSpec"
    },
    "systems/simula/nscs/specs/dsl.py::SystemSpec": {
      "file": "systems/simula/nscs/specs/dsl.py",
      "kind": "Class",
      "name": "SystemSpec"
    },
    "systems/simula/nscs/specs/compiler.py::compile_spec_to_constraints": {
      "file": "systems/simula/nscs/specs/compiler.py",
      "kind": "Function",
      "name": "compile_spec_to_constraints"
    },
    "systems/simula/nscs/specs/forge.py::natural_language_to_spec": {
      "file": "systems/simula/nscs/specs/forge.py",
      "kind": "Function",
      "name": "natural_language_to_spec"
    },
    "systems/simula/nscs/ir/model.py::TypeDecl": {
      "file": "systems/simula/nscs/ir/model.py",
      "kind": "Class",
      "name": "TypeDecl"
    },
    "systems/simula/nscs/ir/model.py::FuncDecl": {
      "file": "systems/simula/nscs/ir/model.py",
      "kind": "Class",
      "name": "FuncDecl"
    },
    "systems/simula/nscs/ir/model.py::ModuleIR": {
      "file": "systems/simula/nscs/ir/model.py",
      "kind": "Class",
      "name": "ModuleIR"
    },
    "systems/simula/nscs/ir/model.py::SIMIR": {
      "file": "systems/simula/nscs/ir/model.py",
      "kind": "Class",
      "name": "SIMIR"
    },
    "systems/simula/nscs/ir/model.py::SIMIR::ensure_module": {
      "file": "systems/simula/nscs/ir/model.py",
      "kind": "Method",
      "name": "ensure_module"
    },
    "systems/simula/nscs/ir/patch.py::apply_ir_patch": {
      "file": "systems/simula/nscs/ir/patch.py",
      "kind": "Function",
      "name": "apply_ir_patch"
    },
    "systems/simula/nscs/ir/backend/python.py::render_function": {
      "file": "systems/simula/nscs/ir/backend/python.py",
      "kind": "Function",
      "name": "render_function"
    },
    "systems/simula/nscs/ir/backend/python.py::render_module": {
      "file": "systems/simula/nscs/ir/backend/python.py",
      "kind": "Function",
      "name": "render_module"
    },
    "systems/simula/nscs/ir/backend/python.py::emit_files_from_ir": {
      "file": "systems/simula/nscs/ir/backend/python.py",
      "kind": "Function",
      "name": "emit_files_from_ir"
    },
    "systems/simula/nscs/verify/bundle.py::ProofBundle": {
      "file": "systems/simula/nscs/verify/bundle.py",
      "kind": "Class",
      "name": "ProofBundle"
    },
    "systems/simula/nscs/verify/bundle.py::summarize": {
      "file": "systems/simula/nscs/verify/bundle.py",
      "kind": "Function",
      "name": "summarize"
    },
    "systems/simula/nscs/verify/types_styles.py::run_types_and_style": {
      "file": "systems/simula/nscs/verify/types_styles.py",
      "kind": "Function",
      "name": "run_types_and_style"
    },
    "systems/simula/nscs/verify/props.py::run_property_tests": {
      "file": "systems/simula/nscs/verify/props.py",
      "kind": "Function",
      "name": "run_property_tests"
    },
    "systems/simula/nscs/verify/smt.py::smt_check": {
      "file": "systems/simula/nscs/verify/smt.py",
      "kind": "Function",
      "name": "smt_check"
    },
    "systems/simula/nscs/verify/perf.py::run_perf_benchmarks": {
      "file": "systems/simula/nscs/verify/perf.py",
      "kind": "Function",
      "name": "run_perf_benchmarks"
    },
    "systems/simula/nscs/twin/runner.py::run_scenarios": {
      "file": "systems/simula/nscs/twin/runner.py",
      "kind": "Function",
      "name": "run_scenarios"
    },
    "systems/simula/nscs/strategy/arms.py::_register": {
      "file": "systems/simula/nscs/strategy/arms.py",
      "kind": "Function",
      "name": "_register"
    },
    "systems/simula/agents/base.py::BaseAgent": {
      "file": "systems/simula/agents/base.py",
      "kind": "Class",
      "name": "BaseAgent"
    },
    "systems/simula/agents/base.py::BaseAgent::__init__": {
      "file": "systems/simula/agents/base.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/agents/architect.py::ArchitectAgent": {
      "file": "systems/simula/agents/architect.py",
      "kind": "Class",
      "name": "ArchitectAgent"
    },
    "systems/simula/agents/qa.py::QAAgent": {
      "file": "systems/simula/agents/qa.py",
      "kind": "Class",
      "name": "QAAgent"
    },
    "systems/simula/agents/security.py::SecurityAgent": {
      "file": "systems/simula/agents/security.py",
      "kind": "Class",
      "name": "SecurityAgent"
    },
    "systems/simula/agents/mas_runner.py::MASRunner": {
      "file": "systems/simula/agents/mas_runner.py",
      "kind": "Class",
      "name": "MASRunner"
    },
    "systems/simula/agents/mas_runner.py::MASRunner::__init__": {
      "file": "systems/simula/agents/mas_runner.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems/simula/agents/meta.py::MetaAgent": {
      "file": "systems/simula/agents/meta.py",
      "kind": "Class",
      "name": "MetaAgent"
    },
    "systems/simula/agents/reviewer.py::ReviewerAgent": {
      "file": "systems/simula/agents/reviewer.py",
      "kind": "Class",
      "name": "ReviewerAgent"
    },
    "systems/simula/review/atune_summary.py::summarize_atune": {
      "file": "systems/simula/review/atune_summary.py",
      "kind": "Function",
      "name": "summarize_atune"
    },
    "systems/simula/review/pr_templates.py::render_pr_body": {
      "file": "systems/simula/review/pr_templates.py",
      "kind": "Function",
      "name": "render_pr_body"
    },
    "systems/simula/vcs/pr_manager.py::PROpenResult": {
      "file": "systems/simula/vcs/pr_manager.py",
      "kind": "Class",
      "name": "PROpenResult"
    },
    "systems/simula/vcs/commit_msg.py::render_conventional_commit": {
      "file": "systems/simula/vcs/commit_msg.py",
      "kind": "Function",
      "name": "render_conventional_commit"
    },
    "systems/simula/vcs/commit_msg.py::title_from_evidence": {
      "file": "systems/simula/vcs/commit_msg.py",
      "kind": "Function",
      "name": "title_from_evidence"
    },
    "systems/simula/artifacts/package.py::ArtifactBundle": {
      "file": "systems/simula/artifacts/package.py",
      "kind": "Class",
      "name": "ArtifactBundle"
    },
    "systems/simula/artifacts/package.py::_sha256": {
      "file": "systems/simula/artifacts/package.py",
      "kind": "Function",
      "name": "_sha256"
    },
    "systems/simula/artifacts/package.py::_collect": {
      "file": "systems/simula/artifacts/package.py",
      "kind": "Function",
      "name": "_collect"
    },
    "systems/simula/artifacts/package.py::create_artifact_bundle": {
      "file": "systems/simula/artifacts/package.py",
      "kind": "Function",
      "name": "create_artifact_bundle"
    },
    "systems/simula/artifacts/index.py::Artifact": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Class",
      "name": "Artifact"
    },
    "systems/simula/artifacts/index.py::Artifact::to_dict": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Method",
      "name": "to_dict"
    },
    "systems/simula/artifacts/index.py::_root": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "_root"
    },
    "systems/simula/artifacts/index.py::_pkg_list": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "_pkg_list"
    },
    "systems/simula/artifacts/index.py::_pkg_read": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "_pkg_read"
    },
    "systems/simula/artifacts/index.py::_pkg_delete": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "_pkg_delete"
    },
    "systems/simula/artifacts/index.py::_is_textlike": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "_is_textlike"
    },
    "systems/simula/artifacts/index.py::_iter_candidate_files": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "_iter_candidate_files"
    },
    "systems/simula/artifacts/index.py::_infer_type": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "_infer_type"
    },
    "systems/simula/artifacts/index.py::_fs_list": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "_fs_list"
    },
    "systems/simula/artifacts/index.py::_fs_read": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "_fs_read"
    },
    "systems/simula/artifacts/index.py::_fs_delete": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "_fs_delete"
    },
    "systems/simula/artifacts/index.py::list_artifacts": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "list_artifacts"
    },
    "systems/simula/artifacts/index.py::read_artifact": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "read_artifact"
    },
    "systems/simula/artifacts/index.py::delete_artifacts": {
      "file": "systems/simula/artifacts/index.py",
      "kind": "Function",
      "name": "delete_artifacts"
    },
    "systems/simula/config/loader.py::SimulaConfig": {
      "file": "systems/simula/config/loader.py",
      "kind": "Class",
      "name": "SimulaConfig"
    },
    "systems/simula/config/loader.py::load_config": {
      "file": "systems/simula/config/loader.py",
      "kind": "Function",
      "name": "load_config"
    },
    "systems/simula/config/__init__.py::_normalize_path_string": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Function",
      "name": "_normalize_path_string"
    },
    "systems/simula/config/__init__.py::_git_root_cwd": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Function",
      "name": "_git_root_cwd"
    },
    "systems/simula/config/__init__.py::_default_repo_root": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Function",
      "name": "_default_repo_root"
    },
    "systems/simula/config/__init__.py::_optional_json_or_yaml": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Function",
      "name": "_optional_json_or_yaml"
    },
    "systems/simula/config/__init__.py::GateSettings": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Class",
      "name": "GateSettings"
    },
    "systems/simula/config/__init__.py::GateSettings::autopr_enabled": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Method",
      "name": "autopr_enabled"
    },
    "systems/simula/config/__init__.py::SandboxSettings": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Class",
      "name": "SandboxSettings"
    },
    "systems/simula/config/__init__.py::TimeoutSettings": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Class",
      "name": "TimeoutSettings"
    },
    "systems/simula/config/__init__.py::SimulaSettings": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Class",
      "name": "SimulaSettings"
    },
    "systems/simula/config/__init__.py::SimulaSettings::_parse_test_mode": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Method",
      "name": "_parse_test_mode"
    },
    "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay": {
      "file": "systems/simula/config/__init__.py",
      "kind": "Method",
      "name": "_harmonize_and_overlay"
    },
    "systems/simula/ci/pipelines.py::github_actions_yaml": {
      "file": "systems/simula/ci/pipelines.py",
      "kind": "Function",
      "name": "github_actions_yaml"
    },
    "systems/simula/ci/pipelines.py::gitlab_ci_yaml": {
      "file": "systems/simula/ci/pipelines.py",
      "kind": "Function",
      "name": "gitlab_ci_yaml"
    },
    "systems/simula/ci/pipelines.py::render_ci": {
      "file": "systems/simula/ci/pipelines.py",
      "kind": "Function",
      "name": "render_ci"
    },
    "systems/simula/ops/glue.py::quick_policy_gate": {
      "file": "systems/simula/ops/glue.py",
      "kind": "Function",
      "name": "quick_policy_gate"
    },
    "systems/simula/ops/glue.py::quick_impact_and_cov": {
      "file": "systems/simula/ops/glue.py",
      "kind": "Function",
      "name": "quick_impact_and_cov"
    },
    "systems/simula/git/pr_annotations.py::_auth_headers": {
      "file": "systems/simula/git/pr_annotations.py",
      "kind": "Function",
      "name": "_auth_headers"
    },
    "systems/simula/git/pr_annotations.py::format_proposal_comment": {
      "file": "systems/simula/git/pr_annotations.py",
      "kind": "Function",
      "name": "format_proposal_comment"
    },
    "systems/simula/scoring/score.py::composite_score": {
      "file": "systems/simula/scoring/score.py",
      "kind": "Function",
      "name": "composite_score"
    },
    "systems/simula/recipes/generator.py::Recipe": {
      "file": "systems/simula/recipes/generator.py",
      "kind": "Class",
      "name": "Recipe"
    },
    "systems/simula/recipes/generator.py::load_catalog": {
      "file": "systems/simula/recipes/generator.py",
      "kind": "Function",
      "name": "load_catalog"
    },
    "systems/simula/recipes/generator.py::save_catalog": {
      "file": "systems/simula/recipes/generator.py",
      "kind": "Function",
      "name": "save_catalog"
    },
    "systems/simula/recipes/generator.py::append_recipe": {
      "file": "systems/simula/recipes/generator.py",
      "kind": "Function",
      "name": "append_recipe"
    },
    "systems/simula/spec_eval/scoreboard.py::RunSummary": {
      "file": "systems/simula/spec_eval/scoreboard.py",
      "kind": "Class",
      "name": "RunSummary"
    },
    "systems/simula/spec_eval/scoreboard.py::_iter_json": {
      "file": "systems/simula/spec_eval/scoreboard.py",
      "kind": "Function",
      "name": "_iter_json"
    },
    "systems/simula/spec_eval/scoreboard.py::_safe_float": {
      "file": "systems/simula/spec_eval/scoreboard.py",
      "kind": "Function",
      "name": "_safe_float"
    },
    "systems/simula/spec_eval/scoreboard.py::_extract_scores": {
      "file": "systems/simula/spec_eval/scoreboard.py",
      "kind": "Function",
      "name": "_extract_scores"
    },
    "systems/simula/spec_eval/scoreboard.py::_extract_cov": {
      "file": "systems/simula/spec_eval/scoreboard.py",
      "kind": "Function",
      "name": "_extract_cov"
    },
    "systems/simula/spec_eval/scoreboard.py::_extract_created": {
      "file": "systems/simula/spec_eval/scoreboard.py",
      "kind": "Function",
      "name": "_extract_created"
    },
    "systems/simula/spec_eval/scoreboard.py::load_scoreboard": {
      "file": "systems/simula/spec_eval/scoreboard.py",
      "kind": "Function",
      "name": "load_scoreboard"
    },
    "systems/simula/risk/estimator.py::_changed_files": {
      "file": "systems/simula/risk/estimator.py",
      "kind": "Function",
      "name": "_changed_files"
    },
    "systems/simula/risk/estimator.py::_diff_magnitude": {
      "file": "systems/simula/risk/estimator.py",
      "kind": "Function",
      "name": "_diff_magnitude"
    },
    "systems/simula/risk/estimator.py::estimate_risk": {
      "file": "systems/simula/risk/estimator.py",
      "kind": "Function",
      "name": "estimate_risk"
    },
    "vendor/asteval/astutils.py::_open": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "_open"
    },
    "vendor/asteval/astutils.py::_type": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "_type"
    },
    "vendor/asteval/astutils.py::safe_pow": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "safe_pow"
    },
    "vendor/asteval/astutils.py::safe_mult": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "safe_mult"
    },
    "vendor/asteval/astutils.py::safe_add": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "safe_add"
    },
    "vendor/asteval/astutils.py::safe_lshift": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "safe_lshift"
    },
    "vendor/asteval/astutils.py::safe_getattr": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "safe_getattr"
    },
    "vendor/asteval/astutils.py::SafeFormatter": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Class",
      "name": "SafeFormatter"
    },
    "vendor/asteval/astutils.py::SafeFormatter::__init__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "vendor/asteval/astutils.py::SafeFormatter::get_field": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "get_field"
    },
    "vendor/asteval/astutils.py::safe_format": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "safe_format"
    },
    "vendor/asteval/astutils.py::valid_symbol_name": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "valid_symbol_name"
    },
    "vendor/asteval/astutils.py::op2func": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "op2func"
    },
    "vendor/asteval/astutils.py::Empty": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Class",
      "name": "Empty"
    },
    "vendor/asteval/astutils.py::Empty::__init__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "vendor/asteval/astutils.py::Empty::__nonzero__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__nonzero__"
    },
    "vendor/asteval/astutils.py::Empty::__repr__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__repr__"
    },
    "vendor/asteval/astutils.py::ExceptionHolder": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Class",
      "name": "ExceptionHolder"
    },
    "vendor/asteval/astutils.py::ExceptionHolder::__init__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "vendor/asteval/astutils.py::ExceptionHolder::get_error": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "get_error"
    },
    "vendor/asteval/astutils.py::ExceptionHolder::__repr__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__repr__"
    },
    "vendor/asteval/astutils.py::NameFinder": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Class",
      "name": "NameFinder"
    },
    "vendor/asteval/astutils.py::NameFinder::__init__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "vendor/asteval/astutils.py::NameFinder::generic_visit": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "generic_visit"
    },
    "vendor/asteval/astutils.py::get_ast_names": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "get_ast_names"
    },
    "vendor/asteval/astutils.py::valid_varname": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "valid_varname"
    },
    "vendor/asteval/astutils.py::Group": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Class",
      "name": "Group"
    },
    "vendor/asteval/astutils.py::Group::__init__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "vendor/asteval/astutils.py::Group::__setattr__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__setattr__"
    },
    "vendor/asteval/astutils.py::Group::__getattr__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__getattr__"
    },
    "vendor/asteval/astutils.py::Group::__setitem__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__setitem__"
    },
    "vendor/asteval/astutils.py::Group::get": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "get"
    },
    "vendor/asteval/astutils.py::Group::__repr__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__repr__"
    },
    "vendor/asteval/astutils.py::Group::_repr_html_": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "_repr_html_"
    },
    "vendor/asteval/astutils.py::make_symbol_table": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Function",
      "name": "make_symbol_table"
    },
    "vendor/asteval/astutils.py::Procedure": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Class",
      "name": "Procedure"
    },
    "vendor/asteval/astutils.py::Procedure::__init__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "vendor/asteval/astutils.py::Procedure::__setattr__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__setattr__"
    },
    "vendor/asteval/astutils.py::Procedure::__dir__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__dir__"
    },
    "vendor/asteval/astutils.py::Procedure::__getdoc__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__getdoc__"
    },
    "vendor/asteval/astutils.py::Procedure::__repr__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__repr__"
    },
    "vendor/asteval/astutils.py::Procedure::__signature__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__signature__"
    },
    "vendor/asteval/astutils.py::Procedure::__call__": {
      "file": "vendor/asteval/astutils.py",
      "kind": "Method",
      "name": "__call__"
    },
    "vendor/asteval/asteval.py::Interpreter": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Class",
      "name": "Interpreter"
    },
    "vendor/asteval/asteval.py::Interpreter::__init__": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "__init__"
    },
    "vendor/asteval/asteval.py::Interpreter::remove_nodehandler": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "remove_nodehandler"
    },
    "vendor/asteval/asteval.py::Interpreter::set_nodehandler": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "set_nodehandler"
    },
    "vendor/asteval/asteval.py::Interpreter::user_defined_symbols": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "user_defined_symbols"
    },
    "vendor/asteval/asteval.py::Interpreter::unimplemented": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "unimplemented"
    },
    "vendor/asteval/asteval.py::Interpreter::raise_exception": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "raise_exception"
    },
    "vendor/asteval/asteval.py::Interpreter::parse": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "parse"
    },
    "vendor/asteval/asteval.py::Interpreter::run": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "run"
    },
    "vendor/asteval/asteval.py::Interpreter::_remove_duplicate_errors": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "_remove_duplicate_errors"
    },
    "vendor/asteval/asteval.py::Interpreter::__call__": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "__call__"
    },
    "vendor/asteval/asteval.py::Interpreter::eval": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "eval"
    },
    "vendor/asteval/asteval.py::Interpreter::dump": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "dump"
    },
    "vendor/asteval/asteval.py::Interpreter::on_expr": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_expr"
    },
    "vendor/asteval/asteval.py::Interpreter::on_import": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_import"
    },
    "vendor/asteval/asteval.py::Interpreter::on_importfrom": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_importfrom"
    },
    "vendor/asteval/asteval.py::Interpreter::import_module": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "import_module"
    },
    "vendor/asteval/asteval.py::Interpreter::on_index": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_index"
    },
    "vendor/asteval/asteval.py::Interpreter::on_return": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_return"
    },
    "vendor/asteval/asteval.py::Interpreter::on_repr": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_repr"
    },
    "vendor/asteval/asteval.py::Interpreter::on_module": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_module"
    },
    "vendor/asteval/asteval.py::Interpreter::on_expression": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_expression"
    },
    "vendor/asteval/asteval.py::Interpreter::on_pass": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_pass"
    },
    "vendor/asteval/asteval.py::Interpreter::on_interrupt": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_interrupt"
    },
    "vendor/asteval/asteval.py::Interpreter::on_break": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_break"
    },
    "vendor/asteval/asteval.py::Interpreter::on_continue": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_continue"
    },
    "vendor/asteval/asteval.py::Interpreter::on_assert": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_assert"
    },
    "vendor/asteval/asteval.py::Interpreter::on_list": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_list"
    },
    "vendor/asteval/asteval.py::Interpreter::on_tuple": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_tuple"
    },
    "vendor/asteval/asteval.py::Interpreter::on_set": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_set"
    },
    "vendor/asteval/asteval.py::Interpreter::on_dict": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_dict"
    },
    "vendor/asteval/asteval.py::Interpreter::on_constant": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_constant"
    },
    "vendor/asteval/asteval.py::Interpreter::on_joinedstr": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_joinedstr"
    },
    "vendor/asteval/asteval.py::Interpreter::on_formattedvalue": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_formattedvalue"
    },
    "vendor/asteval/asteval.py::Interpreter::_getsym": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "_getsym"
    },
    "vendor/asteval/asteval.py::Interpreter::on_name": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_name"
    },
    "vendor/asteval/asteval.py::Interpreter::node_assign": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "node_assign"
    },
    "vendor/asteval/asteval.py::Interpreter::on_attribute": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_attribute"
    },
    "vendor/asteval/asteval.py::Interpreter::on_assign": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_assign"
    },
    "vendor/asteval/asteval.py::Interpreter::on_augassign": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_augassign"
    },
    "vendor/asteval/asteval.py::Interpreter::on_slice": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_slice"
    },
    "vendor/asteval/asteval.py::Interpreter::on_extslice": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_extslice"
    },
    "vendor/asteval/asteval.py::Interpreter::on_subscript": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_subscript"
    },
    "vendor/asteval/asteval.py::Interpreter::on_delete": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_delete"
    },
    "vendor/asteval/asteval.py::Interpreter::on_unaryop": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_unaryop"
    },
    "vendor/asteval/asteval.py::Interpreter::on_binop": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_binop"
    },
    "vendor/asteval/asteval.py::Interpreter::on_boolop": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_boolop"
    },
    "vendor/asteval/asteval.py::Interpreter::on_compare": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_compare"
    },
    "vendor/asteval/asteval.py::Interpreter::_printer": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "_printer"
    },
    "vendor/asteval/asteval.py::Interpreter::on_if": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_if"
    },
    "vendor/asteval/asteval.py::Interpreter::on_ifexp": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_ifexp"
    },
    "vendor/asteval/asteval.py::Interpreter::on_while": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_while"
    },
    "vendor/asteval/asteval.py::Interpreter::on_for": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_for"
    },
    "vendor/asteval/asteval.py::Interpreter::on_with": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_with"
    },
    "vendor/asteval/asteval.py::Interpreter::_comp_save_syms": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "_comp_save_syms"
    },
    "vendor/asteval/asteval.py::Interpreter::do_generator": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "do_generator"
    },
    "vendor/asteval/asteval.py::Interpreter::on_listcomp": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_listcomp"
    },
    "vendor/asteval/asteval.py::Interpreter::on_setcomp": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_setcomp"
    },
    "vendor/asteval/asteval.py::Interpreter::on_dictcomp": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_dictcomp"
    },
    "vendor/asteval/asteval.py::Interpreter::on_excepthandler": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_excepthandler"
    },
    "vendor/asteval/asteval.py::Interpreter::on_try": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_try"
    },
    "vendor/asteval/asteval.py::Interpreter::on_raise": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_raise"
    },
    "vendor/asteval/asteval.py::Interpreter::on_call": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_call"
    },
    "vendor/asteval/asteval.py::Interpreter::on_arg": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_arg"
    },
    "vendor/asteval/asteval.py::Interpreter::on_functiondef": {
      "file": "vendor/asteval/asteval.py",
      "kind": "Method",
      "name": "on_functiondef"
    },
    "asteval/astutils.py::_open": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "_open"
    },
    "asteval/astutils.py::_type": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "_type"
    },
    "asteval/astutils.py::safe_pow": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "safe_pow"
    },
    "asteval/astutils.py::safe_mult": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "safe_mult"
    },
    "asteval/astutils.py::safe_add": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "safe_add"
    },
    "asteval/astutils.py::safe_lshift": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "safe_lshift"
    },
    "asteval/astutils.py::safe_getattr": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "safe_getattr"
    },
    "asteval/astutils.py::SafeFormatter": {
      "file": "asteval/astutils.py",
      "kind": "Class",
      "name": "SafeFormatter"
    },
    "asteval/astutils.py::SafeFormatter::__init__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "asteval/astutils.py::SafeFormatter::get_field": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "get_field"
    },
    "asteval/astutils.py::safe_format": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "safe_format"
    },
    "asteval/astutils.py::valid_symbol_name": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "valid_symbol_name"
    },
    "asteval/astutils.py::op2func": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "op2func"
    },
    "asteval/astutils.py::Empty": {
      "file": "asteval/astutils.py",
      "kind": "Class",
      "name": "Empty"
    },
    "asteval/astutils.py::Empty::__init__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "asteval/astutils.py::Empty::__nonzero__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__nonzero__"
    },
    "asteval/astutils.py::Empty::__repr__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__repr__"
    },
    "asteval/astutils.py::ExceptionHolder": {
      "file": "asteval/astutils.py",
      "kind": "Class",
      "name": "ExceptionHolder"
    },
    "asteval/astutils.py::ExceptionHolder::__init__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "asteval/astutils.py::ExceptionHolder::get_error": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "get_error"
    },
    "asteval/astutils.py::ExceptionHolder::__repr__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__repr__"
    },
    "asteval/astutils.py::NameFinder": {
      "file": "asteval/astutils.py",
      "kind": "Class",
      "name": "NameFinder"
    },
    "asteval/astutils.py::NameFinder::__init__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "asteval/astutils.py::NameFinder::generic_visit": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "generic_visit"
    },
    "asteval/astutils.py::get_ast_names": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "get_ast_names"
    },
    "asteval/astutils.py::valid_varname": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "valid_varname"
    },
    "asteval/astutils.py::Group": {
      "file": "asteval/astutils.py",
      "kind": "Class",
      "name": "Group"
    },
    "asteval/astutils.py::Group::__init__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "asteval/astutils.py::Group::__setattr__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__setattr__"
    },
    "asteval/astutils.py::Group::__getattr__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__getattr__"
    },
    "asteval/astutils.py::Group::__setitem__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__setitem__"
    },
    "asteval/astutils.py::Group::get": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "get"
    },
    "asteval/astutils.py::Group::__repr__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__repr__"
    },
    "asteval/astutils.py::Group::_repr_html_": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "_repr_html_"
    },
    "asteval/astutils.py::make_symbol_table": {
      "file": "asteval/astutils.py",
      "kind": "Function",
      "name": "make_symbol_table"
    },
    "asteval/astutils.py::Procedure": {
      "file": "asteval/astutils.py",
      "kind": "Class",
      "name": "Procedure"
    },
    "asteval/astutils.py::Procedure::__init__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__init__"
    },
    "asteval/astutils.py::Procedure::__setattr__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__setattr__"
    },
    "asteval/astutils.py::Procedure::__dir__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__dir__"
    },
    "asteval/astutils.py::Procedure::__getdoc__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__getdoc__"
    },
    "asteval/astutils.py::Procedure::__repr__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__repr__"
    },
    "asteval/astutils.py::Procedure::__signature__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__signature__"
    },
    "asteval/astutils.py::Procedure::__call__": {
      "file": "asteval/astutils.py",
      "kind": "Method",
      "name": "__call__"
    },
    "asteval/asteval.py::Interpreter": {
      "file": "asteval/asteval.py",
      "kind": "Class",
      "name": "Interpreter"
    },
    "asteval/asteval.py::Interpreter::__init__": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "__init__"
    },
    "asteval/asteval.py::Interpreter::remove_nodehandler": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "remove_nodehandler"
    },
    "asteval/asteval.py::Interpreter::set_nodehandler": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "set_nodehandler"
    },
    "asteval/asteval.py::Interpreter::user_defined_symbols": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "user_defined_symbols"
    },
    "asteval/asteval.py::Interpreter::unimplemented": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "unimplemented"
    },
    "asteval/asteval.py::Interpreter::raise_exception": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "raise_exception"
    },
    "asteval/asteval.py::Interpreter::parse": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "parse"
    },
    "asteval/asteval.py::Interpreter::run": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "run"
    },
    "asteval/asteval.py::Interpreter::_remove_duplicate_errors": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "_remove_duplicate_errors"
    },
    "asteval/asteval.py::Interpreter::__call__": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "__call__"
    },
    "asteval/asteval.py::Interpreter::eval": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "eval"
    },
    "asteval/asteval.py::Interpreter::dump": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "dump"
    },
    "asteval/asteval.py::Interpreter::on_expr": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_expr"
    },
    "asteval/asteval.py::Interpreter::on_import": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_import"
    },
    "asteval/asteval.py::Interpreter::on_importfrom": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_importfrom"
    },
    "asteval/asteval.py::Interpreter::import_module": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "import_module"
    },
    "asteval/asteval.py::Interpreter::on_index": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_index"
    },
    "asteval/asteval.py::Interpreter::on_return": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_return"
    },
    "asteval/asteval.py::Interpreter::on_repr": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_repr"
    },
    "asteval/asteval.py::Interpreter::on_module": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_module"
    },
    "asteval/asteval.py::Interpreter::on_expression": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_expression"
    },
    "asteval/asteval.py::Interpreter::on_pass": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_pass"
    },
    "asteval/asteval.py::Interpreter::on_interrupt": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_interrupt"
    },
    "asteval/asteval.py::Interpreter::on_break": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_break"
    },
    "asteval/asteval.py::Interpreter::on_continue": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_continue"
    },
    "asteval/asteval.py::Interpreter::on_assert": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_assert"
    },
    "asteval/asteval.py::Interpreter::on_list": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_list"
    },
    "asteval/asteval.py::Interpreter::on_tuple": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_tuple"
    },
    "asteval/asteval.py::Interpreter::on_set": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_set"
    },
    "asteval/asteval.py::Interpreter::on_dict": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_dict"
    },
    "asteval/asteval.py::Interpreter::on_constant": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_constant"
    },
    "asteval/asteval.py::Interpreter::on_joinedstr": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_joinedstr"
    },
    "asteval/asteval.py::Interpreter::on_formattedvalue": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_formattedvalue"
    },
    "asteval/asteval.py::Interpreter::_getsym": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "_getsym"
    },
    "asteval/asteval.py::Interpreter::on_name": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_name"
    },
    "asteval/asteval.py::Interpreter::node_assign": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "node_assign"
    },
    "asteval/asteval.py::Interpreter::on_attribute": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_attribute"
    },
    "asteval/asteval.py::Interpreter::on_assign": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_assign"
    },
    "asteval/asteval.py::Interpreter::on_augassign": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_augassign"
    },
    "asteval/asteval.py::Interpreter::on_slice": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_slice"
    },
    "asteval/asteval.py::Interpreter::on_extslice": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_extslice"
    },
    "asteval/asteval.py::Interpreter::on_subscript": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_subscript"
    },
    "asteval/asteval.py::Interpreter::on_delete": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_delete"
    },
    "asteval/asteval.py::Interpreter::on_unaryop": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_unaryop"
    },
    "asteval/asteval.py::Interpreter::on_binop": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_binop"
    },
    "asteval/asteval.py::Interpreter::on_boolop": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_boolop"
    },
    "asteval/asteval.py::Interpreter::on_compare": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_compare"
    },
    "asteval/asteval.py::Interpreter::_printer": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "_printer"
    },
    "asteval/asteval.py::Interpreter::on_if": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_if"
    },
    "asteval/asteval.py::Interpreter::on_ifexp": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_ifexp"
    },
    "asteval/asteval.py::Interpreter::on_while": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_while"
    },
    "asteval/asteval.py::Interpreter::on_for": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_for"
    },
    "asteval/asteval.py::Interpreter::on_with": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_with"
    },
    "asteval/asteval.py::Interpreter::_comp_save_syms": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "_comp_save_syms"
    },
    "asteval/asteval.py::Interpreter::do_generator": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "do_generator"
    },
    "asteval/asteval.py::Interpreter::on_listcomp": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_listcomp"
    },
    "asteval/asteval.py::Interpreter::on_setcomp": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_setcomp"
    },
    "asteval/asteval.py::Interpreter::on_dictcomp": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_dictcomp"
    },
    "asteval/asteval.py::Interpreter::on_excepthandler": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_excepthandler"
    },
    "asteval/asteval.py::Interpreter::on_try": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_try"
    },
    "asteval/asteval.py::Interpreter::on_raise": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_raise"
    },
    "asteval/asteval.py::Interpreter::on_call": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_call"
    },
    "asteval/asteval.py::Interpreter::on_arg": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_arg"
    },
    "asteval/asteval.py::Interpreter::on_functiondef": {
      "file": "asteval/asteval.py",
      "kind": "Method",
      "name": "on_functiondef"
    },
    "systems.simula.nscs.ast_index._fq": {
      "file": "systems/simula/nscs/ast_index.py",
      "kind": "Function",
      "name": "_fq"
    },
    "systems.simula.nscs.ast_index.load_index": {
      "file": "systems/simula/nscs/ast_index.py",
      "kind": "Function",
      "name": "load_index"
    },
    "systems.simula.nscs.ast_index.save_index": {
      "file": "systems/simula/nscs/ast_index.py",
      "kind": "Function",
      "name": "save_index"
    },
    "systems.simula.nscs.ast_index.index_python_files": {
      "file": "systems/simula/nscs/ast_index.py",
      "kind": "Function",
      "name": "index_python_files"
    },
    "systems.simula.nscs.ast_index._V": {
      "file": "systems/simula/nscs/ast_index.py",
      "kind": "Class",
      "name": "_V"
    },
    "systems.simula.nscs.ast_index._V.__init__": {
      "file": "systems/simula/nscs/ast_index.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems.simula.nscs.ast_index._V.visit_ClassDef": {
      "file": "systems/simula/nscs/ast_index.py",
      "kind": "Method",
      "name": "visit_ClassDef"
    },
    "systems.simula.nscs.ast_index._V.visit_FunctionDef": {
      "file": "systems/simula/nscs/ast_index.py",
      "kind": "Method",
      "name": "visit_FunctionDef"
    },
    "systems.simula.nscs.ast_index.neighbors_for_symbol": {
      "file": "systems/simula/nscs/ast_index.py",
      "kind": "Function",
      "name": "neighbors_for_symbol"
    },
    "systems.simula.nscs.ast_index.list_defs_in_file": {
      "file": "systems/simula/nscs/ast_index.py",
      "kind": "Function",
      "name": "list_defs_in_file"
    },
    "systems.simula.nscs.dossier.gather_neighbor_snippets": {
      "file": "systems/simula/nscs/dossier.py",
      "kind": "Function",
      "name": "gather_neighbor_snippets"
    },
    "systems.simula.nscs.dossier.build_dossier": {
      "file": "systems/simula/nscs/dossier.py",
      "kind": "Function",
      "name": "build_dossier"
    },
    "systems.simula.agent.orchestrator_main._j": {
      "file": "systems/simula/agent/orchestrator_main.py",
      "kind": "Function",
      "name": "_j"
    },
    "systems.simula.agent.orchestrator_main._parse_llm_action": {
      "file": "systems/simula/agent/orchestrator_main.py",
      "kind": "Function",
      "name": "_parse_llm_action"
    },
    "systems.simula.agent.orchestrator_main.AgentOrchestrator": {
      "file": "systems/simula/agent/orchestrator_main.py",
      "kind": "Class",
      "name": "AgentOrchestrator"
    },
    "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__": {
      "file": "systems/simula/agent/orchestrator_main.py",
      "kind": "Method",
      "name": "__init__"
    },
    "systems.simula.agent.orchestrator_main.AgentOrchestrator._tool_specs_manifest": {
      "file": "systems/simula/agent/orchestrator_main.py",
      "kind": "Method",
      "name": "_tool_specs_manifest"
    },
    "systems.simula.agent.orchestrator_main.AgentOrchestrator._get_tool_spec": {
      "file": "systems/simula/agent/orchestrator_main.py",
      "kind": "Method",
      "name": "_get_tool_spec"
    },
    "systems.simula.agent.orchestrator.tool_safety._wrap": {
      "file": "systems/simula/agent/orchestrator/tool_safety.py",
      "kind": "Function",
      "name": "_wrap"
    },
    "systems.simula.nscs.agent_tools._normalize_paths": {
      "file": "systems/simula/nscs/agent_tools.py",
      "kind": "Function",
      "name": "_normalize_paths"
    },
    "systems.simula.nscs.agent_tools._discover_functions_from_source": {
      "file": "systems/simula/nscs/agent_tools.py",
      "kind": "Function",
      "name": "_discover_functions_from_source"
    },
    "systems.simula.nscs.agent_tools._strip_markdown_fences": {
      "file": "systems/simula/nscs/agent_tools.py",
      "kind": "Function",
      "name": "_strip_markdown_fences"
    }
  },
  "calls": [
    [
      "collate_api.py::collate_dir",
      "write"
    ],
    [
      "collate_api.py::collate_dir",
      "walk"
    ],
    [
      "collate_api.py::collate_dir",
      "exists"
    ],
    [
      "collate_api.py::collate_dir",
      "write"
    ],
    [
      "collate_api.py::collate_dir",
      "sorted"
    ],
    [
      "collate_api.py::collate_dir",
      "sorted"
    ],
    [
      "collate_api.py::collate_dir",
      "write"
    ],
    [
      "collate_api.py::collate_dir",
      "lower"
    ],
    [
      "collate_api.py::collate_dir",
      "Path"
    ],
    [
      "collate_api.py::collate_dir",
      "open"
    ],
    [
      "collate_api.py::collate_dir",
      "write"
    ],
    [
      "collate_api.py::collate_dir",
      "write"
    ],
    [
      "collate_api.py::collate_dir",
      "read"
    ],
    [
      "collate_api.py::collate_dir",
      "Path"
    ],
    [
      "collate_api.py::main",
      "ArgumentParser"
    ],
    [
      "collate_api.py::main",
      "add_argument"
    ],
    [
      "collate_api.py::main",
      "add_argument"
    ],
    [
      "collate_api.py::main",
      "add_argument"
    ],
    [
      "collate_api.py::main",
      "add_argument"
    ],
    [
      "collate_api.py::main",
      "add_argument"
    ],
    [
      "collate_api.py::main",
      "parse_args"
    ],
    [
      "collate_api.py::main",
      "Path"
    ],
    [
      "collate_api.py::main",
      "set"
    ],
    [
      "collate_api.py::main",
      "mkdir"
    ],
    [
      "collate_api.py::main",
      "print"
    ],
    [
      "collate_api.py::main",
      "strip"
    ],
    [
      "collate_api.py::main",
      "Path"
    ],
    [
      "collate_api.py::main",
      "open"
    ],
    [
      "collate_api.py::main",
      "write"
    ],
    [
      "collate_api.py::main",
      "write"
    ],
    [
      "collate_api.py::main",
      "write"
    ],
    [
      "collate_api.py::main",
      "write"
    ],
    [
      "collate_api.py::main",
      "write"
    ],
    [
      "collate_api.py::main",
      "write"
    ],
    [
      "collate_api.py::main",
      "sorted"
    ],
    [
      "collate_api.py::main",
      "startswith"
    ],
    [
      "collate_api.py::main",
      "lower"
    ],
    [
      "collate_api.py::main",
      "collate_dir"
    ],
    [
      "collate_api.py::main",
      "join"
    ],
    [
      "collate_api.py::main",
      "join"
    ],
    [
      "collate_api.py::main",
      "lower"
    ],
    [
      "collate_api.py::main",
      "isoformat"
    ],
    [
      "collate_api.py::main",
      "join"
    ],
    [
      "collate_api.py::main",
      "join"
    ],
    [
      "collate_api.py::main",
      "join"
    ],
    [
      "collate_api.py::main",
      "sorted"
    ],
    [
      "collate_api.py::main",
      "sorted"
    ],
    [
      "collate_api.py::main",
      "now"
    ],
    [
      "test_it.py::_find_escalate_url",
      "dir"
    ],
    [
      "test_it.py::_find_escalate_url",
      "RuntimeError"
    ],
    [
      "test_it.py::_find_escalate_url",
      "hasattr"
    ],
    [
      "test_it.py::_find_escalate_url",
      "startswith"
    ],
    [
      "test_it.py::_find_escalate_url",
      "lower"
    ],
    [
      "test_it.py::_find_escalate_url",
      "getattr"
    ],
    [
      "test_it.py::_find_escalate_url",
      "getattr"
    ],
    [
      "test_it.py::_find_escalate_url",
      "isinstance"
    ],
    [
      "test_it.py::_find_escalate_url",
      "append"
    ],
    [
      "test_it.py::_find_escalate_url",
      "sorted"
    ],
    [
      "unityroom.py::_to_dict",
      "hasattr"
    ],
    [
      "unityroom.py::_to_dict",
      "hasattr"
    ],
    [
      "unityroom.py::_to_dict",
      "loads"
    ],
    [
      "unityroom.py::_to_dict",
      "model_dump"
    ],
    [
      "unityroom.py::_to_dict",
      "dict"
    ],
    [
      "unityroom.py::_to_dict",
      "dumps"
    ],
    [
      "unityroom.py::_env_timeout_seconds",
      "strip"
    ],
    [
      "unityroom.py::_env_timeout_seconds",
      "int"
    ],
    [
      "unityroom.py::_env_timeout_seconds",
      "getenv"
    ],
    [
      "unityroom.py::_env_timeout_seconds",
      "max"
    ],
    [
      "api\\endpoints\\origin.py::check_admin",
      "Header"
    ],
    [
      "api\\endpoints\\origin.py::check_admin",
      "HTTPException"
    ],
    [
      "api\\endpoints\\origin.py::check_admin",
      "HTTPException"
    ],
    [
      "api\\endpoints\\origin.py::_parse_tags",
      "lstrip"
    ],
    [
      "api\\endpoints\\origin.py::_parse_tags",
      "set"
    ],
    [
      "api\\endpoints\\origin.py::_parse_tags",
      "split"
    ],
    [
      "api\\endpoints\\origin.py::_parse_tags",
      "add"
    ],
    [
      "api\\endpoints\\origin.py::_parse_tags",
      "append"
    ],
    [
      "api\\endpoints\\origin.py::_parse_tags",
      "strip"
    ],
    [
      "api\\endpoints\\evo\\core.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\core.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\core.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\core.py::ping",
      "get"
    ],
    [
      "api\\endpoints\\evo\\core.py::ping",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\core.py::ping",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::create_conflict",
      "post"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::create_conflict",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::create_conflict",
      "record_conflict"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::create_conflict",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::create_conflicts_batch",
      "post"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::create_conflicts_batch",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::create_conflicts_batch",
      "intake_conflicts"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::create_conflicts_batch",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::list_open_conflicts",
      "get"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::list_open_conflicts",
      "Query"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::list_open_conflicts",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::list_open_conflicts",
      "list_open"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::list_open_conflicts",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::get_conflict",
      "get"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::get_conflict",
      "Path"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::get_conflict",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::get_conflict",
      "get"
    ],
    [
      "api\\endpoints\\evo\\conflicts.py::get_conflict",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\hypotheses.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\hypotheses.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\hypotheses.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\hypotheses.py::spawn_hypotheses",
      "post"
    ],
    [
      "api\\endpoints\\evo\\hypotheses.py::spawn_hypotheses",
      "Header"
    ],
    [
      "api\\endpoints\\evo\\hypotheses.py::spawn_hypotheses",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\hypotheses.py::spawn_hypotheses",
      "spawn"
    ],
    [
      "api\\endpoints\\evo\\hypotheses.py::spawn_hypotheses",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::assemble_proposal",
      "post"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::assemble_proposal",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::assemble_proposal",
      "assemble"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::assemble_proposal",
      "validate_completeness"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::assemble_proposal",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::get_proposal",
      "get"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::get_proposal",
      "Path"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::get_proposal",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::get_proposal",
      "get"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::get_proposal",
      "HTTPException"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::get_proposal",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::get_proposal",
      "HTTPException"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::handover_proposal",
      "post"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::handover_proposal",
      "Path"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::handover_proposal",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::handover_proposal",
      "hasattr"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::handover_proposal",
      "handover"
    ],
    [
      "api\\endpoints\\evo\\proposals.py::handover_proposal",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\replay.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\replay.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\replay.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\replay.py::get_replay_manifest",
      "get"
    ],
    [
      "api\\endpoints\\evo\\replay.py::get_replay_manifest",
      "Path"
    ],
    [
      "api\\endpoints\\evo\\replay.py::get_replay_manifest",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\replay.py::get_replay_manifest",
      "manifest"
    ],
    [
      "api\\endpoints\\evo\\replay.py::get_replay_manifest",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\replay.py::verify_replay_capsule",
      "post"
    ],
    [
      "api\\endpoints\\evo\\replay.py::verify_replay_capsule",
      "Path"
    ],
    [
      "api\\endpoints\\evo\\replay.py::verify_replay_capsule",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\replay.py::verify_replay_capsule",
      "verify"
    ],
    [
      "api\\endpoints\\evo\\replay.py::verify_replay_capsule",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "get"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "HTTPException"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "isinstance"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "isinstance"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "get"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "get"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "str"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "str"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "isinstance"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "append"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "str"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "append"
    ],
    [
      "api\\endpoints\\evo\\escalate.py::_coerce_conflict_ids",
      "ConflictNode"
    ],
    [
      "api\\endpoints\\evo\\obviousness.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\obviousness.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\obviousness.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\obviousness.py::score_obviousness",
      "post"
    ],
    [
      "api\\endpoints\\evo\\obviousness.py::score_obviousness",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\obviousness.py::score_obviousness",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\obviousness.py::score_obviousness",
      "score"
    ],
    [
      "api\\endpoints\\evo\\obviousness.py::score_obviousness",
      "ObviousnessReport"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::plan_suite",
      "post"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::plan_suite",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::plan_suite",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::plan_suite",
      "PlanResponse"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::plan_suite",
      "plan_suite"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::request_collection",
      "post"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::request_collection",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::request_collection",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::request_collection",
      "RequestResponse"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::request_collection",
      "request"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::request_collection",
      "TicketID"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::collect",
      "get"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::collect",
      "Path"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::collect",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::collect",
      "collect"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::collect",
      "EvidenceBundle"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::collect",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::attach_replay",
      "post"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::attach_replay",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::attach_replay",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::attach_replay",
      "AttachReplayResponse"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::attach_replay",
      "attach_replay_capsule"
    ],
    [
      "api\\endpoints\\evo\\evidence.py::attach_replay",
      "ReplayCapsuleID"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::_hash",
      "hexdigest"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::_hash",
      "blake2s"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::_hash",
      "encode"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::_hash",
      "dumps"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::export_scorecard",
      "post"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::export_scorecard",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::export_scorecard",
      "build"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::export_scorecard",
      "_hash"
    ],
    [
      "api\\endpoints\\evo\\scorecards.py::export_scorecard",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\repair.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\repair.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\repair.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\repair.py::record",
      "post"
    ],
    [
      "api\\endpoints\\evo\\repair.py::record",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\repair.py::record",
      "record"
    ],
    [
      "api\\endpoints\\evo\\repair.py::record",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\repair.py::update",
      "post"
    ],
    [
      "api\\endpoints\\evo\\repair.py::update",
      "Path"
    ],
    [
      "api\\endpoints\\evo\\repair.py::update",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\repair.py::update",
      "update"
    ],
    [
      "api\\endpoints\\evo\\repair.py::update",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\repair.py::get_ticket",
      "get"
    ],
    [
      "api\\endpoints\\evo\\repair.py::get_ticket",
      "Path"
    ],
    [
      "api\\endpoints\\evo\\repair.py::get_ticket",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\repair.py::get_ticket",
      "get"
    ],
    [
      "api\\endpoints\\evo\\repair.py::get_ticket",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\repair.py::list_tickets",
      "get"
    ],
    [
      "api\\endpoints\\evo\\repair.py::list_tickets",
      "Query"
    ],
    [
      "api\\endpoints\\evo\\repair.py::list_tickets",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\repair.py::list_tickets",
      "list"
    ],
    [
      "api\\endpoints\\evo\\repair.py::list_tickets",
      "_stamp_cost"
    ],
    [
      "api\\endpoints\\evo\\cycle.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\cycle.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\cycle.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\evo\\diag.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\evo\\diag.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\evo\\diag.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "getattr"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "callable"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "getattr"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "callable"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "isinstance"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "isinstance"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "str"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "md"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "dct"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "isinstance"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "_to_dict"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "_to_dict"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_to_dict",
      "items"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_env_timeout_seconds",
      "strip"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_env_timeout_seconds",
      "int"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_env_timeout_seconds",
      "getenv"
    ],
    [
      "api\\endpoints\\unity\\deliberate.py::_env_timeout_seconds",
      "max"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_word_tokens",
      "findall"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_word_tokens",
      "lower"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_six_word_score",
      "_word_tokens"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_six_word_score",
      "max"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_six_word_score",
      "len"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_six_word_score",
      "abs"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_six_word_score",
      "len"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_punctuation_ok",
      "findall"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_overlap_ratio",
      "set"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_overlap_ratio",
      "set"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_overlap_ratio",
      "_word_tokens"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_overlap_ratio",
      "_word_tokens"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_overlap_ratio",
      "len"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_overlap_ratio",
      "len"
    ],
    [
      "api\\endpoints\\voxis\\generate_phrase.py::_overlap_ratio",
      "join"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_j",
      "dumps"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "getattr"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "getattr"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "callable"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "zeros"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "zeros"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "getter"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "asarray"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "getattr"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "hasattr"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "get_theta_mean"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "asarray"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "reshape"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_theta_for_arm",
      "reshape"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_map_budget_to_limits",
      "int"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_map_budget_to_limits",
      "int"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_map_budget_to_limits",
      "BudgetResponse"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_map_budget_to_limits",
      "int"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_map_budget_to_limits",
      "max"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_map_budget_to_limits",
      "max"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_map_budget_to_limits",
      "min"
    ],
    [
      "api\\endpoints\\synapse\\main.py::_map_budget_to_limits",
      "min"
    ],
    [
      "api\\endpoints\\synapse\\tasks.py::_is_no_arms_err",
      "lower"
    ],
    [
      "api\\endpoints\\synapse\\tasks.py::_is_no_arms_err",
      "str"
    ],
    [
      "api\\endpoints\\synapse\\tasks.py::_j",
      "dumps"
    ],
    [
      "api\\endpoints\\synapse\\dashboard_api.py::pack",
      "get"
    ],
    [
      "api\\endpoints\\synapse\\dashboard_api.py::pack",
      "sort"
    ],
    [
      "api\\endpoints\\synapse\\dashboard_api.py::pack",
      "isoformat"
    ],
    [
      "api\\endpoints\\synapse\\dashboard_api.py::pack",
      "date"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_to_dict",
      "hasattr"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_to_dict",
      "hasattr"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_to_dict",
      "loads"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_to_dict",
      "model_dump"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_to_dict",
      "dict"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_to_dict",
      "dumps"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_proposal_id",
      "strip"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_proposal_id",
      "str"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_proposal_id",
      "hexdigest"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_proposal_id",
      "str"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_proposal_id",
      "get"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_proposal_id",
      "sha256"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_proposal_id",
      "get"
    ],
    [
      "api\\endpoints\\synapse\\governor.py::_proposal_id",
      "encode"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_run",
      "run"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_run",
      "RuntimeError"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_run",
      "join"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "str"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "TemporaryDirectory"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "Path"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "copytree"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "write_text"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "write_text"
    ],
    [
      "api\\endpoints\\synapse\\listener.py::_apply_patch_to_worktree",
      "str"
    ],
    [
      "api\\endpoints\\synapse\\ui_api.py::to_summary",
      "EpisodeSummary"
    ],
    [
      "api\\endpoints\\synapse\\ui_api.py::to_summary",
      "get"
    ],
    [
      "api\\endpoints\\synk\\switchboard.py::_to_json",
      "dumps"
    ],
    [
      "api\\endpoints\\synk\\switchboard.py::_from_json",
      "isinstance"
    ],
    [
      "api\\endpoints\\synk\\switchboard.py::_from_json",
      "loads"
    ],
    [
      "api\\endpoints\\synk\\switchboard.py::_now_ms",
      "int"
    ],
    [
      "api\\endpoints\\synk\\switchboard.py::_now_ms",
      "timestamp"
    ],
    [
      "api\\endpoints\\synk\\switchboard.py::_now_ms",
      "now"
    ],
    [
      "api\\endpoints\\synk\\switchboard.py::_actor_identity",
      "getenv"
    ],
    [
      "api\\endpoints\\equor\\declare.py::_sha256_hex",
      "hexdigest"
    ],
    [
      "api\\endpoints\\equor\\declare.py::_sha256_hex",
      "sha256"
    ],
    [
      "api\\endpoints\\equor\\declare.py::_sha256_hex",
      "encode"
    ],
    [
      "api\\endpoints\\llm\\call.py::_merge_policy",
      "dict"
    ],
    [
      "api\\endpoints\\llm\\call.py::_merge_policy",
      "int"
    ],
    [
      "api\\endpoints\\llm\\call.py::_merge_policy",
      "float"
    ],
    [
      "api\\endpoints\\llm\\call.py::_safe_int",
      "int"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "hasattr"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "_safe_int"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "_safe_int"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "_safe_int"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "dict"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "isinstance"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "get"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "get"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "get"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "getattr"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "getattr"
    ],
    [
      "api\\endpoints\\llm\\call.py::_extract_usage_tokens",
      "getattr"
    ],
    [
      "api\\endpoints\\axon\\core_routes.py::_remaining_ms",
      "float"
    ],
    [
      "api\\endpoints\\axon\\core_routes.py::_remaining_ms",
      "time"
    ],
    [
      "api\\endpoints\\axon\\core_routes.py::_remaining_ms",
      "time"
    ],
    [
      "api\\endpoints\\axon\\probecraft.py::_driver_name_to_class_name",
      "replace"
    ],
    [
      "api\\endpoints\\axon\\probecraft.py::_driver_name_to_class_name",
      "join"
    ],
    [
      "api\\endpoints\\axon\\probecraft.py::_driver_name_to_class_name",
      "replace"
    ],
    [
      "api\\endpoints\\axon\\probecraft.py::_driver_name_to_class_name",
      "capitalize"
    ],
    [
      "api\\endpoints\\axon\\probecraft.py::_driver_name_to_class_name",
      "split"
    ],
    [
      "api\\endpoints\\axon\\probecraft_intake.py::_derive_driver_name",
      "replace"
    ],
    [
      "api\\endpoints\\axon\\probecraft_intake.py::_derive_driver_name",
      "replace"
    ],
    [
      "api\\endpoints\\qora\\manifest.py::build",
      "post"
    ],
    [
      "api\\endpoints\\qora\\manifest.py::build",
      "Query"
    ],
    [
      "api\\endpoints\\qora\\manifest.py::build",
      "Query"
    ],
    [
      "api\\endpoints\\qora\\manifest.py::build",
      "build_manifest"
    ],
    [
      "api\\endpoints\\qora\\manifest.py::build",
      "model_dump"
    ],
    [
      "api\\endpoints\\qora\\manifest.py::latest",
      "get"
    ],
    [
      "api\\endpoints\\qora\\manifest.py::latest",
      "Query"
    ],
    [
      "api\\endpoints\\qora\\manifest.py::latest",
      "Query"
    ],
    [
      "api\\endpoints\\qora\\manifest.py::latest",
      "build_manifest"
    ],
    [
      "api\\endpoints\\qora\\manifest.py::latest",
      "model_dump"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::build",
      "post"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::build",
      "Query"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::build",
      "Query"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::build",
      "Query"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::build",
      "Body"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::build",
      "build_manifest"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::build",
      "build_gcb"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::build",
      "model_dump"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::dispatch",
      "post"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::dispatch",
      "Query"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::dispatch",
      "Query"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::dispatch",
      "Query"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::dispatch",
      "Body"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::dispatch",
      "build_manifest"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::dispatch",
      "build_gcb"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::dispatch",
      "dispatch_gcb_to_simula"
    ],
    [
      "api\\endpoints\\qora\\gcb.py::dispatch",
      "model_dump_json"
    ],
    [
      "api\\endpoints\\simula\\replay.py::_run",
      "run"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_best_actual_utility",
      "float"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_best_actual_utility",
      "get"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_best_actual_utility",
      "get"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "int"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "get_active_kid"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "get_hmac_key_by_kid"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "hexdigest"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "time"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "RuntimeError"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "encode"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "encode"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "new"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "model_dump"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "str"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "sorted"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_sign_token",
      "model_dump"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_alloc_budget_ms",
      "max"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_alloc_budget_ms",
      "max"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_alloc_budget_ms",
      "int"
    ],
    [
      "api\\endpoints\\atune\\route_event.py::_alloc_budget_ms",
      "min"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_read_jsonl",
      "exists"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_read_jsonl",
      "open"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_read_jsonl",
      "strip"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_read_jsonl",
      "append"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_read_jsonl",
      "loads"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_latest_match",
      "glob"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_latest_match",
      "exists"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_latest_match",
      "_read_jsonl"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_latest_match",
      "str"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_latest_match",
      "append"
    ],
    [
      "api\\endpoints\\atune\\trace.py::_latest_match",
      "get"
    ],
    [
      "api\\endpoints\\atune\\meta_status.py::_env_flag",
      "getenv"
    ],
    [
      "api\\endpoints\\nova\\core.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\nova\\core.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\nova\\core.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\nova\\core.py::_hash",
      "hexdigest"
    ],
    [
      "api\\endpoints\\nova\\core.py::_hash",
      "blake2s"
    ],
    [
      "api\\endpoints\\nova\\core.py::_hash",
      "encode"
    ],
    [
      "api\\endpoints\\nova\\core.py::_hash",
      "dumps"
    ],
    [
      "api\\endpoints\\nova\\handoff.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\nova\\handoff.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\nova\\handoff.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\nova\\policy.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\nova\\policy.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\nova\\policy.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\nova\\winner.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\nova\\winner.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\nova\\winner.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\endpoints\\nova\\hyper.py::_stamp_cost",
      "str"
    ],
    [
      "api\\endpoints\\nova\\hyper.py::_stamp_cost",
      "int"
    ],
    [
      "api\\endpoints\\nova\\hyper.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\middleware\\telemetry.py::_stamp_cost",
      "str"
    ],
    [
      "api\\middleware\\telemetry.py::_stamp_cost",
      "int"
    ],
    [
      "api\\middleware\\telemetry.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api\\middleware\\telemetry.py::install",
      "middleware"
    ],
    [
      "api\\middleware\\telemetry.py::install",
      "perf_counter"
    ],
    [
      "api\\middleware\\telemetry.py::install",
      "get"
    ],
    [
      "api\\middleware\\telemetry.py::install",
      "get"
    ],
    [
      "api\\middleware\\telemetry.py::install",
      "_stamp_cost"
    ],
    [
      "api\\middleware\\telemetry.py::install",
      "get"
    ],
    [
      "api\\middleware\\telemetry.py::install",
      "call_next"
    ],
    [
      "api\\middleware\\telemetry.py::install",
      "uuid4"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_is_debug",
      "strip"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_is_debug",
      "int"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_is_debug",
      "getenv"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_dbg_print",
      "_is_debug"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_dbg_print",
      "print"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_truncate",
      "len"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_truncate",
      "len"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_validate_dims",
      "int"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_validate_dims",
      "ValueError"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_validate_dims",
      "ValueError"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "isinstance"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "isinstance"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "TypeError"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "isinstance"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "tolist"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "float"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "astype"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "float"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "TypeError"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "type"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_ensure_list",
      "loads"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_validate_text",
      "strip"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_validate_text",
      "ValueError"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_validate_text",
      "isinstance"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_validate_text",
      "strip"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_embed_sync_call",
      "_dbg_print"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_embed_sync_call",
      "embed_content"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_embed_sync_call",
      "EmbedContentConfig"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_embed_sync_call",
      "_truncate"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_sync",
      "_embed_sync_call"
    ],
    [
      "core\\llm\\embeddings_gemini.py::_sync",
      "_embed_sync_call"
    ],
    [
      "core\\llm\\gemini_cache.py::_require",
      "RuntimeError"
    ],
    [
      "core\\llm\\gemini_cache.py::_extract_system_instruction",
      "get"
    ],
    [
      "core\\llm\\gemini_cache.py::_extract_system_instruction",
      "get"
    ],
    [
      "core\\llm\\gemini_cache.py::_extract_system_instruction",
      "isinstance"
    ],
    [
      "core\\llm\\gemini_cache.py::_call",
      "create"
    ],
    [
      "core\\llm\\gemini_cache.py::_call",
      "generate_content"
    ],
    [
      "core\\llm\\env_bootstrap.py::_load",
      "getenv"
    ],
    [
      "core\\llm\\env_bootstrap.py::_load",
      "find_dotenv"
    ],
    [
      "core\\llm\\env_bootstrap.py::_load",
      "exists"
    ],
    [
      "core\\llm\\env_bootstrap.py::_load",
      "load_dotenv"
    ],
    [
      "core\\llm\\env_bootstrap.py::_load",
      "load_dotenv"
    ],
    [
      "core\\llm\\env_bootstrap.py::_load",
      "exists"
    ],
    [
      "core\\llm\\env_bootstrap.py::_load",
      "load_dotenv"
    ],
    [
      "core\\llm\\env_bootstrap.py::_load",
      "Path"
    ],
    [
      "core\\llm\\env_bootstrap.py::_load",
      "Path"
    ],
    [
      "core\\llm\\formatters.py::_normalize_provider",
      "strip"
    ],
    [
      "core\\llm\\formatters.py::_normalize_provider",
      "cast"
    ],
    [
      "core\\llm\\formatters.py::_normalize_provider",
      "cast"
    ],
    [
      "core\\llm\\formatters.py::_normalize_provider",
      "lower"
    ],
    [
      "core\\llm\\formatters.py::_sanitize_messages",
      "get"
    ],
    [
      "core\\llm\\formatters.py::_sanitize_messages",
      "get"
    ],
    [
      "core\\llm\\formatters.py::_sanitize_messages",
      "isinstance"
    ],
    [
      "core\\llm\\formatters.py::_sanitize_messages",
      "isinstance"
    ],
    [
      "core\\llm\\formatters.py::_sanitize_messages",
      "strip"
    ],
    [
      "core\\llm\\formatters.py::_sanitize_messages",
      "append"
    ],
    [
      "core\\llm\\formatters.py::_sanitize_messages",
      "cast"
    ],
    [
      "core\\llm\\formatters.py::_sanitize_messages",
      "cast"
    ],
    [
      "core\\llm\\formatters.py::_split_system",
      "append"
    ],
    [
      "core\\llm\\formatters.py::_to_openai_tools",
      "append"
    ],
    [
      "core\\llm\\formatters.py::_to_openai_tools",
      "get"
    ],
    [
      "core\\llm\\formatters.py::_to_openai_tools",
      "get"
    ],
    [
      "core\\llm\\formatters.py::_to_anthropic_tools",
      "append"
    ],
    [
      "core\\llm\\formatters.py::_to_anthropic_tools",
      "get"
    ],
    [
      "core\\llm\\formatters.py::_to_anthropic_tools",
      "get"
    ],
    [
      "core\\llm\\formatters.py::_to_gemini_tools",
      "append"
    ],
    [
      "core\\llm\\formatters.py::_to_gemini_tools",
      "get"
    ],
    [
      "core\\llm\\formatters.py::_to_gemini_tools",
      "get"
    ],
    [
      "core\\llm\\formatters.py::_map_tool_choice",
      "lower"
    ],
    [
      "core\\llm\\formatters.py::_json_mode_for_provider",
      "get"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_normalize_provider"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_sanitize_messages"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_split_system"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "strip"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "warn"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "extend"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "extend"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_to_anthropic_tools"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "int"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "float"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_json_mode_for_provider"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_to_openai_tools"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "int"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "float"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_json_mode_for_provider"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_to_gemini_contents"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_to_gemini_tools"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "int"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "float"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_json_mode_for_provider"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_map_tool_choice"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_map_tool_choice"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "append"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "_map_tool_choice"
    ],
    [
      "core\\llm\\formatters.py::format_messages_for_provider",
      "get"
    ],
    [
      "core\\llm\\formatters.py::_to_gemini_contents",
      "append"
    ],
    [
      "core\\llm\\call_llm.py::_try_parse_json",
      "strip"
    ],
    [
      "core\\llm\\call_llm.py::_try_parse_json",
      "search"
    ],
    [
      "core\\llm\\call_llm.py::_try_parse_json",
      "group"
    ],
    [
      "core\\llm\\call_llm.py::_try_parse_json",
      "loads"
    ],
    [
      "core\\llm\\call_llm.py::_try_parse_json",
      "find"
    ],
    [
      "core\\llm\\call_llm.py::_try_parse_json",
      "rfind"
    ],
    [
      "core\\llm\\call_llm.py::_try_parse_json",
      "loads"
    ],
    [
      "core\\llm\\call_llm.py::_get_provider_from_model_name",
      "lower"
    ],
    [
      "core\\llm\\call_llm.py::_get_provider_from_model_name",
      "warn"
    ],
    [
      "core\\llm\\utils.py::filter_kwargs",
      "set"
    ],
    [
      "core\\llm\\utils.py::filter_kwargs",
      "items"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "ValueError"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "strip"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "isinstance"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "ValueError"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "get"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "strip"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "append"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "ValueError"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "isinstance"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "str"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "ValueError"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "isinstance"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "lower"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "isinstance"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "str"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "replace"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "strip"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "str"
    ],
    [
      "core\\llm\\utils.py::normalize_messages",
      "get"
    ],
    [
      "core\\llm\\utils.py::normalise_messages",
      "normalize_messages"
    ],
    [
      "core\\llm\\utils.py::combine_with_system",
      "normalise_messages"
    ],
    [
      "core\\llm\\utils.py::combine_with_system",
      "strip"
    ],
    [
      "core\\llm\\utils.py::combine_with_system",
      "get"
    ],
    [
      "core\\llm\\utils.py::combine_with_system",
      "strip"
    ],
    [
      "core\\llm\\utils.py::coerce_str",
      "str"
    ],
    [
      "core\\llm\\utils.py::coerce_str",
      "repr"
    ],
    [
      "core\\llm\\utils.py::redact_secrets",
      "sub"
    ],
    [
      "core\\llm\\utils.py::redact_secrets",
      "group"
    ],
    [
      "core\\llm\\utils.py::strip_code_fences",
      "splitlines"
    ],
    [
      "core\\llm\\utils.py::strip_code_fences",
      "match"
    ],
    [
      "core\\llm\\utils.py::strip_code_fences",
      "strip"
    ],
    [
      "core\\llm\\utils.py::strip_code_fences",
      "strip"
    ],
    [
      "core\\llm\\utils.py::strip_code_fences",
      "len"
    ],
    [
      "core\\llm\\utils.py::strip_code_fences",
      "strip"
    ],
    [
      "core\\llm\\utils.py::strip_code_fences",
      "join"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "search"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "group"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "group"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "group"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "strip"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "strip"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "strip"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "strip"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "group"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "group"
    ],
    [
      "core\\llm\\utils.py::extract_json_block",
      "group"
    ],
    [
      "core\\llm\\utils.py::detect_json",
      "extract_json_block"
    ],
    [
      "core\\llm\\utils.py::detect_json",
      "strip"
    ],
    [
      "core\\llm\\utils.py::detect_json",
      "strip_code_fences"
    ],
    [
      "core\\llm\\utils.py::detect_json",
      "startswith"
    ],
    [
      "core\\llm\\utils.py::detect_json",
      "startswith"
    ],
    [
      "core\\llm\\utils.py::detect_json",
      "loads"
    ],
    [
      "core\\llm\\utils.py::safe_truncate",
      "rstrip"
    ],
    [
      "core\\llm\\utils.py::safe_truncate",
      "len"
    ],
    [
      "core\\llm\\utils.py::safe_truncate",
      "max"
    ],
    [
      "core\\llm\\utils.py::estimate_tokens",
      "max"
    ],
    [
      "core\\llm\\utils.py::estimate_tokens",
      "max"
    ],
    [
      "core\\llm\\utils.py::estimate_tokens",
      "max"
    ],
    [
      "core\\llm\\utils.py::estimate_tokens",
      "int"
    ],
    [
      "core\\llm\\utils.py::estimate_tokens",
      "len"
    ],
    [
      "core\\llm\\utils.py::estimate_tokens",
      "int"
    ],
    [
      "core\\llm\\utils.py::estimate_tokens",
      "findall"
    ],
    [
      "core\\llm\\utils.py::estimate_tokens",
      "len"
    ],
    [
      "core\\llm\\utils.py::toxicity_hint",
      "findall"
    ],
    [
      "core\\llm\\utils.py::toxicity_hint",
      "lower"
    ],
    [
      "core\\llm\\utils.py::toxicity_hint",
      "set"
    ],
    [
      "core\\llm\\utils.py::length_fit_score",
      "len"
    ],
    [
      "core\\llm\\utils.py::length_fit_score",
      "strip"
    ],
    [
      "core\\llm\\utils.py::length_fit_score",
      "int"
    ],
    [
      "core\\llm\\utils.py::length_fit_score",
      "int"
    ],
    [
      "core\\llm\\utils.py::length_fit_score",
      "clamp"
    ],
    [
      "core\\llm\\utils.py::length_fit_score",
      "clamp"
    ],
    [
      "core\\llm\\utils.py::length_fit_score",
      "max"
    ],
    [
      "core\\llm\\utils.py::length_fit_score",
      "max"
    ],
    [
      "core\\llm\\utils.py::baseline_metrics",
      "clamp"
    ],
    [
      "core\\llm\\utils.py::baseline_metrics",
      "clamp"
    ],
    [
      "core\\llm\\utils.py::baseline_metrics",
      "toxicity_hint"
    ],
    [
      "core\\llm\\utils.py::baseline_metrics",
      "length_fit_score"
    ],
    [
      "core\\llm\\utils.py::baseline_metrics",
      "list"
    ],
    [
      "core\\llm\\utils.py::first_system_message",
      "get"
    ],
    [
      "core\\llm\\utils.py::first_system_message",
      "get"
    ],
    [
      "core\\llm\\utils.py::first_system_message",
      "isinstance"
    ],
    [
      "core\\llm\\utils.py::split_system_and_chat",
      "normalise_messages"
    ],
    [
      "core\\llm\\utils.py::split_system_and_chat",
      "append"
    ],
    [
      "core\\llm\\utils.py::dedupe_system_message",
      "split_system_and_chat"
    ],
    [
      "core\\llm\\utils.py::dedupe_system_message",
      "strip"
    ],
    [
      "core\\llm\\utils.py::messages_checksum",
      "join"
    ],
    [
      "core\\llm\\utils.py::messages_checksum",
      "hexdigest"
    ],
    [
      "core\\llm\\utils.py::messages_checksum",
      "blake2b"
    ],
    [
      "core\\llm\\utils.py::messages_checksum",
      "encode"
    ],
    [
      "core\\llm\\utils.py::messages_checksum",
      "get"
    ],
    [
      "core\\llm\\utils.py::messages_checksum",
      "dumps"
    ],
    [
      "core\\llm\\utils.py::messages_checksum",
      "get"
    ],
    [
      "core\\llm\\bus.py::EventBus::__new__",
      "__new__"
    ],
    [
      "core\\llm\\bus.py::EventBus::__new__",
      "super"
    ],
    [
      "core\\llm\\bus.py::EventBus::subscribe",
      "append"
    ],
    [
      "core\\llm\\bus.py::EventBus::subscribe",
      "print"
    ],
    [
      "core\\llm\\metrics.py::_coerce_float",
      "float"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_openai",
      "int"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_openai",
      "int"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_openai",
      "int"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_openai",
      "get"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_openai",
      "get"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_openai",
      "get"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_openai",
      "get"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_openai",
      "get"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_anthropic",
      "int"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_anthropic",
      "int"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_anthropic",
      "get"
    ],
    [
      "core\\llm\\metrics.py::_tokens_from_anthropic",
      "get"
    ],
    [
      "core\\llm\\metrics.py::extract_usage_tokens",
      "any"
    ],
    [
      "core\\llm\\metrics.py::extract_usage_tokens",
      "_tokens_from_openai"
    ],
    [
      "core\\llm\\metrics.py::extract_usage_tokens",
      "get"
    ],
    [
      "core\\llm\\metrics.py::extract_usage_tokens",
      "isinstance"
    ],
    [
      "core\\llm\\metrics.py::extract_usage_tokens",
      "_tokens_from_anthropic"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "int"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "extract_usage_tokens"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "str"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "str"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "isinstance"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\llm\\metrics.py::build_telemetry",
      "get"
    ],
    [
      "core\\utils\\paths.py::rel",
      "joinpath"
    ],
    [
      "core\\utils\\text.py::extract_body_from_node",
      "join"
    ],
    [
      "core\\utils\\text.py::extract_body_from_node",
      "str"
    ],
    [
      "core\\utils\\text.py::extract_body_from_node",
      "items"
    ],
    [
      "core\\utils\\text.py::redact_secrets",
      "sub"
    ],
    [
      "core\\utils\\text.py::redact_secrets",
      "group"
    ],
    [
      "core\\utils\\text.py::safe_truncate",
      "rstrip"
    ],
    [
      "core\\utils\\text.py::safe_truncate",
      "len"
    ],
    [
      "core\\utils\\text.py::safe_truncate",
      "max"
    ],
    [
      "core\\utils\\text.py::toxicity_hint",
      "findall"
    ],
    [
      "core\\utils\\text.py::toxicity_hint",
      "lower"
    ],
    [
      "core\\utils\\text.py::toxicity_hint",
      "set"
    ],
    [
      "core\\utils\\text.py::baseline_metrics",
      "clamp"
    ],
    [
      "core\\utils\\text.py::baseline_metrics",
      "clamp"
    ],
    [
      "core\\utils\\text.py::baseline_metrics",
      "toxicity_hint"
    ],
    [
      "core\\utils\\text.py::baseline_metrics",
      "list"
    ],
    [
      "core\\utils\\time.py::now",
      "now"
    ],
    [
      "core\\utils\\time.py::now_iso",
      "isoformat"
    ],
    [
      "core\\utils\\time.py::now_iso",
      "now"
    ],
    [
      "core\\utils\\net_api.py::_dbg",
      "print"
    ],
    [
      "core\\utils\\net_api.py::_fmt",
      "items"
    ],
    [
      "core\\utils\\net_api.py::_fmt",
      "items"
    ],
    [
      "core\\utils\\net_api.py::_fmt",
      "replace"
    ],
    [
      "core\\utils\\net_api.py::_fmt",
      "replace"
    ],
    [
      "core\\utils\\net_api.py::_fmt",
      "str"
    ],
    [
      "core\\utils\\net_api.py::_fmt",
      "str"
    ],
    [
      "core\\utils\\net_api.py::_derive_key_from_path",
      "split"
    ],
    [
      "core\\utils\\net_api.py::_derive_key_from_path",
      "join"
    ],
    [
      "core\\utils\\net_api.py::_derive_key_from_path",
      "strip"
    ],
    [
      "core\\utils\\net_api.py::_derive_key_from_path",
      "startswith"
    ],
    [
      "core\\utils\\net_api.py::_derive_key_from_path",
      "endswith"
    ],
    [
      "core\\utils\\net_api.py::_derive_key_from_path",
      "append"
    ],
    [
      "core\\utils\\net_api.py::_derive_key_from_path",
      "append"
    ],
    [
      "core\\utils\\net_api.py::_derive_key_from_path",
      "upper"
    ],
    [
      "core\\utils\\net_api.py::_derive_key_from_path",
      "upper"
    ],
    [
      "core\\utils\\net_api.py::_derive_key_from_path",
      "replace"
    ],
    [
      "core\\utils\\net_api.py::_best_suffix_match",
      "endswith"
    ],
    [
      "core\\utils\\net_api.py::_best_suffix_match",
      "len"
    ],
    [
      "core\\utils\\net_api.py::_best_suffix_match",
      "len"
    ],
    [
      "core\\utils\\net_api.py::_refresh_map_sync_once",
      "dict"
    ],
    [
      "core\\utils\\net_api.py::_EndpointMeta::__getattr__",
      "AttributeError"
    ],
    [
      "core\\utils\\net_api.py::ENDPOINTS::QORA_SCHEMA_UID",
      "get"
    ],
    [
      "core\\utils\\net_api.py::ENDPOINTS::QORA_SCHEMA_UID",
      "_fmt"
    ],
    [
      "core\\utils\\net_api.py::ENDPOINTS::SYNK_FLAG_GET",
      "get"
    ],
    [
      "core\\utils\\net_api.py::ENDPOINTS::SYNK_FLAG_GET",
      "_fmt"
    ],
    [
      "core\\utils\\net_api.py::endpoints::path",
      "_fmt"
    ],
    [
      "core\\utils\\net_api.py::endpoints_snapshot",
      "len"
    ],
    [
      "core\\utils\\net_api.py::endpoints_snapshot",
      "sorted"
    ],
    [
      "core\\utils\\net_api.py::endpoints_snapshot",
      "sorted"
    ],
    [
      "core\\utils\\net_api.py::endpoints_snapshot",
      "sorted"
    ],
    [
      "core\\utils\\net_api.py::endpoints_snapshot",
      "items"
    ],
    [
      "core\\utils\\net_api.py::endpoints_snapshot",
      "items"
    ],
    [
      "core\\utils\\net_api.py::endpoints_snapshot",
      "items"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "append"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "append"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "append"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "append"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "append"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "append"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "append"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "sorted"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "append"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "join"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "keys"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "get"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "append"
    ],
    [
      "core\\utils\\net_api.py::endpoints_report_str",
      "len"
    ],
    [
      "core\\utils\\safe_eval.py::safe_eval",
      "Interpreter"
    ],
    [
      "core\\utils\\safe_eval.py::safe_eval",
      "ae"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "is_dataclass"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "str"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "decode"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "str"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "isoformat"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "float"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "_to_jsonable"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "callable"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "item"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "tolist"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "str"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "_to_jsonable"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "_to_jsonable"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "getattr"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "keys"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "getattr"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "getattr"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "_to_jsonable"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "_to_jsonable"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "items"
    ],
    [
      "core\\utils\\jsonsafe.py::_to_jsonable",
      "to_dict"
    ],
    [
      "core\\utils\\jsonsafe.py::to_jsonable",
      "_to_jsonable"
    ],
    [
      "core\\utils\\jsonsafe.py::dumps_json_safe",
      "dumps"
    ],
    [
      "core\\utils\\jsonsafe.py::dumps_json_safe",
      "_to_jsonable"
    ],
    [
      "core\\utils\\eos_tool.py::eos_tool",
      "setattr"
    ],
    [
      "core\\utils\\eos_tool.py::deco",
      "setattr"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::__init__",
      "rstrip"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::__init__",
      "Lock"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::snapshot_aliases",
      "dict"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::snapshot_routes",
      "dict"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::snapshot_routes",
      "items"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::path",
      "_resolve_alias"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::path",
      "KeyError"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::route",
      "_resolve_alias"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::route",
      "dict"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::route",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::exists",
      "_resolve_alias"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::synonyms",
      "dict"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_resolve_alias",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_resolve_alias",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "isinstance"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "isinstance"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "items"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "isinstance"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "items"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "isinstance"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "list"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "str"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "items"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "setdefault"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "keys"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "_alias_from_path"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "_alias_from_path"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "_alias_from_path"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "dict"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "dict"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "items"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "setdefault"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "setdefault"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "upper"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "replace"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "split"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "join"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "strip"
    ],
    [
      "core\\utils\\net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "str"
    ],
    [
      "core\\utils\\bus_utils.py::subscribe",
      "subscribe"
    ],
    [
      "core\\utils\\embedcsv\\embed_all.py::find_salience_csvs",
      "glob"
    ],
    [
      "core\\utils\\embedcsv\\embed_all.py::find_salience_csvs",
      "join"
    ],
    [
      "core\\utils\\embedcsv\\embed_all.py::main",
      "find_salience_csvs"
    ],
    [
      "core\\utils\\embedcsv\\embed_all.py::main",
      "print"
    ],
    [
      "core\\utils\\embedcsv\\embed_all.py::main",
      "print"
    ],
    [
      "core\\utils\\embedcsv\\embed_all.py::main",
      "replace"
    ],
    [
      "core\\utils\\embedcsv\\embed_all.py::main",
      "embed_and_save_csv"
    ],
    [
      "core\\utils\\embedcsv\\upload_all.py::parse_embedding",
      "literal_eval"
    ],
    [
      "core\\utils\\embedcsv\\upload_all.py::parse_embedding",
      "print"
    ],
    [
      "core\\utils\\vector_ops\\cluster.py::cluster_vectors",
      "HDBSCAN"
    ],
    [
      "core\\utils\\vector_ops\\cluster.py::cluster_vectors",
      "fit_predict"
    ],
    [
      "core\\utils\\vector_ops\\cluster.py::cluster_vectors",
      "tolist"
    ],
    [
      "core\\utils\\vector_ops\\cluster.py::cluster_vectors",
      "array"
    ],
    [
      "core\\utils\\vector_ops\\dimreduce.py::reduce_vectors",
      "UMAP"
    ],
    [
      "core\\utils\\vector_ops\\dimreduce.py::reduce_vectors",
      "fit_transform"
    ],
    [
      "core\\utils\\vector_ops\\dimreduce.py::reduce_vectors",
      "tolist"
    ],
    [
      "core\\utils\\vector_ops\\dimreduce.py::reduce_vectors",
      "array"
    ],
    [
      "core\\utils\\neo\\neo_driver.py::get_driver",
      "RuntimeError"
    ],
    [
      "core\\utils\\neo\\neo_safe.py::_is_neo_driver",
      "hasattr"
    ],
    [
      "core\\utils\\neo\\neo_safe.py::_is_neo_driver",
      "hasattr"
    ],
    [
      "core\\utils\\neo\\neo_safe.py::coalesce_driver",
      "_is_neo_driver"
    ],
    [
      "core\\utils\\neo\\neo_safe.py::coalesce_driver",
      "isinstance"
    ],
    [
      "core\\utils\\neo\\neo_safe.py::coalesce_driver",
      "warn"
    ],
    [
      "core\\utils\\neo\\neo_safe.py::coalesce_driver",
      "warn"
    ],
    [
      "core\\utils\\neo\\neo_safe.py::coalesce_driver",
      "lower"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_payload",
      "isinstance"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_payload",
      "isinstance"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_payload",
      "isinstance"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_id",
      "strip"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_id",
      "str"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_id",
      "hexdigest"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_id",
      "str"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_id",
      "get"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_id",
      "sha256"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_id",
      "get"
    ],
    [
      "core\\utils\\cicd\\listener.py::_proposal_id",
      "encode"
    ],
    [
      "core\\utils\\cicd\\listener.py::CICDListener::__new__",
      "__new__"
    ],
    [
      "core\\utils\\cicd\\listener.py::CICDListener::__new__",
      "Lock"
    ],
    [
      "core\\utils\\cicd\\listener.py::CICDListener::__new__",
      "super"
    ],
    [
      "core\\utils\\cicd\\listener.py::CICDListener::__init__",
      "get_event_loop"
    ],
    [
      "core\\utils\\cicd\\listener.py::CICDListener::__init__",
      "create_task"
    ],
    [
      "core\\utils\\cicd\\listener.py::CICDListener::__init__",
      "info"
    ],
    [
      "core\\utils\\cicd\\listener.py::CICDListener::__init__",
      "_subscribe"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "get_registry"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "get_by_scope"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "print"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "print"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "print"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "print"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "print"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "ValueError"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "PromptSpec"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "IdentityBlock"
    ],
    [
      "core\\prompting\\orchestrator.py::_resolve_spec",
      "Outputs"
    ],
    [
      "core\\prompting\\spec.py::Outputs::_check_schema_source",
      "model_validator"
    ],
    [
      "core\\prompting\\spec.py::Outputs::_check_schema_source",
      "ValueError"
    ],
    [
      "core\\prompting\\spec.py::PromptSpec::_nonempty",
      "field_validator"
    ],
    [
      "core\\prompting\\spec.py::PromptSpec::_nonempty",
      "ValueError"
    ],
    [
      "core\\prompting\\spec.py::PromptSpec::_nonempty",
      "strip"
    ],
    [
      "core\\prompting\\spec.py::PromptSpec::_nonempty",
      "str"
    ],
    [
      "core\\prompting\\lenses.py::_safe",
      "isinstance"
    ],
    [
      "core\\prompting\\lenses.py::_safe",
      "item"
    ],
    [
      "core\\prompting\\lenses.py::estimate_tokens",
      "max"
    ],
    [
      "core\\prompting\\lenses.py::estimate_tokens",
      "len"
    ],
    [
      "core\\prompting\\validators.py::load_schema",
      "Path"
    ],
    [
      "core\\prompting\\validators.py::load_schema",
      "loads"
    ],
    [
      "core\\prompting\\validators.py::load_schema",
      "read_text"
    ],
    [
      "core\\prompting\\validators.py::load_schema",
      "isinstance"
    ],
    [
      "core\\prompting\\validators.py::load_schema",
      "SchemaValidationError"
    ],
    [
      "core\\prompting\\validators.py::validate_json",
      "validate"
    ],
    [
      "core\\prompting\\validators.py::validate_json",
      "str"
    ],
    [
      "core\\prompting\\runtime.py::dumps_json_safe",
      "dumps"
    ],
    [
      "core\\prompting\\runtime.py::dumps_json_safe",
      "isinstance"
    ],
    [
      "core\\prompting\\runtime.py::dumps_json_safe",
      "item"
    ],
    [
      "core\\prompting\\runtime.py::conv",
      "isinstance"
    ],
    [
      "core\\prompting\\runtime.py::conv",
      "item"
    ],
    [
      "core\\prompting\\runtime.py::_endpoint",
      "getattr"
    ],
    [
      "core\\prompting\\runtime.py::_maybe_locate_templates_yaml",
      "get"
    ],
    [
      "core\\prompting\\runtime.py::_maybe_locate_templates_yaml",
      "Path"
    ],
    [
      "core\\prompting\\runtime.py::_maybe_locate_templates_yaml",
      "Path"
    ],
    [
      "core\\prompting\\runtime.py::_maybe_locate_templates_yaml",
      "exists"
    ],
    [
      "core\\prompting\\runtime.py::_maybe_locate_templates_yaml",
      "Path"
    ],
    [
      "core\\prompting\\runtime.py::_load_templates_yaml",
      "isinstance"
    ],
    [
      "core\\prompting\\runtime.py::_load_templates_yaml",
      "safe_load"
    ],
    [
      "core\\prompting\\runtime.py::_load_templates_yaml",
      "print"
    ],
    [
      "core\\prompting\\runtime.py::_load_templates_yaml",
      "read_text"
    ],
    [
      "core\\prompting\\runtime.py::_load_templates_yaml",
      "stat"
    ],
    [
      "core\\prompting\\runtime.py::_load_templates_yaml",
      "str"
    ],
    [
      "core\\prompting\\runtime.py::_load_templates_yaml",
      "str"
    ],
    [
      "core\\prompting\\runtime.py::_load_templates_yaml",
      "items"
    ],
    [
      "core\\prompting\\runtime.py::_build_env",
      "Environment"
    ],
    [
      "core\\prompting\\runtime.py::_build_env",
      "RuntimeError"
    ],
    [
      "core\\prompting\\runtime.py::_build_env",
      "render"
    ],
    [
      "core\\prompting\\runtime.py::_build_env",
      "dumps"
    ],
    [
      "core\\prompting\\runtime.py::_build_env",
      "DictLoader"
    ],
    [
      "core\\prompting\\runtime.py::_build_env",
      "TemplateNotFound"
    ],
    [
      "core\\prompting\\runtime.py::_build_env",
      "get_template"
    ],
    [
      "core\\prompting\\runtime.py::DictLoader::get_source",
      "TemplateNotFound"
    ],
    [
      "core\\prompting\\runtime.py::_ensure_jinja",
      "_maybe_locate_templates_yaml"
    ],
    [
      "core\\prompting\\runtime.py::_ensure_jinja",
      "_builtin_partials"
    ],
    [
      "core\\prompting\\runtime.py::_ensure_jinja",
      "update"
    ],
    [
      "core\\prompting\\runtime.py::_ensure_jinja",
      "_build_env"
    ],
    [
      "core\\prompting\\runtime.py::_ensure_jinja",
      "time"
    ],
    [
      "core\\prompting\\runtime.py::_ensure_jinja",
      "_load_templates_yaml"
    ],
    [
      "core\\prompting\\runtime.py::_maybe_refresh_templates",
      "stat"
    ],
    [
      "core\\prompting\\runtime.py::_maybe_refresh_templates",
      "_ensure_jinja"
    ],
    [
      "core\\prompting\\runtime.py::_template_hash",
      "blake2b"
    ],
    [
      "core\\prompting\\runtime.py::_template_hash",
      "sorted"
    ],
    [
      "core\\prompting\\runtime.py::_template_hash",
      "hexdigest"
    ],
    [
      "core\\prompting\\runtime.py::_template_hash",
      "keys"
    ],
    [
      "core\\prompting\\runtime.py::_template_hash",
      "update"
    ],
    [
      "core\\prompting\\runtime.py::_template_hash",
      "update"
    ],
    [
      "core\\prompting\\runtime.py::_template_hash",
      "update"
    ],
    [
      "core\\prompting\\runtime.py::_template_hash",
      "update"
    ],
    [
      "core\\prompting\\runtime.py::_template_hash",
      "encode"
    ],
    [
      "core\\prompting\\runtime.py::_template_hash",
      "encode"
    ],
    [
      "core\\prompting\\runtime.py::_render_tpl",
      "render"
    ],
    [
      "core\\prompting\\runtime.py::_render_tpl",
      "get_template"
    ],
    [
      "core\\prompting\\cli.py::_print",
      "write"
    ],
    [
      "core\\prompting\\cli.py::_print",
      "dumps"
    ],
    [
      "core\\prompting\\cli.py::main",
      "ArgumentParser"
    ],
    [
      "core\\prompting\\cli.py::main",
      "add_subparsers"
    ],
    [
      "core\\prompting\\cli.py::main",
      "add_parser"
    ],
    [
      "core\\prompting\\cli.py::main",
      "add_argument"
    ],
    [
      "core\\prompting\\cli.py::main",
      "add_argument"
    ],
    [
      "core\\prompting\\cli.py::main",
      "add_argument"
    ],
    [
      "core\\prompting\\cli.py::main",
      "add_argument"
    ],
    [
      "core\\prompting\\cli.py::main",
      "parse_args"
    ],
    [
      "core\\prompting\\cli.py::main",
      "run"
    ],
    [
      "core\\prompting\\cli.py::main",
      "print_help"
    ],
    [
      "core\\prompting\\cli.py::main",
      "_cmd_render"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::__init__",
      "print"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::__init__",
      "_ensure_dir"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::__init__",
      "resolve"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_ensure_dir",
      "mkdir"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_iter_spec_files",
      "glob"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_iter_spec_files",
      "is_file"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_iter_spec_files",
      "lower"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_load_file",
      "read_text"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_load_file",
      "PromptSpec"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_load_file",
      "lower"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_load_file",
      "loads"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_load_file",
      "print"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_load_file",
      "RuntimeError"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::_load_file",
      "safe_load"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::rescan",
      "_iter_spec_files"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::rescan",
      "time"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::rescan",
      "next"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::rescan",
      "stat"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::rescan",
      "_load_file"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::rescan",
      "_SpecEntry"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::rescan",
      "values"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::rescan",
      "str"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::rescan",
      "str"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::get_by_id",
      "rescan"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::get_by_id",
      "get"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::get_by_scope",
      "rescan"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::get_by_scope",
      "get"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::provenance",
      "rescan"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::provenance",
      "get"
    ],
    [
      "core\\prompting\\registry.py::PromptSpecRegistry::provenance",
      "get"
    ],
    [
      "core\\prompting\\registry.py::get_registry",
      "PromptSpecRegistry"
    ],
    [
      "core\\prompting\\registry.py::get_registry",
      "rescan"
    ],
    [
      "core\\metrics\\registry.py::Gauge::set",
      "float"
    ],
    [
      "core\\metrics\\registry.py::MetricsRegistry::counter",
      "setdefault"
    ],
    [
      "core\\metrics\\registry.py::MetricsRegistry::counter",
      "Counter"
    ],
    [
      "core\\metrics\\registry.py::MetricsRegistry::gauge",
      "setdefault"
    ],
    [
      "core\\metrics\\registry.py::MetricsRegistry::gauge",
      "Gauge"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "isinstance"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "isinstance"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "getattr"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "callable"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "getattr"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "isinstance"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "str"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "isinstance"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "_jsonable"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "_jsonable"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "_jsonable"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "str"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "_jsonable"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "md"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "list"
    ],
    [
      "core\\services\\synapse.py::_jsonable",
      "items"
    ],
    [
      "core\\services\\synapse.py::_endpoint",
      "hasattr"
    ],
    [
      "core\\services\\synapse.py::_endpoint",
      "getattr"
    ],
    [
      "core\\telemetry\\context.py::TelemetryContext::add",
      "merge_metrics"
    ],
    [
      "core\\telemetry\\context.py::TelemetryContext::set_correlation",
      "setdefault"
    ],
    [
      "core\\telemetry\\context.py::TelemetryContext::set_correlation",
      "setdefault"
    ],
    [
      "core\\telemetry\\context.py::TelemetryContext::set_correlation",
      "setdefault"
    ],
    [
      "core\\telemetry\\context.py::TelemetryContext::set_correlation",
      "setdefault"
    ],
    [
      "core\\telemetry\\context.py::TelemetryContext::snapshot",
      "dict"
    ],
    [
      "core\\telemetry\\context.py::TelemetryContext::snapshot",
      "setdefault"
    ],
    [
      "core\\telemetry\\context.py::telemetry_context::__init__",
      "TelemetryContext"
    ],
    [
      "core\\telemetry\\context.py::telemetry_context::__enter__",
      "set"
    ],
    [
      "core\\telemetry\\context.py::current",
      "get"
    ],
    [
      "core\\telemetry\\context.py::current",
      "TelemetryContext"
    ],
    [
      "core\\telemetry\\context.py::current",
      "set"
    ],
    [
      "core\\telemetry\\harvest.py::_f",
      "float"
    ],
    [
      "core\\telemetry\\harvest.py::_f",
      "hasattr"
    ],
    [
      "core\\telemetry\\harvest.py::_f",
      "get"
    ],
    [
      "core\\telemetry\\harvest.py::_f",
      "float"
    ],
    [
      "core\\telemetry\\harvest.py::_i",
      "int"
    ],
    [
      "core\\telemetry\\harvest.py::_i",
      "hasattr"
    ],
    [
      "core\\telemetry\\harvest.py::_i",
      "get"
    ],
    [
      "core\\telemetry\\harvest.py::_i",
      "int"
    ],
    [
      "core\\telemetry\\harvest.py::_s",
      "str"
    ],
    [
      "core\\telemetry\\harvest.py::_s",
      "hasattr"
    ],
    [
      "core\\telemetry\\harvest.py::_s",
      "get"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_llm_headers",
      "_s"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_llm_headers",
      "_s"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_llm_headers",
      "_i"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_llm_headers",
      "_i"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_llm_headers",
      "_i"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_llm_headers",
      "_f"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_nova_headers",
      "_i"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_nova_headers",
      "_i"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_nova_headers",
      "_f"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_nova_headers",
      "_i"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_nova_headers",
      "_i"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_nova_headers",
      "_f"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_nova_headers",
      "_f"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_nova_headers",
      "_f"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_nova_headers",
      "_f"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_common",
      "_s"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_common",
      "_i"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_common",
      "_s"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_common",
      "_s"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_common",
      "_s"
    ],
    [
      "core\\telemetry\\harvest.py::harvest_common",
      "_s"
    ],
    [
      "core\\telemetry\\harvest.py::merge_metrics",
      "items"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_array_keys",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_object_keys",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_is_array",
      "isinstance"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_is_object",
      "isinstance"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_is_string",
      "isinstance"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_index",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_index",
      "str"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_index",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_index",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_index",
      "len"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_loop",
      "isinstance"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_loop",
      "_ref"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_loop",
      "int"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_ref",
      "_is_array"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_ref",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_ref",
      "_loop"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_ref",
      "_array_keys"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_ref",
      "_is_object"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_ref",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_ref",
      "_loop"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_ref",
      "_object_keys"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_relate",
      "_is_string"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_relate",
      "_is_array"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_relate",
      "_is_object"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_relate",
      "index"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_relate",
      "_index"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_transform",
      "_is_array"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_transform",
      "_is_object"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_transform",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_transform",
      "_relate"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_transform",
      "_relate"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_wrap",
      "_is_string"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_wrap",
      "_is_array"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_wrap",
      "_String"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_wrap",
      "_is_object"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_wrap",
      "_wrap"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::_wrap",
      "_wrap"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "loads"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "_is_array"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "_is_object"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "isinstance"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "_loop"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "_loop"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "_wrap"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "_array_keys"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::parse",
      "_object_keys"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::stringify",
      "_Known"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::stringify",
      "int"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::stringify",
      "dumps"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::stringify",
      "_index"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::stringify",
      "len"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::stringify",
      "append"
    ],
    [
      "frontend-voxis\\node_modules\\.flatted-JJXUKFZq\\python\\flatted.py::stringify",
      "_transform"
    ],
    [
      "launch\\upload_embed.py::_is_neo_driver",
      "hasattr"
    ],
    [
      "launch\\upload_embed.py::_is_neo_driver",
      "hasattr"
    ],
    [
      "launch\\upload_embed.py::coalesce_driver",
      "isinstance"
    ],
    [
      "launch\\upload_embed.py::coalesce_driver",
      "strip"
    ],
    [
      "launch\\upload_embed.py::coalesce_driver",
      "_is_neo_driver"
    ],
    [
      "launch\\upload_embed.py::coalesce_driver",
      "lower"
    ],
    [
      "launch\\upload_embed.py::coalesce_driver",
      "_get_driver"
    ],
    [
      "launch\\upload_embed.py::get_caller_name",
      "stack"
    ],
    [
      "launch\\upload_embed.py::get_caller_name",
      "len"
    ],
    [
      "launch\\upload_embed.py::safe_neo_value",
      "isinstance"
    ],
    [
      "launch\\upload_embed.py::safe_neo_value",
      "dumps"
    ],
    [
      "launch\\upload_embed.py::safe_neo_value",
      "str"
    ],
    [
      "launch\\upload_embed.py::_safe_neo_value",
      "isinstance"
    ],
    [
      "launch\\upload_embed.py::_safe_neo_value",
      "dumps"
    ],
    [
      "launch\\upload_embed.py::_safe_neo_value",
      "len"
    ],
    [
      "launch\\upload_embed.py::_safe_neo_value",
      "str"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "iscoroutinefunction"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "time"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "round"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "wraps"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "wraps"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "tool"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "get_caller_name"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "log_tool_call_to_neo"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "run"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "func"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "repr"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "time"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "_log_and_call"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "_log_and_call"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "func"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "tuple"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "tuple"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "tuple"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "tuple"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "len"
    ],
    [
      "launch\\upload_embed.py::tool_wrapper",
      "len"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "iscoroutinefunction"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "time"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "round"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "wraps"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "wraps"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "tool"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "get_caller_name"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "log_tool_call_to_neo"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "run"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "func"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "repr"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "time"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "_log_and_call"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "_log_and_call"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "func"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "tuple"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "tuple"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "tuple"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "tuple"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "len"
    ],
    [
      "launch\\upload_embed.py::decorator",
      "len"
    ],
    [
      "launch\\upload_embed.py::sync_wrapper",
      "wraps"
    ],
    [
      "launch\\upload_embed.py::sync_wrapper",
      "run"
    ],
    [
      "launch\\upload_embed.py::sync_wrapper",
      "_log_and_call"
    ],
    [
      "launch\\upload_embed.py::sync_wrapper",
      "tuple"
    ],
    [
      "launch\\upload_embed.py::sync_wrapper",
      "tuple"
    ],
    [
      "launch\\upload_embed.py::sync_wrapper",
      "len"
    ],
    [
      "scripts\\search_vectors.py::_prop_get",
      "isinstance"
    ],
    [
      "scripts\\search_vectors.py::_prop_get",
      "get"
    ],
    [
      "scripts\\search_vectors.py::_prop_get",
      "get"
    ],
    [
      "scripts\\search_vectors.py::_prop_get",
      "dict"
    ],
    [
      "scripts\\search_vectors.py::format_node",
      "_prop_get"
    ],
    [
      "scripts\\upload_embed.py::infer_scorer_from_filename",
      "basename"
    ],
    [
      "scripts\\upload_embed.py::infer_scorer_from_filename",
      "search"
    ],
    [
      "scripts\\upload_embed.py::infer_scorer_from_filename",
      "strip"
    ],
    [
      "scripts\\upload_embed.py::infer_scorer_from_filename",
      "group"
    ],
    [
      "scripts\\upload_embed.py::parse_tags",
      "strip"
    ],
    [
      "scripts\\upload_embed.py::parse_tags",
      "startswith"
    ],
    [
      "scripts\\upload_embed.py::parse_tags",
      "strip"
    ],
    [
      "scripts\\upload_embed.py::parse_tags",
      "loads"
    ],
    [
      "scripts\\upload_embed.py::parse_tags",
      "split"
    ],
    [
      "scripts\\upload_embed.py::parse_tags",
      "strip"
    ],
    [
      "scripts\\upload_embed.py::parse_tags",
      "strip"
    ],
    [
      "scripts\\upload_embed.py::parse_tags",
      "strip"
    ],
    [
      "scripts\\upload_embed.py::parse_tags",
      "str"
    ],
    [
      "scripts\\upload_embed.py::parse_tags",
      "str"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "infer_scorer_from_filename"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "open"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "DictReader"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "lower"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "ValueError"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "strip"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "append"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "strip"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "strip"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "parse_tags"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "strip"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "Row"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts\\upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts\\upload_embed.py::stable_uuid",
      "encode"
    ],
    [
      "scripts\\upload_embed.py::stable_uuid",
      "str"
    ],
    [
      "scripts\\upload_embed.py::stable_uuid",
      "uuid5"
    ],
    [
      "scripts\\upload_embed.py::stable_uuid",
      "hex"
    ],
    [
      "scripts\\upload_embed.py::dedupe_rows",
      "set"
    ],
    [
      "scripts\\upload_embed.py::dedupe_rows",
      "add"
    ],
    [
      "scripts\\upload_embed.py::dedupe_rows",
      "append"
    ],
    [
      "scripts\\upload_embed.py::dedupe_rows",
      "tuple"
    ],
    [
      "scripts\\upload_embed.py::write_merged_csv",
      "makedirs"
    ],
    [
      "scripts\\upload_embed.py::write_merged_csv",
      "open"
    ],
    [
      "scripts\\upload_embed.py::write_merged_csv",
      "DictWriter"
    ],
    [
      "scripts\\upload_embed.py::write_merged_csv",
      "writeheader"
    ],
    [
      "scripts\\upload_embed.py::write_merged_csv",
      "dirname"
    ],
    [
      "scripts\\upload_embed.py::write_merged_csv",
      "writerow"
    ],
    [
      "scripts\\upload_embed.py::write_merged_csv",
      "dumps"
    ],
    [
      "scripts\\cite_clean.py::strip_cites_token_only",
      "subn"
    ],
    [
      "scripts\\cite_clean.py::process_file",
      "strip_cites_token_only"
    ],
    [
      "scripts\\cite_clean.py::process_file",
      "read_text"
    ],
    [
      "scripts\\cite_clean.py::process_file",
      "write_text"
    ],
    [
      "scripts\\cite_clean.py::process_file",
      "write_text"
    ],
    [
      "scripts\\cite_clean.py::process_file",
      "with_suffix"
    ],
    [
      "scripts\\cite_clean.py::main",
      "ArgumentParser"
    ],
    [
      "scripts\\cite_clean.py::main",
      "add_argument"
    ],
    [
      "scripts\\cite_clean.py::main",
      "add_argument"
    ],
    [
      "scripts\\cite_clean.py::main",
      "add_argument"
    ],
    [
      "scripts\\cite_clean.py::main",
      "add_argument"
    ],
    [
      "scripts\\cite_clean.py::main",
      "parse_args"
    ],
    [
      "scripts\\cite_clean.py::main",
      "Path"
    ],
    [
      "scripts\\cite_clean.py::main",
      "rglob"
    ],
    [
      "scripts\\cite_clean.py::main",
      "print"
    ],
    [
      "scripts\\cite_clean.py::main",
      "is_dir"
    ],
    [
      "scripts\\cite_clean.py::main",
      "print"
    ],
    [
      "scripts\\cite_clean.py::main",
      "startswith"
    ],
    [
      "scripts\\cite_clean.py::main",
      "lower"
    ],
    [
      "scripts\\cite_clean.py::main",
      "is_file"
    ],
    [
      "scripts\\cite_clean.py::main",
      "lower"
    ],
    [
      "scripts\\cite_clean.py::main",
      "process_file"
    ],
    [
      "scripts\\cite_clean.py::main",
      "lower"
    ],
    [
      "scripts\\cite_clean.py::main",
      "print"
    ],
    [
      "scripts\\eos_replay.py::_find_files_for_decision",
      "glob"
    ],
    [
      "scripts\\eos_replay.py::_find_files_for_decision",
      "glob"
    ],
    [
      "scripts\\eos_replay.py::_find_files_for_decision",
      "open"
    ],
    [
      "scripts\\eos_replay.py::_find_files_for_decision",
      "open"
    ],
    [
      "scripts\\eos_replay.py::_find_files_for_decision",
      "loads"
    ],
    [
      "scripts\\eos_replay.py::_find_files_for_decision",
      "loads"
    ],
    [
      "scripts\\eos_replay.py::_find_files_for_decision",
      "readline"
    ],
    [
      "scripts\\eos_replay.py::_find_files_for_decision",
      "get"
    ],
    [
      "scripts\\eos_replay.py::_find_files_for_decision",
      "readline"
    ],
    [
      "scripts\\eos_replay.py::_find_files_for_decision",
      "get"
    ],
    [
      "scripts\\eos_replay.py::_load_by_barcode",
      "list"
    ],
    [
      "scripts\\eos_replay.py::_load_by_barcode",
      "glob"
    ],
    [
      "scripts\\eos_replay.py::_load_by_barcode",
      "FileNotFoundError"
    ],
    [
      "scripts\\eos_replay.py::_load_by_barcode",
      "open"
    ],
    [
      "scripts\\eos_replay.py::_load_by_barcode",
      "loads"
    ],
    [
      "scripts\\eos_replay.py::_load_by_barcode",
      "readline"
    ],
    [
      "scripts\\eos_replay.py::main",
      "ArgumentParser"
    ],
    [
      "scripts\\eos_replay.py::main",
      "add_argument"
    ],
    [
      "scripts\\eos_replay.py::main",
      "add_argument"
    ],
    [
      "scripts\\eos_replay.py::main",
      "add_argument"
    ],
    [
      "scripts\\eos_replay.py::main",
      "parse_args"
    ],
    [
      "scripts\\eos_replay.py::main",
      "seed"
    ],
    [
      "scripts\\eos_replay.py::main",
      "print"
    ],
    [
      "scripts\\eos_replay.py::main",
      "print"
    ],
    [
      "scripts\\eos_replay.py::main",
      "print"
    ],
    [
      "scripts\\eos_replay.py::main",
      "print"
    ],
    [
      "scripts\\eos_replay.py::main",
      "print"
    ],
    [
      "scripts\\eos_replay.py::main",
      "_find_files_for_decision"
    ],
    [
      "scripts\\eos_replay.py::main",
      "_load_by_barcode"
    ],
    [
      "scripts\\eos_replay.py::main",
      "get"
    ],
    [
      "scripts\\eos_replay.py::main",
      "sum"
    ],
    [
      "scripts\\eos_replay.py::main",
      "min"
    ],
    [
      "scripts\\eos_replay.py::main",
      "SystemExit"
    ],
    [
      "scripts\\eos_replay.py::main",
      "open"
    ],
    [
      "scripts\\eos_replay.py::main",
      "loads"
    ],
    [
      "scripts\\eos_replay.py::main",
      "open"
    ],
    [
      "scripts\\eos_replay.py::main",
      "loads"
    ],
    [
      "scripts\\eos_replay.py::main",
      "_find_files_for_decision"
    ],
    [
      "scripts\\eos_replay.py::main",
      "_find_files_for_decision"
    ],
    [
      "scripts\\eos_replay.py::main",
      "readline"
    ],
    [
      "scripts\\eos_replay.py::main",
      "readline"
    ],
    [
      "scripts\\eos_replay.py::main",
      "SystemExit"
    ],
    [
      "scripts\\eos_replay.py::main",
      "open"
    ],
    [
      "scripts\\eos_replay.py::main",
      "loads"
    ],
    [
      "scripts\\eos_replay.py::main",
      "SystemExit"
    ],
    [
      "scripts\\eos_replay.py::main",
      "open"
    ],
    [
      "scripts\\eos_replay.py::main",
      "loads"
    ],
    [
      "scripts\\eos_replay.py::main",
      "get"
    ],
    [
      "scripts\\eos_replay.py::main",
      "len"
    ],
    [
      "scripts\\eos_replay.py::main",
      "get"
    ],
    [
      "scripts\\eos_replay.py::main",
      "get"
    ],
    [
      "scripts\\eos_replay.py::main",
      "get"
    ],
    [
      "scripts\\eos_replay.py::main",
      "readline"
    ],
    [
      "scripts\\eos_replay.py::main",
      "readline"
    ],
    [
      "scripts\\eos_replay.py::main",
      "split"
    ],
    [
      "scripts\\get_defs.py::read_text",
      "read_text"
    ],
    [
      "scripts\\get_defs.py::read_text",
      "read_text"
    ],
    [
      "scripts\\get_defs.py::call_name",
      "isinstance"
    ],
    [
      "scripts\\get_defs.py::call_name",
      "isinstance"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "set"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "walk"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "enumerate"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "isinstance"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "match"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "isinstance"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "any"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "add"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "append"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "hasattr"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "add"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "isinstance"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "isinstance"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "append"
    ],
    [
      "scripts\\get_defs.py::find_router_app_lines",
      "call_name"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "read_text"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "splitlines"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "set"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "sorted"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "parse"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "walk"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "find_router_app_lines"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "enumerate"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "isinstance"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "len"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "rstrip"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "append"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "str"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "hasattr"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "match"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "match"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "add"
    ],
    [
      "scripts\\get_defs.py::gather_defs_from_file",
      "add"
    ],
    [
      "scripts\\get_defs.py::iter_python_files",
      "walk"
    ],
    [
      "scripts\\get_defs.py::iter_python_files",
      "endswith"
    ],
    [
      "scripts\\get_defs.py::iter_python_files",
      "Path"
    ],
    [
      "scripts\\get_defs.py::collate",
      "StringIO"
    ],
    [
      "scripts\\get_defs.py::collate",
      "getvalue"
    ],
    [
      "scripts\\get_defs.py::collate",
      "sorted"
    ],
    [
      "scripts\\get_defs.py::collate",
      "exists"
    ],
    [
      "scripts\\get_defs.py::collate",
      "iter_python_files"
    ],
    [
      "scripts\\get_defs.py::collate",
      "gather_defs_from_file"
    ],
    [
      "scripts\\get_defs.py::collate",
      "write"
    ],
    [
      "scripts\\get_defs.py::collate",
      "write"
    ],
    [
      "scripts\\get_defs.py::collate",
      "write"
    ],
    [
      "scripts\\get_defs.py::main",
      "ArgumentParser"
    ],
    [
      "scripts\\get_defs.py::main",
      "add_argument"
    ],
    [
      "scripts\\get_defs.py::main",
      "add_argument"
    ],
    [
      "scripts\\get_defs.py::main",
      "parse_args"
    ],
    [
      "scripts\\get_defs.py::main",
      "collate"
    ],
    [
      "scripts\\get_defs.py::main",
      "Path"
    ],
    [
      "scripts\\get_defs.py::main",
      "Path"
    ],
    [
      "scripts\\get_defs.py::main",
      "mkdir"
    ],
    [
      "scripts\\get_defs.py::main",
      "write_text"
    ],
    [
      "scripts\\get_defs.py::main",
      "print"
    ],
    [
      "scripts\\get_defs.py::main",
      "write"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "set"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "rglob"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "compile"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "compile"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "compile"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "any"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "open"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "read"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "str"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "findall"
    ],
    [
      "scripts\\get_gates.py::find_gate_keys",
      "add"
    ],
    [
      "scripts\\get_gates.py::main",
      "sorted"
    ],
    [
      "scripts\\get_gates.py::main",
      "print"
    ],
    [
      "scripts\\get_gates.py::main",
      "list"
    ],
    [
      "scripts\\get_gates.py::main",
      "print"
    ],
    [
      "scripts\\get_gates.py::main",
      "append"
    ],
    [
      "scripts\\get_gates.py::main",
      "join"
    ],
    [
      "scripts\\get_gates.py::main",
      "print"
    ],
    [
      "scripts\\get_gates.py::main",
      "find_gate_keys"
    ],
    [
      "scripts\\get_gates.py::main",
      "isoformat"
    ],
    [
      "scripts\\get_gates.py::main",
      "open"
    ],
    [
      "scripts\\get_gates.py::main",
      "write"
    ],
    [
      "scripts\\get_gates.py::main",
      "print"
    ],
    [
      "scripts\\get_gates.py::main",
      "len"
    ],
    [
      "scripts\\get_gates.py::main",
      "now"
    ],
    [
      "scripts\\get_gates.py::main",
      "len"
    ],
    [
      "scripts\\stray_prompts.py::scan_file",
      "items"
    ],
    [
      "scripts\\stray_prompts.py::scan_file",
      "read_text"
    ],
    [
      "scripts\\stray_prompts.py::scan_file",
      "search"
    ],
    [
      "scripts\\stray_prompts.py::scan_file",
      "append"
    ],
    [
      "scripts\\stray_prompts.py::main",
      "rglob"
    ],
    [
      "scripts\\stray_prompts.py::main",
      "scan_file"
    ],
    [
      "scripts\\stray_prompts.py::main",
      "print"
    ],
    [
      "scripts\\stray_prompts.py::main",
      "join"
    ],
    [
      "scripts\\schema_collate.py::now_iso",
      "isoformat"
    ],
    [
      "scripts\\schema_collate.py::now_iso",
      "utcnow"
    ],
    [
      "scripts\\schema_collate.py::read_text",
      "open"
    ],
    [
      "scripts\\schema_collate.py::read_text",
      "read"
    ],
    [
      "scripts\\schema_collate.py::expr_to_str",
      "unparse"
    ],
    [
      "scripts\\schema_collate.py::expr_to_str",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::expr_to_str",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::expr_to_str",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::expr_to_str",
      "repr"
    ],
    [
      "scripts\\schema_collate.py::expr_to_str",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::const_value",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::hash_file",
      "sha256"
    ],
    [
      "scripts\\schema_collate.py::hash_file",
      "hexdigest"
    ],
    [
      "scripts\\schema_collate.py::hash_file",
      "open"
    ],
    [
      "scripts\\schema_collate.py::hash_file",
      "iter"
    ],
    [
      "scripts\\schema_collate.py::hash_file",
      "update"
    ],
    [
      "scripts\\schema_collate.py::hash_file",
      "read"
    ],
    [
      "scripts\\schema_collate.py::is_pydantic_base",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::is_pydantic_base",
      "endswith"
    ],
    [
      "scripts\\schema_collate.py::is_pydantic_base",
      "endswith"
    ],
    [
      "scripts\\schema_collate.py::is_dataclass",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::is_dataclass",
      "startswith"
    ],
    [
      "scripts\\schema_collate.py::collect_class_fields",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::collect_class_fields",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::collect_class_fields",
      "append"
    ],
    [
      "scripts\\schema_collate.py::collect_class_fields",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::collect_class_fields",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::arg_to_dict",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::arg_to_dict",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "zip"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "zip"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "list"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "append"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "append"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "append"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "append"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "arg_to_dict"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "arg_to_dict"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "len"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "len"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::signature_of",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::decorator_names",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::decorator_names",
      "append"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "lower"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "const_value"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "upper"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "const_value"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "const_value"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "const_value"
    ],
    [
      "scripts\\schema_collate.py::parse_endpoint_decorator",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "signature_of"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "decorator_names"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "FunctionInfo"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "append"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "generic_visit"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "parse_endpoint_decorator"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "append"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "get_docstring"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "signature_of"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "decorator_names"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "FunctionInfo"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "append"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "generic_visit"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "parse_endpoint_decorator"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "append"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "get_docstring"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "ClassInfo"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "append"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "generic_visit"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "expr_to_str"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "append"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "get_docstring"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "is_pydantic_base"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "is_dataclass"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "collect_class_fields"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "FunctionInfo"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "signature_of"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "decorator_names"
    ],
    [
      "scripts\\schema_collate.py::PyModuleScanner::visit_ClassDef",
      "get_docstring"
    ],
    [
      "scripts\\schema_collate.py::scan_python_file",
      "read_text"
    ],
    [
      "scripts\\schema_collate.py::scan_python_file",
      "PyModuleScanner"
    ],
    [
      "scripts\\schema_collate.py::scan_python_file",
      "visit"
    ],
    [
      "scripts\\schema_collate.py::scan_python_file",
      "ModuleInfo"
    ],
    [
      "scripts\\schema_collate.py::scan_python_file",
      "parse"
    ],
    [
      "scripts\\schema_collate.py::scan_python_file",
      "hash_file"
    ],
    [
      "scripts\\schema_collate.py::walk_files",
      "walk"
    ],
    [
      "scripts\\schema_collate.py::walk_files",
      "splitext"
    ],
    [
      "scripts\\schema_collate.py::walk_files",
      "lower"
    ],
    [
      "scripts\\schema_collate.py::walk_files",
      "append"
    ],
    [
      "scripts\\schema_collate.py::walk_files",
      "join"
    ],
    [
      "scripts\\schema_collate.py::build_json_report",
      "extend"
    ],
    [
      "scripts\\schema_collate.py::build_json_report",
      "len"
    ],
    [
      "scripts\\schema_collate.py::build_json_report",
      "len"
    ],
    [
      "scripts\\schema_collate.py::build_json_report",
      "sum"
    ],
    [
      "scripts\\schema_collate.py::build_json_report",
      "now_iso"
    ],
    [
      "scripts\\schema_collate.py::build_json_report",
      "len"
    ],
    [
      "scripts\\schema_collate.py::build_json_report",
      "len"
    ],
    [
      "scripts\\schema_collate.py::md_escape",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::md_escape",
      "replace"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "sorted"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "isinstance"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "str"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "str"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "md_escape"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "md_escape"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "str"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "md_escape"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "str"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "md_escape"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "md_escape"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts\\schema_collate.py::build_state",
      "getmtime"
    ],
    [
      "scripts\\schema_collate.py::build_state",
      "exists"
    ],
    [
      "scripts\\schema_collate.py::diff_state",
      "walk_files"
    ],
    [
      "scripts\\schema_collate.py::diff_state",
      "getmtime"
    ],
    [
      "scripts\\schema_collate.py::diff_state",
      "append"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "walk_files"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "build_json_report"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "makedirs"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "print"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "endswith"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "join"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "append"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "join"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "append"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "scan_python_file"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "open"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "dump"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "open"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "write"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "lower"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "append"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "build_markdown"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "len"
    ],
    [
      "scripts\\schema_collate.py::run_scan",
      "join"
    ],
    [
      "scripts\\schema_collate.py::main",
      "ArgumentParser"
    ],
    [
      "scripts\\schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts\\schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts\\schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts\\schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts\\schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts\\schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts\\schema_collate.py::main",
      "parse_args"
    ],
    [
      "scripts\\schema_collate.py::main",
      "abspath"
    ],
    [
      "scripts\\schema_collate.py::main",
      "union"
    ],
    [
      "scripts\\schema_collate.py::main",
      "run_scan"
    ],
    [
      "scripts\\schema_collate.py::main",
      "build_state"
    ],
    [
      "scripts\\schema_collate.py::main",
      "print"
    ],
    [
      "scripts\\schema_collate.py::main",
      "set"
    ],
    [
      "scripts\\schema_collate.py::main",
      "walk_files"
    ],
    [
      "scripts\\schema_collate.py::main",
      "getenv"
    ],
    [
      "scripts\\schema_collate.py::main",
      "sleep"
    ],
    [
      "scripts\\schema_collate.py::main",
      "diff_state"
    ],
    [
      "scripts\\schema_collate.py::main",
      "print"
    ],
    [
      "scripts\\schema_collate.py::main",
      "print"
    ],
    [
      "scripts\\schema_collate.py::main",
      "run_scan"
    ],
    [
      "scripts\\schema_collate.py::main",
      "len"
    ],
    [
      "scripts\\placeholder_find.py::is_texty",
      "lower"
    ],
    [
      "scripts\\placeholder_find.py::is_texty",
      "stat"
    ],
    [
      "scripts\\placeholder_find.py::iter_files",
      "walk"
    ],
    [
      "scripts\\placeholder_find.py::iter_files",
      "Path"
    ],
    [
      "scripts\\placeholder_find.py::read_text_safely",
      "read_text"
    ],
    [
      "scripts\\placeholder_find.py::read_text_safely",
      "read_text"
    ],
    [
      "scripts\\placeholder_find.py::find_matches",
      "finditer"
    ],
    [
      "scripts\\placeholder_find.py::find_matches",
      "strip"
    ],
    [
      "scripts\\placeholder_find.py::find_matches",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::find_matches",
      "group"
    ],
    [
      "scripts\\placeholder_find.py::find_matches",
      "lower"
    ],
    [
      "scripts\\placeholder_find.py::find_matches",
      "lower"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "iter_files"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "sort"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "read_text_safely"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "find_matches"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "lower"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "is_file"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "is_texty"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "weight"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "lower"
    ],
    [
      "scripts\\placeholder_find.py::scan",
      "str"
    ],
    [
      "scripts\\placeholder_find.py::weight",
      "lower"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "strftime"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "enumerate"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "write_text"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "read_text_safely"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "join"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "now"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "is_relative_to"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "relative_to"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "len"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "len"
    ],
    [
      "scripts\\placeholder_find.py::write_report",
      "len"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "ArgumentParser"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "add_argument"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "add_argument"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "add_argument"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "parse_args"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "resolve"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "scan"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "write_report"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "print"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "SystemExit"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "resolve"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "print"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "Path"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "exists"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "is_dir"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "print"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "Path"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "is_relative_to"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "relative_to"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "len"
    ],
    [
      "scripts\\placeholder_find.py::main",
      "len"
    ],
    [
      "workers\\test_selector.py::_bid",
      "Bid"
    ],
    [
      "workers\\test_selector.py::_bid",
      "FAEScore"
    ],
    [
      "workers\\test_selector.py::_bid",
      "StubIntent"
    ],
    [
      "workers\\test_selector.py::test_selector_only_no_allocation",
      "AttentionMarket"
    ],
    [
      "workers\\test_selector.py::test_selector_only_no_allocation",
      "AttentionBudgetManager"
    ],
    [
      "workers\\test_selector.py::test_selector_only_no_allocation",
      "get_available_budget"
    ],
    [
      "workers\\test_selector.py::test_selector_only_no_allocation",
      "run_auction"
    ],
    [
      "workers\\test_selector.py::test_selector_only_no_allocation",
      "get_available_budget"
    ],
    [
      "workers\\test_selector.py::test_selector_only_no_allocation",
      "_bid"
    ],
    [
      "workers\\test_selector.py::test_selector_only_no_allocation",
      "_bid"
    ],
    [
      "workers\\test_selector.py::test_selector_only_no_allocation",
      "_bid"
    ],
    [
      "workers\\test_selector.py::test_selector_only_no_allocation",
      "len"
    ],
    [
      "workers\\test_selector.py::test_pareto_knee_respects_budget",
      "AttentionMarket"
    ],
    [
      "workers\\test_selector.py::test_pareto_knee_respects_budget",
      "AttentionBudgetManager"
    ],
    [
      "workers\\test_selector.py::test_pareto_knee_respects_budget",
      "run_auction"
    ],
    [
      "workers\\test_selector.py::test_pareto_knee_respects_budget",
      "_bid"
    ],
    [
      "workers\\test_selector.py::test_pareto_knee_respects_budget",
      "_bid"
    ],
    [
      "workers\\test_selector.py::test_pareto_knee_respects_budget",
      "len"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "is_file"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "is_file"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "open"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "update"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "open"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "items"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "safe_load"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "safe_load"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "isinstance"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "isinstance"
    ],
    [
      "src\\simula\\config.py::_load_config_from_yaml",
      "update"
    ],
    [
      "src\\simula\\git_manager.py::GitError::__init__",
      "__init__"
    ],
    [
      "src\\simula\\git_manager.py::GitError::__init__",
      "super"
    ],
    [
      "src\\simula\\git_manager.py::GitError::__str__",
      "__str__"
    ],
    [
      "src\\simula\\git_manager.py::GitError::__str__",
      "super"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::__init__",
      "mkdir"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::_run_command",
      "info"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::_run_command",
      "dict"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::_run_command",
      "pop"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::_run_command",
      "pop"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::_run_command",
      "run"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::_run_command",
      "GitError"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::_run_command",
      "join"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::_run_command",
      "join"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::clone_or_pull",
      "is_dir"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::clone_or_pull",
      "info"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::clone_or_pull",
      "_run_command"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::clone_or_pull",
      "info"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::clone_or_pull",
      "_run_command"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::clone_or_pull",
      "_run_command"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::reset_workspace",
      "clone_or_pull"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::reset_workspace",
      "info"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::reset_workspace",
      "_run_command"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::reset_workspace",
      "_run_command"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::reset_workspace",
      "_run_command"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::reset_workspace",
      "info"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::apply_patch",
      "info"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::apply_patch",
      "exists"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::apply_patch",
      "FileNotFoundError"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::apply_patch",
      "_run_command"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::apply_patch",
      "info"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::apply_patch",
      "str"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::apply_patch",
      "warning"
    ],
    [
      "src\\simula\\git_manager.py::GitManager::apply_patch",
      "error"
    ],
    [
      "src\\simula\\main.py::_configure_logging",
      "setLevel"
    ],
    [
      "src\\simula\\main.py::_configure_logging",
      "basicConfig"
    ],
    [
      "src\\simula\\main.py::_configure_logging",
      "getLogger"
    ],
    [
      "src\\simula\\main.py::_configure_logging",
      "getLogger"
    ],
    [
      "src\\simula\\main.py::_resolve_patch_path",
      "expanduser"
    ],
    [
      "src\\simula\\main.py::_resolve_patch_path",
      "FileNotFoundError"
    ],
    [
      "src\\simula\\main.py::_resolve_patch_path",
      "getenv"
    ],
    [
      "src\\simula\\main.py::_resolve_patch_path",
      "expanduser"
    ],
    [
      "src\\simula\\main.py::_resolve_patch_path",
      "exists"
    ],
    [
      "src\\simula\\main.py::_resolve_patch_path",
      "is_file"
    ],
    [
      "src\\simula\\main.py::_resolve_patch_path",
      "Path"
    ],
    [
      "src\\simula\\main.py::_resolve_patch_path",
      "Path"
    ],
    [
      "src\\simula\\main.py::_resolve_patch_path",
      "cwd"
    ],
    [
      "src\\simula\\main.py::_resolve_patch_path",
      "getenv"
    ],
    [
      "src\\simula\\main.py::_parse_args",
      "ArgumentParser"
    ],
    [
      "src\\simula\\main.py::_parse_args",
      "add_argument"
    ],
    [
      "src\\simula\\main.py::_parse_args",
      "parse_args"
    ],
    [
      "src\\simula\\main.py::main",
      "_configure_logging"
    ],
    [
      "src\\simula\\main.py::main",
      "getLogger"
    ],
    [
      "src\\simula\\main.py::main",
      "_parse_args"
    ],
    [
      "src\\simula\\main.py::main",
      "info"
    ],
    [
      "src\\simula\\main.py::main",
      "info"
    ],
    [
      "src\\simula\\main.py::main",
      "info"
    ],
    [
      "src\\simula\\main.py::main",
      "_resolve_patch_path"
    ],
    [
      "src\\simula\\main.py::main",
      "info"
    ],
    [
      "src\\simula\\main.py::main",
      "GitManager"
    ],
    [
      "src\\simula\\main.py::main",
      "reset_workspace"
    ],
    [
      "src\\simula\\main.py::main",
      "apply_patch"
    ],
    [
      "src\\simula\\main.py::main",
      "info"
    ],
    [
      "src\\simula\\main.py::main",
      "exit"
    ],
    [
      "src\\simula\\main.py::main",
      "error"
    ],
    [
      "src\\simula\\main.py::main",
      "exit"
    ],
    [
      "src\\simula\\main.py::main",
      "error"
    ],
    [
      "src\\simula\\main.py::main",
      "exit"
    ],
    [
      "src\\simula\\main.py::main",
      "error"
    ],
    [
      "src\\simula\\main.py::main",
      "exit"
    ],
    [
      "src\\simula\\main.py::main",
      "exception"
    ],
    [
      "src\\simula\\main.py::main",
      "exit"
    ],
    [
      "src\\simula\\main.py::main",
      "str"
    ],
    [
      "src\\src\\simula_demo\\math_utils.py::fib",
      "range"
    ],
    [
      "src\\src\\simula_demo\\math_utils.py::fib",
      "append"
    ],
    [
      "DEcodiaOSsystemssimula\\tests\\test_string_utils.py::test_reverse_string",
      "reverse_string"
    ],
    [
      "tests\\test_evo1.py::_FakeResp::raise_for_status",
      "RuntimeError"
    ],
    [
      "tests\\test_call.py::FakePolicyGraph::__init__",
      "FakePromptNode"
    ],
    [
      "tests\\test_call.py::FakeArm::__init__",
      "FakePolicyGraph"
    ],
    [
      "tests\\test_call.py::FakeSelection::__init__",
      "Champ"
    ],
    [
      "tests\\test_call.py::app_client",
      "fixture"
    ],
    [
      "tests\\test_call.py::app_client",
      "FastAPI"
    ],
    [
      "tests\\test_call.py::app_client",
      "include_router"
    ],
    [
      "tests\\test_call.py::app_client",
      "setattr"
    ],
    [
      "tests\\test_call.py::app_client",
      "setattr"
    ],
    [
      "tests\\test_call.py::app_client",
      "setattr"
    ],
    [
      "tests\\test_call.py::app_client",
      "TestClient"
    ],
    [
      "tests\\test_call.py::app_client",
      "FakeSelection"
    ],
    [
      "tests\\test_call.py::app_client",
      "FakeArm"
    ],
    [
      "tests\\test_call.py::FakeArmRegistry::get_arm",
      "FakeArm"
    ],
    [
      "tests\\test_call.py::test_plain_text_success",
      "post"
    ],
    [
      "tests\\test_call.py::test_plain_text_success",
      "json"
    ],
    [
      "tests\\test_call.py::test_plain_text_success",
      "get"
    ],
    [
      "tests\\test_call.py::test_plain_text_success",
      "get"
    ],
    [
      "tests\\test_call.py::test_json_mode_with_schema_and_budget_headers",
      "post"
    ],
    [
      "tests\\test_call.py::test_json_mode_with_schema_and_budget_headers",
      "json"
    ],
    [
      "tests\\test_call.py::test_json_mode_with_schema_and_budget_headers",
      "get"
    ],
    [
      "tests\\test_call.py::test_json_mode_with_schema_and_budget_headers",
      "get"
    ],
    [
      "tests\\test_call.py::test_tools_and_tool_choice_passthrough",
      "post"
    ],
    [
      "tests\\test_call.py::test_provider_failure_yields_502",
      "FastAPI"
    ],
    [
      "tests\\test_call.py::test_provider_failure_yields_502",
      "include_router"
    ],
    [
      "tests\\test_call.py::test_provider_failure_yields_502",
      "TestClient"
    ],
    [
      "tests\\test_call.py::test_provider_failure_yields_502",
      "setattr"
    ],
    [
      "tests\\test_call.py::test_provider_failure_yields_502",
      "setattr"
    ],
    [
      "tests\\test_call.py::test_provider_failure_yields_502",
      "setattr"
    ],
    [
      "tests\\test_call.py::test_provider_failure_yields_502",
      "post"
    ],
    [
      "tests\\test_call.py::test_provider_failure_yields_502",
      "FakeSelection"
    ],
    [
      "tests\\test_call.py::test_provider_failure_yields_502",
      "FakeArm"
    ],
    [
      "tests\\test_call.py::test_provider_failure_yields_502",
      "json"
    ],
    [
      "tests\\test_call.py::FakeArmRegistry::get_arm",
      "FakeArm"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "FastAPI"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "include_router"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "TestClient"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "setattr"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "setattr"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "setattr"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "post"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "setattr"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "post"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "FakeSelection"
    ],
    [
      "tests\\test_call.py::test_missing_arm_or_prompt_yields_503",
      "FakeArm"
    ],
    [
      "tests\\test_call.py::FakeArmRegistryNoPrompt::get_arm",
      "FakeArm"
    ],
    [
      "tests\\test_evo3.py::_conf",
      "ConflictNode"
    ],
    [
      "tests\\test_evo3.py::_conf",
      "Reproducer"
    ],
    [
      "tests\\test_evo3.py::_conf",
      "SpecCoverage"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_stability",
      "ReplayCapsuleBuilder"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_stability",
      "ObviousnessReport"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_stability",
      "build"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_stability",
      "build"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_stability",
      "_conf"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_stability",
      "_conf"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_changes_when_artifacts_change",
      "ReplayCapsuleBuilder"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_changes_when_artifacts_change",
      "ObviousnessReport"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_changes_when_artifacts_change",
      "ObviousnessReport"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_changes_when_artifacts_change",
      "build"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_changes_when_artifacts_change",
      "build"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_changes_when_artifacts_change",
      "_conf"
    ],
    [
      "tests\\test_evo3.py::test_replay_barcode_changes_when_artifacts_change",
      "_conf"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "list"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "join"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "hexdigest"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "CanonicalEvent"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "get"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "items"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "sorted"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "isinstance"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "sha256"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "float"
    ],
    [
      "systems\\atune\\processing\\canonical.py::Canonicalizer::canonicalise",
      "encode"
    ],
    [
      "systems\\atune\\salience\\heads.py::NoveltyHead::__init__",
      "set"
    ],
    [
      "systems\\atune\\salience\\heads.py::KeywordHead::__init__",
      "lower"
    ],
    [
      "systems\\atune\\salience\\heads.py::RiskHead::__init__",
      "compile"
    ],
    [
      "systems\\atune\\salience\\heads.py::RiskHead::__init__",
      "items"
    ],
    [
      "systems\\atune\\salience\\engine.py::SalienceEngine::__init__",
      "sorted"
    ],
    [
      "systems\\atune\\salience\\engine.py::SalienceEngine::__init__",
      "len"
    ],
    [
      "systems\\atune\\salience\\engine.py::SalienceEngine::__init__",
      "len"
    ],
    [
      "systems\\atune\\salience\\engine.py::SalienceEngine::__init__",
      "ValueError"
    ],
    [
      "systems\\atune\\salience\\engine.py::SalienceEngine::__init__",
      "set"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::__init__",
      "astype"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::__init__",
      "astype"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::__init__",
      "astype"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::__init__",
      "astype"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::__init__",
      "randn"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::__init__",
      "randn"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::__init__",
      "randn"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::__init__",
      "randn"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::_relu",
      "maximum"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::_softmax",
      "exp"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::_softmax",
      "sum"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::_softmax",
      "max"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::get_gates",
      "_relu"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::get_gates",
      "_softmax"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::get_gates",
      "dot"
    ],
    [
      "systems\\atune\\salience\\gating.py::MetaAttentionGater::get_gates",
      "dot"
    ],
    [
      "systems\\atune\\salience\\conformal.py::PerHeadConformal::update",
      "setdefault"
    ],
    [
      "systems\\atune\\salience\\conformal.py::PerHeadConformal::update",
      "append"
    ],
    [
      "systems\\atune\\salience\\conformal.py::PerHeadConformal::update",
      "deque"
    ],
    [
      "systems\\atune\\salience\\conformal.py::PerHeadConformal::p_value",
      "get"
    ],
    [
      "systems\\atune\\salience\\conformal.py::PerHeadConformal::p_value",
      "sum"
    ],
    [
      "systems\\atune\\salience\\conformal.py::PerHeadConformal::p_value",
      "len"
    ],
    [
      "systems\\atune\\salience\\conformal.py::PerHeadConformal::summary",
      "p_value"
    ],
    [
      "systems\\atune\\salience\\conformal.py::PerHeadConformal::summary",
      "min"
    ],
    [
      "systems\\atune\\salience\\conformal.py::PerHeadConformal::summary",
      "items"
    ],
    [
      "systems\\atune\\salience\\conformal.py::PerHeadConformal::summary",
      "values"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "sum"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "sum"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "get"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "sum"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "FAEScore"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "get"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "get"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "get"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "get"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "values"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "values"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "values"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems\\atune\\planner\\fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "isinstance"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "max"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "max"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "max"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "int"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "int"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "getattr"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "isinstance"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "getattr"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "callable"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "max"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "f"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "isinstance"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "int"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "max"
    ],
    [
      "systems\\atune\\planner\\market.py::_resolve_budget_ms",
      "int"
    ],
    [
      "systems\\atune\\planner\\market.py::AttentionMarket::run_auction",
      "_resolve_budget_ms"
    ],
    [
      "systems\\atune\\planner\\market.py::AttentionMarket::run_auction",
      "select_with_pareto_knee"
    ],
    [
      "systems\\atune\\planner\\market.py::AttentionMarket::run_auction",
      "select_with_pareto_knee"
    ],
    [
      "systems\\atune\\planner\\intervention.py::create_signed_token",
      "hexdigest"
    ],
    [
      "systems\\atune\\planner\\intervention.py::create_signed_token",
      "encode"
    ],
    [
      "systems\\atune\\planner\\intervention.py::create_signed_token",
      "encode"
    ],
    [
      "systems\\atune\\planner\\intervention.py::create_signed_token",
      "new"
    ],
    [
      "systems\\atune\\planner\\intervention.py::create_signed_token",
      "model_dump"
    ],
    [
      "systems\\atune\\planner\\intervention.py::create_signed_token",
      "str"
    ],
    [
      "systems\\atune\\planner\\intervention.py::create_signed_token",
      "sorted"
    ],
    [
      "systems\\atune\\planner\\intervention.py::create_signed_token",
      "model_dump"
    ],
    [
      "systems\\atune\\planner\\inference.py::ActiveInferenceHead::__init__",
      "GenerativeModel"
    ],
    [
      "systems\\atune\\planner\\inference.py::ActiveInferenceHead::calculate_expected_free_energy",
      "print"
    ],
    [
      "systems\\atune\\planner\\inference.py::ActiveInferenceHead::calculate_expected_free_energy",
      "log"
    ],
    [
      "systems\\atune\\planner\\rollback.py::_map_params_from_result",
      "items"
    ],
    [
      "systems\\atune\\planner\\rollback.py::_map_params_from_result",
      "split"
    ],
    [
      "systems\\atune\\planner\\rollback.py::_map_params_from_result",
      "str"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "dict"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "bool"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "_map_params_from_result"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "isinstance"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "isinstance"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "append"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "_safe_noop_contract"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "_safe_noop_contract"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "extend"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "extend"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "_atom"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "bool"
    ],
    [
      "systems\\atune\\planner\\rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems\\atune\\planner\\costs.py::scale_bid_costs",
      "getattr"
    ],
    [
      "systems\\atune\\planner\\costs.py::scale_bid_costs",
      "float"
    ],
    [
      "systems\\atune\\planner\\costs.py::scale_bid_costs",
      "int"
    ],
    [
      "systems\\atune\\planner\\costs.py::scale_bid_costs",
      "deepcopy"
    ],
    [
      "systems\\atune\\planner\\costs.py::scale_bid_costs",
      "append"
    ],
    [
      "systems\\atune\\planner\\costs.py::scale_bid_costs",
      "get"
    ],
    [
      "systems\\atune\\planner\\costs.py::scale_bid_costs",
      "max"
    ],
    [
      "systems\\atune\\planner\\costs.py::scale_bid_costs",
      "min"
    ],
    [
      "systems\\atune\\planner\\costs.py::scale_bid_costs",
      "round"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::_fae_scalar",
      "getattr"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::_fae_scalar",
      "isinstance"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::_fae_scalar",
      "float"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::_fae_scalar",
      "float"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::select_with_pareto_knee",
      "sort"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::select_with_pareto_knee",
      "append"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::select_with_pareto_knee",
      "_fae_scalar"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::select_with_pareto_knee",
      "max"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::select_with_pareto_knee",
      "enumerate"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::select_with_pareto_knee",
      "int"
    ],
    [
      "systems\\atune\\planner\\market_strategies\\pareto_knee.py::select_with_pareto_knee",
      "getattr"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::set_pool_ms_per_tick",
      "max"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::set_pool_ms_per_tick",
      "int"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::add_reserve",
      "max"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::add_reserve",
      "int"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::set_reserves",
      "max"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::set_reserves",
      "int"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::set_reserves",
      "items"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::get_available_budget",
      "max"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::get_available_budget",
      "int"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::request_allocation",
      "max"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::request_allocation",
      "int"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::request_allocation",
      "min"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::request_allocation",
      "get"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::request_allocation",
      "max"
    ],
    [
      "systems\\atune\\budgeter\\manager.py::AttentionBudgetManager::request_allocation",
      "get"
    ],
    [
      "systems\\atune\\budgeter\\tempo.py::TempoForecaster::__init__",
      "defaultdict"
    ],
    [
      "systems\\atune\\budgeter\\tempo.py::TempoForecaster::forecast_and_reserve",
      "items"
    ],
    [
      "systems\\atune\\budgeter\\tempo.py::TempoForecaster::forecast_and_reserve",
      "set_reserves"
    ],
    [
      "systems\\atune\\budgeter\\tempo.py::TempoForecaster::forecast_and_reserve",
      "sum"
    ],
    [
      "systems\\atune\\budgeter\\tempo.py::TempoForecaster::forecast_and_reserve",
      "int"
    ],
    [
      "systems\\atune\\budgeter\\tempo.py::TempoForecaster::forecast_and_reserve",
      "values"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::deposit",
      "len"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::deposit",
      "get"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::run_diffusion_step",
      "copy"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::run_diffusion_step",
      "items"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::run_diffusion_step",
      "get"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::run_diffusion_step",
      "sum"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::run_diffusion_step",
      "items"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::run_diffusion_step",
      "get"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::run_diffusion_step",
      "len"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::detect_hotspots",
      "max"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::detect_hotspots",
      "max"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::detect_hotspots",
      "values"
    ],
    [
      "systems\\atune\\focus\\field.py::SalienceFieldManager::detect_hotspots",
      "items"
    ],
    [
      "systems\\atune\\focus\\tuner.py::DiffusionTuner::apply_hint",
      "float"
    ],
    [
      "systems\\atune\\focus\\tuner.py::DiffusionTuner::apply_hint",
      "max"
    ],
    [
      "systems\\atune\\focus\\tuner.py::DiffusionTuner::apply_hint",
      "min"
    ],
    [
      "systems\\atune\\control\\affect.py::AffectiveControlLoop::__init__",
      "AffectiveState"
    ],
    [
      "systems\\atune\\control\\affect.py::AffectiveControlLoop::update_state",
      "print"
    ],
    [
      "systems\\atune\\control\\affect.py::AffectiveControlLoop::update_state",
      "model_dump_json"
    ],
    [
      "systems\\atune\\control\\affect.py::AffectiveControlLoop::get_current_modulations",
      "ControlModulations"
    ],
    [
      "systems\\atune\\memory\\store.py::MemoryStore::get_all_nodes",
      "list"
    ],
    [
      "systems\\atune\\memory\\store.py::MemoryStore::get_all_nodes",
      "values"
    ],
    [
      "systems\\atune\\memory\\store.py::MemoryStore::update_schemas",
      "print"
    ],
    [
      "systems\\atune\\memory\\store.py::MemoryStore::update_schemas",
      "array"
    ],
    [
      "systems\\atune\\memory\\store.py::MemoryStore::update_schemas",
      "len"
    ],
    [
      "systems\\atune\\memory\\store.py::MemoryStore::match_event_to_schema",
      "dot"
    ],
    [
      "systems\\atune\\memory\\store.py::MemoryStore::match_event_to_schema",
      "argmax"
    ],
    [
      "systems\\atune\\memory\\store.py::MemoryStore::match_event_to_schema",
      "norm"
    ],
    [
      "systems\\atune\\memory\\store.py::MemoryStore::match_event_to_schema",
      "print"
    ],
    [
      "systems\\atune\\memory\\store.py::MemoryStore::match_event_to_schema",
      "norm"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "set"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "defaultdict"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "enumerate"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "StructuralCausalModel"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "CausalVariable"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "CausalVariable"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "StructuralEquation"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "print"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "enumerate"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "add"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "defaultdict"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "get"
    ],
    [
      "systems\\atune\\causal\\discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "add"
    ],
    [
      "systems\\atune\\causal\\scm_consumer.py::SCMConsumer::__init__",
      "SynapseCausalClient"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_digest_hex",
      "hexdigest"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_digest_hex",
      "blake3"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_digest_hex",
      "hexdigest"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_digest_hex",
      "blake2b"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_write_jsonl",
      "dumps"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_write_jsonl",
      "_digest_hex"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_write_jsonl",
      "encode"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_write_jsonl",
      "open"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_write_jsonl",
      "write"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_write_jsonl",
      "flush"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_write_jsonl",
      "fsync"
    ],
    [
      "systems\\atune\\journal\\ledger.py::_write_jsonl",
      "fileno"
    ],
    [
      "systems\\atune\\journal\\ledger.py::record",
      "_write_jsonl"
    ],
    [
      "systems\\atune\\journal\\ledger.py::record",
      "_write_jsonl"
    ],
    [
      "systems\\atune\\journal\\ledger.py::record",
      "asdict"
    ],
    [
      "systems\\atune\\journal\\ledger.py::record",
      "asdict"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "setdefault"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "setdefault"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "setdefault"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "getattr"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "float"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "float"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "float"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "float"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "items"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "isinstance"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "getattr"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "get"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_terms",
      "get"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_points",
      "enumerate"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_points",
      "_terms"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_points",
      "append"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_points",
      "_Point"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_points",
      "float"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_pareto_front",
      "any"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_pareto_front",
      "append"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_pareto_front",
      "_dominates"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_normalize",
      "_norm"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_normalize",
      "_norm"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_normalize",
      "_norm"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_normalize",
      "_norm"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_normalize",
      "min"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_normalize",
      "max"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_normalize",
      "enumerate"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_normalize",
      "len"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_norm",
      "min"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_norm",
      "max"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_norm",
      "len"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_knee_index",
      "_normalize"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_knee_index",
      "enumerate"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::_knee_index",
      "hypot"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee",
      "_points"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee",
      "_pareto_front"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee",
      "_knee_index"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee",
      "getattr"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee",
      "getattr"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee",
      "round"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee",
      "round"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee",
      "round"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee",
      "int"
    ],
    [
      "systems\\atune\\journal\\why_helpers.py::summarize_pareto_knee",
      "len"
    ],
    [
      "systems\\atune\\safety\\reflex_catalog.py::decide",
      "items"
    ],
    [
      "systems\\atune\\safety\\reflex_catalog.py::decide",
      "get"
    ],
    [
      "systems\\atune\\safety\\reflex_catalog.py::decide",
      "dict"
    ],
    [
      "systems\\atune\\safety\\reflex_catalog.py::apply_redactions",
      "split"
    ],
    [
      "systems\\atune\\safety\\reflex_catalog.py::apply_redactions",
      "enumerate"
    ],
    [
      "systems\\atune\\safety\\reflex_catalog.py::apply_redactions",
      "isinstance"
    ],
    [
      "systems\\atune\\safety\\reflex_catalog.py::apply_redactions",
      "len"
    ],
    [
      "systems\\atune\\safety\\gating.py::ConformalGate::__init__",
      "max"
    ],
    [
      "systems\\atune\\safety\\gating.py::ConformalGate::__init__",
      "min"
    ],
    [
      "systems\\atune\\safety\\gating.py::ConformalGate::__init__",
      "float"
    ],
    [
      "systems\\atune\\ingest\\followups.py::_host_of",
      "match"
    ],
    [
      "systems\\atune\\ingest\\followups.py::_host_of",
      "str"
    ],
    [
      "systems\\atune\\ingest\\followups.py::_host_of",
      "lower"
    ],
    [
      "systems\\atune\\ingest\\followups.py::_host_of",
      "group"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "str"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "HarvestSummary"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "append"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "str"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "inc"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "str"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "findall"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "set"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "set"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "lower"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "append"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "inc"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "sorted"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "len"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "sorted"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "len"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "counter"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "_host_of"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "findall"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "gauge"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "gauge"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "counter"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "lower"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_batch_followups",
      "HarvestSummary"
    ],
    [
      "systems\\atune\\ingest\\followups.py::harvest_batch_followups",
      "harvest_followup_event"
    ],
    [
      "systems\\atune\\ingest\\followups.py::salience_hints_from_harvest",
      "sorted"
    ],
    [
      "systems\\atune\\ingest\\followups.py::salience_hints_from_harvest",
      "sorted"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::_merge_dict",
      "items"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::_merge_dict",
      "isinstance"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::_merge_dict",
      "setdefault"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::_merge_dict",
      "isinstance"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::_merge_dict",
      "_merge_dict"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "normalize_playbook"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "synthesize_rollback_contract"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "setdefault"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "_merge_dict"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "setdefault"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "_merge_dict"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "setdefault"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "_merge_dict"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "setdefault"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "extend"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "setdefault"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "extend"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems\\atune\\intent\\constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "CapabilityGapEvent"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "Counter"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "any"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "sum"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "len"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "sum"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "len"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "RegretStats"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "max"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "ExemplarInput"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "PostconditionFailure"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "get"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "values"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "len"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "len"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "get"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "get"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "get"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "get"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "max"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "sum"
    ],
    [
      "systems\\atune\\intent\\gap_detector.py::detect_capability_gap",
      "len"
    ],
    [
      "systems\\atune\\intent\\playbook_schema.py::Playbook::_coerce_atoms",
      "validator"
    ],
    [
      "systems\\atune\\intent\\playbook_schema.py::Playbook::_coerce_atoms",
      "ContractAtom"
    ],
    [
      "systems\\atune\\intent\\playbook_schema.py::normalize_playbook",
      "Playbook"
    ],
    [
      "systems\\atune\\intent\\playbook_schema.py::normalize_playbook",
      "Playbook"
    ],
    [
      "systems\\atune\\metrics\\secl_counters.py::bump",
      "int"
    ],
    [
      "systems\\atune\\metrics\\secl_counters.py::bump",
      "int"
    ],
    [
      "systems\\atune\\metrics\\secl_counters.py::bump",
      "get"
    ],
    [
      "systems\\atune\\metrics\\secl_counters.py::set_gauge",
      "float"
    ],
    [
      "systems\\atune\\metrics\\secl_counters.py::set_info",
      "get"
    ],
    [
      "systems\\atune\\metrics\\secl_counters.py::set_info",
      "strftime"
    ],
    [
      "systems\\atune\\metrics\\secl_counters.py::set_info",
      "gmtime"
    ],
    [
      "systems\\atune\\metrics\\secl_counters.py::snapshot",
      "deepcopy"
    ],
    [
      "systems\\atune\\metrics\\secl_counters.py::snapshot",
      "deepcopy"
    ],
    [
      "systems\\atune\\metrics\\secl_counters.py::snapshot",
      "deepcopy"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "int"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "get"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "get"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "int"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "set"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "set"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "set"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "set"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "float"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "max"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "float"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "gauge"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "gauge"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "gauge"
    ],
    [
      "systems\\atune\\metrics\\budget_audit.py::audit_and_record",
      "gauge"
    ],
    [
      "systems\\atune\\escalation\\reasons.py::reason_conformal_ood",
      "EscalationReason"
    ],
    [
      "systems\\atune\\escalation\\reasons.py::reason_postcond_violation",
      "EscalationReason"
    ],
    [
      "systems\\atune\\escalation\\reasons.py::reason_rollback_failed",
      "EscalationReason"
    ],
    [
      "systems\\atune\\escalation\\reasons.py::reason_twin_mismatch",
      "EscalationReason"
    ],
    [
      "systems\\atune\\escalation\\build.py::build_escalation_payload",
      "model_dump"
    ],
    [
      "systems\\axon\\dependencies.py::get_driver_registry",
      "lru_cache"
    ],
    [
      "systems\\axon\\dependencies.py::get_driver_registry",
      "DriverRegistry"
    ],
    [
      "systems\\axon\\dependencies.py::get_driver_registry",
      "register"
    ],
    [
      "systems\\axon\\dependencies.py::get_driver_registry",
      "register"
    ],
    [
      "systems\\axon\\dependencies.py::get_driver_registry",
      "RssDriver"
    ],
    [
      "systems\\axon\\dependencies.py::get_driver_registry",
      "QoraSearchDriver"
    ],
    [
      "systems\\axon\\dependencies.py::get_journal",
      "lru_cache"
    ],
    [
      "systems\\axon\\dependencies.py::get_journal",
      "MerkleJournal"
    ],
    [
      "systems\\axon\\dependencies.py::get_quarantine",
      "lru_cache"
    ],
    [
      "systems\\axon\\dependencies.py::get_quarantine",
      "Quarantine"
    ],
    [
      "systems\\axon\\dependencies.py::get_lifecycle_manager",
      "lru_cache"
    ],
    [
      "systems\\axon\\dependencies.py::get_lifecycle_manager",
      "DriverLifecycleManager"
    ],
    [
      "systems\\axon\\dependencies.py::get_capability_validator",
      "lru_cache"
    ],
    [
      "systems\\axon\\dependencies.py::get_capability_validator",
      "CapabilityValidator"
    ],
    [
      "systems\\axon\\dependencies.py::get_conformal_predictor",
      "lru_cache"
    ],
    [
      "systems\\axon\\dependencies.py::get_conformal_predictor",
      "ConformalPredictor"
    ],
    [
      "systems\\axon\\dependencies.py::get_scorecard_manager",
      "lru_cache"
    ],
    [
      "systems\\axon\\dependencies.py::get_scorecard_manager",
      "ScorecardManager"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::__init__",
      "__init__"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::__init__",
      "super"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_starttag",
      "append"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_starttag",
      "append"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_starttag",
      "append"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_starttag",
      "Taint"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_endtag",
      "pop"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_data",
      "strip"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_data",
      "append"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::handle_data",
      "strip"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::sanitize",
      "cls"
    ],
    [
      "systems\\axon\\io\\quarantine.py::HTMLSanitizer::sanitize",
      "feed"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::process_and_canonicalize",
      "_canonicalize_html"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::process_and_canonicalize",
      "_canonicalize_json"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::process_and_canonicalize",
      "_canonicalize_text"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_html",
      "sanitize"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_html",
      "append"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_html",
      "CanonicalizedPayload"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_html",
      "isinstance"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_html",
      "CanonicalizedPayload"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_html",
      "Taint"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_html",
      "Taint"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_html",
      "type"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_json",
      "CanonicalizedPayload"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_json",
      "Taint"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_json",
      "isinstance"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_json",
      "CanonicalizedPayload"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_json",
      "Taint"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_json",
      "type"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_text",
      "CanonicalizedPayload"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_text",
      "isinstance"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_text",
      "CanonicalizedPayload"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_text",
      "strip"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_text",
      "Taint"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_text",
      "Taint"
    ],
    [
      "systems\\axon\\io\\quarantine.py::Quarantine::_canonicalize_text",
      "type"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::__init__",
      "AttestationPolicy"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::_map_capabilities",
      "describe"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::_map_capabilities",
      "list"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::_map_capabilities",
      "items"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::_map_capabilities",
      "setdefault"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::_map_capabilities",
      "append"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::register",
      "describe"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::register",
      "_map_capabilities"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::register",
      "print"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::update_driver_status",
      "print"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::update_driver_status",
      "print"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::update_driver_status",
      "verify_attestation"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::update_driver_status",
      "RuntimeError"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::update_driver_status",
      "describe"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "spec_from_file_location"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "module_from_spec"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "exec_module"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "getattr"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "cls"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "register"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "print"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "ImportError"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "hasattr"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "ImportError"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "get"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "RuntimeError"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "RuntimeError"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "verify_attestation"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::load_and_register_driver",
      "describe"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::get_live_driver_for_capability",
      "get"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::get_live_driver_for_capability",
      "get"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::get_live_driver_for_capability",
      "get"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::get_shadow_drivers_for_capability",
      "get"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::get_shadow_drivers_for_capability",
      "get"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::get_shadow_drivers_for_capability",
      "get"
    ],
    [
      "systems\\axon\\mesh\\registry.py::DriverRegistry::get_shadow_drivers_for_capability",
      "append"
    ],
    [
      "systems\\axon\\mesh\\lifecycle.py::DriverLifecycleManager::update_driver_status",
      "print"
    ],
    [
      "systems\\axon\\mesh\\lifecycle.py::DriverLifecycleManager::update_driver_status",
      "KeyError"
    ],
    [
      "systems\\axon\\mesh\\lifecycle.py::DriverLifecycleManager::get_driver_state",
      "get"
    ],
    [
      "systems\\axon\\mesh\\lifecycle.py::DriverLifecycleManager::get_all_states",
      "list"
    ],
    [
      "systems\\axon\\mesh\\lifecycle.py::DriverLifecycleManager::get_all_states",
      "values"
    ],
    [
      "systems\\axon\\mesh\\scorecard.py::ScorecardManager::update_scorecard",
      "isoformat"
    ],
    [
      "systems\\axon\\mesh\\scorecard.py::ScorecardManager::update_scorecard",
      "print"
    ],
    [
      "systems\\axon\\mesh\\scorecard.py::ScorecardManager::update_scorecard",
      "DriverScorecard"
    ],
    [
      "systems\\axon\\mesh\\scorecard.py::ScorecardManager::update_scorecard",
      "now"
    ],
    [
      "systems\\axon\\mesh\\scorecard.py::ScorecardManager::get_all_scorecards",
      "list"
    ],
    [
      "systems\\axon\\mesh\\scorecard.py::ScorecardManager::get_all_scorecards",
      "values"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::_verify_hmac",
      "encode"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::_verify_hmac",
      "hexdigest"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::_verify_hmac",
      "compare_digest"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::_verify_hmac",
      "new"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::_verify_hmac",
      "encode"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::verify_attestation",
      "getattr"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::verify_attestation",
      "getenv"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::verify_attestation",
      "AttestationPolicy"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::verify_attestation",
      "getattr"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::verify_attestation",
      "get"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::verify_attestation",
      "_verify_hmac"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::verify_attestation",
      "isinstance"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::verify_attestation",
      "str"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::verify_attestation",
      "str"
    ],
    [
      "systems\\axon\\mesh\\attestation.py::verify_attestation",
      "str"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::__init__",
      "AutoRollConfig"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::_metrics",
      "hasattr"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::_metrics",
      "getattr"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::_metrics",
      "get"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::_describe",
      "describe"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::_cooldown_ok",
      "get"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::_cooldown_ok",
      "time"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "get_live_driver_for_capability"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "_metrics"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "_describe"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "_cooldown_ok"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "describe"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "_metrics"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "append"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "inc"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "promote_shadow_to_live"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "inc"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "time"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "_journal"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "append"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "get"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "max"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "get_shadow_drivers_for_capability"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "describe"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "get"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "append"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "verify_driver_attestation"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "get"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "max"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "get"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "demote_live_to_shadow"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "inc"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "time"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "_journal"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "counter"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "counter"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::evaluate_and_act",
      "counter"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::_journal",
      "time"
    ],
    [
      "systems\\axon\\mesh\\autoroller.py::AutoRoller::_journal",
      "write_entry"
    ],
    [
      "systems\\axon\\mesh\\promoter.py::PromotionPolicy::ok",
      "int"
    ],
    [
      "systems\\axon\\mesh\\promoter.py::PromotionPolicy::ok",
      "float"
    ],
    [
      "systems\\axon\\mesh\\promoter.py::PromotionPolicy::ok",
      "float"
    ],
    [
      "systems\\axon\\mesh\\promoter.py::_status_eq",
      "isinstance"
    ],
    [
      "systems\\axon\\mesh\\promoter.py::_status_eq",
      "str"
    ],
    [
      "systems\\axon\\mesh\\promoter.py::_status_eq",
      "getattr"
    ],
    [
      "systems\\axon\\mesh\\promoter.py::_coerce_like",
      "isinstance"
    ],
    [
      "systems\\axon\\journal\\mej.py::to_deterministic_json",
      "model_dump_json"
    ],
    [
      "systems\\axon\\journal\\mej.py::to_deterministic_json",
      "encode"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "to_deterministic_json"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "blake2b"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "update"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "hexdigest"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "JournalEntry"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "print"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "type"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "update"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "encode"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "isoformat"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "model_dump"
    ],
    [
      "systems\\axon\\journal\\mej.py::MerkleJournal::write_entry",
      "now"
    ],
    [
      "systems\\axon\\drivers\\rss_driver.py::RssDriver::describe",
      "CapabilitySpec"
    ],
    [
      "systems\\axon\\drivers\\rss_driver.py::RssDriver::push",
      "NotImplementedError"
    ],
    [
      "systems\\axon\\drivers\\rss_driver.py::RssDriver::repro_bundle",
      "get"
    ],
    [
      "systems\\axon\\drivers\\rss_driver.py::RssDriver::repro_bundle",
      "ReplayCapsule"
    ],
    [
      "systems\\axon\\drivers\\rss_driver.py::RssDriver::repro_bundle",
      "KeyError"
    ],
    [
      "systems\\axon\\drivers\\qora_search_driver.py::QoraSearchDriver::describe",
      "CapabilitySpec"
    ],
    [
      "systems\\axon\\drivers\\qora_search_driver.py::QoraSearchDriver::repro_bundle",
      "NotImplementedError"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "str"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "int"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get_hmac_key_by_kid"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "hexdigest"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "int"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "int"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "time"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "encode"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "encode"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "compare_digest"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get_live_driver_for_capability"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "new"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "hasattr"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "describe"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "getattr"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "getattr"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "str"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "sorted"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "str"
    ],
    [
      "systems\\axon\\safety\\validation.py::CapabilityValidator::validate",
      "str"
    ],
    [
      "systems\\axon\\safety\\conformal.py::ConformalPredictor::__init__",
      "deque"
    ],
    [
      "systems\\axon\\safety\\conformal.py::ConformalPredictor::__init__",
      "extend"
    ],
    [
      "systems\\axon\\safety\\conformal.py::ConformalPredictor::__init__",
      "normal"
    ],
    [
      "systems\\axon\\safety\\conformal.py::ConformalPredictor::add_residual",
      "append"
    ],
    [
      "systems\\axon\\safety\\conformal.py::ConformalPredictor::is_action_safe",
      "quantile"
    ],
    [
      "systems\\axon\\safety\\conformal.py::ConformalPredictor::is_action_safe",
      "quantile"
    ],
    [
      "systems\\axon\\safety\\conformal.py::ConformalPredictor::is_action_safe",
      "print"
    ],
    [
      "systems\\axon\\safety\\conformal.py::ConformalPredictor::is_action_safe",
      "print"
    ],
    [
      "systems\\axon\\safety\\conformal.py::ConformalPredictor::is_action_safe",
      "print"
    ],
    [
      "systems\\axon\\safety\\reflex.py::ReflexEngine::evaluate",
      "str"
    ],
    [
      "systems\\axon\\safety\\reflex.py::ReflexEngine::evaluate",
      "search"
    ],
    [
      "systems\\axon\\safety\\reflex.py::ReflexEngine::evaluate",
      "ReflexResult"
    ],
    [
      "systems\\axon\\safety\\reflex.py::ReflexEngine::evaluate",
      "dict"
    ],
    [
      "systems\\axon\\safety\\reflex.py::ReflexEngine::evaluate",
      "sub"
    ],
    [
      "systems\\axon\\safety\\reflex.py::ReflexEngine::evaluate",
      "ReflexResult"
    ],
    [
      "systems\\axon\\safety\\reflex.py::ReflexEngine::evaluate",
      "ReflexResult"
    ],
    [
      "systems\\axon\\safety\\reflex.py::ReflexEngine::evaluate",
      "str"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__",
      "float"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__",
      "float"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__",
      "int"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__",
      "int"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__",
      "float"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__",
      "getenv"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__",
      "getenv"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__",
      "getenv"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__",
      "getenv"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::__init__",
      "getenv"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::_prune",
      "setdefault"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::_prune",
      "_Stats"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::_prune",
      "popleft"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::is_open",
      "get"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::is_open",
      "time"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record",
      "_prune"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record",
      "append"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record",
      "len"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record",
      "sum"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record",
      "time"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record",
      "max"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record_success",
      "record"
    ],
    [
      "systems\\axon\\safety\\circuit_breaker.py::CircuitBreaker::record_failure",
      "record"
    ],
    [
      "systems\\axon\\safety\\contracts.py::_getpath",
      "split"
    ],
    [
      "systems\\axon\\safety\\contracts.py::_getpath",
      "isinstance"
    ],
    [
      "systems\\axon\\safety\\contracts.py::_getpath",
      "get"
    ],
    [
      "systems\\axon\\safety\\contracts.py::_getpath",
      "getattr"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "getattr"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "get"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "str"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "str"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "get"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "_getpath"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "_compare"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "getattr"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "get"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "get"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_preconditions",
      "append"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "getattr"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "str"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "str"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "_getpath"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "_compare"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "hasattr"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "getattr"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "hasattr"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "getattr"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "append"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "isinstance"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "isinstance"
    ],
    [
      "systems\\axon\\safety\\contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems\\axon\\learning\\feedback.py::_calculate_diff",
      "isinstance"
    ],
    [
      "systems\\axon\\learning\\feedback.py::_calculate_diff",
      "isinstance"
    ],
    [
      "systems\\axon\\learning\\feedback.py::_calculate_diff",
      "_calculate_diff"
    ],
    [
      "systems\\axon\\learning\\feedback.py::_calculate_diff",
      "update"
    ],
    [
      "systems\\axon\\security\\attestation.py::verify_driver_attestation",
      "fromhex"
    ],
    [
      "systems\\axon\\security\\attestation.py::verify_driver_attestation",
      "encode"
    ],
    [
      "systems\\axon\\security\\attestation.py::verify_driver_attestation",
      "get_hmac_key_by_kid"
    ],
    [
      "systems\\axon\\security\\attestation.py::verify_driver_attestation",
      "digest"
    ],
    [
      "systems\\axon\\security\\attestation.py::verify_driver_attestation",
      "compare_digest"
    ],
    [
      "systems\\axon\\security\\attestation.py::verify_driver_attestation",
      "get"
    ],
    [
      "systems\\axon\\security\\attestation.py::verify_driver_attestation",
      "new"
    ],
    [
      "systems\\axon\\security\\attestation.py::verify_driver_attestation",
      "get"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::bind",
      "isinstance"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::bind",
      "verify_driver_attestation"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::bind",
      "get"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::bind",
      "get"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::bind",
      "get"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::bind",
      "get"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::bind",
      "get"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::has_binding",
      "get_binding"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::has_binding",
      "verify_driver_attestation"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::get_binding",
      "get"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::get_binding",
      "dict"
    ],
    [
      "systems\\axon\\security\\attestation.py::AttestationManager::verify_binding",
      "has_binding"
    ],
    [
      "systems\\axon\\ab\\runner.py::_mk_shadow_intent",
      "deepcopy"
    ],
    [
      "systems\\axon\\ab\\runner.py::_mk_shadow_intent",
      "dict"
    ],
    [
      "systems\\axon\\ab\\runner.py::_mk_shadow_intent",
      "isinstance"
    ],
    [
      "systems\\axon\\events\\builder.py::_base_event",
      "str"
    ],
    [
      "systems\\axon\\events\\builder.py::_base_event",
      "getattr"
    ],
    [
      "systems\\axon\\events\\builder.py::_base_event",
      "isoformat"
    ],
    [
      "systems\\axon\\events\\builder.py::_base_event",
      "uuid4"
    ],
    [
      "systems\\axon\\events\\builder.py::_base_event",
      "getattr"
    ],
    [
      "systems\\axon\\events\\builder.py::_base_event",
      "getattr"
    ],
    [
      "systems\\axon\\events\\builder.py::_base_event",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::_base_event",
      "getattr"
    ],
    [
      "systems\\axon\\events\\builder.py::_base_event",
      "now"
    ],
    [
      "systems\\axon\\events\\builder.py::_base_event",
      "getattr"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "getattr"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "append"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "getattr"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "_base_event"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "isinstance"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "append"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "append"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "isinstance"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "_base_event"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "getattr"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "str"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "str"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "str"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "float"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "get"
    ],
    [
      "systems\\axon\\events\\builder.py::build_followups",
      "getattr"
    ],
    [
      "systems\\axon\\events\\emitter.py::emit_followups_bg",
      "create_task"
    ],
    [
      "systems\\axon\\events\\emitter.py::emit_followups_bg",
      "emit_followups"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::CheckContext::__init__",
      "endpoints_snapshot"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_alias_parity",
      "Diagnostic"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_alias_parity",
      "Diagnostic"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_alias_parity",
      "append"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_header_discipline",
      "bool"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_header_discipline",
      "Diagnostic"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_header_discipline",
      "get"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_header_discipline",
      "Diagnostic"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_tool_required_args",
      "Diagnostic"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_pydantic_drift",
      "Diagnostic"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_illegal_self_edge",
      "lower"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_illegal_self_edge",
      "Diagnostic"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_illegal_self_edge",
      "lower"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_illegal_self_edge",
      "Diagnostic"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_illegal_self_edge",
      "append"
    ],
    [
      "systems\\contra\\manifest\\assertions.py::check_illegal_self_edge",
      "get"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "DiGraph"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "number_of_nodes"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "shuffle"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "range"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "add_edge"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "pagerank"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "sorted"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "min"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "append"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "items"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "list"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "successors"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "append"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "len"
    ],
    [
      "systems\\contra\\manifest\\selector.py::select_pairs",
      "len"
    ],
    [
      "systems\\contra\\manifest\\autofixers.py::propose_add_alias_patch",
      "dict"
    ],
    [
      "systems\\contra\\manifest\\autofixers.py::propose_add_alias_patch",
      "update"
    ],
    [
      "systems\\contra\\manifest\\autofixers.py::propose_add_alias_patch",
      "loads"
    ],
    [
      "systems\\contra\\manifest\\autofixers.py::propose_add_alias_patch",
      "list"
    ],
    [
      "systems\\contra\\manifest\\autofixers.py::propose_add_alias_patch",
      "read"
    ],
    [
      "systems\\contra\\manifest\\autofixers.py::propose_add_alias_patch",
      "setdefault"
    ],
    [
      "systems\\contra\\manifest\\autofixers.py::propose_add_alias_patch",
      "keys"
    ],
    [
      "systems\\contra\\manifest\\autofixers.py::propose_add_alias_patch",
      "open"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::_encode_gcb_spec",
      "dumps"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::_encode_gcb_spec",
      "get"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::_encode_gcb_spec",
      "len"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::_encode_gcb_spec",
      "get"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::_encode_gcb_spec",
      "get"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::_targets_to_hints",
      "get"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::_targets_to_hints",
      "append"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::_targets_to_hints",
      "get"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::_targets_to_hints",
      "get"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::_targets_to_hints",
      "get"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::start_contra_daemon",
      "create_task"
    ],
    [
      "systems\\contra\\manifest\\__init__.py::start_contra_daemon",
      "_contra_loop"
    ],
    [
      "systems\\evo\\conflicts.py::ConflictsService::record_conflict",
      "setdefault"
    ],
    [
      "systems\\evo\\conflicts.py::ConflictsService::record_conflict",
      "uuid4"
    ],
    [
      "systems\\evo\\conflicts.py::ConflictsService::batch",
      "record_conflict"
    ],
    [
      "systems\\evo\\conflicts.py::ConflictsService::link",
      "setdefault"
    ],
    [
      "systems\\evo\\conflicts.py::ConflictsService::link",
      "append"
    ],
    [
      "systems\\evo\\conflicts.py::ConflictsService::list_open",
      "values"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "ConflictStore"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "HypothesisService"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "ObviousnessGate"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "EvidenceOrchestrator"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "ProposalAssembler"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "RouterService"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "NovaClient"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "EvoLedger"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "ReplayCapsuleBuilder"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "ReplayCapsuleManager"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::__init__",
      "ScorecardExporter"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::intake_conflicts",
      "intake_conflicts"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::_make_brief",
      "list"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::_make_brief",
      "InnovationBrief"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::_make_brief",
      "join"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::_make_brief",
      "get"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::_make_brief",
      "model_dump"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::_format_attention_bid_event",
      "int"
    ],
    [
      "systems\\evo\\engine.py::EvoEngine::_format_attention_bid_event",
      "model_dump"
    ],
    [
      "systems\\evo\\runtime.py::get_engine",
      "EvoEngine"
    ],
    [
      "systems\\evo\\hypotheses\\factory.py::HypothesisFactory::for_conflict",
      "get"
    ],
    [
      "systems\\evo\\hypotheses\\factory.py::HypothesisFactory::for_conflict",
      "Hypothesis"
    ],
    [
      "systems\\evo\\hypotheses\\factory.py::HypothesisFactory::for_conflict",
      "Hypothesis"
    ],
    [
      "systems\\evo\\hypotheses\\factory.py::HypothesisFactory::for_conflict",
      "join"
    ],
    [
      "systems\\evo\\hypotheses\\factory.py::HypothesisFactory::for_conflict",
      "uuid4"
    ],
    [
      "systems\\evo\\hypotheses\\factory.py::HypothesisFactory::for_conflict",
      "uuid4"
    ],
    [
      "systems\\evo\\hypotheses\\factory.py::HypothesisService::__init__",
      "HypothesisFactory"
    ],
    [
      "systems\\evo\\hypotheses\\factory.py::HypothesisService::spawn",
      "_getter"
    ],
    [
      "systems\\evo\\hypotheses\\factory.py::HypothesisService::spawn",
      "for_conflict"
    ],
    [
      "systems\\evo\\hypotheses\\factory.py::HypothesisService::spawn",
      "append"
    ],
    [
      "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::__init__",
      "SimulaClient"
    ],
    [
      "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::__init__",
      "uuid4"
    ],
    [
      "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::request",
      "uuid4"
    ],
    [
      "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::collect",
      "run"
    ],
    [
      "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::collect",
      "_collect_async"
    ],
    [
      "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::attach_replay_capsule",
      "ReplayCapsuleID"
    ],
    [
      "systems\\evo\\evidence\\collector.py::EvidenceOrchestrator::attach_replay_capsule",
      "uuid4"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::__init__",
      "SpecDeriver"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "derive_obligations"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "impact_table"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "Proposal"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "setdefault"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "derive_rollback"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "_score_risk"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "get"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "sorted"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "uuid4"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "isinstance"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "get"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "append"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "get"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "setdefault"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::assemble",
      "get"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::get",
      "get"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::_score_risk",
      "sum"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::_score_risk",
      "sum"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::_score_risk",
      "max"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::_score_risk",
      "len"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::_score_risk",
      "get"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::_score_risk",
      "values"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::_score_risk",
      "getattr"
    ],
    [
      "systems\\evo\\proposals\\assembler.py::ProposalAssembler::_score_risk",
      "get"
    ],
    [
      "systems\\evo\\proposals\\review.py::ProposalReview::__init__",
      "SpecValidators"
    ],
    [
      "systems\\evo\\proposals\\review.py::ProposalReview::review",
      "check_obligation_presence"
    ],
    [
      "systems\\evo\\proposals\\review.py::ProposalReview::review",
      "check_rollback_contract"
    ],
    [
      "systems\\evo\\proposals\\review.py::ProposalReview::review",
      "extend"
    ],
    [
      "systems\\evo\\proposals\\review.py::ProposalReview::review",
      "hasattr"
    ],
    [
      "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::manifest",
      "dict"
    ],
    [
      "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::manifest",
      "get"
    ],
    [
      "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::verify",
      "get"
    ],
    [
      "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::verify",
      "get"
    ],
    [
      "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::verify",
      "hexdigest"
    ],
    [
      "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::verify",
      "items"
    ],
    [
      "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::verify",
      "blake2s"
    ],
    [
      "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::verify",
      "encode"
    ],
    [
      "systems\\evo\\replay\\manager.py::ReplayCapsuleManager::verify",
      "dumps"
    ],
    [
      "systems\\evo\\replay\\builder.py::_stable_barcode",
      "encode"
    ],
    [
      "systems\\evo\\replay\\builder.py::_stable_barcode",
      "hexdigest"
    ],
    [
      "systems\\evo\\replay\\builder.py::_stable_barcode",
      "dumps"
    ],
    [
      "systems\\evo\\replay\\builder.py::_stable_barcode",
      "blake2s"
    ],
    [
      "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder::build",
      "Versions"
    ],
    [
      "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder::build",
      "Inputs"
    ],
    [
      "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder::build",
      "Artifacts"
    ],
    [
      "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder::build",
      "_stable_barcode"
    ],
    [
      "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder::build",
      "ReplayCapsule"
    ],
    [
      "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder::build",
      "model_dump"
    ],
    [
      "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder::build",
      "model_dump"
    ],
    [
      "systems\\evo\\replay\\builder.py::ReplayCapsuleBuilder::build",
      "model_dump"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::score",
      "RuntimeError"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::score",
      "get_running_loop"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::score",
      "run"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::score",
      "score_async"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_per_conflict_features",
      "float"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_per_conflict_features",
      "float"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_per_conflict_features",
      "get"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_per_conflict_features",
      "len"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_per_conflict_features",
      "str"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_per_conflict_features",
      "max"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_per_conflict_features",
      "len"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_per_conflict_features",
      "get"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine",
      "sum"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine",
      "float"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine",
      "float"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine",
      "clip"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine",
      "clip"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine",
      "get"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine",
      "get"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine",
      "get"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine",
      "get"
    ],
    [
      "systems\\evo\\gates\\obviousness.py::ObviousnessGate::_combine",
      "get"
    ],
    [
      "systems\\evo\\clients\\atune_client.py::_hash16",
      "hexdigest"
    ],
    [
      "systems\\evo\\clients\\atune_client.py::_hash16",
      "blake2s"
    ],
    [
      "systems\\evo\\clients\\atune_client.py::_hash16",
      "encode"
    ],
    [
      "systems\\evo\\clients\\atune_client.py::_hash16",
      "repr"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::_h",
      "hexdigest"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::_h",
      "blake2s"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::_h",
      "encode"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::_h",
      "repr"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "_h"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "round"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "float"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "float"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "float"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\scorecards\\exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems\\evo\\repair\\tracker.py::RepairTracker::record",
      "RepairTicket"
    ],
    [
      "systems\\evo\\repair\\tracker.py::RepairTracker::record",
      "uuid4"
    ],
    [
      "systems\\evo\\repair\\tracker.py::RepairTracker::update",
      "get"
    ],
    [
      "systems\\evo\\repair\\tracker.py::RepairTracker::update",
      "KeyError"
    ],
    [
      "systems\\evo\\repair\\tracker.py::RepairTracker::get",
      "get"
    ],
    [
      "systems\\evo\\repair\\tracker.py::RepairTracker::get",
      "KeyError"
    ],
    [
      "systems\\evo\\repair\\tracker.py::RepairTracker::list",
      "list"
    ],
    [
      "systems\\evo\\repair\\tracker.py::RepairTracker::list",
      "values"
    ],
    [
      "systems\\evo\\briefs\\innovation.py::build_innovation_brief",
      "join"
    ],
    [
      "systems\\evo\\briefs\\innovation.py::build_innovation_brief",
      "dict"
    ],
    [
      "systems\\evo\\briefs\\innovation.py::build_innovation_brief",
      "dict"
    ],
    [
      "systems\\evo\\briefs\\innovation.py::build_innovation_brief",
      "uuid4"
    ],
    [
      "systems\\evo\\assemble\\assembler.py::ProposalAssembler::assemble",
      "Proposal"
    ],
    [
      "systems\\evo\\assemble\\assembler.py::ProposalAssembler::assemble",
      "uuid4"
    ],
    [
      "systems\\evo\\assemble\\assembler.py::ProposalAssembler::get",
      "get"
    ],
    [
      "systems\\evo\\conflicts\\store.py::ConflictStore::intake_conflicts",
      "record_conflict"
    ],
    [
      "systems\\evo\\conflicts\\store.py::ConflictStore::get",
      "get"
    ],
    [
      "systems\\evo\\conflicts\\store.py::ConflictStore::get",
      "KeyError"
    ],
    [
      "systems\\evo\\conflicts\\store.py::ConflictStore::list_open",
      "values"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "defaultdict"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "dict"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "list"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "fromkeys"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "get"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "any"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_obligations",
      "get"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_rollback",
      "sorted"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_rollback",
      "join"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::derive_rollback",
      "get"
    ],
    [
      "systems\\evo\\spec\\deriver.py::SpecDeriver::impact_table",
      "items"
    ],
    [
      "systems\\evo\\spec\\validators.py::SpecValidators::check_obligation_presence",
      "append"
    ],
    [
      "systems\\evo\\spec\\validators.py::SpecValidators::check_obligation_presence",
      "len"
    ],
    [
      "systems\\evo\\spec\\validators.py::SpecValidators::check_rollback_contract",
      "get"
    ],
    [
      "systems\\evo\\spec\\validators.py::SpecValidators::check_rollback_contract",
      "append"
    ],
    [
      "systems\\evo\\spec\\validators.py::SpecValidators::check_rollback_contract",
      "get"
    ],
    [
      "systems\\evo\\spec\\validators.py::SpecValidators::check_rollback_contract",
      "append"
    ],
    [
      "systems\\evo\\journal\\ledger.py::_neo_safe_exc",
      "lower"
    ],
    [
      "systems\\evo\\journal\\ledger.py::_neo_safe_exc",
      "str"
    ],
    [
      "systems\\evo\\routing\\payloads.py::RoutingError::__init__",
      "__init__"
    ],
    [
      "systems\\evo\\routing\\payloads.py::RoutingError::__init__",
      "super"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::scan_repo",
      "Path"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::scan_repo",
      "rglob"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::scan_repo",
      "_file_metrics"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::scan_repo",
      "append"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::scan_repo",
      "read_text"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::scan_repo",
      "parse"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::scan_repo",
      "str"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "sum"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "sum"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "count"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "sum"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "sum"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "int"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "isinstance"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "isinstance"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "isinstance"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "isinstance"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "lower"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "max"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "max"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "walk"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "walk"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "walk"
    ],
    [
      "systems\\evo\\graphs\\genome_map.py::GenomeMapper::_file_metrics",
      "walk"
    ],
    [
      "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller::distill",
      "list"
    ],
    [
      "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller::distill",
      "range"
    ],
    [
      "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller::distill",
      "splitter"
    ],
    [
      "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller::distill",
      "range"
    ],
    [
      "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller::distill",
      "joiner"
    ],
    [
      "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller::distill",
      "len"
    ],
    [
      "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller::distill",
      "joiner"
    ],
    [
      "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller::distill",
      "test_fn"
    ],
    [
      "systems\\evo\\counterexamples\\distiller.py::CounterexampleDistiller::distill",
      "pop"
    ],
    [
      "systems\\evo\\policies\\sentinel.py::PolicySentinel::__init__",
      "RouterService"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::_ms",
      "float"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::_ms",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::_ms",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::_avg",
      "float"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::_avg",
      "sum"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::_avg",
      "len"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::_get_score",
      "float"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::_get_score",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::_get_score",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::build_nova_metrics",
      "list"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::build_nova_metrics",
      "_ms"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::build_nova_metrics",
      "_ms"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::build_nova_metrics",
      "_ms"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::build_nova_metrics",
      "len"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::build_nova_metrics",
      "len"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::build_nova_metrics",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "append"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "append"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "append"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "append"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "_avg"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "_avg"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "_avg"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "_avg"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "float"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "float"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "float"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "float"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::merge_metrics",
      "dict"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::merge_metrics",
      "items"
    ],
    [
      "systems\\evo\\metrics\\harvesters.py::merge_metrics",
      "items"
    ],
    [
      "systems\\nova\\ledger\\ledger.py::_barcode",
      "blake2s"
    ],
    [
      "systems\\nova\\ledger\\ledger.py::_barcode",
      "update"
    ],
    [
      "systems\\nova\\ledger\\ledger.py::_barcode",
      "hexdigest"
    ],
    [
      "systems\\nova\\ledger\\ledger.py::_barcode",
      "encode"
    ],
    [
      "systems\\nova\\ledger\\ledger.py::_barcode",
      "repr"
    ],
    [
      "systems\\nova\\ledger\\ledger.py::_barcode",
      "sorted"
    ],
    [
      "systems\\nova\\ledger\\ledger.py::_barcode",
      "items"
    ],
    [
      "systems\\nova\\ledger\\ledger.py::_as_dict",
      "hasattr"
    ],
    [
      "systems\\nova\\ledger\\ledger.py::_as_dict",
      "dict"
    ],
    [
      "systems\\nova\\ledger\\ledger.py::_as_dict",
      "dict"
    ],
    [
      "systems\\nova\\runners\\playbook_runner.py::PlaybookRunner::__init__",
      "__init__"
    ],
    [
      "systems\\nova\\runners\\playbook_runner.py::PlaybookRunner::__init__",
      "PlaybookHotReloader"
    ],
    [
      "systems\\nova\\runners\\playbook_runner.py::PlaybookRunner::__init__",
      "MechanismMutator"
    ],
    [
      "systems\\nova\\runners\\playbook_runner.py::PlaybookRunner::__init__",
      "_refresh_registry"
    ],
    [
      "systems\\nova\\runners\\playbook_runner.py::PlaybookRunner::__init__",
      "super"
    ],
    [
      "systems\\nova\\runners\\playbook_runner.py::PlaybookRunner::_refresh_registry",
      "check_reload"
    ],
    [
      "systems\\nova\\runners\\playbook_runner.py::PlaybookRunner::_refresh_registry",
      "pb"
    ],
    [
      "systems\\nova\\runners\\auction_client.py::_value",
      "float"
    ],
    [
      "systems\\nova\\runners\\auction_client.py::_value",
      "float"
    ],
    [
      "systems\\nova\\runners\\auction_client.py::_value",
      "get"
    ],
    [
      "systems\\nova\\runners\\auction_client.py::_value",
      "float"
    ],
    [
      "systems\\nova\\runners\\auction_client.py::_value",
      "get"
    ],
    [
      "systems\\nova\\runners\\auction_client.py::_value",
      "get"
    ],
    [
      "systems\\nova\\runners\\auction_client.py::_receipt_hash",
      "hexdigest"
    ],
    [
      "systems\\nova\\runners\\auction_client.py::_receipt_hash",
      "blake2s"
    ],
    [
      "systems\\nova\\runners\\auction_client.py::_receipt_hash",
      "encode"
    ],
    [
      "systems\\nova\\runners\\auction_client.py::_receipt_hash",
      "repr"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "Plan"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "pop"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "ValidationError"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "Step"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "ValidationError"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "range"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "range"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::compile",
      "lower"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::simulate",
      "dict"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::simulate",
      "setdefault"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::simulate",
      "append"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::simulate",
      "split"
    ],
    [
      "systems\\nova\\runners\\interpreter.py::MechanismInterpreter::simulate",
      "len"
    ],
    [
      "systems\\nova\\runners\\patch_handoff.py::PatchHandoff::__init__",
      "SimulaClient"
    ],
    [
      "systems\\nova\\runners\\patch_handoff.py::PatchHandoff::to_brief",
      "SimulaPatchBrief"
    ],
    [
      "systems\\nova\\runners\\patch_handoff.py::PatchHandoff::to_brief",
      "get"
    ],
    [
      "systems\\nova\\runners\\patch_handoff.py::PatchHandoff::to_brief",
      "get"
    ],
    [
      "systems\\nova\\runners\\patch_handoff.py::PatchHandoff::to_brief",
      "uuid4"
    ],
    [
      "systems\\nova\\runners\\portfolio_runner.py::PortfolioRunner::__init__",
      "__init__"
    ],
    [
      "systems\\nova\\runners\\portfolio_runner.py::PortfolioRunner::__init__",
      "SynapseClient"
    ],
    [
      "systems\\nova\\runners\\portfolio_runner.py::PortfolioRunner::__init__",
      "NovaSelfModel"
    ],
    [
      "systems\\nova\\runners\\portfolio_runner.py::PortfolioRunner::__init__",
      "NoveltyReservoir"
    ],
    [
      "systems\\nova\\runners\\portfolio_runner.py::PortfolioRunner::__init__",
      "MetaPlaybookComposer"
    ],
    [
      "systems\\nova\\runners\\portfolio_runner.py::PortfolioRunner::__init__",
      "pb"
    ],
    [
      "systems\\nova\\runners\\portfolio_runner.py::PortfolioRunner::__init__",
      "super"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "Plan"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "pop"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "ValidationError"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "Step"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "ValidationError"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "range"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "range"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::compile",
      "lower"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::simulate",
      "dict"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::simulate",
      "setdefault"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::simulate",
      "append"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::simulate",
      "split"
    ],
    [
      "systems\\nova\\dsl\\interpreter.py::MechanismInterpreter::simulate",
      "len"
    ],
    [
      "systems\\nova\\dsl\\lint.py::_has_cycle",
      "append"
    ],
    [
      "systems\\nova\\dsl\\lint.py::_has_cycle",
      "pop"
    ],
    [
      "systems\\nova\\dsl\\lint.py::_has_cycle",
      "range"
    ],
    [
      "systems\\nova\\dsl\\lint.py::_has_cycle",
      "enumerate"
    ],
    [
      "systems\\nova\\dsl\\lint.py::_has_cycle",
      "append"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "get"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "get"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "len"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "_has_cycle"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "LintIssue"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "LintIssue"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "lower"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "append"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "append"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "LintIssue"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "LintIssue"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "isinstance"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "strip"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "len"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "str"
    ],
    [
      "systems\\nova\\dsl\\lint.py::lint_mechanism",
      "get"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::_is_number",
      "isinstance"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::_is_number",
      "isinstance"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::_jiggle_number",
      "max"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::_jiggle_number",
      "abs"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::_jiggle_number",
      "hash"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::_clone_mech",
      "deepcopy"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_jiggle_params",
      "get"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_jiggle_params",
      "list"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_jiggle_params",
      "get"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_jiggle_params",
      "items"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_jiggle_params",
      "_is_number"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_jiggle_params",
      "_jiggle_number"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_jiggle_params",
      "float"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_batch_after_first",
      "get"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_batch_after_first",
      "append"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_batch_after_first",
      "list"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_batch_after_first",
      "append"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_batch_after_first",
      "lower"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_batch_after_first",
      "get"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_batch_after_first",
      "str"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_batch_after_first",
      "len"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_batch_after_first",
      "get"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "get"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "len"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "append"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "append"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "list"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "lower"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "get"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "append"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "append"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "str"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "get"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::mutate_mechanism",
      "_clone_mech"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::mutate_mechanism",
      "_jiggle_params"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::mutate_mechanism",
      "_ensure_batch_after_first"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::mutate_mechanism",
      "_ensure_critique_repair_suffix"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::mutate_mechanism",
      "lint_mechanism"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate",
      "dict"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate",
      "dict"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate",
      "mutate_mechanism"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate",
      "copy"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate",
      "dict"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate",
      "InventionArtifact"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate",
      "dict"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate",
      "setdefault"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate",
      "get"
    ],
    [
      "systems\\nova\\dsl\\mutate.py::MechanismMutator::augment_candidate",
      "uuid4"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::_iter_modules",
      "get"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::_iter_modules",
      "walk_packages"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::_iter_modules",
      "import_module"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::_iter_modules",
      "append"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::_iter_modules",
      "import_module"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::check_reload",
      "time"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::check_reload",
      "_iter_modules"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::check_reload",
      "getsourcefile"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::check_reload",
      "getmtime"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::check_reload",
      "get"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::check_reload",
      "reload"
    ],
    [
      "systems\\nova\\playbooks\\hotreload.py::PlaybookHotReloader::check_reload",
      "isfile"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::__get_pydantic_core_schema__",
      "no_info_after_validator_function"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::__get_pydantic_core_schema__",
      "any_schema"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::__get_pydantic_core_schema__",
      "isinstance"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::__get_pydantic_core_schema__",
      "TypeError"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::_validate",
      "isinstance"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::_validate",
      "TypeError"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "get"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "keys"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "ProofResult"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "set"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "len"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "len"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "len"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "get"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "len"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "get"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "append"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "append"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "append"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "get"
    ],
    [
      "systems\\nova\\proof\\pcc.py::ProofVM::check",
      "keys"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "check"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "list"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "ProofResult"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "get"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "set"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "extend"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "get"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "get"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "append"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "get"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "append"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "set"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "isinstance"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "set"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "set"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "get"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "keys"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "intersection"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "append"
    ],
    [
      "systems\\nova\\proof\\pcc_ext.py::ProofVMExt::check",
      "len"
    ],
    [
      "systems\\nova\\proof\\pyd_types.py::_vm_serialize",
      "hasattr"
    ],
    [
      "systems\\nova\\proof\\pyd_types.py::_vm_serialize",
      "hasattr"
    ],
    [
      "systems\\nova\\proof\\pyd_types.py::_vm_serialize",
      "to_dict"
    ],
    [
      "systems\\nova\\proof\\pyd_types.py::_vm_serialize",
      "dict"
    ],
    [
      "systems\\nova\\proof\\pyd_types.py::_vm_serialize",
      "repr"
    ],
    [
      "systems\\nova\\clients\\simula_client.py::_as_dict",
      "hasattr"
    ],
    [
      "systems\\nova\\clients\\simula_client.py::_as_dict",
      "dict"
    ],
    [
      "systems\\nova\\clients\\simula_client.py::_as_dict",
      "dict"
    ],
    [
      "systems\\nova\\clients\\simula_client.py::_resolve",
      "items"
    ],
    [
      "systems\\nova\\clients\\simula_client.py::_resolve",
      "replace"
    ],
    [
      "systems\\nova\\clients\\simula_client.py::_resolve",
      "len"
    ],
    [
      "systems\\nova\\clients\\simula_client.py::_resolve",
      "next"
    ],
    [
      "systems\\nova\\clients\\simula_client.py::_resolve",
      "rstrip"
    ],
    [
      "systems\\nova\\clients\\simula_client.py::_resolve",
      "iter"
    ],
    [
      "systems\\nova\\clients\\simula_client.py::_resolve",
      "values"
    ],
    [
      "systems\\nova\\clients\\synapse_client.py::SynapseBudgetClient::__init__",
      "bool"
    ],
    [
      "systems\\nova\\clients\\synapse_client.py::SynapseBudgetClient::__init__",
      "getenv"
    ],
    [
      "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::__init__",
      "ProofVMExt"
    ],
    [
      "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::__init__",
      "EquorPolicyClient"
    ],
    [
      "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::__init__",
      "SimulaClient"
    ],
    [
      "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::__init__",
      "NovaLedger"
    ],
    [
      "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::_pick_winners",
      "set"
    ],
    [
      "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::_build_simula_patch_brief",
      "SimulaPatchBrief"
    ],
    [
      "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::_build_simula_patch_brief",
      "get"
    ],
    [
      "systems\\nova\\pipelines\\winner_pipeline.py::WinnerPipeline::_build_simula_patch_brief",
      "get"
    ],
    [
      "systems\\nova\\insights\\self_model.py::_h16",
      "hexdigest"
    ],
    [
      "systems\\nova\\insights\\self_model.py::_h16",
      "blake2s"
    ],
    [
      "systems\\nova\\insights\\self_model.py::_h16",
      "encode"
    ],
    [
      "systems\\nova\\insights\\self_model.py::_h16",
      "repr"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::_sig",
      "_h16"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::_sig",
      "get"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::update",
      "setdefault"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::update",
      "int"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::update",
      "float"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::update",
      "int"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::update",
      "time"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::update",
      "_sig"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::update",
      "ArmStats"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::update",
      "bool"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "_sig"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "sum"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "get"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "ArmStats"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "sqrt"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "items"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "get"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "len"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "ArmStats"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "log"
    ],
    [
      "systems\\nova\\insights\\self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::_decay",
      "max"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::_decay",
      "max"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::_decay",
      "max"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::_decay",
      "int"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::_decay",
      "int"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::_decay",
      "int"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::_decay",
      "round"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::_decay",
      "round"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::_decay",
      "round"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "Path"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "loads"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "time"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "items"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "exists"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "read_text"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "ArmStats"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "_decay"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "get"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "tuple"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::load",
      "split"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::save",
      "Path"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::save",
      "mkdir"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::save",
      "write_text"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::save",
      "asdict"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::save",
      "dumps"
    ],
    [
      "systems\\nova\\insights\\self_model_store.py::SelfModelStore::save",
      "items"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::_barcode",
      "hexdigest"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::_barcode",
      "blake2s"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::_barcode",
      "encode"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::_barcode",
      "repr"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::_barcode",
      "sorted"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::_barcode",
      "items"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::__init__",
      "set"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::__init__",
      "set"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::key",
      "get"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::key",
      "get"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::key",
      "_barcode"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::key",
      "_barcode"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::key",
      "get"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::key",
      "get"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::accept",
      "key"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::accept",
      "add"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::accept",
      "add"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::filter_portfolio",
      "accept"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::filter_portfolio",
      "append"
    ],
    [
      "systems\\nova\\novelty\\reservoir.py::NoveltyReservoir::filter_portfolio",
      "len"
    ],
    [
      "systems\\nova\\eval\\cost.py::estimate_cost_ms",
      "get"
    ],
    [
      "systems\\nova\\eval\\cost.py::estimate_cost_ms",
      "get"
    ],
    [
      "systems\\nova\\eval\\cost.py::estimate_cost_ms",
      "max"
    ],
    [
      "systems\\nova\\eval\\cost.py::estimate_cost_ms",
      "max"
    ],
    [
      "systems\\nova\\eval\\cost.py::estimate_cost_ms",
      "int"
    ],
    [
      "systems\\nova\\eval\\cost.py::estimate_cost_ms",
      "int"
    ],
    [
      "systems\\nova\\eval\\cost.py::estimate_cost_ms",
      "len"
    ],
    [
      "systems\\nova\\eval\\cost.py::estimate_cost_ms",
      "len"
    ],
    [
      "systems\\nova\\eval\\cost.py::estimate_cost_ms",
      "max"
    ],
    [
      "systems\\nova\\eval\\metrics.py::_clamp",
      "max"
    ],
    [
      "systems\\nova\\eval\\metrics.py::_clamp",
      "min"
    ],
    [
      "systems\\nova\\eval\\metrics.py::mechanism_complexity",
      "len"
    ],
    [
      "systems\\nova\\eval\\metrics.py::mechanism_complexity",
      "len"
    ],
    [
      "systems\\nova\\eval\\metrics.py::mechanism_complexity",
      "_clamp"
    ],
    [
      "systems\\nova\\eval\\metrics.py::mechanism_complexity",
      "get"
    ],
    [
      "systems\\nova\\eval\\metrics.py::mechanism_complexity",
      "get"
    ],
    [
      "systems\\nova\\eval\\metrics.py::risk_hint",
      "len"
    ],
    [
      "systems\\nova\\eval\\metrics.py::risk_hint",
      "len"
    ],
    [
      "systems\\nova\\eval\\metrics.py::risk_hint",
      "_clamp"
    ],
    [
      "systems\\nova\\eval\\metrics.py::risk_hint",
      "get"
    ],
    [
      "systems\\nova\\eval\\metrics.py::risk_hint",
      "get"
    ],
    [
      "systems\\nova\\eval\\metrics.py::risk_hint",
      "max"
    ],
    [
      "systems\\nova\\eval\\metrics.py::fae_composite",
      "mechanism_complexity"
    ],
    [
      "systems\\nova\\eval\\metrics.py::fae_composite",
      "risk_hint"
    ],
    [
      "systems\\nova\\eval\\metrics.py::fae_composite",
      "_clamp"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::_avg",
      "float"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::_avg",
      "sum"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::_avg",
      "len"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_propose",
      "len"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_propose",
      "str"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "str"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "str"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "isinstance"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "isinstance"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "append"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "append"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "append"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "append"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "getattr"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "float"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "float"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "float"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "float"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "_avg"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "_avg"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "_avg"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "_avg"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_auction",
      "isinstance"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_auction",
      "get"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_auction",
      "str"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_auction",
      "getattr"
    ],
    [
      "systems\\nova\\telemetry\\hooks.py::headers_for_auction",
      "len"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_blake",
      "hexdigest"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_blake",
      "blake2b"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_blake",
      "encode"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_read",
      "read_text"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "_read"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "visit"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "parse"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "_extract_tool_meta"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "_infer_module"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "_blake"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "append"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "generic_visit"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "V"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "str"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "get_docstring"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "int"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "bool"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "get_source_segment"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "_extract_tool_meta"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "_infer_module"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "_blake"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "append"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "generic_visit"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "get_docstring"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "int"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "bool"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "get_source_segment"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_extract_tool_meta",
      "isinstance"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_extract_tool_meta",
      "literal_eval"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_extract_tool_meta",
      "parse"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_extract_tool_meta",
      "strip"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_infer_module",
      "with_suffix"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_infer_module",
      "list"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_infer_module",
      "enumerate"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_infer_module",
      "join"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_patrol.py::_infer_module",
      "join"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_execution.py::_uid",
      "hexdigest"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_execution.py::_uid",
      "blake2b"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_execution.py::_uid",
      "encode"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_execution.py::_args_imply_external",
      "dumps"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_execution.py::_args_imply_external",
      "any"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_execution.py::_args_imply_external",
      "lower"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_execution.py::_resolve_qualname",
      "split"
    ],
    [
      "systems\\qora\\core\\architecture\\arch_execution.py::_resolve_qualname",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "iscoroutinefunction"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "setattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "fn"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "fn"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "log_conflict"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "get_running_loop"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "create_task"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "log_conflict"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "run"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "log_conflict"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::wrapped",
      "fn"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::wrapped",
      "get_running_loop"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::wrapped",
      "create_task"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::wrapped",
      "log_conflict"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::wrapped",
      "run"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::wrapped",
      "log_conflict"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::wrapped",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::wrapped",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::wrapped",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::wrapped",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "list"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "items"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "isinstance"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "_wrap_callable"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "startswith"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "isinstance"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "setattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "staticmethod"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "setattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "setattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "isfunction"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "ismethoddescriptor"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_class",
      "classmethod"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module",
      "list"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module",
      "items"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module",
      "startswith"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module",
      "isfunction"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module",
      "vars"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module",
      "setattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module",
      "isclass"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module",
      "getattr"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module",
      "_wrap_callable"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::_instrument_module",
      "_instrument_class"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::excepthook",
      "run"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::excepthook",
      "old_excepthook"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::excepthook",
      "log_conflict"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::thread_hook",
      "run"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::thread_hook",
      "old_thread_hook"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::thread_hook",
      "log_conflict"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::thread_hook",
      "str"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::async_handler",
      "create_task"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::async_handler",
      "get"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::async_handler",
      "RuntimeError"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::async_handler",
      "log_conflict"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::async_handler",
      "old_async_handler"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::async_handler",
      "get"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::async_handler",
      "get"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::__init__",
      "__init__"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::__init__",
      "super"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::emit",
      "RuntimeError"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::emit",
      "get_running_loop"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::emit",
      "create_task"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::emit",
      "getMessage"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::emit",
      "log_conflict"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::emit",
      "run"
    ],
    [
      "systems\\qora\\core\\immune\\auto_instrument.py::ConflictLogHandler::emit",
      "log_conflict"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::_redact",
      "items"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::_redact",
      "lower"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::_redact",
      "isinstance"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::_redact",
      "str"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::_normalize_stack",
      "join"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::_normalize_stack",
      "append"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::_normalize_stack",
      "split"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature",
      "dumps"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature",
      "hexdigest"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature",
      "extract_tb"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature",
      "_normalize_stack"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature",
      "sorted"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature",
      "sha1"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature",
      "split"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature",
      "encode"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature",
      "str"
    ],
    [
      "systems\\qora\\core\\immune\\conflict_sdk.py::make_signature",
      "get"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_iter_py",
      "walk"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_iter_py",
      "endswith"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_iter_py",
      "startswith"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_iter_py",
      "replace"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_iter_py",
      "join"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_blake",
      "hexdigest"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_blake",
      "blake2b"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_slice_ref",
      "splitlines"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_slice_ref",
      "join"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_slice_ref",
      "ContentRef"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_slice_ref",
      "ContentRef"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_slice_ref",
      "read"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_slice_ref",
      "_blake"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_slice_ref",
      "max"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_slice_ref",
      "min"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_slice_ref",
      "open"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_slice_ref",
      "len"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_imports",
      "walk"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_imports",
      "isinstance"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_imports",
      "isinstance"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_imports",
      "append"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_imports",
      "append"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_endpoints",
      "enumerate"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_endpoints",
      "splitlines"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_endpoints",
      "finditer"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_endpoints",
      "upper"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_endpoints",
      "append"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_endpoints",
      "group"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_endpoints",
      "get"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "walk"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "isinstance"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "isinstance"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "isinstance"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "any"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "append"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "append"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "str"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "isinstance"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "hasattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "max"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "append"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "len"
    ],
    [
      "systems\\qora\\manifest\\builder.py::_scan_tools_and_models",
      "len"
    ],
    [
      "systems\\qora\\manifest\\engine.py::_file_has_headers",
      "lower"
    ],
    [
      "systems\\qora\\manifest\\engine.py::_file_has_headers",
      "read"
    ],
    [
      "systems\\qora\\manifest\\engine.py::_file_has_headers",
      "open"
    ],
    [
      "systems\\qora\\manifest\\engine.py::run_checks_sync",
      "run"
    ],
    [
      "systems\\qora\\manifest\\engine.py::run_checks_sync",
      "run_checks"
    ],
    [
      "systems\\qora\\gcb\\builder.py::build_gcb",
      "GoldenContextBundle"
    ],
    [
      "systems\\qora\\gcb\\builder.py::build_gcb",
      "append"
    ],
    [
      "systems\\qora\\gcb\\builder.py::build_gcb",
      "Koan"
    ],
    [
      "systems\\qora\\gcb\\builder.py::build_gcb",
      "append"
    ],
    [
      "systems\\qora\\gcb\\builder.py::build_gcb",
      "path"
    ],
    [
      "systems\\qora\\gcb\\builder.py::build_gcb",
      "SnippetRef"
    ],
    [
      "systems\\qora\\gcb\\builder.py::build_gcb",
      "model_dump"
    ],
    [
      "systems\\qora\\gcb\\builder.py::dispatch_gcb_to_simula",
      "get_http_client"
    ],
    [
      "systems\\qora\\gcb\\builder.py::dispatch_gcb_to_simula",
      "path"
    ],
    [
      "systems\\qora\\gcb\\builder.py::dispatch_gcb_to_simula",
      "post"
    ],
    [
      "systems\\qora\\gcb\\builder.py::dispatch_gcb_to_simula",
      "raise_for_status"
    ],
    [
      "systems\\qora\\gcb\\builder.py::dispatch_gcb_to_simula",
      "json"
    ],
    [
      "systems\\qora\\gcb\\builder.py::dispatch_gcb_to_simula",
      "model_dump"
    ],
    [
      "systems\\synk\\core\\tools\\clusters.py::_centroid",
      "mean"
    ],
    [
      "systems\\synk\\core\\tools\\clusters.py::_centroid",
      "tolist"
    ],
    [
      "systems\\synk\\core\\tools\\clusters.py::_centroid",
      "norm"
    ],
    [
      "systems\\synk\\core\\tools\\clusters.py::_centroid",
      "astype"
    ],
    [
      "systems\\synk\\core\\tools\\mesa.py::CustomModel::__init__",
      "RandomActivation"
    ],
    [
      "systems\\synk\\core\\tools\\mesa.py::CustomModel::__init__",
      "range"
    ],
    [
      "systems\\synk\\core\\tools\\mesa.py::CustomModel::__init__",
      "DataCollector"
    ],
    [
      "systems\\synk\\core\\tools\\mesa.py::CustomModel::__init__",
      "agent_class"
    ],
    [
      "systems\\synk\\core\\tools\\mesa.py::CustomModel::__init__",
      "add"
    ],
    [
      "systems\\synk\\core\\tools\\mesa.py::CustomModel::step",
      "step"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::choose_k",
      "int"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::choose_k",
      "int"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::choose_k",
      "max"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::choose_k",
      "max"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::choose_k",
      "min"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::choose_k",
      "min"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::choose_k",
      "min"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::choose_k",
      "floor"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::choose_k",
      "sqrt"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "default_rng"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "min"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "choice"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "copy"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "range"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "sum"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "argmin"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "empty_like"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "range"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "astype"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "zeros"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "any"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "zeros"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "mean"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "integers"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::kmeans_numpy",
      "allclose"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::try_sklearn_kmeans",
      "min"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::try_sklearn_kmeans",
      "astype"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::try_sklearn_kmeans",
      "KMeans"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::try_sklearn_kmeans",
      "KMeans"
    ],
    [
      "systems\\synk\\core\\tools\\native_clustering.py::try_sklearn_kmeans",
      "fit_predict"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_safe_neo_props",
      "isinstance"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_safe_neo_props",
      "_safe"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_safe_neo_props",
      "dumps"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_safe_neo_props",
      "items"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_safe",
      "isinstance"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_safe",
      "dumps"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_get_or_make_event_id",
      "get"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_get_or_make_event_id",
      "str"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_get_or_make_event_id",
      "uuid4"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::matcher_str",
      "join"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_ensure_list",
      "isinstance"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_ensure_list",
      "isinstance"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_ensure_list",
      "loads"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_ensure_list",
      "isinstance"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_ensure_list",
      "float"
    ],
    [
      "systems\\synk\\core\\tools\\neo.py::_ensure_list",
      "float"
    ],
    [
      "systems\\synk\\core\\tools\\vector_store.py::_index_name",
      "replace"
    ],
    [
      "systems\\synk\\core\\tools\\vector_store.py::_index_name",
      "lower"
    ],
    [
      "systems\\synk\\core\\tools\\vector_store.py::_index_name",
      "lower"
    ],
    [
      "systems\\synk\\core\\tools\\vector_store.py::_quote_ident",
      "replace"
    ],
    [
      "systems\\synk\\core\\switchboard\\client.py::Switchboard::__init__",
      "int"
    ],
    [
      "systems\\synk\\core\\switchboard\\client.py::Switchboard::__init__",
      "Lock"
    ],
    [
      "systems\\synk\\core\\switchboard\\flag_deps.py::require_flag_true",
      "Depends"
    ],
    [
      "systems\\synk\\core\\switchboard\\flag_deps.py::require_flag_true",
      "HTTPException"
    ],
    [
      "systems\\synk\\core\\switchboard\\flag_deps.py::require_flag_true",
      "get_bool"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::route_gate",
      "Depends"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::route_gate",
      "RuntimeError"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::route_gate",
      "HTTPException"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::route_gate",
      "gate"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_async",
      "wraps"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_async",
      "gate"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_async",
      "fn"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "wraps"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "gate"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "fn"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_sync",
      "wraps"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_sync",
      "get_running_loop"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_sync",
      "fn"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_sync",
      "gate"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_sync",
      "run"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_sync",
      "run_until_complete"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_sync",
      "_check"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_sync",
      "is_running"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::gated_sync",
      "_check"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "wraps"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "get_running_loop"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "fn"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "gate"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "run"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "run_until_complete"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "_check"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "is_running"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::deco",
      "_check"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::wrapper",
      "wraps"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::wrapper",
      "get_running_loop"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::wrapper",
      "fn"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::wrapper",
      "gate"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::wrapper",
      "run"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::wrapper",
      "run_until_complete"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::wrapper",
      "_check"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::wrapper",
      "is_running"
    ],
    [
      "systems\\synk\\core\\switchboard\\gatekit.py::wrapper",
      "_check"
    ],
    [
      "systems\\thread\\core\\identity_shift.py::_safe_label",
      "sub"
    ],
    [
      "systems\\thread\\core\\identity_shift.py::_safe_label",
      "strip"
    ],
    [
      "systems\\thread\\core\\identity_shift_prompts.py::build_identity_shift_prompt",
      "join"
    ],
    [
      "systems\\thread\\core\\identity_shift_prompts.py::build_identity_shift_prompt",
      "join"
    ],
    [
      "systems\\thread\\core\\identity_shift_prompts.py::build_identity_shift_prompt",
      "get"
    ],
    [
      "systems\\thread\\core\\identity_shift_prompts.py::build_identity_shift_prompt",
      "chr"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "getattr"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "callable"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "getattr"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "str"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "str"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "md"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "list"
    ],
    [
      "systems\\unity\\core\\neo\\graph_writes.py::_jsonable",
      "items"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::__new__",
      "__new__"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::__new__",
      "super"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "items"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "sum"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "clip"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "clip"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "log"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "log"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "append"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "var"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "float"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "float"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "exp"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "len"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "list"
    ],
    [
      "systems\\unity\\core\\room\\adjudicator.py::Adjudicator::_bayesian_aggregation",
      "values"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_as_dict",
      "hasattr"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_as_dict",
      "hasattr"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_as_dict",
      "loads"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_as_dict",
      "model_dump"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_as_dict",
      "dict"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_as_dict",
      "dumps"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_as_dict",
      "str"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_as_dict",
      "getattr"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_as_dict",
      "str"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_risk_level_from_urgency",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_risk_level_from_urgency",
      "lower"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_risk_level_from_urgency",
      "strip"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_pick_protocol_from_selection",
      "_as_dict"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_pick_protocol_from_selection",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_pick_protocol_from_selection",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::_pick_protocol_from_selection",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::DeliberationManager::__new__",
      "__new__"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::DeliberationManager::__new__",
      "subscribe"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::DeliberationManager::__new__",
      "isawaitable"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::DeliberationManager::__new__",
      "create_task"
    ],
    [
      "systems\\unity\\core\\room\\orchestrator.py::DeliberationManager::__new__",
      "super"
    ],
    [
      "systems\\unity\\core\\room\\participants.py::ParticipantRegistry::__new__",
      "__new__"
    ],
    [
      "systems\\unity\\core\\room\\participants.py::ParticipantRegistry::__new__",
      "super"
    ],
    [
      "systems\\unity\\core\\room\\participants.py::ParticipantRegistry::get_role_info",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\participants.py::ParticipantRegistry::list_roles",
      "list"
    ],
    [
      "systems\\unity\\core\\room\\participants.py::ParticipantRegistry::list_roles",
      "keys"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::__init__",
      "defaultdict"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::__init__",
      "defaultdict"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::__init__",
      "defaultdict"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::__init__",
      "defaultdict"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::__init__",
      "defaultdict"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_claim",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "strip"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "_ensure_node"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "_ensure_node"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "append"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "ValueError"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "add"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "add"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "add"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "add"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "upper"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::add_inference",
      "str"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_support_ancestry",
      "set"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_support_ancestry",
      "set"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_support_ancestry",
      "set"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_support_ancestry",
      "pop"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_support_ancestry",
      "add"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_support_ancestry",
      "add"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_support_ancestry",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_support_ancestry",
      "discard"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_support_ancestry",
      "append"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_collect_base_leaves",
      "set"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_collect_base_leaves",
      "len"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_collect_base_leaves",
      "add"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_collect_base_leaves",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_collect_base_leaves",
      "set"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_defended_filter",
      "set"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_defended_filter",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_defended_filter",
      "set"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_defended_filter",
      "add"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_defended_filter",
      "any"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_defended_filter",
      "add"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_defended_filter",
      "get"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::_defended_filter",
      "set"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::get_minimal_assumption_set",
      "_support_ancestry"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::get_minimal_assumption_set",
      "_collect_base_leaves"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::get_minimal_assumption_set",
      "_defended_filter"
    ],
    [
      "systems\\unity\\core\\room\\argument_map.py::ArgumentMiner::get_minimal_assumption_set",
      "set"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_truncate",
      "int"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_truncate",
      "max"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_truncate",
      "len"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_dig",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_dig",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_dig",
      "getattr"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "_dig"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\debate.py::DebateProtocol::__init__",
      "Adjudicator"
    ],
    [
      "systems\\unity\\core\\protocols\\critique_and_repair.py::CritiqueAndRepairProtocol::__init__",
      "Adjudicator"
    ],
    [
      "systems\\unity\\core\\protocols\\argument_mining.py::ArgumentMiningProtocol::__init__",
      "Adjudicator"
    ],
    [
      "systems\\unity\\core\\protocols\\argument_mining.py::ArgumentMiningProtocol::__init__",
      "ArgumentMiner"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "max"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "len"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "max"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "min"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "lower"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "str"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "get"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "MetaCriticismProposalEvent"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "int"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "bool"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "int"
    ],
    [
      "systems\\unity\\core\\protocols\\meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "uuid4"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_to_verdict",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_to_verdict",
      "hasattr"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_to_verdict",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_to_verdict",
      "ValueError"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_to_verdict",
      "VerdictModel"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_to_verdict",
      "VerdictModel"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_to_verdict",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_to_verdict",
      "VerdictModel"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_to_verdict",
      "model_dump"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "append"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "append"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "append"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "append"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "len"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "max"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "len"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "len"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "min"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "max"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "upper"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "zip"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "zip"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "zip"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "min"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::_weighted_aggregate",
      "str"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::FederatedConsensusProtocol::__init__",
      "float"
    ],
    [
      "systems\\unity\\core\\protocols\\federated_consensus.py::FederatedConsensusProtocol::__init__",
      "DeliberationManager"
    ],
    [
      "systems\\unity\\core\\protocols\\concurrent_competition.py::ConcurrentCompetitionProtocol::__init__",
      "Adjudicator"
    ],
    [
      "systems\\unity\\core\\workspace\\global_workspace.py::GlobalWorkspace::__new__",
      "__new__"
    ],
    [
      "systems\\unity\\core\\workspace\\global_workspace.py::GlobalWorkspace::__new__",
      "Lock"
    ],
    [
      "systems\\unity\\core\\workspace\\global_workspace.py::GlobalWorkspace::__new__",
      "AttentionMechanism"
    ],
    [
      "systems\\unity\\core\\workspace\\global_workspace.py::GlobalWorkspace::__new__",
      "bus_subscribe"
    ],
    [
      "systems\\unity\\core\\workspace\\global_workspace.py::GlobalWorkspace::__new__",
      "print"
    ],
    [
      "systems\\unity\\core\\workspace\\global_workspace.py::GlobalWorkspace::__new__",
      "super"
    ],
    [
      "systems\\unity\\core\\workspace\\global_workspace.py::GlobalWorkspace::__new__",
      "print"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::_tok",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::_tok",
      "str"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::_tok",
      "lower"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::_tok",
      "findall"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::_clean_keywords",
      "fullmatch"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::_clean_keywords",
      "any"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::_clean_keywords",
      "append"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::_clean_keywords",
      "len"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::_clean_keywords",
      "isalpha"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::__new__",
      "__new__"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::__new__",
      "super"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "_tok"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "get"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "_tok"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "get"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "get"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "get"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "str"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_unigram_top",
      "sort"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_unigram_top",
      "sum"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_unigram_top",
      "float"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_unigram_top",
      "enumerate"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_unigram_top",
      "len"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_predict_token_topk",
      "_unigram_top"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_compose_argument",
      "lower"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_compose_argument",
      "join"
    ],
    [
      "systems\\unity\\core\\t_o_m\\modeler.py::TheoryOfMindEngine::_compose_argument",
      "len"
    ],
    [
      "systems\\unity\\core\\cognition\\llm_util.py::on_response",
      "done"
    ],
    [
      "systems\\unity\\core\\cognition\\llm_util.py::on_response",
      "set_result"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::safety_veto",
      "check_prohibited"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::safety_veto",
      "list"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::safety_veto",
      "append"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::safety_veto",
      "len"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::safety_veto",
      "sorted"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::safety_veto",
      "set"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::constraint_check",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::constraint_check",
      "any"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::constraint_check",
      "lower"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::constraint_check",
      "append"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::constraint_check",
      "any"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::constraint_check",
      "append"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::constraint_check",
      "lower"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::constraint_check",
      "len"
    ],
    [
      "systems\\unity\\core\\cognition\\verifiers.py::constraint_check",
      "str"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_coerce_text",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_coerce_text",
      "str"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_text_from_spec",
      "strip"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_text_from_spec",
      "getattr"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_text_from_spec",
      "getattr"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_text_from_spec",
      "getattr"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_text_from_spec",
      "isinstance"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_text_from_spec",
      "get"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_text_from_spec",
      "append"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_text_from_spec",
      "join"
    ],
    [
      "systems\\unity\\core\\policy\\safety_policy.py::_text_from_spec",
      "_coerce_text"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::log",
      "print"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::convert_dates",
      "isinstance"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::convert_dates",
      "isinstance"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::convert_dates",
      "convert_dates"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::convert_dates",
      "isinstance"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::convert_dates",
      "items"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::convert_dates",
      "convert_dates"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::convert_dates",
      "isoformat"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::convert_dates",
      "to_native"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::__init__",
      "log"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_build_atune_event",
      "str"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_build_atune_event",
      "uuid4"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_build_atune_event",
      "bool"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_build_atune_event",
      "now_iso"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_build_stage1_prompt",
      "strip"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_build_stage2_prompt",
      "dumps"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_build_stage2_prompt",
      "bool"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_parse_tool_queries",
      "loads"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_apply_censorship",
      "join"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_apply_censorship",
      "strip"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_apply_censorship",
      "split"
    ],
    [
      "systems\\voxis\\core\\voxis_pipeline.py::VoxisPipeline::_apply_censorship",
      "lower"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionConflictError::__init__",
      "__init__"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionConflictError::__init__",
      "super"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::PredicateUnsatisfiedError::__init__",
      "__init__"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::PredicateUnsatisfiedError::__init__",
      "super"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::__new__",
      "__new__"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::__new__",
      "Interpreter"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::__new__",
      "super"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::_evaluate_predicate",
      "eval"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::_evaluate_predicate",
      "print"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::check_formal_guards",
      "print"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::check_formal_guards",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::check_formal_guards",
      "_evaluate_predicate"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::check_formal_guards",
      "PredicateUnsatisfiedError"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::apply_precedence",
      "sorted"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::apply_precedence",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::apply_precedence",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::apply_precedence",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::apply_precedence",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::check_for_conflicts",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\constitution.py::ConstitutionService::check_for_conflicts",
      "ConstitutionConflictError"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_ensure_list",
      "isinstance"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_ensure_list",
      "isinstance"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_ensure_list",
      "list"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_dedupe_preserve_order",
      "set"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_dedupe_preserve_order",
      "add"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_dedupe_preserve_order",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_node_id",
      "isinstance"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_node_id",
      "isinstance"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_node_id",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_node_id",
      "isinstance"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_node_id",
      "str"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_node_id",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_node_id",
      "isinstance"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_node_id",
      "str"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_has_label",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_has_label",
      "isinstance"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_has_label",
      "isinstance"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_has_label",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_has_label",
      "endswith"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::_has_label",
      "startswith"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::IdentityRegistry::__new__",
      "__new__"
    ],
    [
      "systems\\equor\\core\\identity\\registry.py::IdentityRegistry::__new__",
      "super"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::__new__",
      "__new__"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::__new__",
      "IdentityRegistry"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::__new__",
      "ConstitutionService"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::__new__",
      "super"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "sorted"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "enumerate"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "join"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\composer.py::PromptComposer::_format_patch_text",
      "get"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::HomeostasisMonitor::__new__",
      "__new__"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::HomeostasisMonitor::__new__",
      "PromptComposer"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::HomeostasisMonitor::__new__",
      "super"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::HomeostasisMonitor::get_monitor_for_agent",
      "AgentMonitor"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::__init__",
      "int"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::__init__",
      "float"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::__init__",
      "deque"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::__init__",
      "deque"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::__init__",
      "max"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::__init__",
      "min"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::__init__",
      "max"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::should_alert",
      "float"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::should_alert",
      "float"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::should_alert",
      "debug"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::should_alert",
      "len"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::should_alert",
      "max"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::should_alert",
      "mean"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::should_alert",
      "monotonic"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::reset_alert_trigger",
      "monotonic"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report",
      "DriftReport"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report",
      "float"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report",
      "float"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report",
      "mean"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report",
      "std"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report",
      "int"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report",
      "sum"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report",
      "len"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report",
      "len"
    ],
    [
      "systems\\equor\\core\\identity\\homeostasis.py::AgentMonitor::generate_report",
      "float"
    ],
    [
      "systems\\equor\\core\\identity\\invariants.py::InvariantAuditor::__new__",
      "__new__"
    ],
    [
      "systems\\equor\\core\\identity\\invariants.py::InvariantAuditor::__new__",
      "super"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::to_npz",
      "Path"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::to_npz",
      "mkdir"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::to_npz",
      "savez_compressed"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::to_npz",
      "array"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::from_npz",
      "load"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::from_npz",
      "_AEWeights"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::from_npz",
      "Path"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::from_npz",
      "int"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::from_npz",
      "int"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::from_npz",
      "int"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::from_npz",
      "astype"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::from_npz",
      "astype"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::_AEWeights::from_npz",
      "astype"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::__init__",
      "int"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::__init__",
      "int"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::__init__",
      "float"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::__init__",
      "zeros"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::__init__",
      "zeros"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::__init__",
      "zeros"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::__init__",
      "range"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::__init__",
      "info"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::__init__",
      "ValueError"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::save_weights",
      "to_npz"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::save_weights",
      "info"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::save_weights",
      "_AEWeights"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::load_weights",
      "from_npz"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::load_weights",
      "info"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::load_weights",
      "ValueError"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_std",
      "sqrt"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_std",
      "ones_like"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_std",
      "max"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_std",
      "maximum"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_standardize",
      "_std"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_eta",
      "max"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_eta",
      "sqrt"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_eta",
      "max"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::_eta",
      "float"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::encode",
      "reshape"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::encode",
      "_standardize"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::encode",
      "ValueError"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::encode",
      "asarray"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update",
      "reshape"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update",
      "_update_stats"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update",
      "_standardize"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update",
      "_eta"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update",
      "zeros"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update",
      "range"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update",
      "ValueError"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update",
      "float"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update",
      "norm"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::TrainedAutoencoder::update",
      "asarray"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::__new__",
      "__new__"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::__new__",
      "_init_model"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::__new__",
      "super"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::_init_model",
      "TrainedAutoencoder"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::load_model_weights",
      "load_weights"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "array"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "encode"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "update"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "QualiaState"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "float"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "isoformat"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "tolist"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "float"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "float"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "float"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "now"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::QualiaManifold::process_metrics",
      "uuid4"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::StateLogger::__new__",
      "__new__"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::StateLogger::__new__",
      "QualiaManifold"
    ],
    [
      "systems\\equor\\core\\qualia\\manifold.py::StateLogger::__new__",
      "super"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_models_dir",
      "getenv"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_models_dir",
      "resolve"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_models_dir",
      "mkdir"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_models_dir",
      "Path"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_artifact_paths",
      "strftime"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_artifact_paths",
      "_models_dir"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_artifact_paths",
      "now"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_std_from",
      "sqrt"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_std_from",
      "getattr"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_std_from",
      "ones_like"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_std_from",
      "max"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_std_from",
      "maximum"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_std_from",
      "int"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::_reconstruct",
      "_std_from"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_prime_stats",
      "mean"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_prime_stats",
      "astype"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_prime_stats",
      "astype"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_prime_stats",
      "int"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_prime_stats",
      "var"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_prime_stats",
      "ones"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_prime_stats",
      "maximum"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_prime_stats",
      "max"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_epoch_loss",
      "range"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_epoch_loss",
      "_reconstruct"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_epoch_loss",
      "float"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_epoch_loss",
      "float"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::_epoch_loss",
      "dot"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train",
      "info"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train",
      "_prime_stats"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train",
      "arange"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train",
      "range"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train",
      "_epoch_loss"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train",
      "info"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train",
      "ValueError"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train",
      "getattr"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train",
      "shuffle"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::train",
      "update"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::AutoencoderTrainer::save_weights",
      "save_weights"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::ManifoldTrainer::__new__",
      "__new__"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::ManifoldTrainer::__new__",
      "get_model"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::ManifoldTrainer::__new__",
      "AutoencoderTrainer"
    ],
    [
      "systems\\equor\\core\\qualia\\trainer.py::ManifoldTrainer::__new__",
      "super"
    ],
    [
      "systems\\equor\\core\\self\\predictor.py::SelfModel::__new__",
      "__new__"
    ],
    [
      "systems\\equor\\core\\self\\predictor.py::SelfModel::__new__",
      "super"
    ],
    [
      "systems\\equor\\kms\\keystore.py::_load_keys",
      "getenv"
    ],
    [
      "systems\\equor\\kms\\keystore.py::_load_keys",
      "encode"
    ],
    [
      "systems\\equor\\kms\\keystore.py::_load_keys",
      "loads"
    ],
    [
      "systems\\equor\\kms\\keystore.py::_load_keys",
      "items"
    ],
    [
      "systems\\equor\\kms\\keystore.py::_load_keys",
      "b64decode"
    ],
    [
      "systems\\equor\\kms\\keystore.py::_load_keys",
      "getenv"
    ],
    [
      "systems\\equor\\kms\\keystore.py::get_hmac_key_by_kid",
      "get"
    ],
    [
      "systems\\equor\\kms\\keystore.py::get_hmac_key_by_kid",
      "_load_keys"
    ],
    [
      "systems\\equor\\kms\\keystore.py::list_kids",
      "list"
    ],
    [
      "systems\\equor\\kms\\keystore.py::list_kids",
      "keys"
    ],
    [
      "systems\\equor\\kms\\keystore.py::list_kids",
      "_load_keys"
    ],
    [
      "systems\\equor\\kms\\keystore.py::get_active_kid",
      "getenv"
    ],
    [
      "systems\\synapse\\core\\registry.py::_coerce_policy_graph",
      "isinstance"
    ],
    [
      "systems\\synapse\\core\\registry.py::_coerce_policy_graph",
      "isinstance"
    ],
    [
      "systems\\synapse\\core\\registry.py::_coerce_policy_graph",
      "hasattr"
    ],
    [
      "systems\\synapse\\core\\registry.py::_coerce_policy_graph",
      "PolicyGraph"
    ],
    [
      "systems\\synapse\\core\\registry.py::_coerce_policy_graph",
      "isinstance"
    ],
    [
      "systems\\synapse\\core\\registry.py::_coerce_policy_graph",
      "TypeError"
    ],
    [
      "systems\\synapse\\core\\registry.py::_coerce_policy_graph",
      "model_validate"
    ],
    [
      "systems\\synapse\\core\\registry.py::_coerce_policy_graph",
      "loads"
    ],
    [
      "systems\\synapse\\core\\registry.py::_coerce_policy_graph",
      "ValueError"
    ],
    [
      "systems\\synapse\\core\\registry.py::_coerce_policy_graph",
      "type"
    ],
    [
      "systems\\synapse\\core\\registry.py::_node_effects_says_dangerous",
      "isinstance"
    ],
    [
      "systems\\synapse\\core\\registry.py::_node_effects_says_dangerous",
      "any"
    ],
    [
      "systems\\synapse\\core\\registry.py::_node_effects_says_dangerous",
      "hasattr"
    ],
    [
      "systems\\synapse\\core\\registry.py::_node_effects_says_dangerous",
      "getattr"
    ],
    [
      "systems\\synapse\\core\\registry.py::_node_effects_says_dangerous",
      "isinstance"
    ],
    [
      "systems\\synapse\\core\\registry.py::_node_effects_says_dangerous",
      "isinstance"
    ],
    [
      "systems\\synapse\\core\\registry.py::_node_effects_says_dangerous",
      "get"
    ],
    [
      "systems\\synapse\\core\\registry.py::_node_effects_says_dangerous",
      "set"
    ],
    [
      "systems\\synapse\\core\\registry.py::_default_llm_model",
      "getenv"
    ],
    [
      "systems\\synapse\\core\\registry.py::_noop_pg_dict",
      "_default_llm_model"
    ],
    [
      "systems\\synapse\\core\\registry.py::PolicyArm::__init__",
      "ValueError"
    ],
    [
      "systems\\synapse\\core\\registry.py::PolicyArm::is_safe_fallback",
      "getattr"
    ],
    [
      "systems\\synapse\\core\\registry.py::PolicyArm::is_safe_fallback",
      "_node_effects_says_dangerous"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::__new__",
      "super"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::__init__",
      "RLock"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::get_arm",
      "get"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::get_arms_for_mode",
      "list"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::get_arms_for_mode",
      "get"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::list_arms_for_mode",
      "get_arms_for_mode"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::list_modes",
      "sorted"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::list_modes",
      "keys"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::all_arm_ids",
      "sorted"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::all_arm_ids",
      "keys"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "_coerce_policy_graph"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "NeuralLinearBanditHead"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "PolicyArm"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "print"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "get"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "get"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "get"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "ValueError"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "getattr"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "append"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "len"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "get"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "len"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "isinstance"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "TypeError"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::add_arm",
      "setdefault"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::get_safe_fallback_arm",
      "ensure_cold_start"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::get_safe_fallback_arm",
      "RuntimeError"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::get_safe_fallback_arm",
      "values"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::get_safe_fallback_arm",
      "values"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::get_safe_fallback_arm",
      "get"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::get_safe_fallback_arm",
      "get"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "__import__"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "RuntimeError"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "any"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "print"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "set"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "_coerce_policy_graph"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "add_arm"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "print"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "getattr"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "len"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "fn"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "fn"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "print"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "keys"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "_noop_pg_dict"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "print"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "_safe_present_for"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "_safe_present_for"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "get"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "signature"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::ensure_cold_start",
      "_safe_present_for"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::_safe_present_for",
      "any"
    ],
    [
      "systems\\synapse\\core\\registry.py::ArmRegistry::_safe_present_for",
      "get"
    ],
    [
      "systems\\synapse\\core\\tactics.py::_stable_seed_from_ctx",
      "int"
    ],
    [
      "systems\\synapse\\core\\tactics.py::_stable_seed_from_ctx",
      "hexdigest"
    ],
    [
      "systems\\synapse\\core\\tactics.py::_stable_seed_from_ctx",
      "sha1"
    ],
    [
      "systems\\synapse\\core\\tactics.py::_stable_seed_from_ctx",
      "encode"
    ],
    [
      "systems\\synapse\\core\\tactics.py::_ensure_1d",
      "asarray"
    ],
    [
      "systems\\synapse\\core\\tactics.py::_ensure_1d",
      "reshape"
    ],
    [
      "systems\\synapse\\core\\tactics.py::_ensure_1d",
      "zeros"
    ],
    [
      "systems\\synapse\\core\\tactics.py::_ensure_1d",
      "getattr"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::__new__",
      "super"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_candidate_ids_from_request",
      "getattr"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "set"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "Random"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "min"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "_candidate_ids_from_request"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "_stable_seed_from_ctx"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "len"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "sample"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "list"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "list"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "suggest"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_build_candidate_set",
      "values"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_score_candidates",
      "float"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_score_candidates",
      "score"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_score_candidates",
      "isnan"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::_score_candidates",
      "isinf"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "get_arms_for_mode"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "_ensure_1d"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "_build_candidate_set"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "_score_candidates"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "get_arm"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "dict"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "print"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "ValueError"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "encode"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "get_safe_fallback_arm"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "print"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "get_safe_fallback_arm"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "print"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "model_dump"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "zeros"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "getattr"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "sorted"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "get"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "items"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "get"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "len"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::select_arm",
      "getattr"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "get"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "get_arm"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "pop"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "print"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "print"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "print"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "update"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "mark_dirty"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "update"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "float"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "print"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "float"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "print"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::update",
      "float"
    ],
    [
      "systems\\synapse\\core\\tactics.py::TacticalManager::get_last_scores_for_arm",
      "get"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::__new__",
      "super"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::update_scalarization_weights",
      "update"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::update_scalarization_weights",
      "print"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::_norm01",
      "float"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::compute_reward_vector",
      "_norm01"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::compute_reward_vector",
      "get"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::compute_reward_vector",
      "_norm01"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::compute_reward_vector",
      "_norm01"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::compute_reward_vector",
      "_norm01"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::compute_reward_vector",
      "get"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::compute_reward_vector",
      "get"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::compute_reward_vector",
      "get"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::compute_reward_vector",
      "get"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::scalarize_reward",
      "max"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::scalarize_reward",
      "min"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::scalarize_reward",
      "get"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::scalarize_reward",
      "tanh"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::scalarize_reward",
      "get"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::scalarize_reward",
      "get"
    ],
    [
      "systems\\synapse\\core\\reward.py::RewardArbiter::scalarize_reward",
      "get"
    ],
    [
      "systems\\synapse\\core\\planner.py::MetacognitivePlanner::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\core\\planner.py::MetacognitivePlanner::__new__",
      "super"
    ],
    [
      "systems\\synapse\\core\\firewall.py::NeuroSymbolicFirewall::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\core\\firewall.py::NeuroSymbolicFirewall::__new__",
      "super"
    ],
    [
      "systems\\synapse\\core\\firewall.py::NeuroSymbolicFirewall::get_safe_fallback_arm",
      "get_safe_fallback_arm"
    ],
    [
      "systems\\synapse\\core\\genesis.py::ToolGenesisModule::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\core\\genesis.py::ToolGenesisModule::__new__",
      "super"
    ],
    [
      "systems\\synapse\\core\\genesis.py::ToolGenesisModule::on_response",
      "done"
    ],
    [
      "systems\\synapse\\core\\genesis.py::ToolGenesisModule::on_response",
      "set_result"
    ],
    [
      "systems\\synapse\\core\\arm_genesis.py::_generate_base_graph",
      "model_validate"
    ],
    [
      "systems\\synapse\\core\\arm_genesis.py::_mutations",
      "range"
    ],
    [
      "systems\\synapse\\core\\arm_genesis.py::_mutations",
      "copy"
    ],
    [
      "systems\\synapse\\core\\arm_genesis.py::_mutations",
      "append"
    ],
    [
      "systems\\synapse\\core\\arm_genesis.py::_mutations",
      "max"
    ],
    [
      "systems\\synapse\\core\\arm_genesis.py::_mutations",
      "min"
    ],
    [
      "systems\\synapse\\core\\arm_genesis.py::_mutations",
      "get"
    ],
    [
      "systems\\synapse\\core\\arm_genesis.py::_mutations",
      "randn"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_load_json_env",
      "strip"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_load_json_env",
      "loads"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_load_json_env",
      "getenv"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_load_json_env",
      "isinstance"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_load_json_env",
      "warning"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_strategy_map",
      "get"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_strategy_map",
      "copy"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_strategy_map",
      "isinstance"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_strategy_map",
      "update"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_strategy_map",
      "get"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_strategy_map",
      "float"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_strategy_map",
      "int"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_strategy_map",
      "get"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_strategy_map",
      "get"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_budget_map",
      "get"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_budget_map",
      "copy"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_budget_map",
      "isinstance"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_budget_map",
      "update"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_budget_map",
      "int"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_budget_map",
      "int"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_budget_map",
      "get"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::_validate_budget_map",
      "get"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::MetaController::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::MetaController::__new__",
      "super"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::MetaController::select_strategy",
      "getattr"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::MetaController::select_strategy",
      "debug"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::MetaController::select_strategy",
      "get"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::MetaController::allocate_budget",
      "getattr"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::MetaController::allocate_budget",
      "debug"
    ],
    [
      "systems\\synapse\\core\\meta_controller.py::MetaController::allocate_budget",
      "get"
    ],
    [
      "systems\\synapse\\core\\snapshots.py::get_component_version",
      "get"
    ],
    [
      "systems\\synapse\\core\\snapshots.py::get_component_version",
      "getenv"
    ],
    [
      "systems\\synapse\\core\\snapshots.py::stamp",
      "print"
    ],
    [
      "systems\\synapse\\core\\snapshots.py::stamp",
      "get_component_version"
    ],
    [
      "systems\\synapse\\core\\snapshots.py::stamp",
      "get_component_version"
    ],
    [
      "systems\\synapse\\core\\snapshots.py::stamp",
      "get_component_version"
    ],
    [
      "systems\\synapse\\core\\snapshots.py::stamp",
      "get_component_version"
    ],
    [
      "systems\\synapse\\core\\governor.py::_proposal_id",
      "str"
    ],
    [
      "systems\\synapse\\core\\governor.py::_proposal_id",
      "get"
    ],
    [
      "systems\\synapse\\core\\governor.py::_proposal_id",
      "hexdigest"
    ],
    [
      "systems\\synapse\\core\\governor.py::_proposal_id",
      "get"
    ],
    [
      "systems\\synapse\\core\\governor.py::_proposal_id",
      "sha256"
    ],
    [
      "systems\\synapse\\core\\governor.py::_proposal_id",
      "encode"
    ],
    [
      "systems\\synapse\\core\\governor.py::Governor::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\core\\governor.py::Governor::__new__",
      "super"
    ],
    [
      "systems\\synapse\\training\\meta_controller.py::MetaController::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\training\\meta_controller.py::MetaController::__new__",
      "super"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::__new__",
      "super"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "list"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "TaskContext"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "keys"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "choice"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "max"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "random"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "choice"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "choice"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::_update_task_values",
      "get"
    ],
    [
      "systems\\synapse\\training\\adversary.py::AdversarialAgent::_update_task_values",
      "print"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::mark_dirty",
      "add"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::_drain_dirty",
      "list"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::_drain_dirty",
      "set"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::_drain_dirty",
      "difference_update"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::_drain_dirty",
      "set"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::start_background_flusher",
      "get_running_loop"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::start_background_flusher",
      "create_task"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::start_background_flusher",
      "print"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::start_background_flusher",
      "_flusher_loop"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::start_background_flusher",
      "done"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::stop_background_flusher",
      "cancel"
    ],
    [
      "systems\\synapse\\training\\bandit_state.py::stop_background_flusher",
      "done"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_pack_matrix",
      "tolist"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_pack_matrix",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_pack_matrix",
      "asarray"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_pack_matrix",
      "reshape"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_pack_matrix",
      "int"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_pack_matrix",
      "int"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_pack_matrix",
      "astype"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_pack_matrix",
      "reshape"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_unpack_matrix",
      "reshape"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_unpack_matrix",
      "ValueError"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_unpack_matrix",
      "int"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_unpack_matrix",
      "int"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_unpack_matrix",
      "len"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_unpack_matrix",
      "asarray"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_ensure_col_vec",
      "asarray"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_ensure_col_vec",
      "reshape"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_ensure_col_vec",
      "ValueError"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_stable_cholesky",
      "eye"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_stable_cholesky",
      "range"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_stable_cholesky",
      "cholesky"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::_stable_cholesky",
      "cholesky"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "int"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "float"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "float"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "ValueError"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "ValueError"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "ValueError"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "_unpack_matrix"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "_unpack_matrix"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "tuple"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "tuple"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "ValueError"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "ValueError"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::__init__",
      "eye"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::get_state",
      "_pack_matrix"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::get_state",
      "_pack_matrix"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::get_state",
      "list"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::get_state",
      "list"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::_posterior_mean",
      "_stable_cholesky"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::_posterior_mean",
      "solve"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::_posterior_mean",
      "solve"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::sample_theta",
      "_stable_cholesky"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::sample_theta",
      "_posterior_mean"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::sample_theta",
      "normal"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::sample_theta",
      "solve"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::sample_theta",
      "solve"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::get_theta_mean",
      "_posterior_mean"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::score",
      "_ensure_col_vec"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::score",
      "sample_theta"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::score",
      "float"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::score",
      "ravel"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::update",
      "_ensure_col_vec"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::update",
      "float"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::update",
      "ValueError"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearBanditHead::update",
      "float"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "_ensure_heads_mapping"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "all"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "list"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "hasattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "list"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "keys"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::list_arms",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "setattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "setattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "append"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "len"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "len"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "setattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "zip"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "_ensure_heads_mapping"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "get"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "next"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "iter"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "solve"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "tolist"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "values"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "tolist"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "len"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "getattr"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "list"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "list"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::__new__",
      "super"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::__init__",
      "getenv"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::__init__",
      "max"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::__init__",
      "encode"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::__init__",
      "info"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::__init__",
      "int"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::__init__",
      "getenv"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_hidx",
      "digest"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_hidx",
      "from_bytes"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_hidx",
      "max"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_hidx",
      "sha256"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::_hidx",
      "encode"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::encode",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::encode",
      "items"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::encode",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::encode",
      "isfinite"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::encode",
      "_hidx"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::encode",
      "float"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::encode",
      "_hidx"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::encode",
      "float"
    ],
    [
      "systems\\synapse\\training\\neural_linear.py::NeuralLinearArmManager::encode",
      "str"
    ],
    [
      "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems\\synapse\\training\\encoder_trainer.py::EncoderTrainer::EncoderModel::__init__",
      "print"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_risk_score",
      "lower"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_risk_score",
      "startswith"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_risk_score",
      "startswith"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_risk_score",
      "str"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_budget_score",
      "lower"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_budget_score",
      "str"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_safe_len",
      "hasattr"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_safe_len",
      "len"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_safe_len",
      "int"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "_risk_score"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "_budget_score"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "float"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "float"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "float"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "get"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "get"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "_safe_len"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "_safe_len"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "log1p"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "log1p"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "get"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "get"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_vectorize_context",
      "get"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "int"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "asarray"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "asarray"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "get"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "get"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "append"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "append"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "len"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "median"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "get"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "_vectorize_context"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "len"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "_pad"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "len"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "len"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "float"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "float"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_build_dataset",
      "len"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_pad",
      "len"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_pad",
      "len"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_standardize",
      "mean"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_standardize",
      "std"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_standardize",
      "where"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_standardize",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_standardize",
      "ones"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_ridge_fit",
      "ones"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_ridge_fit",
      "hstack"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_ridge_fit",
      "eye"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_ridge_fit",
      "solve"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_ridge_fit",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_ridge_fit",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_metrics",
      "float"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_metrics",
      "float"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_metrics",
      "float"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_metrics",
      "mean"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_metrics",
      "sum"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_metrics",
      "sum"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_metrics",
      "float"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_metrics",
      "float"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::_metrics",
      "mean"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::SelfModelTrainer::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::SelfModelTrainer::__new__",
      "Lock"
    ],
    [
      "systems\\synapse\\training\\self_model_trainer.py::SelfModelTrainer::__new__",
      "super"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_tok",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_tok",
      "str"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_tok",
      "lower"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_tok",
      "findall"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_build_sequences",
      "_tok"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_build_sequences",
      "append"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_build_vocab",
      "Counter"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_build_vocab",
      "update"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_build_vocab",
      "most_common"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_build_vocab",
      "enumerate"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_build_vocab",
      "max"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_id_or_unk",
      "get"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_unigram_bigram_counts",
      "len"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_unigram_bigram_counts",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_unigram_bigram_counts",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_unigram_bigram_counts",
      "enumerate"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_unigram_bigram_counts",
      "_id_or_unk"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_perplexity",
      "float"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_perplexity",
      "_id_or_unk"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_perplexity",
      "enumerate"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_perplexity",
      "range"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_evaluate_role",
      "float"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_evaluate_role",
      "range"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_evaluate_role",
      "float"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_evaluate_role",
      "exp"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_evaluate_role",
      "_id_or_unk"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_evaluate_role",
      "len"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_evaluate_role",
      "log"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_topk_table",
      "argsort"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_topk_table",
      "append"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_topk_table",
      "int"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_topk_table",
      "list"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_topk_table",
      "argsort"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_topk_table",
      "int"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_topk_table",
      "int"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_topk_table",
      "float"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::_topk_table",
      "int"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::__new__",
      "Lock"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::__new__",
      "super"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "defaultdict"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "range"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "get"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "len"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "strip"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "str"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "append"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "join"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "append"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "len"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "append"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "str"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "get"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "get"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "get"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "strip"
    ],
    [
      "systems\\synapse\\training\\tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "get"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_sigmoid",
      "clip"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_sigmoid",
      "exp"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "float"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "str"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "get"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "float"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "sqrt"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "log1p"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "max"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "max"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "get"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "get"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "len"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "lower"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_vectorize_cognit",
      "int"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "upper"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "float"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "asarray"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "asarray"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "get"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "append"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "append"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "zeros"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "str"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "get"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "get"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "_vectorize_cognit"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "get"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "isinstance"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "append"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "append"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "get"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_build_samples",
      "_vectorize_cognit"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "default_rng"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "normal"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "range"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "astype"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "arange"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "shuffle"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "range"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "batch_iter"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "errstate"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "_sigmoid"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "float"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "float"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "_sigmoid"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "float"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "mean"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "mean"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "float"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::_train_logreg",
      "sum"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::batch_iter",
      "arange"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::batch_iter",
      "shuffle"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::batch_iter",
      "range"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::AttentionRankerTrainer::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::AttentionRankerTrainer::__new__",
      "Lock"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::AttentionRankerTrainer::__new__",
      "super"
    ],
    [
      "systems\\synapse\\training\\attention_trainer.py::AttentionRankerTrainer::_create_training_samples",
      "_build_samples"
    ],
    [
      "systems\\synapse\\sdk\\affordances.py::validate_affordance",
      "ValueError"
    ],
    [
      "systems\\synapse\\sdk\\affordances.py::validate_affordance",
      "ValueError"
    ],
    [
      "systems\\synapse\\sdk\\affordances.py::validate_affordance",
      "isinstance"
    ],
    [
      "systems\\synapse\\sdk\\affordances.py::validate_affordance",
      "isinstance"
    ],
    [
      "systems\\synapse\\sdk\\affordances.py::normalize_affordances",
      "validate_affordance"
    ],
    [
      "systems\\synapse\\sdk\\affordances.py::normalize_affordances",
      "append"
    ],
    [
      "systems\\synapse\\sdk\\context.py::build_context",
      "update"
    ],
    [
      "systems\\synapse\\sdk\\context.py::build_context",
      "items"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "wraps"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "SynapseClient"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "task_key_fn"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "time"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "affordances_fn"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "hint"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "float"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "fn"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "metrics_fn"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "ingest_reward"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "time"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::evolutionary",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "wraps"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "SynapseClient"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "task_key_fn"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "time"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "affordances_fn"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "hint"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "float"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "fn"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "metrics_fn"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "ingest_reward"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "get"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "time"
    ],
    [
      "systems\\synapse\\sdk\\decorators.py::deco",
      "get"
    ],
    [
      "systems\\synapse\\policy\\policy_dsl.py::PolicyGraph::canonical_hash",
      "model_dump_json"
    ],
    [
      "systems\\synapse\\policy\\policy_dsl.py::PolicyGraph::canonical_hash",
      "hexdigest"
    ],
    [
      "systems\\synapse\\policy\\policy_dsl.py::PolicyGraph::canonical_hash",
      "sha256"
    ],
    [
      "systems\\synapse\\policy\\policy_dsl.py::PolicyGraph::canonical_hash",
      "encode"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "len"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::__new__",
      "super"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::_load_model",
      "exists"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::_load_model",
      "print"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::_load_model",
      "load"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::_load_model",
      "print"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::_load_model",
      "print"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::score",
      "_featurize_episode"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::score",
      "transform"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::score",
      "float"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::score",
      "_load_model"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::score",
      "predict"
    ],
    [
      "systems\\synapse\\critic\\offpolicy.py::Critic::score",
      "model_dump"
    ],
    [
      "systems\\synapse\\firewall\\smt_guard.py::check_smt_constraints",
      "print"
    ],
    [
      "systems\\synapse\\firewall\\smt_guard.py::check_smt_constraints",
      "print"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::__new__",
      "load_model"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::__new__",
      "super"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::load_model",
      "exists"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::load_model",
      "print"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::load_model",
      "load"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::load_model",
      "get"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::load_model",
      "list"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::load_model",
      "print"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::load_model",
      "print"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::load_model",
      "get"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_featurize",
      "encode"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_featurize",
      "tolist"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_featurize",
      "model_dump"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_featurize",
      "astype"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_featurize",
      "enumerate"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_featurize",
      "ravel"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "float"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "mean"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "append"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "append"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "float"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "float"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "append"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "std"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "predict"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "float"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "predict"
    ],
    [
      "systems\\synapse\\world\\simulator.py::WorldModel::_safe_sigma_from_models",
      "astype"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_deepcopy_graph",
      "copy"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_deepcopy_graph",
      "deepcopy"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_evaluate",
      "loss_fn"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_evaluate",
      "float"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_evaluate",
      "ValueError"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_evaluate",
      "isinstance"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_evaluate",
      "isfinite"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_evaluate",
      "float"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_numeric_params",
      "enumerate"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_numeric_params",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_numeric_params",
      "list"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_numeric_params",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_numeric_params",
      "items"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_numeric_params",
      "isinstance"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_numeric_params",
      "isfinite"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_numeric_params",
      "append"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_numeric_params",
      "float"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_numeric_params",
      "float"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "lower"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "endswith"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "endswith"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "isinstance"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "isinstance"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "len"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "float"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "float"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "min"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_guess_bounds",
      "max"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_clamp",
      "max"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_clamp",
      "min"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_finite_diff_grad",
      "_deepcopy_graph"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_finite_diff_grad",
      "_deepcopy_graph"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_finite_diff_grad",
      "float"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_finite_diff_grad",
      "_evaluate"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_finite_diff_grad",
      "_evaluate"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_finite_diff_grad",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_finite_diff_grad",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_finite_diff_grad",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "_deepcopy_graph"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "_numeric_params"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "_evaluate"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "range"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "_guess_bounds"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "array"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "range"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "list"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "float"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "_deepcopy_graph"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "_apply_update"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "_evaluate"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "_finite_diff_grad"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "values"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "norm"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "float"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "_clamp"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "isinstance"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "int"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::grad_optimize",
      "round"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_apply_update",
      "_deepcopy_graph"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_apply_update",
      "float"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_apply_update",
      "_clamp"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_apply_update",
      "isinstance"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_apply_update",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_apply_update",
      "int"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_apply_update",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_apply_update",
      "getattr"
    ],
    [
      "systems\\synapse\\world\\diff_sim.py::_apply_update",
      "round"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::__init__",
      "Lock"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::__init__",
      "mkdir"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::__init__",
      "exception"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_featurize_episode",
      "isinstance"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_featurize_episode",
      "enumerate"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_featurize_episode",
      "tolist"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_featurize_episode",
      "isinstance"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_featurize_episode",
      "float"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "DictVectorizer"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "fit_transform"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "_featurize_episode"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "asarray"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "reshape"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "enumerate"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_train_models",
      "range"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_train_models",
      "GradientBoostingRegressor"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_train_models",
      "fit"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_train_models",
      "append"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "column_stack"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "float"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "range"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "enumerate"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "mean"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "float"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "float"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "append"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "float"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "float"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "predict"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "sum"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "sum"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "mean"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_evaluate",
      "mean"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_atomic_save",
      "with_suffix"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_atomic_save",
      "dump"
    ],
    [
      "systems\\synapse\\world\\world_model_trainer.py::WorldModelTrainer::_atomic_save",
      "replace"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "ravel"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "ravel"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "ravel"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "argsort"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "sum"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "sum"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "append"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "isinstance"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "isinstance"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "isinstance"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "abs"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "int"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "len"
    ],
    [
      "systems\\synapse\\explain\\minset.py::min_explanation",
      "len"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_safe_float",
      "float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "sorted"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "_clamp"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "max"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "sum"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "len"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "abs"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "_safe_float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "min"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "max"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "min"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "max"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "min"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "values"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_topk_stats",
      "len"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_extract_sequence",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_extract_sequence",
      "isinstance"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_extract_sequence",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_extract_sequence",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_extract_sequence",
      "isinstance"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_extract_sequence",
      "isinstance"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_extract_sequence",
      "str"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_extract_sequence",
      "str"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_sim_uncertainty",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_sim_uncertainty",
      "isinstance"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_sim_uncertainty",
      "_safe_float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_sim_uncertainty",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_spec_drift",
      "_sim_uncertainty"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_spec_drift",
      "_clamp"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_spec_drift",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_spec_drift",
      "isinstance"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_spec_drift",
      "_clamp"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_spec_drift",
      "bool"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_spec_drift",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "max"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "_safe_float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "_safe_float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "_clamp"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "_clamp"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "abs"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "isinstance"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "_safe_float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_overfit",
      "float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_fragility",
      "_topk_stats"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_fragility",
      "_clamp"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_fragility",
      "get"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_fragility",
      "isinstance"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_fragility",
      "len"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "_extract_sequence"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "list"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "_clamp"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "len"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "zip"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "Counter"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "max"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "max"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "len"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "max"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "values"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "len"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "_clamp"
    ],
    [
      "systems\\synapse\\explain\\probes.py::_calc_loop",
      "len"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::__new__",
      "super"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "_calc_spec_drift"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "_calc_overfit"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "_calc_fragility"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "_calc_loop"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "debug"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "float"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "_sim_uncertainty"
    ],
    [
      "systems\\synapse\\explain\\probes.py::MetaProbe::predict_risk",
      "exception"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_norm_str",
      "strip"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_norm_str",
      "str"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_risk_tier",
      "lower"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_risk_tier",
      "startswith"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_risk_tier",
      "startswith"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_risk_tier",
      "_norm_str"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_risk_tier",
      "get"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_cost_tier",
      "isnan"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_cost_tier",
      "isinf"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_cost_tier",
      "float"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_cost_tier",
      "abs"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_cost_tier",
      "float"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_task_family",
      "get"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_task_family",
      "lower"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_task_family",
      "lower"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_task_family",
      "_norm_str"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_task_family",
      "split"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_task_family",
      "_norm_str"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::_task_family",
      "get"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::__new__",
      "super"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::__init__",
      "hasattr"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::__init__",
      "RLock"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::__init__",
      "default_rng"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::__init__",
      "info"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::get_descriptor",
      "_risk_tier"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::get_descriptor",
      "_cost_tier"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::get_descriptor",
      "_task_family"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "get_descriptor"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "get"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "info"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "int"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "get"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "get"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "random"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "info"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "random"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "get"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "list"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "array"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "float"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "int"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "keys"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "sqrt"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "sum"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "int"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "choice"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "int"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "isfinite"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "integers"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "len"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "get"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::sample_niche",
      "len"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::get_champion_from_niche",
      "get"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::get_champion_from_niche",
      "_norm_str"
    ],
    [
      "systems\\synapse\\qd\\map_elites.py::QDArchive::get_champion_from_niche",
      "get"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::__new__",
      "super"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::__init__",
      "print"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::update_fitness",
      "get"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::update_fitness",
      "_normalize_shares"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::_normalize_shares",
      "sum"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::_normalize_shares",
      "values"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::rebalance_shares",
      "items"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::rebalance_shares",
      "_normalize_shares"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::rebalance_shares",
      "print"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::rebalance_shares",
      "mean"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::rebalance_shares",
      "exp"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::rebalance_shares",
      "list"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::rebalance_shares",
      "values"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::rebalance_shares",
      "len"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::sample_niche",
      "list"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::sample_niche",
      "list"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::sample_niche",
      "choice"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::sample_niche",
      "keys"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::sample_niche",
      "values"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::sample_niche",
      "len"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::get_genesis_allocation",
      "items"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::get_genesis_allocation",
      "print"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::get_genesis_allocation",
      "max"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::get_genesis_allocation",
      "sum"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::get_genesis_allocation",
      "max"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::get_genesis_allocation",
      "int"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::get_genesis_allocation",
      "values"
    ],
    [
      "systems\\synapse\\qd\\replicator.py::Replicator::get_genesis_allocation",
      "round"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::__new__",
      "super"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::__init__",
      "print"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::update_roi",
      "get"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::get_underperforming_arms",
      "items"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::get_underperforming_arms",
      "sorted"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::get_underperforming_arms",
      "print"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::get_underperforming_arms",
      "values"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::get_underperforming_arms",
      "len"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::get_underperforming_arms",
      "items"
    ],
    [
      "systems\\synapse\\economics\\roi.py::ROIManager::get_underperforming_arms",
      "len"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::__new__",
      "super"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::__init__",
      "print"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::update",
      "ravel"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::update",
      "zeros"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::update",
      "len"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::update",
      "extend"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::update",
      "extend"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::update",
      "len"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::update",
      "len"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest",
      "ravel"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest",
      "min"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest",
      "list"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest",
      "norm"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest",
      "norm"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest",
      "maximum"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest",
      "len"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest",
      "argpartition"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest",
      "set"
    ],
    [
      "systems\\synapse\\rerank\\episodic_knn.py::EpisodicKNN::suggest",
      "print"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::__new__",
      "super"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "reshape"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "array"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "array"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "ColumnTransformer"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "Pipeline"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "concatenate"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "fit"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "len"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "array"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "OneHotEncoder"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "Pipeline"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "ColumnTransformer"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "PolynomialFeatures"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "RidgeCV"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "logspace"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "list"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "StandardScaler"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "PolynomialFeatures"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "OneHotEncoder"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "StandardScaler"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_fit_model",
      "list"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_predict_reward",
      "array"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_predict_reward",
      "float"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_predict_reward",
      "predict"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_predict_reward",
      "float"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_predict_reward",
      "int"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_search_best",
      "_predict_reward"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_search_best",
      "float"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_search_best",
      "int"
    ],
    [
      "systems\\synapse\\meta\\optimizer.py::MetaOptimizer::_search_best",
      "float"
    ],
    [
      "systems\\synapse\\safety\\sentinels.py::GoodhartSentinel::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\safety\\sentinels.py::GoodhartSentinel::__new__",
      "ppf"
    ],
    [
      "systems\\synapse\\safety\\sentinels.py::GoodhartSentinel::__new__",
      "super"
    ],
    [
      "systems\\synapse\\safety\\sentinels.py::GoodhartSentinel::_featurize_trace",
      "array"
    ],
    [
      "systems\\synapse\\safety\\sentinels.py::GoodhartSentinel::check",
      "_featurize_trace"
    ],
    [
      "systems\\synapse\\safety\\sentinels.py::GoodhartSentinel::check",
      "print"
    ],
    [
      "systems\\synapse\\safety\\sentinels.py::SentinelManager::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\safety\\sentinels.py::SentinelManager::__new__",
      "super"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_risk_from_tokens",
      "lower"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_budget_from_tokens",
      "lower"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "strip"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "startswith"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "startswith"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "match"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "strip"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "strip"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "strip"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "split"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "strip"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "split"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_niche_key",
      "group"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_sim_uncertainty_key",
      "startswith"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_sim_uncertainty_key",
      "startswith"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_sim_uncertainty_key",
      "strip"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_sim_uncertainty_key",
      "strip"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_sim_uncertainty_key",
      "split"
    ],
    [
      "systems\\synapse\\experiments\\active.py::_parse_sim_uncertainty_key",
      "split"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::__new__",
      "super"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "max"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "float"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "info"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "_parse_niche_key"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "_parse_sim_uncertainty_key"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "TaskContext"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "sorted"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "get"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "_risk_from_tokens"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "_budget_from_tokens"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "TaskContext"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "TaskContext"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "keys"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "float"
    ],
    [
      "systems\\synapse\\experiments\\active.py::ExperimentDesigner::design_probe",
      "get"
    ],
    [
      "systems\\synapse\\values\\learner.py::ValueLearner::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\values\\learner.py::ValueLearner::__new__",
      "super"
    ],
    [
      "systems\\synapse\\values\\learner.py::ValueLearner::_bradley_terry_update",
      "range"
    ],
    [
      "systems\\synapse\\values\\learner.py::ValueLearner::_bradley_terry_update",
      "array"
    ],
    [
      "systems\\synapse\\values\\learner.py::ValueLearner::_bradley_terry_update",
      "array"
    ],
    [
      "systems\\synapse\\values\\learner.py::ValueLearner::_bradley_terry_update",
      "dot"
    ],
    [
      "systems\\synapse\\values\\learner.py::ValueLearner::_bradley_terry_update",
      "exp"
    ],
    [
      "systems\\synapse\\robust\\ood.py::OODDetector::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\robust\\ood.py::OODDetector::__new__",
      "super"
    ],
    [
      "systems\\synapse\\robust\\ood.py::OODDetector::__init__",
      "print"
    ],
    [
      "systems\\synapse\\robust\\ood.py::OODDetector::check_shift",
      "ravel"
    ],
    [
      "systems\\synapse\\robust\\ood.py::OODDetector::check_shift",
      "sqrt"
    ],
    [
      "systems\\synapse\\robust\\ood.py::OODDetector::check_shift",
      "print"
    ],
    [
      "systems\\synapse\\robust\\ood.py::OODDetector::check_shift",
      "float"
    ],
    [
      "systems\\synapse\\skills\\options.py::OptionMiner::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\skills\\options.py::OptionMiner::__new__",
      "super"
    ],
    [
      "systems\\synapse\\skills\\manager.py::SkillsManager::__new__",
      "__new__"
    ],
    [
      "systems\\synapse\\skills\\manager.py::SkillsManager::__new__",
      "super"
    ],
    [
      "systems\\synapse\\skills\\manager.py::SkillsManager::select_best_option",
      "float"
    ],
    [
      "systems\\synapse\\skills\\manager.py::SkillsManager::select_best_option",
      "array"
    ],
    [
      "systems\\synapse\\skills\\manager.py::SkillsManager::select_best_option",
      "print"
    ],
    [
      "systems\\synapse\\skills\\manager.py::SkillsManager::select_best_option",
      "norm"
    ],
    [
      "systems\\synapse\\skills\\manager.py::SkillsManager::select_best_option",
      "norm"
    ],
    [
      "systems\\synapse\\skills\\executor.py::OptionExecutor::start_execution",
      "ExecutionState"
    ],
    [
      "systems\\synapse\\skills\\executor.py::OptionExecutor::start_execution",
      "print"
    ],
    [
      "systems\\synapse\\skills\\executor.py::OptionExecutor::start_execution",
      "get_arm"
    ],
    [
      "systems\\synapse\\skills\\executor.py::OptionExecutor::continue_execution",
      "get"
    ],
    [
      "systems\\synapse\\skills\\executor.py::OptionExecutor::continue_execution",
      "print"
    ],
    [
      "systems\\synapse\\skills\\executor.py::OptionExecutor::continue_execution",
      "get_arm"
    ],
    [
      "systems\\synapse\\skills\\executor.py::OptionExecutor::continue_execution",
      "len"
    ],
    [
      "systems\\synapse\\skills\\executor.py::OptionExecutor::continue_execution",
      "print"
    ],
    [
      "systems\\synapse\\skills\\executor.py::OptionExecutor::end_execution",
      "print"
    ],
    [
      "systems\\simula\\config.py::_normalize_path_string",
      "replace"
    ],
    [
      "systems\\simula\\config.py::_normalize_path_string",
      "str"
    ],
    [
      "systems\\simula\\config.py::_normalize_path_string",
      "resolve"
    ],
    [
      "systems\\simula\\config.py::_normalize_path_string",
      "Path"
    ],
    [
      "systems\\simula\\config.py::_default_workspace_root",
      "getenv"
    ],
    [
      "systems\\simula\\config.py::_default_workspace_root",
      "getenv"
    ],
    [
      "systems\\simula\\config.py::_default_artifacts_root",
      "getenv"
    ],
    [
      "systems\\simula\\config.py::_default_artifacts_root",
      "str"
    ],
    [
      "systems\\simula\\config.py::_default_artifacts_root",
      "Path"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_allowed_roots",
      "field_validator"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_allowed_roots",
      "isinstance"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_allowed_roots",
      "isinstance"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_allowed_roots",
      "getenv"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_allowed_roots",
      "str"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_allowed_roots",
      "strip"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_allowed_roots",
      "split"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_allowed_roots",
      "strip"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_unsandbox_flag",
      "field_validator"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_unsandbox_flag",
      "isinstance"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_unsandbox_flag",
      "lower"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_unsandbox_flag",
      "getenv"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_unsandbox_flag",
      "strip"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_parse_unsandbox_flag",
      "str"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_harmonize_paths",
      "model_validator"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_harmonize_paths",
      "_normalize_path_string"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_harmonize_paths",
      "_normalize_path_string"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_harmonize_paths",
      "_normalize_path_string"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_harmonize_paths",
      "_default_artifacts_root"
    ],
    [
      "systems\\simula\\config.py::SimulaSettings::_harmonize_paths",
      "_normalize_path_string"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_build_axon_event",
      "str"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_build_axon_event",
      "uuid4"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_build_axon_event",
      "list"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_build_axon_event",
      "get"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_build_axon_event",
      "now_iso"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_build_axon_event",
      "fromkeys"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_handle_skill_continuation",
      "get"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_create_plan",
      "len"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_update_plan",
      "len"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_on_llm_response",
      "done"
    ],
    [
      "systems\\simula\\agent\\orchestrator.py::AgentOrchestrator::_on_llm_response",
      "set_result"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "get_arm"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "getattr"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "getattr"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "lower"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "isinstance"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "get"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "getattr"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "getattr"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "float"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "int"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "str"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "isinstance"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "get"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "isinstance"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "get"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "get"
    ],
    [
      "systems\\simula\\client\\synapse_client.py::SynapseClient::arm_inference_config",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::EvalResult::as_dict",
      "asdict"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::EvalResult::hard_gates_ok",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::EvalResult::hard_gates_ok",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::EvalResult::hard_gates_ok",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::__init__",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::__init__",
      "sum"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::__init__",
      "values"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::__init__",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::_calibrate",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::_calibrate",
      "max"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::_calibrate",
      "min"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::_calibrate",
      "max"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::_calibrate",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::_calibrate",
      "min"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::_calibrate",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::_calibrate",
      "calibration_fn"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "sum"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "max"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "max"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "reward"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "reward"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "min"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "explain"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "_calibrate"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::score",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::explain",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::explain",
      "_calibrate"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::explain",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\eval_types.py::RewardAggregator::explain",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::JsonLogFormatter::format",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::JsonLogFormatter::format",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::JsonLogFormatter::format",
      "dumps"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::JsonLogFormatter::format",
      "getMessage"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::JsonLogFormatter::format",
      "formatException"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::JsonLogFormatter::format",
      "update"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::JsonLogFormatter::format",
      "isoformat"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::JsonLogFormatter::format",
      "utcnow"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "mkdir"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "getLogger"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "clear"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "setLevel"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "StreamHandler"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "setFormatter"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "addHandler"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "FileHandler"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "setFormatter"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "addHandler"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "JsonLogFormatter"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::setup_logging",
      "JsonLogFormatter"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::sha1",
      "hexdigest"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::sha1",
      "sha1"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::sha1",
      "encode"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::SimulaConfig::load",
      "SimulaConfig"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::SimulaConfig::load",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::SimulaConfig::load",
      "safe_load"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::SimulaConfig::load",
      "SandboxCfg"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::SimulaConfig::load",
      "OrchestratorCfg"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::SimulaConfig::load",
      "read_text"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::SimulaConfig::load",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::SimulaConfig::load",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::ArtifactStore::__init__",
      "mkdir"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::ArtifactStore::__init__",
      "mkdir"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::ArtifactStore::__init__",
      "mkdir"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::ArtifactStore::__init__",
      "mkdir"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::ArtifactStore::write_text",
      "mkdir"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::ArtifactStore::write_text",
      "write_text"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::ArtifactStore::save_candidate",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::ArtifactStore::save_candidate",
      "write_text"
    ],
    [
      "systems\\simula\\code_sim\\loop.py::ArtifactStore::save_candidate",
      "sha1"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_as_list",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_require_keys",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_get",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_get",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_get",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_get_path",
      "enumerate"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_get_path",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_get_path",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "enumerate"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "_as_list"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "StepTarget"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_targets",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "_as_list"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_tests",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_iterations",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_iterations",
      "int"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_iterations",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_iterations",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_iterations",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_iterations",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_iterations",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_iterations",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_iterations",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_acceptance",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_acceptance",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_acceptance",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_acceptance",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_acceptance",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_validate_acceptance",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_steps_list",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_steps_list",
      "enumerate"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_steps_list",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_steps_list",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_steps_list",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_steps_list",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_steps_list",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_normalize_steps_list",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "_normalize_targets"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "_normalize_tests"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "Step"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "int"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::_build_step",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "_require_keys"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "_validate_acceptance"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "_validate_iterations"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "_normalize_steps_list"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "set"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "Plan"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "_build_step"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "add"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::plan_from_objective",
      "ValueError"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "set"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "rglob"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "fnmatch"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "add"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "is_file"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::match_tests_in_repo",
      "relative_to"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "enumerate"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\planner.py::pretty_plan",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\prompts.py::_read_file_snippet",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\prompts.py::_read_file_snippet",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\prompts.py::_read_file_snippet",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\prompts.py::_read_file_snippet",
      "read_text"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_now_iso",
      "isoformat"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_now_iso",
      "now"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_redact",
      "dumps"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_redact",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_redact",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_redact",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::from_env",
      "getenv"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::from_env",
      "getenv"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::from_env",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::from_env",
      "cls"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::from_env",
      "getenv"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::from_env",
      "getenv"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::from_env",
      "getenv"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::from_env",
      "_ensure_dirs"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::enable_if_env",
      "_ensure_dirs"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_ensure_dirs",
      "strftime"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_ensure_dirs",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_ensure_dirs",
      "makedirs"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_ensure_dirs",
      "now"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_job_file",
      "strftime"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_job_file",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_job_file",
      "makedirs"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_job_file",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_job_file",
      "now"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_write",
      "setdefault"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_write",
      "dumps"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_write",
      "_now_iso"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_write",
      "print"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_write",
      "print"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_write",
      "open"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_write",
      "write"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::_write",
      "_job_file"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::start_job",
      "set"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::start_job",
      "perf_counter"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::start_job",
      "_write"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::start_job",
      "uuid4"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::end_job",
      "_write"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::end_job",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::end_job",
      "perf_counter"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::end_job",
      "pop"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::llm_call",
      "_write"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::llm_call",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::reward",
      "_write"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::reward",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::log_event",
      "_write"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::log_event",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::tool_event",
      "_write"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::tool_event",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::tool_event",
      "_redact"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::tool_event",
      "_redact"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::tool_event",
      "perf_counter"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::graph_write",
      "_write"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::Telemetry::graph_write",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::with_job_context::__enter__",
      "start_job"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::with_job_context::__exit__",
      "end_job"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::with_job_context::__exit__",
      "repr"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "iscoroutinefunction"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "perf_counter"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "perf_counter"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "fn"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "fn"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "keys"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "repr"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "keys"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::track_tool",
      "repr"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "iscoroutinefunction"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "perf_counter"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "perf_counter"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "fn"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "fn"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "keys"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "repr"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "keys"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_decorator",
      "repr"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_sw",
      "perf_counter"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_sw",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_sw",
      "fn"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_sw",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_sw",
      "tool_event"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_sw",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_sw",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_sw",
      "keys"
    ],
    [
      "systems\\simula\\code_sim\\telemetry.py::_sw",
      "repr"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::_write_jsonl",
      "open"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::_write_jsonl",
      "write"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::_write_jsonl",
      "dumps"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::_read_jsonl",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::_read_jsonl",
      "loads"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::_read_jsonl",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::_read_jsonl",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::_read_jsonl",
      "read_text"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::add_candidate",
      "_write_jsonl"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::top_k_similar",
      "sort"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::top_k_similar",
      "any"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::top_k_similar",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::top_k_similar",
      "_read_jsonl"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::top_k_similar",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\archive\\pareto.py::top_k_similar",
      "_dominates"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_read",
      "read_text"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "compile"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "finditer"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "rsplit"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "escape"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "group"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_contains_tool_registration",
      "bool"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_contains_tool_registration",
      "search"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_contains_tool_registration",
      "escape"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_git_changed",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_git_changed",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::_git_changed",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "_read"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "_approx_sig_present"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "search"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "group"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "Path"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "_read"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "set"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "set"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "issubset"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "Path"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "_contains_tool_registration"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "_git_changed"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\contracts.py::run",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_is_mapping",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_get",
      "_is_mapping"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_get",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_get",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_get_path",
      "enumerate"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_get_path",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_get_path",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "_get_path"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "_get_path"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_extract_tests",
      "decode"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_expand_tests",
      "set"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_expand_tests",
      "sorted"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_expand_tests",
      "glob"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_expand_tests",
      "extend"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_expand_tests",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_expand_tests",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_expand_tests",
      "add"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_budget_seconds",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_budget_seconds",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_budget_seconds",
      "_get_path"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_budget_seconds",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_budget_seconds",
      "lstrip"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_budget_seconds",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_budget_seconds",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::_budget_seconds",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "_expand_tests"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "_budget_seconds"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "time"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "_extract_tests"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "time"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "decode"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "max"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "int"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "round"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "max"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "int"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\perf.py::run",
      "max"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\runtime.py::run",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\runtime.py::run",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\runtime.py::run",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\runtime.py::run",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\runtime.py::run",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\runtime.py::run",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\runtime.py::run",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\runtime.py::run",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\static.py::_run",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\static.py::run",
      "_run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\static.py::run",
      "_run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\static.py::run",
      "_run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_is_mapping",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_get",
      "_is_mapping"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_get",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_get",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_get_path",
      "enumerate"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_get_path",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_get_path",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "_get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "_get_path"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "_get_path"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_extract_tests",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_expand_test_selection",
      "sorted"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_expand_test_selection",
      "glob"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_expand_test_selection",
      "extend"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_expand_test_selection",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_expand_test_selection",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_expand_test_selection",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_coverage_per_file",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_coverage_per_file",
      "fromstring"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_coverage_per_file",
      "findall"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_coverage_per_file",
      "read_text"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_coverage_per_file",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_coverage_per_file",
      "findall"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_coverage_per_file",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_coverage_per_file",
      "sum"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_coverage_per_file",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_parse_counts",
      "finditer"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_parse_counts",
      "group"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_parse_counts",
      "int"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_ratio",
      "max"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::_ratio",
      "min"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "_expand_test_selection"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "time"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "_parse_counts"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "_ratio"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "_coverage_per_file"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "_extract_tests"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "time"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "decode"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\tests.py::run",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::as_dict",
      "asdict"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::unit_pass_ratio",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::unit_pass_ratio",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::unit_pass_ratio",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::unit_pass_ratio",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::integration_pass_ratio",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::integration_pass_ratio",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::integration_pass_ratio",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::integration_pass_ratio",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::integration_pass_ratio",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::static_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::static_score",
      "sum"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::static_score",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::static_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::static_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::security_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::security_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::contracts_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::contracts_score",
      "sum"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::contracts_score",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::contracts_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::contracts_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::contracts_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::perf_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::perf_score",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::perf_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::coverage_delta_score",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::coverage_delta_score",
      "max"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::coverage_delta_score",
      "min"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::coverage_delta_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::coverage_delta_score",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::policy_penalty",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::policy_penalty",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::EvalResult::policy_penalty",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "bool"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "bool"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "bool"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "EvalResult"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "bool"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "bool"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\evaluators\\__init__.py::run_evaluator_suite",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_read",
      "read_text"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_rel_for_diff",
      "as_posix"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_rel_for_diff",
      "relative_to"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_rel_for_diff",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_unified_diff",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_unified_diff",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_unified_diff",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_unified_diff",
      "unified_diff"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "enumerate"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "match"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_strip_shebang_and_encoding",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_module_docstring",
      "insert"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_module_docstring",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_module_docstring",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_module_docstring",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_module_docstring",
      "Expr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_module_docstring",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_module_docstring",
      "Constant"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig",
      "rsplit"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_parse_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "arguments"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "FunctionDef"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "fix_missing_locations"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "Expr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "Pass"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "rsplit"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "arg"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "Constant"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "has_import"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "insert"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "fix_missing_locations"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "ImportFrom"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "Import"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "alias"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_import",
      "alias"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::has_import",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::has_import",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "_ensure_import"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "Assign"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "enumerate"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "insert"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "fix_missing_locations"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "Call"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "Attribute"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "Store"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_logger",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_module_has_function",
      "any"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_module_has_function",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "any"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "UnaryOp"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "Constant"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "Raise"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "insert"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "fix_missing_locations"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "If"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "Not"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "Call"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_add_guard_raises",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "lower"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "fix_missing_locations"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "Subscript"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_return_annotations",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_arg_annotations",
      "fix_missing_locations"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_arg_annotations",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::_ensure_arg_annotations",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::set_aggressive",
      "bool"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "primary_target"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "_read"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "_strip_shebang_and_encoding"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "unparse"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "_rel_for_diff"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "_unified_diff"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "parse"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "_do_scaffold"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "_ensure_logger"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "parse"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "_do_imports"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "_do_typing"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::mutate",
      "_do_error_paths"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "_ensure_module_docstring"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "_parse_sig"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "_module_has_function"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "_build_func_def_from_sig"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "any"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "Expr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "insert"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "fix_missing_locations"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "Call"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "Attribute"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "Constant"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_scaffold",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_imports",
      "_ensure_import"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_imports",
      "_ensure_import"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_imports",
      "_ensure_import"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_imports",
      "_ensure_logger"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_typing",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_typing",
      "_ensure_import"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_typing",
      "_ensure_import"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_typing",
      "_ensure_arg_annotations"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_typing",
      "_ensure_return_annotations"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "_ensure_logger"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "_add_guard_raises"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "enumerate"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "Expr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "insert"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "fix_missing_locations"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "Call"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "Attribute"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "Constant"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "Name"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\ast_refactor.py::AstMutator::_do_error_paths",
      "Load"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_strip_fences",
      "search"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_strip_fences",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_strip_fences",
      "group"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_coerce_primary_target_text",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_coerce_primary_target_text",
      "callable"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_coerce_primary_target_text",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_coerce_primary_target_text",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_coerce_primary_target_text",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_coerce_primary_target_text",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_coerce_primary_target_text",
      "dumps"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_coerce_primary_target_text",
      "pt"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\prompt_patch.py::_coerce_primary_target_text",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_unidiff",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_unidiff",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_unidiff",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_unidiff",
      "unified_diff"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_read",
      "read_text"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_read",
      "debug"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_ensure_line",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_ensure_line",
      "any"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_ensure_line",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_ensure_line",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_ensure_line",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_ensure_line",
      "rstrip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::_detect_registry_path",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "sorted"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "_detect_registry_path"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "_read"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "_unidiff"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "_read"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "_unidiff"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "primary_target"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "_unidiff"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "match_tests"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "primary_target"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "rstrip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "_unidiff"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "search"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "search"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "search"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "_ensure_line"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "relative_to"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "relative_to"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "relative_to"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "escape"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "group"
    ],
    [
      "systems\\simula\\code_sim\\mutators\\retrieval_edit.py::retrieval_guided_edits",
      "group"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_is_textual",
      "decode"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_is_textual",
      "read_bytes"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_shorten",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_shorten",
      "int"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_shorten",
      "int"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_read_text",
      "_shorten"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_read_text",
      "read_text"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_iter_globs",
      "glob"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_norm_rel",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_norm_rel",
      "as_posix"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_norm_rel",
      "as_posix"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_norm_rel",
      "relative_to"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "_norm_rel"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "_pkg_root"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "sort"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "any"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "_norm_rel"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "is_dir"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "_is_textual"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "is_relative_to"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "Neighbor"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_rank_neighbors",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_pkg_root",
      "is_dir"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_pkg_root",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "default_neighbor_globs"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "set"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "_iter_globs"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "glob"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "add"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "is_file"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_collect_candidates",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "finditer"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "finditer"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "findall"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "_shorten"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "min"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "group"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "group"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::_high_signal_slice",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "_collect_candidates"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "_rank_neighbors"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "_high_signal_slice"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "_read_text"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "min"
    ],
    [
      "systems\\simula\\code_sim\\retrieval\\context.py::gather_neighbor_snippets",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_merge_env",
      "update"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_merge_env",
      "setdefault"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_merge_env",
      "setdefault"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_merge_env",
      "setdefault"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "sub"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "sub"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "match"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "group"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_sanitize_llm_diff",
      "group"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "any"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "mkdir"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "mkdir"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "write_text"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "write_text"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "read_text"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "Path"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "append"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "mkdtemp"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::_apply_add_only_diff_to_fs",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::LocalSession::__init__",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::LocalSession::__init__",
      "_merge_env"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::LocalSession::run",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__init__",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__init__",
      "_merge_env"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__init__",
      "_ensure_image_ready"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__init__",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__init__",
      "getpid"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__init__",
      "int"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__init__",
      "Path"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__init__",
      "time"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__init__",
      "mkdtemp"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_ensure_image_ready",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "items"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "resolve"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "mkdir"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "lstrip"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "as_posix"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "as_posix"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "as_posix"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "as_posix"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "as_posix"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "Path"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::_docker_base",
      "Path"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::run",
      "join"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::run",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::run",
      "quote"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::run",
      "_docker_base"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSession::__del__",
      "rmtree"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSandbox::__init__",
      "SandboxConfig"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSandbox::__init__",
      "fields"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\sandbox.py::DockerSandbox::__init__",
      "items"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\seeds.py::ensure_toolchain",
      "items"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\seeds.py::ensure_toolchain",
      "any"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\seeds.py::ensure_toolchain",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\seeds.py::ensure_toolchain",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\seeds.py::ensure_toolchain",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\seeds.py::ensure_toolchain",
      "items"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\seeds.py::ensure_toolchain",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\seeds.py::ensure_toolchain",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\sandbox\\seeds.py::ensure_toolchain",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Constraints::from_dict",
      "Constraints"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Constraints::from_dict",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Constraints::from_dict",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Constraints::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Constraints::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::UnitTestsSpec::from_dict",
      "UnitTestsSpec"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::UnitTestsSpec::from_dict",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::UnitTestsSpec::from_dict",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::UnitTestsSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::UnitTestsSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::ContractsSpec::from_dict",
      "ContractsSpec"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::ContractsSpec::from_dict",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::ContractsSpec::from_dict",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::ContractsSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::ContractsSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::DocsSpec::from_dict",
      "DocsSpec"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::DocsSpec::from_dict",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::DocsSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::PerfSpec::from_dict",
      "PerfSpec"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::PerfSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec::from_dict",
      "AcceptanceSpec"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec::from_dict",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec::from_dict",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec::from_dict",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec::from_dict",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::AcceptanceSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::RuntimeSpec::from_dict",
      "RuntimeSpec"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::RuntimeSpec::from_dict",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::RuntimeSpec::from_dict",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::RuntimeSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::RuntimeSpec::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "Objective"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "items"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::get",
      "hasattr"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::get",
      "getattr"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::get",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Objective::get",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::StepTarget::from_dict",
      "StepTarget"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::StepTarget::from_dict",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::StepTarget::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::StepTarget::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "Step"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "int"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "list"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::from_dict",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::acceptance",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\specs\\schema.py::Step::runtime",
      "from_dict"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree",
      "replace"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree",
      "rglob"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree",
      "walk"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree",
      "exists"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree",
      "endswith"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree",
      "parse"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree",
      "read_text"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree",
      "isinstance"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_degree",
      "startswith"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_churn",
      "run"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_churn",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_churn",
      "str"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_churn",
      "splitlines"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::file_churn",
      "strip"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "Counter"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "sum"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "len"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "float"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "values"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "sum"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "log2"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "min"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "split"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "log2"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "values"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::plan_entropy",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::features_for_file",
      "get"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::features_for_file",
      "file_degree"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::features_for_file",
      "file_churn"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::features_for_file",
      "plan_entropy"
    ],
    [
      "systems\\simula\\code_sim\\utils\\repo_features.py::features_for_file",
      "get"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "get"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "extract_effects_from_diff"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "get"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "get"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "model_validate"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "add"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "add"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "PolicyNode"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "PolicyNode"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "list"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "hexdigest"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "sha256"
    ],
    [
      "systems\\simula\\policy\\emit.py::patch_to_policygraph",
      "encode"
    ],
    [
      "systems\\simula\\policy\\effects.py::EffectAnalyzer::__init__",
      "set"
    ],
    [
      "systems\\simula\\policy\\effects.py::EffectAnalyzer::visit_Import",
      "generic_visit"
    ],
    [
      "systems\\simula\\policy\\effects.py::EffectAnalyzer::visit_ImportFrom",
      "generic_visit"
    ],
    [
      "systems\\simula\\policy\\effects.py::EffectAnalyzer::visit_Call",
      "unparse"
    ],
    [
      "systems\\simula\\policy\\effects.py::EffectAnalyzer::visit_Call",
      "generic_visit"
    ],
    [
      "systems\\simula\\policy\\effects.py::extract_effects_from_diff",
      "parse"
    ],
    [
      "systems\\simula\\policy\\effects.py::extract_effects_from_diff",
      "EffectAnalyzer"
    ],
    [
      "systems\\simula\\policy\\effects.py::extract_effects_from_diff",
      "visit"
    ],
    [
      "systems\\simula\\policy\\effects.py::extract_effects_from_diff",
      "splitlines"
    ],
    [
      "systems\\simula\\policy\\effects.py::extract_effects_from_diff",
      "join"
    ],
    [
      "systems\\simula\\policy\\effects.py::extract_effects_from_diff",
      "startswith"
    ],
    [
      "systems\\simula\\policy\\effects.py::extract_effects_from_diff",
      "startswith"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::__init__",
      "time"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::__init__",
      "_utc_iso"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::__init__",
      "str"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::__init__",
      "int"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::__init__",
      "Path"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::__init__",
      "str"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::__init__",
      "uuid4"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::_utc_iso",
      "isoformat"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::_utc_iso",
      "fromtimestamp"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::_write_json_atomic",
      "mkdir"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::_write_json_atomic",
      "with_suffix"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::_write_json_atomic",
      "write_text"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::_write_json_atomic",
      "replace"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::_write_json_atomic",
      "dumps"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::log_event",
      "_utc_iso"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::log_event",
      "open"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::log_event",
      "write"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::log_event",
      "time"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::log_event",
      "dumps"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::setup_logging",
      "mkdir"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::setup_logging",
      "FileHandler"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::setup_logging",
      "Formatter"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::setup_logging",
      "setFormatter"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::setup_logging",
      "setLevel"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::setup_logging",
      "addHandler"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::setup_logging",
      "getLogger"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::teardown_logging",
      "removeHandler"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::teardown_logging",
      "close"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::teardown_logging",
      "getLogger"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::finalize",
      "round"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::finalize",
      "log_event"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::finalize",
      "_write_json_atomic"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::finalize",
      "str"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::finalize",
      "format_exc"
    ],
    [
      "systems\\simula\\service\\services\\codegen.py::JobContext::finalize",
      "time"
    ],
    [
      "systems\\simula\\service\\services\\equor_bridge.py::_current_identity_id",
      "getenv"
    ],
    [
      "systems\\simula\\service\\services\\equor_bridge.py::_current_identity_id",
      "get_current_identity"
    ],
    [
      "systems\\simula\\service\\services\\equor_bridge.py::_current_identity_id",
      "isinstance"
    ],
    [
      "systems\\simula\\service\\services\\equor_bridge.py::_current_identity_id",
      "get"
    ],
    [
      "systems\\simula\\service\\services\\equor_bridge.py::_current_identity_id",
      "str"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_read_file_snippet",
      "splitlines"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_read_file_snippet",
      "is_file"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_read_file_snippet",
      "len"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_read_file_snippet",
      "read_text"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_gather_repo_context",
      "join"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_gather_repo_context",
      "get"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_gather_repo_context",
      "resolve"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_gather_repo_context",
      "_read_file_snippet"
    ],
    [
      "systems\\simula\\service\\services\\prompts.py::_gather_repo_context",
      "append"
    ],
    [
      "systems\\simula\\service\\services\\vcs.py::_git_sync",
      "run"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_fq",
      "join"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_load_index",
      "exists"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_load_index",
      "loads"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_load_index",
      "read_text"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_save_index",
      "mkdir"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_save_index",
      "write_text"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_save_index",
      "dumps"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "resolve"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "_load_index"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "_save_index"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "len"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "len"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "read_text"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "hexdigest"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "visit"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "str"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "is_file"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "get"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "parse"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "pop"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "relative_to"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "rglob"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "sha1"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "items"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "_fq"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "append"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "generic_visit"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "pop"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "_fq"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "walk"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "generic_visit"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "_V"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "encode"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "pop"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "get"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "startswith"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "isinstance"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "items"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "isinstance"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "get"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "startswith"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "isinstance"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::index_python_files",
      "append"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_ClassDef",
      "_fq"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_ClassDef",
      "append"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_ClassDef",
      "generic_visit"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_ClassDef",
      "pop"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_FunctionDef",
      "_fq"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_FunctionDef",
      "walk"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_FunctionDef",
      "generic_visit"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_FunctionDef",
      "isinstance"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_FunctionDef",
      "isinstance"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_FunctionDef",
      "isinstance"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::_V::visit_FunctionDef",
      "append"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::neighbors_for_symbol",
      "_load_index"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::neighbors_for_symbol",
      "split"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::neighbors_for_symbol",
      "items"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::neighbors_for_symbol",
      "split"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::neighbors_for_symbol",
      "get"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::list_defs_in_file",
      "_load_index"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::list_defs_in_file",
      "items"
    ],
    [
      "systems\\simula\\nscs\\ast_index.py::list_defs_in_file",
      "get"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "read_text"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "splitlines"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "enumerate"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "exists"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "max"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "min"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "append"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "join"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "startswith"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "startswith"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "append"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "len"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "join"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "strip"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::gather_neighbor_snippets",
      "strip"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::build_dossier",
      "index_python_files"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::build_dossier",
      "neighbors_for_symbol"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::build_dossier",
      "gather_neighbor_snippets"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::build_dossier",
      "list_defs_in_file"
    ],
    [
      "systems\\simula\\nscs\\dossier.py::build_dossier",
      "split"
    ],
    [
      "systems\\simula\\nscs\\agent_tools.py::_sanitize_diff",
      "strip"
    ],
    [
      "systems\\simula\\nscs\\agent_tools.py::_sanitize_diff",
      "startswith"
    ],
    [
      "systems\\simula\\nscs\\agent_tools.py::_sanitize_diff",
      "strip"
    ],
    [
      "systems\\simula\\nscs\\agent_tools.py::_sanitize_diff",
      "strip"
    ],
    [
      "systems\\simula\\nscs\\agent_tools.py::_sanitize_diff",
      "sub"
    ],
    [
      "systems\\simula\\nscs\\agent_tools.py::_sanitize_diff",
      "sub"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_array_keys",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_object_keys",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_is_array",
      "isinstance"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_is_object",
      "isinstance"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_is_string",
      "isinstance"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_index",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_index",
      "str"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_index",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_index",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_index",
      "len"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_loop",
      "isinstance"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_loop",
      "_ref"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_loop",
      "int"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_ref",
      "_is_array"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_ref",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_ref",
      "_loop"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_ref",
      "_array_keys"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_ref",
      "_is_object"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_ref",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_ref",
      "_loop"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_ref",
      "_object_keys"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_relate",
      "_is_string"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_relate",
      "_is_array"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_relate",
      "_is_object"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_relate",
      "index"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_relate",
      "_index"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_transform",
      "_is_array"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_transform",
      "_is_object"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_transform",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_transform",
      "_relate"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_transform",
      "_relate"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_wrap",
      "_is_string"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_wrap",
      "_is_array"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_wrap",
      "_String"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_wrap",
      "_is_object"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_wrap",
      "_wrap"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::_wrap",
      "_wrap"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "loads"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "_is_array"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "_is_object"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "isinstance"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "_loop"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "_loop"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "_wrap"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "_array_keys"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::parse",
      "_object_keys"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::stringify",
      "_Known"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::stringify",
      "int"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::stringify",
      "dumps"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::stringify",
      "_index"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::stringify",
      "len"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::stringify",
      "append"
    ],
    [
      "frontend-voxis/node_modules/.flatted-JJXUKFZq/python/flatted.py::stringify",
      "_transform"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "Path"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "exists"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "any"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "exists"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "any"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "exists"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "any"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "exists"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "exists"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "any"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "exists"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "any"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "exists"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "exists"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "rglob"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "rglob"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "rglob"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "rglob"
    ],
    [
      "systems/simula/build/detect.py::detect_build_system",
      "rglob"
    ],
    [
      "test_all.py::mock_settings",
      "MagicMock"
    ],
    [
      "test_all.py::mock_settings",
      "str"
    ],
    [
      "test_all.py::mock_settings",
      "str"
    ],
    [
      "test_all.py::mock_settings",
      "mkdir"
    ],
    [
      "test_all.py::mock_settings",
      "mkdir"
    ],
    [
      "test_all.py::mock_sandbox",
      "AsyncMock"
    ],
    [
      "test_all.py::mock_sandbox",
      "AsyncMock"
    ],
    [
      "test_all.py::mock_sandbox",
      "MagicMock"
    ],
    [
      "test_all.py::mock_sandbox",
      "patch"
    ],
    [
      "context_store.py::ContextStore::cache_tool",
      "time"
    ],
    [
      "context_store.py::ContextStore::get_cached_tool",
      "get"
    ],
    [
      "context_store.py::ContextStore::get_cached_tool",
      "time"
    ],
    [
      "context_store.py::ContextStore::prune_cache",
      "time"
    ],
    [
      "context_store.py::ContextStore::prune_cache",
      "items"
    ],
    [
      "app.py::_name",
      "isinstance"
    ],
    [
      "app.py::_name",
      "isinstance"
    ],
    [
      "app.py::_name",
      "getattr"
    ],
    [
      "app.py::_name",
      "getattr"
    ],
    [
      "app.py::_name",
      "str"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "__init__"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "get_origin"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "get_args"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "_name"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "super"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "extract_stack"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "print"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "print"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "split"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "endswith"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "format"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "print"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "join"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "_name"
    ],
    [
      "app.py::_DebugTypeAdapter::__init__",
      "sorted"
    ],
    [
      "collate.py::collate_dir",
      "write"
    ],
    [
      "collate.py::collate_dir",
      "walk"
    ],
    [
      "collate.py::collate_dir",
      "exists"
    ],
    [
      "collate.py::collate_dir",
      "write"
    ],
    [
      "collate.py::collate_dir",
      "sorted"
    ],
    [
      "collate.py::collate_dir",
      "sorted"
    ],
    [
      "collate.py::collate_dir",
      "write"
    ],
    [
      "collate.py::collate_dir",
      "lower"
    ],
    [
      "collate.py::collate_dir",
      "Path"
    ],
    [
      "collate.py::collate_dir",
      "open"
    ],
    [
      "collate.py::collate_dir",
      "write"
    ],
    [
      "collate.py::collate_dir",
      "write"
    ],
    [
      "collate.py::collate_dir",
      "read"
    ],
    [
      "collate.py::collate_dir",
      "Path"
    ],
    [
      "collate.py::main",
      "ArgumentParser"
    ],
    [
      "collate.py::main",
      "add_argument"
    ],
    [
      "collate.py::main",
      "add_argument"
    ],
    [
      "collate.py::main",
      "add_argument"
    ],
    [
      "collate.py::main",
      "add_argument"
    ],
    [
      "collate.py::main",
      "add_argument"
    ],
    [
      "collate.py::main",
      "parse_args"
    ],
    [
      "collate.py::main",
      "Path"
    ],
    [
      "collate.py::main",
      "set"
    ],
    [
      "collate.py::main",
      "mkdir"
    ],
    [
      "collate.py::main",
      "print"
    ],
    [
      "collate.py::main",
      "strip"
    ],
    [
      "collate.py::main",
      "Path"
    ],
    [
      "collate.py::main",
      "open"
    ],
    [
      "collate.py::main",
      "write"
    ],
    [
      "collate.py::main",
      "write"
    ],
    [
      "collate.py::main",
      "write"
    ],
    [
      "collate.py::main",
      "write"
    ],
    [
      "collate.py::main",
      "write"
    ],
    [
      "collate.py::main",
      "write"
    ],
    [
      "collate.py::main",
      "sorted"
    ],
    [
      "collate.py::main",
      "startswith"
    ],
    [
      "collate.py::main",
      "lower"
    ],
    [
      "collate.py::main",
      "collate_dir"
    ],
    [
      "collate.py::main",
      "join"
    ],
    [
      "collate.py::main",
      "join"
    ],
    [
      "collate.py::main",
      "lower"
    ],
    [
      "collate.py::main",
      "isoformat"
    ],
    [
      "collate.py::main",
      "join"
    ],
    [
      "collate.py::main",
      "join"
    ],
    [
      "collate.py::main",
      "join"
    ],
    [
      "collate.py::main",
      "sorted"
    ],
    [
      "collate.py::main",
      "sorted"
    ],
    [
      "collate.py::main",
      "now"
    ],
    [
      ".collate.py::collate_dir",
      "write"
    ],
    [
      ".collate.py::collate_dir",
      "walk"
    ],
    [
      ".collate.py::collate_dir",
      "exists"
    ],
    [
      ".collate.py::collate_dir",
      "write"
    ],
    [
      ".collate.py::collate_dir",
      "sorted"
    ],
    [
      ".collate.py::collate_dir",
      "sorted"
    ],
    [
      ".collate.py::collate_dir",
      "write"
    ],
    [
      ".collate.py::collate_dir",
      "lower"
    ],
    [
      ".collate.py::collate_dir",
      "Path"
    ],
    [
      ".collate.py::collate_dir",
      "open"
    ],
    [
      ".collate.py::collate_dir",
      "write"
    ],
    [
      ".collate.py::collate_dir",
      "write"
    ],
    [
      ".collate.py::collate_dir",
      "read"
    ],
    [
      ".collate.py::collate_dir",
      "Path"
    ],
    [
      ".collate.py::main",
      "ArgumentParser"
    ],
    [
      ".collate.py::main",
      "add_argument"
    ],
    [
      ".collate.py::main",
      "add_argument"
    ],
    [
      ".collate.py::main",
      "add_argument"
    ],
    [
      ".collate.py::main",
      "add_argument"
    ],
    [
      ".collate.py::main",
      "add_argument"
    ],
    [
      ".collate.py::main",
      "parse_args"
    ],
    [
      ".collate.py::main",
      "Path"
    ],
    [
      ".collate.py::main",
      "set"
    ],
    [
      ".collate.py::main",
      "mkdir"
    ],
    [
      ".collate.py::main",
      "print"
    ],
    [
      ".collate.py::main",
      "strip"
    ],
    [
      ".collate.py::main",
      "Path"
    ],
    [
      ".collate.py::main",
      "open"
    ],
    [
      ".collate.py::main",
      "write"
    ],
    [
      ".collate.py::main",
      "write"
    ],
    [
      ".collate.py::main",
      "write"
    ],
    [
      ".collate.py::main",
      "write"
    ],
    [
      ".collate.py::main",
      "write"
    ],
    [
      ".collate.py::main",
      "write"
    ],
    [
      ".collate.py::main",
      "sorted"
    ],
    [
      ".collate.py::main",
      "startswith"
    ],
    [
      ".collate.py::main",
      "lower"
    ],
    [
      ".collate.py::main",
      "collate_dir"
    ],
    [
      ".collate.py::main",
      "join"
    ],
    [
      ".collate.py::main",
      "join"
    ],
    [
      ".collate.py::main",
      "lower"
    ],
    [
      ".collate.py::main",
      "isoformat"
    ],
    [
      ".collate.py::main",
      "join"
    ],
    [
      ".collate.py::main",
      "join"
    ],
    [
      ".collate.py::main",
      "join"
    ],
    [
      ".collate.py::main",
      "sorted"
    ],
    [
      ".collate.py::main",
      "sorted"
    ],
    [
      ".collate.py::main",
      "now"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "check_output"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "loads"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "get"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "search"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "group"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "get"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "Path"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "int"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "int"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "print"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "print"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "get"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "append"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "get"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "get"
    ],
    [
      "autofix_f841.py::ruff_f841",
      "Finding"
    ],
    [
      "autofix_f841.py::fix_line",
      "list"
    ],
    [
      "autofix_f841.py::fix_line",
      "join"
    ],
    [
      "autofix_f841.py::fix_line",
      "enumerate"
    ],
    [
      "autofix_f841.py::fix_line",
      "match"
    ],
    [
      "autofix_f841.py::fix_line",
      "compile"
    ],
    [
      "autofix_f841.py::fix_line",
      "sub"
    ],
    [
      "autofix_f841.py::fix_line",
      "append"
    ],
    [
      "autofix_f841.py::fix_line",
      "split"
    ],
    [
      "autofix_f841.py::fix_line",
      "group"
    ],
    [
      "autofix_f841.py::fix_line",
      "start"
    ],
    [
      "autofix_f841.py::fix_line",
      "group"
    ],
    [
      "autofix_f841.py::fix_line",
      "group"
    ],
    [
      "autofix_f841.py::fix_line",
      "startswith"
    ],
    [
      "autofix_f841.py::fix_line",
      "escape"
    ],
    [
      "autofix_f841.py::repl",
      "group"
    ],
    [
      "autofix_f841.py::repl",
      "start"
    ],
    [
      "autofix_f841.py::repl",
      "startswith"
    ],
    [
      "autofix_f841.py::process_file",
      "splitlines"
    ],
    [
      "autofix_f841.py::process_file",
      "sorted"
    ],
    [
      "autofix_f841.py::process_file",
      "append"
    ],
    [
      "autofix_f841.py::process_file",
      "items"
    ],
    [
      "autofix_f841.py::process_file",
      "search"
    ],
    [
      "autofix_f841.py::process_file",
      "start"
    ],
    [
      "autofix_f841.py::process_file",
      "with_suffix"
    ],
    [
      "autofix_f841.py::process_file",
      "write_text"
    ],
    [
      "autofix_f841.py::process_file",
      "read_text"
    ],
    [
      "autofix_f841.py::process_file",
      "fix_line"
    ],
    [
      "autofix_f841.py::process_file",
      "exists"
    ],
    [
      "autofix_f841.py::process_file",
      "write_text"
    ],
    [
      "autofix_f841.py::process_file",
      "join"
    ],
    [
      "autofix_f841.py::process_file",
      "setdefault"
    ],
    [
      "autofix_f841.py::process_file",
      "len"
    ],
    [
      "autofix_f841.py::process_file",
      "join"
    ],
    [
      "autofix_f841.py::main",
      "ArgumentParser"
    ],
    [
      "autofix_f841.py::main",
      "add_argument"
    ],
    [
      "autofix_f841.py::main",
      "add_argument"
    ],
    [
      "autofix_f841.py::main",
      "parse_args"
    ],
    [
      "autofix_f841.py::main",
      "ruff_f841"
    ],
    [
      "autofix_f841.py::main",
      "sorted"
    ],
    [
      "autofix_f841.py::main",
      "print"
    ],
    [
      "autofix_f841.py::main",
      "print"
    ],
    [
      "autofix_f841.py::main",
      "append"
    ],
    [
      "autofix_f841.py::main",
      "items"
    ],
    [
      "autofix_f841.py::main",
      "process_file"
    ],
    [
      "autofix_f841.py::main",
      "print"
    ],
    [
      "autofix_f841.py::main",
      "exists"
    ],
    [
      "autofix_f841.py::main",
      "print"
    ],
    [
      "autofix_f841.py::main",
      "setdefault"
    ],
    [
      "api/endpoints/origin.py::check_admin",
      "Header"
    ],
    [
      "api/endpoints/origin.py::check_admin",
      "HTTPException"
    ],
    [
      "api/endpoints/origin.py::check_admin",
      "HTTPException"
    ],
    [
      "api/endpoints/origin.py::_parse_tags",
      "lstrip"
    ],
    [
      "api/endpoints/origin.py::_parse_tags",
      "set"
    ],
    [
      "api/endpoints/origin.py::_parse_tags",
      "split"
    ],
    [
      "api/endpoints/origin.py::_parse_tags",
      "add"
    ],
    [
      "api/endpoints/origin.py::_parse_tags",
      "append"
    ],
    [
      "api/endpoints/origin.py::_parse_tags",
      "strip"
    ],
    [
      "api/endpoints/evo/core.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/core.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/core.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/core.py::ping",
      "get"
    ],
    [
      "api/endpoints/evo/core.py::ping",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/core.py::ping",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/conflicts.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/conflicts.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/conflicts.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/conflicts.py::create_conflict",
      "post"
    ],
    [
      "api/endpoints/evo/conflicts.py::create_conflict",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/conflicts.py::create_conflict",
      "record_conflict"
    ],
    [
      "api/endpoints/evo/conflicts.py::create_conflict",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/conflicts.py::create_conflicts_batch",
      "post"
    ],
    [
      "api/endpoints/evo/conflicts.py::create_conflicts_batch",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/conflicts.py::create_conflicts_batch",
      "intake_conflicts"
    ],
    [
      "api/endpoints/evo/conflicts.py::create_conflicts_batch",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/conflicts.py::list_open_conflicts",
      "get"
    ],
    [
      "api/endpoints/evo/conflicts.py::list_open_conflicts",
      "Query"
    ],
    [
      "api/endpoints/evo/conflicts.py::list_open_conflicts",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/conflicts.py::list_open_conflicts",
      "list_open"
    ],
    [
      "api/endpoints/evo/conflicts.py::list_open_conflicts",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/conflicts.py::get_conflict",
      "get"
    ],
    [
      "api/endpoints/evo/conflicts.py::get_conflict",
      "Path"
    ],
    [
      "api/endpoints/evo/conflicts.py::get_conflict",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/conflicts.py::get_conflict",
      "get"
    ],
    [
      "api/endpoints/evo/conflicts.py::get_conflict",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/hypotheses.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/hypotheses.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/hypotheses.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/hypotheses.py::spawn_hypotheses",
      "post"
    ],
    [
      "api/endpoints/evo/hypotheses.py::spawn_hypotheses",
      "Header"
    ],
    [
      "api/endpoints/evo/hypotheses.py::spawn_hypotheses",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/hypotheses.py::spawn_hypotheses",
      "spawn"
    ],
    [
      "api/endpoints/evo/hypotheses.py::spawn_hypotheses",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/proposals.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/proposals.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/proposals.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/proposals.py::assemble_proposal",
      "post"
    ],
    [
      "api/endpoints/evo/proposals.py::assemble_proposal",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/proposals.py::assemble_proposal",
      "assemble"
    ],
    [
      "api/endpoints/evo/proposals.py::assemble_proposal",
      "validate_completeness"
    ],
    [
      "api/endpoints/evo/proposals.py::assemble_proposal",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/proposals.py::get_proposal",
      "get"
    ],
    [
      "api/endpoints/evo/proposals.py::get_proposal",
      "Path"
    ],
    [
      "api/endpoints/evo/proposals.py::get_proposal",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/proposals.py::get_proposal",
      "get"
    ],
    [
      "api/endpoints/evo/proposals.py::get_proposal",
      "HTTPException"
    ],
    [
      "api/endpoints/evo/proposals.py::get_proposal",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/proposals.py::get_proposal",
      "HTTPException"
    ],
    [
      "api/endpoints/evo/proposals.py::handover_proposal",
      "post"
    ],
    [
      "api/endpoints/evo/proposals.py::handover_proposal",
      "Path"
    ],
    [
      "api/endpoints/evo/proposals.py::handover_proposal",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/proposals.py::handover_proposal",
      "hasattr"
    ],
    [
      "api/endpoints/evo/proposals.py::handover_proposal",
      "handover"
    ],
    [
      "api/endpoints/evo/proposals.py::handover_proposal",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/replay.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/replay.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/replay.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/replay.py::get_replay_manifest",
      "get"
    ],
    [
      "api/endpoints/evo/replay.py::get_replay_manifest",
      "Path"
    ],
    [
      "api/endpoints/evo/replay.py::get_replay_manifest",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/replay.py::get_replay_manifest",
      "manifest"
    ],
    [
      "api/endpoints/evo/replay.py::get_replay_manifest",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/replay.py::verify_replay_capsule",
      "post"
    ],
    [
      "api/endpoints/evo/replay.py::verify_replay_capsule",
      "Path"
    ],
    [
      "api/endpoints/evo/replay.py::verify_replay_capsule",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/replay.py::verify_replay_capsule",
      "verify"
    ],
    [
      "api/endpoints/evo/replay.py::verify_replay_capsule",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/escalate.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/escalate.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/escalate.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "get"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "HTTPException"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "isinstance"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "isinstance"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "get"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "get"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "str"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "str"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "isinstance"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "append"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "str"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "append"
    ],
    [
      "api/endpoints/evo/escalate.py::_coerce_conflict_ids",
      "ConflictNode"
    ],
    [
      "api/endpoints/evo/obviousness.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/obviousness.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/obviousness.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/obviousness.py::score_obviousness",
      "post"
    ],
    [
      "api/endpoints/evo/obviousness.py::score_obviousness",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/obviousness.py::score_obviousness",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/obviousness.py::score_obviousness",
      "score"
    ],
    [
      "api/endpoints/evo/obviousness.py::score_obviousness",
      "ObviousnessReport"
    ],
    [
      "api/endpoints/evo/evidence.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/evidence.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/evidence.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/evidence.py::plan_suite",
      "post"
    ],
    [
      "api/endpoints/evo/evidence.py::plan_suite",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/evidence.py::plan_suite",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/evidence.py::plan_suite",
      "PlanResponse"
    ],
    [
      "api/endpoints/evo/evidence.py::plan_suite",
      "plan_suite"
    ],
    [
      "api/endpoints/evo/evidence.py::request_collection",
      "post"
    ],
    [
      "api/endpoints/evo/evidence.py::request_collection",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/evidence.py::request_collection",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/evidence.py::request_collection",
      "RequestResponse"
    ],
    [
      "api/endpoints/evo/evidence.py::request_collection",
      "request"
    ],
    [
      "api/endpoints/evo/evidence.py::request_collection",
      "TicketID"
    ],
    [
      "api/endpoints/evo/evidence.py::collect",
      "get"
    ],
    [
      "api/endpoints/evo/evidence.py::collect",
      "Path"
    ],
    [
      "api/endpoints/evo/evidence.py::collect",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/evidence.py::collect",
      "collect"
    ],
    [
      "api/endpoints/evo/evidence.py::collect",
      "EvidenceBundle"
    ],
    [
      "api/endpoints/evo/evidence.py::collect",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/evidence.py::attach_replay",
      "post"
    ],
    [
      "api/endpoints/evo/evidence.py::attach_replay",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/evidence.py::attach_replay",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/evidence.py::attach_replay",
      "AttachReplayResponse"
    ],
    [
      "api/endpoints/evo/evidence.py::attach_replay",
      "attach_replay_capsule"
    ],
    [
      "api/endpoints/evo/evidence.py::attach_replay",
      "ReplayCapsuleID"
    ],
    [
      "api/endpoints/evo/scorecards.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/scorecards.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/scorecards.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/scorecards.py::_hash",
      "hexdigest"
    ],
    [
      "api/endpoints/evo/scorecards.py::_hash",
      "blake2s"
    ],
    [
      "api/endpoints/evo/scorecards.py::_hash",
      "encode"
    ],
    [
      "api/endpoints/evo/scorecards.py::_hash",
      "dumps"
    ],
    [
      "api/endpoints/evo/scorecards.py::export_scorecard",
      "post"
    ],
    [
      "api/endpoints/evo/scorecards.py::export_scorecard",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/scorecards.py::export_scorecard",
      "build"
    ],
    [
      "api/endpoints/evo/scorecards.py::export_scorecard",
      "_hash"
    ],
    [
      "api/endpoints/evo/scorecards.py::export_scorecard",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/repair.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/repair.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/repair.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/repair.py::record",
      "post"
    ],
    [
      "api/endpoints/evo/repair.py::record",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/repair.py::record",
      "record"
    ],
    [
      "api/endpoints/evo/repair.py::record",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/repair.py::update",
      "post"
    ],
    [
      "api/endpoints/evo/repair.py::update",
      "Path"
    ],
    [
      "api/endpoints/evo/repair.py::update",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/repair.py::update",
      "update"
    ],
    [
      "api/endpoints/evo/repair.py::update",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/repair.py::get_ticket",
      "get"
    ],
    [
      "api/endpoints/evo/repair.py::get_ticket",
      "Path"
    ],
    [
      "api/endpoints/evo/repair.py::get_ticket",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/repair.py::get_ticket",
      "get"
    ],
    [
      "api/endpoints/evo/repair.py::get_ticket",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/repair.py::list_tickets",
      "get"
    ],
    [
      "api/endpoints/evo/repair.py::list_tickets",
      "Query"
    ],
    [
      "api/endpoints/evo/repair.py::list_tickets",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/repair.py::list_tickets",
      "list"
    ],
    [
      "api/endpoints/evo/repair.py::list_tickets",
      "_stamp_cost"
    ],
    [
      "api/endpoints/evo/cycle.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/cycle.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/cycle.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/evo/diag.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/evo/diag.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/evo/diag.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "getattr"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "callable"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "getattr"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "callable"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "isinstance"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "isinstance"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "str"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "md"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "dct"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "isinstance"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "_to_dict"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "_to_dict"
    ],
    [
      "api/endpoints/unity/deliberate.py::_to_dict",
      "items"
    ],
    [
      "api/endpoints/unity/deliberate.py::_env_timeout_seconds",
      "strip"
    ],
    [
      "api/endpoints/unity/deliberate.py::_env_timeout_seconds",
      "int"
    ],
    [
      "api/endpoints/unity/deliberate.py::_env_timeout_seconds",
      "getenv"
    ],
    [
      "api/endpoints/unity/deliberate.py::_env_timeout_seconds",
      "max"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_word_tokens",
      "findall"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_word_tokens",
      "lower"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_six_word_score",
      "_word_tokens"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_six_word_score",
      "max"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_six_word_score",
      "len"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_six_word_score",
      "abs"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_six_word_score",
      "len"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_punctuation_ok",
      "findall"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_overlap_ratio",
      "set"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_overlap_ratio",
      "set"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_overlap_ratio",
      "_word_tokens"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_overlap_ratio",
      "_word_tokens"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_overlap_ratio",
      "len"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_overlap_ratio",
      "len"
    ],
    [
      "api/endpoints/voxis/generate_phrase.py::_overlap_ratio",
      "join"
    ],
    [
      "api/endpoints/synapse/tasks.py::_j",
      "dumps"
    ],
    [
      "api/endpoints/synapse/tasks.py::_is_no_arms_err",
      "lower"
    ],
    [
      "api/endpoints/synapse/tasks.py::_is_no_arms_err",
      "str"
    ],
    [
      "api/endpoints/synapse/dashboard_api.py::pack",
      "get"
    ],
    [
      "api/endpoints/synapse/dashboard_api.py::pack",
      "sort"
    ],
    [
      "api/endpoints/synapse/dashboard_api.py::pack",
      "isoformat"
    ],
    [
      "api/endpoints/synapse/dashboard_api.py::pack",
      "date"
    ],
    [
      "api/endpoints/synapse/governor.py::_to_dict",
      "hasattr"
    ],
    [
      "api/endpoints/synapse/governor.py::_to_dict",
      "hasattr"
    ],
    [
      "api/endpoints/synapse/governor.py::_to_dict",
      "loads"
    ],
    [
      "api/endpoints/synapse/governor.py::_to_dict",
      "model_dump"
    ],
    [
      "api/endpoints/synapse/governor.py::_to_dict",
      "dict"
    ],
    [
      "api/endpoints/synapse/governor.py::_to_dict",
      "dumps"
    ],
    [
      "api/endpoints/synapse/governor.py::_proposal_id",
      "strip"
    ],
    [
      "api/endpoints/synapse/governor.py::_proposal_id",
      "str"
    ],
    [
      "api/endpoints/synapse/governor.py::_proposal_id",
      "hexdigest"
    ],
    [
      "api/endpoints/synapse/governor.py::_proposal_id",
      "str"
    ],
    [
      "api/endpoints/synapse/governor.py::_proposal_id",
      "get"
    ],
    [
      "api/endpoints/synapse/governor.py::_proposal_id",
      "sha256"
    ],
    [
      "api/endpoints/synapse/governor.py::_proposal_id",
      "get"
    ],
    [
      "api/endpoints/synapse/governor.py::_proposal_id",
      "encode"
    ],
    [
      "api/endpoints/synapse/listener.py::_run",
      "run"
    ],
    [
      "api/endpoints/synapse/listener.py::_run",
      "RuntimeError"
    ],
    [
      "api/endpoints/synapse/listener.py::_run",
      "join"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "str"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "TemporaryDirectory"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "Path"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "copytree"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "write_text"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "_run"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "write_text"
    ],
    [
      "api/endpoints/synapse/listener.py::_apply_patch_to_worktree",
      "str"
    ],
    [
      "api/endpoints/synapse/ui_api.py::to_summary",
      "EpisodeSummary"
    ],
    [
      "api/endpoints/synapse/ui_api.py::to_summary",
      "get"
    ],
    [
      "api/endpoints/synk/switchboard.py::_to_json",
      "dumps"
    ],
    [
      "api/endpoints/synk/switchboard.py::_from_json",
      "isinstance"
    ],
    [
      "api/endpoints/synk/switchboard.py::_from_json",
      "loads"
    ],
    [
      "api/endpoints/synk/switchboard.py::_now_ms",
      "int"
    ],
    [
      "api/endpoints/synk/switchboard.py::_now_ms",
      "timestamp"
    ],
    [
      "api/endpoints/synk/switchboard.py::_now_ms",
      "now"
    ],
    [
      "api/endpoints/synk/switchboard.py::_actor_identity",
      "getenv"
    ],
    [
      "api/endpoints/equor/declare.py::_sha256_hex",
      "hexdigest"
    ],
    [
      "api/endpoints/equor/declare.py::_sha256_hex",
      "sha256"
    ],
    [
      "api/endpoints/equor/declare.py::_sha256_hex",
      "encode"
    ],
    [
      "api/endpoints/llm/call.py::_merge_policy",
      "dict"
    ],
    [
      "api/endpoints/llm/call.py::_merge_policy",
      "int"
    ],
    [
      "api/endpoints/llm/call.py::_merge_policy",
      "float"
    ],
    [
      "api/endpoints/llm/call.py::_safe_int",
      "int"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "hasattr"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "_safe_int"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "_safe_int"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "_safe_int"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "dict"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "isinstance"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "get"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "get"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "get"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "getattr"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "getattr"
    ],
    [
      "api/endpoints/llm/call.py::_extract_usage_tokens",
      "getattr"
    ],
    [
      "api/endpoints/axon/core_routes.py::_remaining_ms",
      "float"
    ],
    [
      "api/endpoints/axon/core_routes.py::_remaining_ms",
      "time"
    ],
    [
      "api/endpoints/axon/core_routes.py::_remaining_ms",
      "time"
    ],
    [
      "api/endpoints/axon/probecraft.py::_driver_name_to_class_name",
      "replace"
    ],
    [
      "api/endpoints/axon/probecraft.py::_driver_name_to_class_name",
      "join"
    ],
    [
      "api/endpoints/axon/probecraft.py::_driver_name_to_class_name",
      "replace"
    ],
    [
      "api/endpoints/axon/probecraft.py::_driver_name_to_class_name",
      "capitalize"
    ],
    [
      "api/endpoints/axon/probecraft.py::_driver_name_to_class_name",
      "split"
    ],
    [
      "api/endpoints/axon/probecraft_intake.py::_derive_driver_name",
      "replace"
    ],
    [
      "api/endpoints/axon/probecraft_intake.py::_derive_driver_name",
      "replace"
    ],
    [
      "api/endpoints/qora/manifest.py::build",
      "post"
    ],
    [
      "api/endpoints/qora/manifest.py::build",
      "Query"
    ],
    [
      "api/endpoints/qora/manifest.py::build",
      "Query"
    ],
    [
      "api/endpoints/qora/manifest.py::build",
      "build_manifest"
    ],
    [
      "api/endpoints/qora/manifest.py::build",
      "model_dump"
    ],
    [
      "api/endpoints/qora/manifest.py::latest",
      "get"
    ],
    [
      "api/endpoints/qora/manifest.py::latest",
      "Query"
    ],
    [
      "api/endpoints/qora/manifest.py::latest",
      "Query"
    ],
    [
      "api/endpoints/qora/manifest.py::latest",
      "build_manifest"
    ],
    [
      "api/endpoints/qora/manifest.py::latest",
      "model_dump"
    ],
    [
      "api/endpoints/qora/gcb.py::build",
      "post"
    ],
    [
      "api/endpoints/qora/gcb.py::build",
      "Query"
    ],
    [
      "api/endpoints/qora/gcb.py::build",
      "Query"
    ],
    [
      "api/endpoints/qora/gcb.py::build",
      "Query"
    ],
    [
      "api/endpoints/qora/gcb.py::build",
      "Body"
    ],
    [
      "api/endpoints/qora/gcb.py::build",
      "build_manifest"
    ],
    [
      "api/endpoints/qora/gcb.py::build",
      "build_gcb"
    ],
    [
      "api/endpoints/qora/gcb.py::build",
      "model_dump"
    ],
    [
      "api/endpoints/qora/gcb.py::dispatch",
      "post"
    ],
    [
      "api/endpoints/qora/gcb.py::dispatch",
      "Query"
    ],
    [
      "api/endpoints/qora/gcb.py::dispatch",
      "Query"
    ],
    [
      "api/endpoints/qora/gcb.py::dispatch",
      "Query"
    ],
    [
      "api/endpoints/qora/gcb.py::dispatch",
      "Body"
    ],
    [
      "api/endpoints/qora/gcb.py::dispatch",
      "build_manifest"
    ],
    [
      "api/endpoints/qora/gcb.py::dispatch",
      "build_gcb"
    ],
    [
      "api/endpoints/qora/gcb.py::dispatch",
      "dispatch_gcb_to_simula"
    ],
    [
      "api/endpoints/qora/gcb.py::dispatch",
      "model_dump_json"
    ],
    [
      "api/endpoints/qora/reindex.py::_git_changed_files",
      "check_output"
    ],
    [
      "api/endpoints/qora/reindex.py::_git_changed_files",
      "strip"
    ],
    [
      "api/endpoints/qora/reindex.py::_git_changed_files",
      "splitlines"
    ],
    [
      "api/endpoints/qora/reindex.py::_git_changed_files",
      "strip"
    ],
    [
      "api/endpoints/qora/reindex.py::_git_changed_files",
      "decode"
    ],
    [
      "api/endpoints/qora/annotate.py::_changed_files",
      "sorted"
    ],
    [
      "api/endpoints/qora/annotate.py::_changed_files",
      "set"
    ],
    [
      "api/endpoints/qora/annotate.py::_changed_files",
      "findall"
    ],
    [
      "api/endpoints/qora/annotate.py::_mk_title_line",
      "len"
    ],
    [
      "api/endpoints/qora/annotate.py::_mk_bullets",
      "join"
    ],
    [
      "api/endpoints/qora/impact.py::_risk_level",
      "min"
    ],
    [
      "api/endpoints/qora/wm_search.py::_read_text",
      "read_text"
    ],
    [
      "api/endpoints/qora/wm_search.py::_read_text",
      "Path"
    ],
    [
      "api/endpoints/qora/wm_search.py::_score",
      "len"
    ],
    [
      "api/endpoints/qora/wm_search.py::_score",
      "findall"
    ],
    [
      "api/endpoints/qora/wm_search.py::_score",
      "search"
    ],
    [
      "api/endpoints/qora/wm_search.py::_score",
      "search"
    ],
    [
      "api/endpoints/qora/wm_search.py::_score",
      "escape"
    ],
    [
      "api/endpoints/qora/wm_search.py::_score",
      "escape"
    ],
    [
      "api/endpoints/qora/wm_search.py::_score",
      "escape"
    ],
    [
      "api/endpoints/qora/wm_search.py::_score",
      "Path"
    ],
    [
      "api/endpoints/qora/wm_search.py::_first_line",
      "search"
    ],
    [
      "api/endpoints/qora/wm_search.py::_first_line",
      "escape"
    ],
    [
      "api/endpoints/qora/wm_search.py::_first_line",
      "count"
    ],
    [
      "api/endpoints/qora/wm_search.py::_first_line",
      "start"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "splitlines"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "search"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "min"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "join"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "escape"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "join"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "count"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "max"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "len"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "join"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "start"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "min"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "min"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "len"
    ],
    [
      "api/endpoints/qora/wm_search.py::_snippet",
      "len"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "append"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "append"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "append"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "append"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "RoleStep"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "RoleStep"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "append"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "append"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "RoleStep"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "RoleStep"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "RoleStep"
    ],
    [
      "api/endpoints/qora/plan.py::_mk_role_steps_from_impact",
      "RoleStep"
    ],
    [
      "api/endpoints/qora/pr_synth.py::_changed_files",
      "sorted"
    ],
    [
      "api/endpoints/qora/pr_synth.py::_changed_files",
      "set"
    ],
    [
      "api/endpoints/qora/pr_synth.py::_changed_files",
      "findall"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "visit"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "parse"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "append"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "generic_visit"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "append"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "generic_visit"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "append"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "generic_visit"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "V"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "getattr"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "getattr"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::_extract_symbols_py",
      "getattr"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::V::visit_FunctionDef",
      "append"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::V::visit_FunctionDef",
      "generic_visit"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::V::visit_FunctionDef",
      "getattr"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::V::visit_AsyncFunctionDef",
      "append"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::V::visit_AsyncFunctionDef",
      "generic_visit"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::V::visit_AsyncFunctionDef",
      "getattr"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::V::visit_ClassDef",
      "append"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::V::visit_ClassDef",
      "generic_visit"
    ],
    [
      "api/endpoints/qora/wm_symbols.py::V::visit_ClassDef",
      "getattr"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "splitlines"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "startswith"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "append"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "startswith"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "append"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "search"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "int"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "startswith"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "append"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "group"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "startswith"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "startswith"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "startswith"
    ],
    [
      "api/endpoints/qora/mutants.py::_changed_blocks",
      "startswith"
    ],
    [
      "api/endpoints/qora/mutants.py::_mutate_line",
      "search"
    ],
    [
      "api/endpoints/qora/mutants.py::_mutate_line",
      "sub"
    ],
    [
      "api/endpoints/qora/mutants.py::_mutate_line",
      "append"
    ],
    [
      "api/endpoints/qora/xref.py::_iter_files",
      "walk"
    ],
    [
      "api/endpoints/qora/xref.py::_iter_files",
      "any"
    ],
    [
      "api/endpoints/qora/xref.py::_iter_files",
      "append"
    ],
    [
      "api/endpoints/qora/xref.py::_iter_files",
      "endswith"
    ],
    [
      "api/endpoints/qora/xref.py::_iter_files",
      "Path"
    ],
    [
      "api/endpoints/qora/xref.py::_identifier_pat",
      "compile"
    ],
    [
      "api/endpoints/qora/xref.py::_identifier_pat",
      "escape"
    ],
    [
      "api/endpoints/qora/codemod.py::_unified_diff",
      "join"
    ],
    [
      "api/endpoints/qora/codemod.py::_unified_diff",
      "unified_diff"
    ],
    [
      "api/endpoints/qora/codemod.py::_unified_diff",
      "splitlines"
    ],
    [
      "api/endpoints/qora/codemod.py::_unified_diff",
      "splitlines"
    ],
    [
      "api/endpoints/qora/codemod.py::_regex_rename",
      "compile"
    ],
    [
      "api/endpoints/qora/codemod.py::_regex_rename",
      "sub"
    ],
    [
      "api/endpoints/qora/codemod.py::_regex_rename",
      "escape"
    ],
    [
      "api/endpoints/qora/codemod.py::Renamer::leave_Name",
      "with_changes"
    ],
    [
      "api/endpoints/qora/safety_scans.py::_have",
      "which"
    ],
    [
      "api/endpoints/qora/safety_scans.py::_run",
      "run"
    ],
    [
      "api/endpoints/qora/pr_macro.py::_run",
      "run"
    ],
    [
      "api/endpoints/qora/pr_macro.py::_git",
      "_run"
    ],
    [
      "api/endpoints/qora/proposal_verify.py::_have",
      "which"
    ],
    [
      "api/endpoints/qora/proposal_verify.py::_run",
      "run"
    ],
    [
      "api/endpoints/qora/workspace_snapshot.py::_paths_from_diff",
      "sorted"
    ],
    [
      "api/endpoints/qora/workspace_snapshot.py::_paths_from_diff",
      "set"
    ],
    [
      "api/endpoints/qora/workspace_snapshot.py::_paths_from_diff",
      "findall"
    ],
    [
      "api/endpoints/qora/dossier.py::_paths_from_diff",
      "sorted"
    ],
    [
      "api/endpoints/qora/dossier.py::_paths_from_diff",
      "set"
    ],
    [
      "api/endpoints/qora/dossier.py::_paths_from_diff",
      "findall"
    ],
    [
      "api/endpoints/qora/dossier.py::_read_safe",
      "resolve"
    ],
    [
      "api/endpoints/qora/dossier.py::_read_safe",
      "read_bytes"
    ],
    [
      "api/endpoints/qora/dossier.py::_read_safe",
      "decode"
    ],
    [
      "api/endpoints/qora/dossier.py::_read_safe",
      "startswith"
    ],
    [
      "api/endpoints/qora/dossier.py::_read_safe",
      "exists"
    ],
    [
      "api/endpoints/qora/dossier.py::_read_safe",
      "is_file"
    ],
    [
      "api/endpoints/qora/dossier.py::_read_safe",
      "str"
    ],
    [
      "api/endpoints/qora/dossier.py::_read_safe",
      "str"
    ],
    [
      "api/endpoints/qora/dossier.py::_run_git",
      "run"
    ],
    [
      "api/endpoints/qora/dossier.py::_codeowners_lookup",
      "exists"
    ],
    [
      "api/endpoints/qora/dossier.py::_codeowners_lookup",
      "splitlines"
    ],
    [
      "api/endpoints/qora/dossier.py::_codeowners_lookup",
      "strip"
    ],
    [
      "api/endpoints/qora/dossier.py::_codeowners_lookup",
      "split"
    ],
    [
      "api/endpoints/qora/dossier.py::_codeowners_lookup",
      "read_text"
    ],
    [
      "api/endpoints/qora/dossier.py::_codeowners_lookup",
      "startswith"
    ],
    [
      "api/endpoints/qora/dossier.py::_codeowners_lookup",
      "startswith"
    ],
    [
      "api/endpoints/qora/dossier.py::_codeowners_lookup",
      "extend"
    ],
    [
      "api/endpoints/qora/dossier.py::_codeowners_lookup",
      "strip"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "compile"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "walk"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "str"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "enumerate"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "escape"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "endswith"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "relative_to"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "read_text"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "splitlines"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "search"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "append"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "Path"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "len"
    ],
    [
      "api/endpoints/qora/dossier.py::_usages_grep",
      "strip"
    ],
    [
      "api/endpoints/qora/dossier.py::_git_blame_summary",
      "_run_git"
    ],
    [
      "api/endpoints/qora/dossier.py::_git_blame_summary",
      "splitlines"
    ],
    [
      "api/endpoints/qora/dossier.py::_git_blame_summary",
      "startswith"
    ],
    [
      "api/endpoints/qora/dossier.py::_git_blame_summary",
      "sorted"
    ],
    [
      "api/endpoints/qora/dossier.py::_git_blame_summary",
      "strip"
    ],
    [
      "api/endpoints/qora/dossier.py::_git_blame_summary",
      "items"
    ],
    [
      "api/endpoints/qora/dossier.py::_git_blame_summary",
      "strip"
    ],
    [
      "api/endpoints/qora/dossier.py::_git_blame_summary",
      "strip"
    ],
    [
      "api/endpoints/qora/dossier.py::_git_blame_summary",
      "get"
    ],
    [
      "api/endpoints/qora/dossier.py::_git_blame_summary",
      "split"
    ],
    [
      "api/endpoints/qora/pr_bundle.py::_write",
      "mkdir"
    ],
    [
      "api/endpoints/qora/pr_bundle.py::_write",
      "write_text"
    ],
    [
      "api/endpoints/qora/pr_bundle.py::_write",
      "str"
    ],
    [
      "api/endpoints/qora/pr_bundle.py::_md_escape",
      "replace"
    ],
    [
      "api/endpoints/qora/secrets_scan.py::_have",
      "which"
    ],
    [
      "api/endpoints/qora/secrets_scan.py::_run",
      "run"
    ],
    [
      "api/endpoints/qora/mutation_test.py::_have",
      "which"
    ],
    [
      "api/endpoints/qora/mutation_test.py::_run",
      "run"
    ],
    [
      "api/endpoints/qora/rg_search.py::_have",
      "which"
    ],
    [
      "api/endpoints/qora/catalog_admin.py::_load",
      "exists"
    ],
    [
      "api/endpoints/qora/catalog_admin.py::_load",
      "loads"
    ],
    [
      "api/endpoints/qora/catalog_admin.py::_load",
      "read_text"
    ],
    [
      "api/endpoints/qora/catalog_admin.py::_save",
      "mkdir"
    ],
    [
      "api/endpoints/qora/catalog_admin.py::_save",
      "write_text"
    ],
    [
      "api/endpoints/qora/catalog_admin.py::_save",
      "dumps"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_run",
      "run"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_run",
      "str"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_worktree",
      "Path"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_worktree",
      "mkdtemp"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_worktree",
      "_run"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_worktree",
      "_run"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_worktree",
      "rmtree"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_worktree",
      "rmtree"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_worktree",
      "RuntimeError"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_worktree",
      "str"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_worktree",
      "str"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_static_fallback",
      "which"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_static_fallback",
      "which"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_static_fallback",
      "_run"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_static_fallback",
      "_run"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_static_fallback",
      "all"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_static_fallback",
      "get"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_static_fallback",
      "values"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_tests_fallback",
      "_run"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_tests_fallback",
      "which"
    ],
    [
      "api/endpoints/qora/shadow_run.py::_tests_fallback",
      "which"
    ],
    [
      "api/endpoints/qora/rollback.py::_run",
      "run"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_run",
      "run"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_run",
      "join"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_run",
      "str"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_run",
      "str"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_git",
      "_run"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_slug_from_remote",
      "search"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_slug_from_remote",
      "strip"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_slug_from_remote",
      "group"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_get_remote_slug",
      "_git"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_get_remote_slug",
      "_slug_from_remote"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_get_remote_slug",
      "strip"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "Request"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "getenv"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "getenv"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "encode"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "urlopen"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "decode"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "decode"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "repr"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "dumps"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "read"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "loads"
    ],
    [
      "api/endpoints/qora/auto_pipeline.py::_gh_api",
      "read"
    ],
    [
      "api/endpoints/qora/git_ops.py::_run",
      "run"
    ],
    [
      "api/endpoints/qora/git_ops.py::_run",
      "join"
    ],
    [
      "api/endpoints/qora/git_ops.py::_git",
      "_run"
    ],
    [
      "api/endpoints/qora/git_ops.py::_run",
      "run"
    ],
    [
      "api/endpoints/qora/git_ops.py::_git",
      "_run"
    ],
    [
      "api/endpoints/qora/git_ops.py::_ensure_repo",
      "isdir"
    ],
    [
      "api/endpoints/qora/git_ops.py::_ensure_repo",
      "HTTPException"
    ],
    [
      "api/endpoints/qora/git_ops.py::_ensure_repo",
      "join"
    ],
    [
      "api/endpoints/atune/route_event.py::_best_actual_utility",
      "float"
    ],
    [
      "api/endpoints/atune/route_event.py::_best_actual_utility",
      "get"
    ],
    [
      "api/endpoints/atune/route_event.py::_best_actual_utility",
      "get"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "int"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "get_active_kid"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "get_hmac_key_by_kid"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "hexdigest"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "time"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "RuntimeError"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "encode"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "encode"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "new"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "model_dump"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "str"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "sorted"
    ],
    [
      "api/endpoints/atune/route_event.py::_sign_token",
      "model_dump"
    ],
    [
      "api/endpoints/atune/route_event.py::_alloc_budget_ms",
      "max"
    ],
    [
      "api/endpoints/atune/route_event.py::_alloc_budget_ms",
      "max"
    ],
    [
      "api/endpoints/atune/route_event.py::_alloc_budget_ms",
      "int"
    ],
    [
      "api/endpoints/atune/route_event.py::_alloc_budget_ms",
      "min"
    ],
    [
      "api/endpoints/atune/trace.py::_read_jsonl",
      "exists"
    ],
    [
      "api/endpoints/atune/trace.py::_read_jsonl",
      "open"
    ],
    [
      "api/endpoints/atune/trace.py::_read_jsonl",
      "strip"
    ],
    [
      "api/endpoints/atune/trace.py::_read_jsonl",
      "append"
    ],
    [
      "api/endpoints/atune/trace.py::_read_jsonl",
      "loads"
    ],
    [
      "api/endpoints/atune/trace.py::_latest_match",
      "glob"
    ],
    [
      "api/endpoints/atune/trace.py::_latest_match",
      "exists"
    ],
    [
      "api/endpoints/atune/trace.py::_latest_match",
      "_read_jsonl"
    ],
    [
      "api/endpoints/atune/trace.py::_latest_match",
      "str"
    ],
    [
      "api/endpoints/atune/trace.py::_latest_match",
      "append"
    ],
    [
      "api/endpoints/atune/trace.py::_latest_match",
      "get"
    ],
    [
      "api/endpoints/atune/meta_status.py::_env_flag",
      "getenv"
    ],
    [
      "api/endpoints/nova/core.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/nova/core.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/nova/core.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/nova/core.py::_hash",
      "hexdigest"
    ],
    [
      "api/endpoints/nova/core.py::_hash",
      "blake2s"
    ],
    [
      "api/endpoints/nova/core.py::_hash",
      "encode"
    ],
    [
      "api/endpoints/nova/core.py::_hash",
      "dumps"
    ],
    [
      "api/endpoints/nova/handoff.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/nova/handoff.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/nova/handoff.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/nova/policy.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/nova/policy.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/nova/policy.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/nova/winner.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/nova/winner.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/nova/winner.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/endpoints/nova/hyper.py::_stamp_cost",
      "str"
    ],
    [
      "api/endpoints/nova/hyper.py::_stamp_cost",
      "int"
    ],
    [
      "api/endpoints/nova/hyper.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/middleware/telemetry.py::_stamp_cost",
      "str"
    ],
    [
      "api/middleware/telemetry.py::_stamp_cost",
      "int"
    ],
    [
      "api/middleware/telemetry.py::_stamp_cost",
      "perf_counter"
    ],
    [
      "api/middleware/telemetry.py::install",
      "middleware"
    ],
    [
      "api/middleware/telemetry.py::install",
      "perf_counter"
    ],
    [
      "api/middleware/telemetry.py::install",
      "get"
    ],
    [
      "api/middleware/telemetry.py::install",
      "get"
    ],
    [
      "api/middleware/telemetry.py::install",
      "_stamp_cost"
    ],
    [
      "api/middleware/telemetry.py::install",
      "get"
    ],
    [
      "api/middleware/telemetry.py::install",
      "call_next"
    ],
    [
      "api/middleware/telemetry.py::install",
      "uuid4"
    ],
    [
      "core/llm/embeddings_gemini.py::_is_debug",
      "strip"
    ],
    [
      "core/llm/embeddings_gemini.py::_is_debug",
      "int"
    ],
    [
      "core/llm/embeddings_gemini.py::_is_debug",
      "getenv"
    ],
    [
      "core/llm/embeddings_gemini.py::_dbg_print",
      "_is_debug"
    ],
    [
      "core/llm/embeddings_gemini.py::_dbg_print",
      "print"
    ],
    [
      "core/llm/embeddings_gemini.py::_truncate",
      "len"
    ],
    [
      "core/llm/embeddings_gemini.py::_truncate",
      "len"
    ],
    [
      "core/llm/embeddings_gemini.py::_validate_dims",
      "int"
    ],
    [
      "core/llm/embeddings_gemini.py::_validate_dims",
      "ValueError"
    ],
    [
      "core/llm/embeddings_gemini.py::_validate_dims",
      "ValueError"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "isinstance"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "isinstance"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "TypeError"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "isinstance"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "tolist"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "float"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "astype"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "float"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "TypeError"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "type"
    ],
    [
      "core/llm/embeddings_gemini.py::_ensure_list",
      "loads"
    ],
    [
      "core/llm/embeddings_gemini.py::_validate_text",
      "strip"
    ],
    [
      "core/llm/embeddings_gemini.py::_validate_text",
      "ValueError"
    ],
    [
      "core/llm/embeddings_gemini.py::_validate_text",
      "isinstance"
    ],
    [
      "core/llm/embeddings_gemini.py::_validate_text",
      "strip"
    ],
    [
      "core/llm/embeddings_gemini.py::_embed_sync_call",
      "_dbg_print"
    ],
    [
      "core/llm/embeddings_gemini.py::_embed_sync_call",
      "embed_content"
    ],
    [
      "core/llm/embeddings_gemini.py::_embed_sync_call",
      "EmbedContentConfig"
    ],
    [
      "core/llm/embeddings_gemini.py::_embed_sync_call",
      "_truncate"
    ],
    [
      "core/llm/embeddings_gemini.py::_sync",
      "_embed_sync_call"
    ],
    [
      "core/llm/embeddings_gemini.py::_sync",
      "_embed_sync_call"
    ],
    [
      "core/llm/gemini_cache.py::_require",
      "RuntimeError"
    ],
    [
      "core/llm/gemini_cache.py::_extract_system_instruction",
      "get"
    ],
    [
      "core/llm/gemini_cache.py::_extract_system_instruction",
      "get"
    ],
    [
      "core/llm/gemini_cache.py::_extract_system_instruction",
      "isinstance"
    ],
    [
      "core/llm/gemini_cache.py::_call",
      "create"
    ],
    [
      "core/llm/gemini_cache.py::_call",
      "generate_content"
    ],
    [
      "core/llm/env_bootstrap.py::_load",
      "getenv"
    ],
    [
      "core/llm/env_bootstrap.py::_load",
      "find_dotenv"
    ],
    [
      "core/llm/env_bootstrap.py::_load",
      "exists"
    ],
    [
      "core/llm/env_bootstrap.py::_load",
      "load_dotenv"
    ],
    [
      "core/llm/env_bootstrap.py::_load",
      "load_dotenv"
    ],
    [
      "core/llm/env_bootstrap.py::_load",
      "exists"
    ],
    [
      "core/llm/env_bootstrap.py::_load",
      "load_dotenv"
    ],
    [
      "core/llm/env_bootstrap.py::_load",
      "Path"
    ],
    [
      "core/llm/env_bootstrap.py::_load",
      "Path"
    ],
    [
      "core/llm/formatters.py::_normalize_provider",
      "strip"
    ],
    [
      "core/llm/formatters.py::_normalize_provider",
      "cast"
    ],
    [
      "core/llm/formatters.py::_normalize_provider",
      "cast"
    ],
    [
      "core/llm/formatters.py::_normalize_provider",
      "lower"
    ],
    [
      "core/llm/formatters.py::_sanitize_messages",
      "get"
    ],
    [
      "core/llm/formatters.py::_sanitize_messages",
      "get"
    ],
    [
      "core/llm/formatters.py::_sanitize_messages",
      "isinstance"
    ],
    [
      "core/llm/formatters.py::_sanitize_messages",
      "isinstance"
    ],
    [
      "core/llm/formatters.py::_sanitize_messages",
      "strip"
    ],
    [
      "core/llm/formatters.py::_sanitize_messages",
      "append"
    ],
    [
      "core/llm/formatters.py::_sanitize_messages",
      "cast"
    ],
    [
      "core/llm/formatters.py::_sanitize_messages",
      "cast"
    ],
    [
      "core/llm/formatters.py::_split_system",
      "append"
    ],
    [
      "core/llm/formatters.py::_to_openai_tools",
      "append"
    ],
    [
      "core/llm/formatters.py::_to_openai_tools",
      "get"
    ],
    [
      "core/llm/formatters.py::_to_openai_tools",
      "get"
    ],
    [
      "core/llm/formatters.py::_to_anthropic_tools",
      "append"
    ],
    [
      "core/llm/formatters.py::_to_anthropic_tools",
      "get"
    ],
    [
      "core/llm/formatters.py::_to_anthropic_tools",
      "get"
    ],
    [
      "core/llm/formatters.py::_to_gemini_tools",
      "append"
    ],
    [
      "core/llm/formatters.py::_to_gemini_tools",
      "get"
    ],
    [
      "core/llm/formatters.py::_to_gemini_tools",
      "get"
    ],
    [
      "core/llm/formatters.py::_map_tool_choice",
      "lower"
    ],
    [
      "core/llm/formatters.py::_json_mode_for_provider",
      "get"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_normalize_provider"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_sanitize_messages"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_split_system"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "strip"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "warn"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "extend"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "extend"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_to_anthropic_tools"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "int"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "float"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_json_mode_for_provider"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_to_openai_tools"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "int"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "float"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_json_mode_for_provider"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_to_gemini_contents"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_to_gemini_tools"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "update"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "int"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "float"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_json_mode_for_provider"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_map_tool_choice"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_map_tool_choice"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "append"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "_map_tool_choice"
    ],
    [
      "core/llm/formatters.py::format_messages_for_provider",
      "get"
    ],
    [
      "core/llm/formatters.py::_to_gemini_contents",
      "append"
    ],
    [
      "core/llm/call_llm.py::_try_parse_json",
      "strip"
    ],
    [
      "core/llm/call_llm.py::_try_parse_json",
      "search"
    ],
    [
      "core/llm/call_llm.py::_try_parse_json",
      "group"
    ],
    [
      "core/llm/call_llm.py::_try_parse_json",
      "loads"
    ],
    [
      "core/llm/call_llm.py::_try_parse_json",
      "find"
    ],
    [
      "core/llm/call_llm.py::_try_parse_json",
      "rfind"
    ],
    [
      "core/llm/call_llm.py::_try_parse_json",
      "loads"
    ],
    [
      "core/llm/call_llm.py::_get_provider_from_model_name",
      "lower"
    ],
    [
      "core/llm/call_llm.py::_get_provider_from_model_name",
      "warn"
    ],
    [
      "core/llm/utils.py::filter_kwargs",
      "set"
    ],
    [
      "core/llm/utils.py::filter_kwargs",
      "items"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "ValueError"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "strip"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "isinstance"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "ValueError"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "get"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "strip"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "append"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "ValueError"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "isinstance"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "str"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "ValueError"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "isinstance"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "lower"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "isinstance"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "str"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "replace"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "strip"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "str"
    ],
    [
      "core/llm/utils.py::normalize_messages",
      "get"
    ],
    [
      "core/llm/utils.py::normalise_messages",
      "normalize_messages"
    ],
    [
      "core/llm/utils.py::combine_with_system",
      "normalise_messages"
    ],
    [
      "core/llm/utils.py::combine_with_system",
      "strip"
    ],
    [
      "core/llm/utils.py::combine_with_system",
      "get"
    ],
    [
      "core/llm/utils.py::combine_with_system",
      "strip"
    ],
    [
      "core/llm/utils.py::coerce_str",
      "str"
    ],
    [
      "core/llm/utils.py::coerce_str",
      "repr"
    ],
    [
      "core/llm/utils.py::redact_secrets",
      "sub"
    ],
    [
      "core/llm/utils.py::redact_secrets",
      "group"
    ],
    [
      "core/llm/utils.py::strip_code_fences",
      "splitlines"
    ],
    [
      "core/llm/utils.py::strip_code_fences",
      "match"
    ],
    [
      "core/llm/utils.py::strip_code_fences",
      "strip"
    ],
    [
      "core/llm/utils.py::strip_code_fences",
      "strip"
    ],
    [
      "core/llm/utils.py::strip_code_fences",
      "len"
    ],
    [
      "core/llm/utils.py::strip_code_fences",
      "strip"
    ],
    [
      "core/llm/utils.py::strip_code_fences",
      "join"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "search"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "group"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "group"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "group"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "strip"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "strip"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "strip"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "strip"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "group"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "group"
    ],
    [
      "core/llm/utils.py::extract_json_block",
      "group"
    ],
    [
      "core/llm/utils.py::detect_json",
      "extract_json_block"
    ],
    [
      "core/llm/utils.py::detect_json",
      "strip"
    ],
    [
      "core/llm/utils.py::detect_json",
      "strip_code_fences"
    ],
    [
      "core/llm/utils.py::detect_json",
      "startswith"
    ],
    [
      "core/llm/utils.py::detect_json",
      "startswith"
    ],
    [
      "core/llm/utils.py::detect_json",
      "loads"
    ],
    [
      "core/llm/utils.py::safe_truncate",
      "rstrip"
    ],
    [
      "core/llm/utils.py::safe_truncate",
      "len"
    ],
    [
      "core/llm/utils.py::safe_truncate",
      "max"
    ],
    [
      "core/llm/utils.py::estimate_tokens",
      "max"
    ],
    [
      "core/llm/utils.py::estimate_tokens",
      "max"
    ],
    [
      "core/llm/utils.py::estimate_tokens",
      "max"
    ],
    [
      "core/llm/utils.py::estimate_tokens",
      "int"
    ],
    [
      "core/llm/utils.py::estimate_tokens",
      "len"
    ],
    [
      "core/llm/utils.py::estimate_tokens",
      "int"
    ],
    [
      "core/llm/utils.py::estimate_tokens",
      "findall"
    ],
    [
      "core/llm/utils.py::estimate_tokens",
      "len"
    ],
    [
      "core/llm/utils.py::toxicity_hint",
      "findall"
    ],
    [
      "core/llm/utils.py::toxicity_hint",
      "lower"
    ],
    [
      "core/llm/utils.py::toxicity_hint",
      "set"
    ],
    [
      "core/llm/utils.py::length_fit_score",
      "len"
    ],
    [
      "core/llm/utils.py::length_fit_score",
      "strip"
    ],
    [
      "core/llm/utils.py::length_fit_score",
      "int"
    ],
    [
      "core/llm/utils.py::length_fit_score",
      "int"
    ],
    [
      "core/llm/utils.py::length_fit_score",
      "clamp"
    ],
    [
      "core/llm/utils.py::length_fit_score",
      "clamp"
    ],
    [
      "core/llm/utils.py::length_fit_score",
      "max"
    ],
    [
      "core/llm/utils.py::length_fit_score",
      "max"
    ],
    [
      "core/llm/utils.py::baseline_metrics",
      "clamp"
    ],
    [
      "core/llm/utils.py::baseline_metrics",
      "clamp"
    ],
    [
      "core/llm/utils.py::baseline_metrics",
      "toxicity_hint"
    ],
    [
      "core/llm/utils.py::baseline_metrics",
      "length_fit_score"
    ],
    [
      "core/llm/utils.py::baseline_metrics",
      "list"
    ],
    [
      "core/llm/utils.py::first_system_message",
      "get"
    ],
    [
      "core/llm/utils.py::first_system_message",
      "get"
    ],
    [
      "core/llm/utils.py::first_system_message",
      "isinstance"
    ],
    [
      "core/llm/utils.py::split_system_and_chat",
      "normalise_messages"
    ],
    [
      "core/llm/utils.py::split_system_and_chat",
      "append"
    ],
    [
      "core/llm/utils.py::dedupe_system_message",
      "split_system_and_chat"
    ],
    [
      "core/llm/utils.py::dedupe_system_message",
      "strip"
    ],
    [
      "core/llm/utils.py::messages_checksum",
      "join"
    ],
    [
      "core/llm/utils.py::messages_checksum",
      "hexdigest"
    ],
    [
      "core/llm/utils.py::messages_checksum",
      "blake2b"
    ],
    [
      "core/llm/utils.py::messages_checksum",
      "encode"
    ],
    [
      "core/llm/utils.py::messages_checksum",
      "get"
    ],
    [
      "core/llm/utils.py::messages_checksum",
      "dumps"
    ],
    [
      "core/llm/utils.py::messages_checksum",
      "get"
    ],
    [
      "core/llm/bus.py::EventBus::__new__",
      "__new__"
    ],
    [
      "core/llm/bus.py::EventBus::__new__",
      "defaultdict"
    ],
    [
      "core/llm/bus.py::EventBus::__new__",
      "Lock"
    ],
    [
      "core/llm/bus.py::EventBus::__new__",
      "super"
    ],
    [
      "core/llm/bus.py::EventBus::subscribe",
      "append"
    ],
    [
      "core/llm/bus.py::EventBus::subscribe",
      "remove"
    ],
    [
      "core/llm/bus.py::EventBus::_unsub",
      "remove"
    ],
    [
      "core/llm/bus.py::EventBus::unsubscribe",
      "remove"
    ],
    [
      "core/llm/bus.py::EventBus::_cb",
      "done"
    ],
    [
      "core/llm/bus.py::EventBus::_cb",
      "set_result"
    ],
    [
      "core/llm/bus.py::EventBus::_cb",
      "remove"
    ],
    [
      "core/llm/metrics.py::_coerce_float",
      "float"
    ],
    [
      "core/llm/metrics.py::_tokens_from_openai",
      "int"
    ],
    [
      "core/llm/metrics.py::_tokens_from_openai",
      "int"
    ],
    [
      "core/llm/metrics.py::_tokens_from_openai",
      "int"
    ],
    [
      "core/llm/metrics.py::_tokens_from_openai",
      "get"
    ],
    [
      "core/llm/metrics.py::_tokens_from_openai",
      "get"
    ],
    [
      "core/llm/metrics.py::_tokens_from_openai",
      "get"
    ],
    [
      "core/llm/metrics.py::_tokens_from_openai",
      "get"
    ],
    [
      "core/llm/metrics.py::_tokens_from_openai",
      "get"
    ],
    [
      "core/llm/metrics.py::_tokens_from_anthropic",
      "int"
    ],
    [
      "core/llm/metrics.py::_tokens_from_anthropic",
      "int"
    ],
    [
      "core/llm/metrics.py::_tokens_from_anthropic",
      "get"
    ],
    [
      "core/llm/metrics.py::_tokens_from_anthropic",
      "get"
    ],
    [
      "core/llm/metrics.py::extract_usage_tokens",
      "any"
    ],
    [
      "core/llm/metrics.py::extract_usage_tokens",
      "_tokens_from_openai"
    ],
    [
      "core/llm/metrics.py::extract_usage_tokens",
      "get"
    ],
    [
      "core/llm/metrics.py::extract_usage_tokens",
      "isinstance"
    ],
    [
      "core/llm/metrics.py::extract_usage_tokens",
      "_tokens_from_anthropic"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "int"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "extract_usage_tokens"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "str"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "str"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "isinstance"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/llm/metrics.py::build_telemetry",
      "get"
    ],
    [
      "core/utils/paths.py::rel",
      "joinpath"
    ],
    [
      "core/utils/text.py::extract_body_from_node",
      "join"
    ],
    [
      "core/utils/text.py::extract_body_from_node",
      "str"
    ],
    [
      "core/utils/text.py::extract_body_from_node",
      "items"
    ],
    [
      "core/utils/text.py::redact_secrets",
      "sub"
    ],
    [
      "core/utils/text.py::redact_secrets",
      "group"
    ],
    [
      "core/utils/text.py::safe_truncate",
      "rstrip"
    ],
    [
      "core/utils/text.py::safe_truncate",
      "len"
    ],
    [
      "core/utils/text.py::safe_truncate",
      "max"
    ],
    [
      "core/utils/text.py::toxicity_hint",
      "findall"
    ],
    [
      "core/utils/text.py::toxicity_hint",
      "lower"
    ],
    [
      "core/utils/text.py::toxicity_hint",
      "set"
    ],
    [
      "core/utils/text.py::baseline_metrics",
      "clamp"
    ],
    [
      "core/utils/text.py::baseline_metrics",
      "clamp"
    ],
    [
      "core/utils/text.py::baseline_metrics",
      "toxicity_hint"
    ],
    [
      "core/utils/text.py::baseline_metrics",
      "list"
    ],
    [
      "core/utils/time.py::now",
      "now"
    ],
    [
      "core/utils/time.py::now_iso",
      "isoformat"
    ],
    [
      "core/utils/time.py::now_iso",
      "now"
    ],
    [
      "core/utils/net_api.py::_aliasize",
      "replace"
    ],
    [
      "core/utils/net_api.py::_aliasize",
      "split"
    ],
    [
      "core/utils/net_api.py::_aliasize",
      "upper"
    ],
    [
      "core/utils/net_api.py::_aliasize",
      "join"
    ],
    [
      "core/utils/net_api.py::_add_synonyms",
      "endswith"
    ],
    [
      "core/utils/net_api.py::_add_synonyms",
      "endswith"
    ],
    [
      "core/utils/net_api.py::_add_synonyms",
      "sorted"
    ],
    [
      "core/utils/net_api.py::_add_synonyms",
      "add"
    ],
    [
      "core/utils/net_api.py::_add_synonyms",
      "add"
    ],
    [
      "core/utils/net_api.py::_add_synonyms",
      "replace"
    ],
    [
      "core/utils/net_api.py::_add_synonyms",
      "replace"
    ],
    [
      "core/utils/net_api.py::_add_synonyms",
      "replace"
    ],
    [
      "core/utils/net_api.py::_EndpointsProxy::__getattr__",
      "upper"
    ],
    [
      "core/utils/net_api.py::_EndpointsProxy::__getattr__",
      "get"
    ],
    [
      "core/utils/net_api.py::_EndpointsProxy::__getattr__",
      "get"
    ],
    [
      "core/utils/net_api.py::_EndpointsProxy::__getattr__",
      "lower"
    ],
    [
      "core/utils/net_api.py::endpoints_report_str",
      "max"
    ],
    [
      "core/utils/net_api.py::endpoints_report_str",
      "sorted"
    ],
    [
      "core/utils/net_api.py::endpoints_report_str",
      "join"
    ],
    [
      "core/utils/net_api.py::endpoints_report_str",
      "keys"
    ],
    [
      "core/utils/net_api.py::endpoints_report_str",
      "append"
    ],
    [
      "core/utils/net_api.py::endpoints_report_str",
      "len"
    ],
    [
      "core/utils/net_api.py::endpoints_report_str",
      "keys"
    ],
    [
      "core/utils/net_api.py::endpoints_report_str",
      "ljust"
    ],
    [
      "core/utils/net_api.py::endpoints_report_str",
      "ljust"
    ],
    [
      "core/utils/safe_eval.py::safe_eval",
      "Interpreter"
    ],
    [
      "core/utils/safe_eval.py::safe_eval",
      "ae"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "is_dataclass"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "str"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isinstance"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "decode"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "str"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "isoformat"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "float"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "_to_jsonable"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "callable"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "item"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "tolist"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "str"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "_to_jsonable"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "_to_jsonable"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "getattr"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "keys"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "getattr"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "getattr"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "_to_jsonable"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "_to_jsonable"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "items"
    ],
    [
      "core/utils/jsonsafe.py::_to_jsonable",
      "to_dict"
    ],
    [
      "core/utils/jsonsafe.py::to_jsonable",
      "_to_jsonable"
    ],
    [
      "core/utils/jsonsafe.py::dumps_json_safe",
      "dumps"
    ],
    [
      "core/utils/jsonsafe.py::dumps_json_safe",
      "_to_jsonable"
    ],
    [
      "core/utils/eos_tool.py::eos_tool",
      "setattr"
    ],
    [
      "core/utils/eos_tool.py::deco",
      "setattr"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::__init__",
      "rstrip"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::__init__",
      "Lock"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::snapshot_aliases",
      "dict"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::snapshot_routes",
      "dict"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::snapshot_routes",
      "items"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::path",
      "_resolve_alias"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::path",
      "KeyError"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::route",
      "_resolve_alias"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::route",
      "dict"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::route",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::exists",
      "_resolve_alias"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::synonyms",
      "dict"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_resolve_alias",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_resolve_alias",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "isinstance"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "isinstance"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "items"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "isinstance"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "items"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "isinstance"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "list"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "str"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "items"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "setdefault"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "keys"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "_alias_from_path"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "_alias_from_path"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "_alias_from_path"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_normalize",
      "get"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "dict"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "dict"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "items"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "setdefault"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_apply_synonyms",
      "setdefault"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "upper"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "replace"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "split"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "join"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "strip"
    ],
    [
      "core/utils/net_api_registry.py::LiveEndpointRegistry::_alias_from_path",
      "str"
    ],
    [
      "core/utils/bus_utils.py::subscribe",
      "subscribe"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "set"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "findall"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "search"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "search"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "search"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "strip"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "strip"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "strip"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "append"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "add"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "append"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "add"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "append"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "add"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "group"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "group"
    ],
    [
      "core/utils/diff.py::changed_paths_from_unified_diff",
      "group"
    ],
    [
      "core/utils/embedcsv/embed_all.py::find_salience_csvs",
      "glob"
    ],
    [
      "core/utils/embedcsv/embed_all.py::find_salience_csvs",
      "join"
    ],
    [
      "core/utils/embedcsv/embed_all.py::main",
      "find_salience_csvs"
    ],
    [
      "core/utils/embedcsv/embed_all.py::main",
      "print"
    ],
    [
      "core/utils/embedcsv/embed_all.py::main",
      "print"
    ],
    [
      "core/utils/embedcsv/embed_all.py::main",
      "replace"
    ],
    [
      "core/utils/embedcsv/embed_all.py::main",
      "embed_and_save_csv"
    ],
    [
      "core/utils/embedcsv/upload_all.py::parse_embedding",
      "literal_eval"
    ],
    [
      "core/utils/embedcsv/upload_all.py::parse_embedding",
      "print"
    ],
    [
      "core/utils/vector_ops/cluster.py::cluster_vectors",
      "HDBSCAN"
    ],
    [
      "core/utils/vector_ops/cluster.py::cluster_vectors",
      "fit_predict"
    ],
    [
      "core/utils/vector_ops/cluster.py::cluster_vectors",
      "tolist"
    ],
    [
      "core/utils/vector_ops/cluster.py::cluster_vectors",
      "array"
    ],
    [
      "core/utils/vector_ops/dimreduce.py::reduce_vectors",
      "UMAP"
    ],
    [
      "core/utils/vector_ops/dimreduce.py::reduce_vectors",
      "fit_transform"
    ],
    [
      "core/utils/vector_ops/dimreduce.py::reduce_vectors",
      "tolist"
    ],
    [
      "core/utils/vector_ops/dimreduce.py::reduce_vectors",
      "array"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "hasattr"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "isinstance"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "isinstance"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "isinstance"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "isinstance"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "isinstance"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "hasattr"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "isoformat"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "strip"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "model_dump"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "str"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "_coerce_for_neo"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "_coerce_for_neo"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "dict"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "loads"
    ],
    [
      "core/utils/neo/cypher_query.py::_coerce_for_neo",
      "items"
    ],
    [
      "core/utils/neo/cypher_query.py::neoify_params",
      "str"
    ],
    [
      "core/utils/neo/cypher_query.py::neoify_params",
      "_coerce_for_neo"
    ],
    [
      "core/utils/neo/cypher_query.py::neoify_params",
      "items"
    ],
    [
      "core/utils/neo/neo_driver.py::get_driver",
      "RuntimeError"
    ],
    [
      "core/utils/neo/neo_safe.py::_is_neo_driver",
      "hasattr"
    ],
    [
      "core/utils/neo/neo_safe.py::_is_neo_driver",
      "hasattr"
    ],
    [
      "core/utils/neo/neo_safe.py::coalesce_driver",
      "_is_neo_driver"
    ],
    [
      "core/utils/neo/neo_safe.py::coalesce_driver",
      "isinstance"
    ],
    [
      "core/utils/neo/neo_safe.py::coalesce_driver",
      "warn"
    ],
    [
      "core/utils/neo/neo_safe.py::coalesce_driver",
      "warn"
    ],
    [
      "core/utils/neo/neo_safe.py::coalesce_driver",
      "lower"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "hasattr"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "isinstance"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "isinstance"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "isinstance"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "isinstance"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "isinstance"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "model_dump"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "hasattr"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "isoformat"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "strip"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "dict"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "_coerce"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "_coerce"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "loads"
    ],
    [
      "core/utils/neo/params.py::_coerce",
      "items"
    ],
    [
      "core/utils/neo/params.py::neoify_params",
      "_coerce"
    ],
    [
      "core/utils/neo/params.py::neoify_params",
      "items"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_payload",
      "isinstance"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_payload",
      "isinstance"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_payload",
      "isinstance"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_id",
      "strip"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_id",
      "str"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_id",
      "hexdigest"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_id",
      "str"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_id",
      "get"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_id",
      "sha256"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_id",
      "get"
    ],
    [
      "core/utils/cicd/listener.py::_proposal_id",
      "encode"
    ],
    [
      "core/utils/cicd/listener.py::CICDListener::__new__",
      "__new__"
    ],
    [
      "core/utils/cicd/listener.py::CICDListener::__new__",
      "Lock"
    ],
    [
      "core/utils/cicd/listener.py::CICDListener::__new__",
      "super"
    ],
    [
      "core/utils/cicd/listener.py::CICDListener::__init__",
      "get_event_loop"
    ],
    [
      "core/utils/cicd/listener.py::CICDListener::__init__",
      "create_task"
    ],
    [
      "core/utils/cicd/listener.py::CICDListener::__init__",
      "info"
    ],
    [
      "core/utils/cicd/listener.py::CICDListener::__init__",
      "_subscribe"
    ],
    [
      "core/prompting/orchestrator.py::_resolve_spec",
      "get_registry"
    ],
    [
      "core/prompting/orchestrator.py::_resolve_spec",
      "get_by_scope"
    ],
    [
      "core/prompting/orchestrator.py::_resolve_spec",
      "ValueError"
    ],
    [
      "core/prompting/spec.py::Outputs::_check_schema_source",
      "model_validator"
    ],
    [
      "core/prompting/spec.py::Outputs::_check_schema_source",
      "ValueError"
    ],
    [
      "core/prompting/spec.py::PromptSpec::_nonempty",
      "field_validator"
    ],
    [
      "core/prompting/spec.py::PromptSpec::_nonempty",
      "ValueError"
    ],
    [
      "core/prompting/spec.py::PromptSpec::_nonempty",
      "strip"
    ],
    [
      "core/prompting/spec.py::PromptSpec::_nonempty",
      "str"
    ],
    [
      "core/prompting/lenses.py::_safe",
      "isinstance"
    ],
    [
      "core/prompting/lenses.py::_safe",
      "item"
    ],
    [
      "core/prompting/lenses.py::estimate_tokens",
      "max"
    ],
    [
      "core/prompting/lenses.py::estimate_tokens",
      "len"
    ],
    [
      "core/prompting/validators.py::load_schema",
      "Path"
    ],
    [
      "core/prompting/validators.py::load_schema",
      "loads"
    ],
    [
      "core/prompting/validators.py::load_schema",
      "read_text"
    ],
    [
      "core/prompting/validators.py::load_schema",
      "isinstance"
    ],
    [
      "core/prompting/validators.py::load_schema",
      "SchemaValidationError"
    ],
    [
      "core/prompting/validators.py::validate_json",
      "validate"
    ],
    [
      "core/prompting/validators.py::validate_json",
      "str"
    ],
    [
      "core/prompting/runtime.py::_locate_templates_yaml",
      "get"
    ],
    [
      "core/prompting/runtime.py::_locate_templates_yaml",
      "Path"
    ],
    [
      "core/prompting/runtime.py::_locate_templates_yaml",
      "Path"
    ],
    [
      "core/prompting/runtime.py::_locate_templates_yaml",
      "exists"
    ],
    [
      "core/prompting/runtime.py::_locate_templates_yaml",
      "Path"
    ],
    [
      "core/prompting/runtime.py::_load_templates_yaml",
      "isinstance"
    ],
    [
      "core/prompting/runtime.py::_load_templates_yaml",
      "safe_load"
    ],
    [
      "core/prompting/runtime.py::_load_templates_yaml",
      "print"
    ],
    [
      "core/prompting/runtime.py::_load_templates_yaml",
      "read_text"
    ],
    [
      "core/prompting/runtime.py::_load_templates_yaml",
      "stat"
    ],
    [
      "core/prompting/runtime.py::_load_templates_yaml",
      "str"
    ],
    [
      "core/prompting/runtime.py::_load_templates_yaml",
      "str"
    ],
    [
      "core/prompting/runtime.py::_load_templates_yaml",
      "items"
    ],
    [
      "core/prompting/runtime.py::_build_jinja_env",
      "Environment"
    ],
    [
      "core/prompting/runtime.py::_build_jinja_env",
      "RuntimeError"
    ],
    [
      "core/prompting/runtime.py::_build_jinja_env",
      "dumps"
    ],
    [
      "core/prompting/runtime.py::_build_jinja_env",
      "DictLoader"
    ],
    [
      "core/prompting/runtime.py::_build_jinja_env",
      "TemplateNotFound"
    ],
    [
      "core/prompting/runtime.py::DictLoader::get_source",
      "TemplateNotFound"
    ],
    [
      "core/prompting/runtime.py::_ensure_jinja_env",
      "_locate_templates_yaml"
    ],
    [
      "core/prompting/runtime.py::_ensure_jinja_env",
      "_load_templates_yaml"
    ],
    [
      "core/prompting/runtime.py::_ensure_jinja_env",
      "_build_jinja_env"
    ],
    [
      "core/prompting/runtime.py::_ensure_jinja_env",
      "FileNotFoundError"
    ],
    [
      "core/prompting/runtime.py::_ensure_jinja_env",
      "stat"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "blake2b"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "_ensure_jinja_env"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "sorted"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "hexdigest"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "keys"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "update"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "update"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "update"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "update"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "encode"
    ],
    [
      "core/prompting/runtime.py::_template_hash",
      "encode"
    ],
    [
      "core/prompting/cli.py::_load_json_maybe",
      "Path"
    ],
    [
      "core/prompting/cli.py::_load_json_maybe",
      "exists"
    ],
    [
      "core/prompting/cli.py::_load_json_maybe",
      "loads"
    ],
    [
      "core/prompting/cli.py::_load_json_maybe",
      "loads"
    ],
    [
      "core/prompting/cli.py::_load_json_maybe",
      "read_text"
    ],
    [
      "core/prompting/cli.py::_ensure_context",
      "dict"
    ],
    [
      "core/prompting/cli.py::_ensure_context",
      "setdefault"
    ],
    [
      "core/prompting/cli.py::_ensure_context",
      "setdefault"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "_load_json_maybe"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "_ensure_context"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "_load_json_maybe"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "PolicyHint"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "_safe_await"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "build_prompt"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "write_text"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "print"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "dumps"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "dumps"
    ],
    [
      "core/prompting/cli.py::cmd_render",
      "Path"
    ],
    [
      "core/prompting/cli.py::_safe_await",
      "run"
    ],
    [
      "core/prompting/cli.py::_safe_await",
      "get_running_loop"
    ],
    [
      "core/prompting/cli.py::_safe_await",
      "is_running"
    ],
    [
      "core/prompting/cli.py::_safe_await",
      "ensure_future"
    ],
    [
      "core/prompting/cli.py::_safe_await",
      "result"
    ],
    [
      "core/prompting/cli.py::_safe_await",
      "print"
    ],
    [
      "core/prompting/cli.py::_safe_await",
      "done"
    ],
    [
      "core/prompting/cli.py::_safe_await",
      "run_until_complete"
    ],
    [
      "core/prompting/cli.py::_safe_await",
      "sleep"
    ],
    [
      "core/prompting/cli.py::main",
      "ArgumentParser"
    ],
    [
      "core/prompting/cli.py::main",
      "add_subparsers"
    ],
    [
      "core/prompting/cli.py::main",
      "add_parser"
    ],
    [
      "core/prompting/cli.py::main",
      "add_argument"
    ],
    [
      "core/prompting/cli.py::main",
      "add_argument"
    ],
    [
      "core/prompting/cli.py::main",
      "add_argument"
    ],
    [
      "core/prompting/cli.py::main",
      "add_argument"
    ],
    [
      "core/prompting/cli.py::main",
      "add_argument"
    ],
    [
      "core/prompting/cli.py::main",
      "parse_args"
    ],
    [
      "core/prompting/cli.py::main",
      "print_help"
    ],
    [
      "core/prompting/cli.py::main",
      "cmd_render"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::__init__",
      "print"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::__init__",
      "_ensure_dir_exists"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::__init__",
      "resolve"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_ensure_dir_exists",
      "mkdir"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_scan_and_load_files",
      "glob"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_scan_and_load_files",
      "glob"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_scan_and_load_files",
      "time"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_scan_and_load_files",
      "_load_if_needed"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_scan_and_load_files",
      "_load_if_needed"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_load_if_needed",
      "str"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_load_if_needed",
      "next"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_load_if_needed",
      "stat"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_load_if_needed",
      "_parse_spec_file"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_load_if_needed",
      "_SpecEntry"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_load_if_needed",
      "values"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_parse_spec_file",
      "read_text"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_parse_spec_file",
      "PromptSpec"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_parse_spec_file",
      "lower"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_parse_spec_file",
      "loads"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_parse_spec_file",
      "print"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_parse_spec_file",
      "print"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::_parse_spec_file",
      "safe_load"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::get_by_id",
      "_scan_and_load_files"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::get_by_id",
      "get"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::get_by_scope",
      "_scan_and_load_files"
    ],
    [
      "core/prompting/registry.py::PromptSpecRegistry::get_by_scope",
      "get"
    ],
    [
      "core/prompting/registry.py::get_registry",
      "PromptSpecRegistry"
    ],
    [
      "core/prompting/registry.py::get_registry",
      "_scan_and_load_files"
    ],
    [
      "core/metrics/registry.py::Gauge::set",
      "float"
    ],
    [
      "core/metrics/registry.py::MetricsRegistry::counter",
      "setdefault"
    ],
    [
      "core/metrics/registry.py::MetricsRegistry::counter",
      "Counter"
    ],
    [
      "core/metrics/registry.py::MetricsRegistry::gauge",
      "setdefault"
    ],
    [
      "core/metrics/registry.py::MetricsRegistry::gauge",
      "Gauge"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "isinstance"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "isinstance"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "getattr"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "callable"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "getattr"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "isinstance"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "str"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "isinstance"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "_jsonable"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "_jsonable"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "_jsonable"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "str"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "_jsonable"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "md"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "list"
    ],
    [
      "core/services/synapse.py::_jsonable",
      "items"
    ],
    [
      "core/services/synapse.py::_endpoint",
      "hasattr"
    ],
    [
      "core/services/synapse.py::_endpoint",
      "getattr"
    ],
    [
      "core/telemetry/context.py::TelemetryContext::note_request",
      "str"
    ],
    [
      "core/telemetry/context.py::TelemetryContext::note_request",
      "str"
    ],
    [
      "core/telemetry/context.py::TelemetryContext::note_request",
      "uuid4"
    ],
    [
      "core/telemetry/context.py::TelemetryContext::note_response",
      "harvest_headers"
    ],
    [
      "core/telemetry/context.py::TelemetryContext::note_response",
      "merge_metrics"
    ],
    [
      "core/telemetry/context.py::TelemetryContext::snapshot",
      "dict"
    ],
    [
      "core/telemetry/context.py::TelemetryContext::snapshot",
      "get"
    ],
    [
      "core/telemetry/context.py::get_ctx",
      "get"
    ],
    [
      "core/telemetry/context.py::bind_episode",
      "TelemetryContext"
    ],
    [
      "core/telemetry/context.py::bind_episode",
      "set"
    ],
    [
      "core/telemetry/harvest.py::_to_int",
      "int"
    ],
    [
      "core/telemetry/harvest.py::_to_float",
      "float"
    ],
    [
      "core/telemetry/harvest.py::_set",
      "split"
    ],
    [
      "core/telemetry/harvest.py::_set",
      "setdefault"
    ],
    [
      "core/telemetry/harvest.py::_add",
      "split"
    ],
    [
      "core/telemetry/harvest.py::_add",
      "setdefault"
    ],
    [
      "core/telemetry/harvest.py::_add",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_float"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "lower"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_int"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "items"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_int"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_int"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_int"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_add"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_add"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_add"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_add"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_add"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_set"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_float"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_int"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_int"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_int"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_float"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_float"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_float"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_float"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_int"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "_to_float"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::harvest_headers",
      "get"
    ],
    [
      "core/telemetry/harvest.py::merge_metrics",
      "items"
    ],
    [
      "core/telemetry/harvest.py::merge_metrics",
      "isinstance"
    ],
    [
      "core/telemetry/harvest.py::merge_metrics",
      "merge_metrics"
    ],
    [
      "core/telemetry/harvest.py::merge_metrics",
      "get"
    ],
    [
      "core/telemetry/harvest.py::merge_metrics",
      "isinstance"
    ],
    [
      "core/telemetry/harvest.py::merge_metrics",
      "isinstance"
    ],
    [
      "core/telemetry/harvest.py::merge_metrics",
      "get"
    ],
    [
      "core/telemetry/httpx_hooks.py::_infer_service_hint",
      "endswith"
    ],
    [
      "core/telemetry/httpx_hooks.py::_infer_service_hint",
      "endswith"
    ],
    [
      "core/telemetry/httpx_hooks.py::_infer_service_hint",
      "endswith"
    ],
    [
      "core/telemetry/httpx_hooks.py::_infer_service_hint",
      "endswith"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "get_ctx"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "note_request"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "items"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "get_ctx"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "note_response"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "get"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "append"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "get"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "append"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "urlparse"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "dict"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "get"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "get"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "get"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "get"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "get"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "str"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "_infer_service_hint"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "setdefault"
    ],
    [
      "core/telemetry/httpx_hooks.py::instrument_client",
      "setdefault"
    ],
    [
      "core/telemetry/binders.py::_dig",
      "isinstance"
    ],
    [
      "core/telemetry/binders.py::_coalesce",
      "isinstance"
    ],
    [
      "core/telemetry/binders.py::_coalesce",
      "get"
    ],
    [
      "core/telemetry/binders.py::_coalesce",
      "isinstance"
    ],
    [
      "core/telemetry/binders.py::_coalesce",
      "_dig"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "_coalesce"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "bind_episode"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "get"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "get"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "get"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "str"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "_coalesce"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "_coalesce"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "_coalesce"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "_coalesce"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "get"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "get"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "get"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "update"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "str"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "get"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "get"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "_coalesce"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "items"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "get_ctx"
    ],
    [
      "core/telemetry/binders.py::bind_from_select_arm",
      "get_ctx"
    ],
    [
      "core/telemetry/budget.py::_nums",
      "split"
    ],
    [
      "core/telemetry/budget.py::_nums",
      "isinstance"
    ],
    [
      "core/telemetry/budget.py::_nums",
      "float"
    ],
    [
      "core/telemetry/budget.py::_nums",
      "isinstance"
    ],
    [
      "core/telemetry/budget.py::compute_spent_ms",
      "_nums"
    ],
    [
      "core/telemetry/budget.py::ensure_budget_fields",
      "setdefault"
    ],
    [
      "core/telemetry/budget.py::ensure_budget_fields",
      "round"
    ],
    [
      "core/telemetry/budget.py::ensure_budget_fields",
      "compute_spent_ms"
    ],
    [
      "core/telemetry/decorators.py::episode",
      "isinstance"
    ],
    [
      "core/telemetry/decorators.py::episode",
      "str"
    ],
    [
      "core/telemetry/decorators.py::episode",
      "wraps"
    ],
    [
      "core/telemetry/decorators.py::episode",
      "task_key"
    ],
    [
      "core/telemetry/decorators.py::episode",
      "iscoroutinefunction"
    ],
    [
      "core/telemetry/decorators.py::episode",
      "TypeError"
    ],
    [
      "core/telemetry/decorators.py::episode",
      "_resolve"
    ],
    [
      "core/telemetry/decorators.py::episode",
      "episode_outcome"
    ],
    [
      "core/telemetry/decorators.py::episode",
      "fn"
    ],
    [
      "core/telemetry/decorators.py::_resolve",
      "isinstance"
    ],
    [
      "core/telemetry/decorators.py::_resolve",
      "str"
    ],
    [
      "core/telemetry/decorators.py::_resolve",
      "task_key"
    ],
    [
      "core/telemetry/decorators.py::_decor",
      "wraps"
    ],
    [
      "core/telemetry/decorators.py::_decor",
      "iscoroutinefunction"
    ],
    [
      "core/telemetry/decorators.py::_decor",
      "TypeError"
    ],
    [
      "core/telemetry/decorators.py::_decor",
      "_resolve"
    ],
    [
      "core/telemetry/decorators.py::_decor",
      "episode_outcome"
    ],
    [
      "core/telemetry/decorators.py::_decor",
      "fn"
    ],
    [
      "core/security/redact.py::redact",
      "sub"
    ],
    [
      "launch/upload_embed.py::_is_neo_driver",
      "hasattr"
    ],
    [
      "launch/upload_embed.py::_is_neo_driver",
      "hasattr"
    ],
    [
      "launch/upload_embed.py::coalesce_driver",
      "isinstance"
    ],
    [
      "launch/upload_embed.py::coalesce_driver",
      "strip"
    ],
    [
      "launch/upload_embed.py::coalesce_driver",
      "_is_neo_driver"
    ],
    [
      "launch/upload_embed.py::coalesce_driver",
      "lower"
    ],
    [
      "launch/upload_embed.py::coalesce_driver",
      "_get_driver"
    ],
    [
      "launch/upload_embed.py::get_caller_name",
      "stack"
    ],
    [
      "launch/upload_embed.py::get_caller_name",
      "len"
    ],
    [
      "launch/upload_embed.py::safe_neo_value",
      "isinstance"
    ],
    [
      "launch/upload_embed.py::safe_neo_value",
      "dumps"
    ],
    [
      "launch/upload_embed.py::safe_neo_value",
      "str"
    ],
    [
      "launch/upload_embed.py::_safe_neo_value",
      "isinstance"
    ],
    [
      "launch/upload_embed.py::_safe_neo_value",
      "dumps"
    ],
    [
      "launch/upload_embed.py::_safe_neo_value",
      "len"
    ],
    [
      "launch/upload_embed.py::_safe_neo_value",
      "str"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "iscoroutinefunction"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "time"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "round"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "wraps"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "wraps"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "tool"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "get_caller_name"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "log_tool_call_to_neo"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "run"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "func"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "repr"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "time"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "_log_and_call"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "_log_and_call"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "func"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "tuple"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "tuple"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "tuple"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "tuple"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "len"
    ],
    [
      "launch/upload_embed.py::tool_wrapper",
      "len"
    ],
    [
      "launch/upload_embed.py::decorator",
      "iscoroutinefunction"
    ],
    [
      "launch/upload_embed.py::decorator",
      "time"
    ],
    [
      "launch/upload_embed.py::decorator",
      "round"
    ],
    [
      "launch/upload_embed.py::decorator",
      "wraps"
    ],
    [
      "launch/upload_embed.py::decorator",
      "wraps"
    ],
    [
      "launch/upload_embed.py::decorator",
      "tool"
    ],
    [
      "launch/upload_embed.py::decorator",
      "get_caller_name"
    ],
    [
      "launch/upload_embed.py::decorator",
      "log_tool_call_to_neo"
    ],
    [
      "launch/upload_embed.py::decorator",
      "run"
    ],
    [
      "launch/upload_embed.py::decorator",
      "func"
    ],
    [
      "launch/upload_embed.py::decorator",
      "repr"
    ],
    [
      "launch/upload_embed.py::decorator",
      "time"
    ],
    [
      "launch/upload_embed.py::decorator",
      "_log_and_call"
    ],
    [
      "launch/upload_embed.py::decorator",
      "_log_and_call"
    ],
    [
      "launch/upload_embed.py::decorator",
      "func"
    ],
    [
      "launch/upload_embed.py::decorator",
      "tuple"
    ],
    [
      "launch/upload_embed.py::decorator",
      "tuple"
    ],
    [
      "launch/upload_embed.py::decorator",
      "tuple"
    ],
    [
      "launch/upload_embed.py::decorator",
      "tuple"
    ],
    [
      "launch/upload_embed.py::decorator",
      "len"
    ],
    [
      "launch/upload_embed.py::decorator",
      "len"
    ],
    [
      "launch/upload_embed.py::sync_wrapper",
      "wraps"
    ],
    [
      "launch/upload_embed.py::sync_wrapper",
      "run"
    ],
    [
      "launch/upload_embed.py::sync_wrapper",
      "_log_and_call"
    ],
    [
      "launch/upload_embed.py::sync_wrapper",
      "tuple"
    ],
    [
      "launch/upload_embed.py::sync_wrapper",
      "tuple"
    ],
    [
      "launch/upload_embed.py::sync_wrapper",
      "len"
    ],
    [
      "scripts/search_vectors.py::_prop_get",
      "isinstance"
    ],
    [
      "scripts/search_vectors.py::_prop_get",
      "get"
    ],
    [
      "scripts/search_vectors.py::_prop_get",
      "get"
    ],
    [
      "scripts/search_vectors.py::_prop_get",
      "dict"
    ],
    [
      "scripts/search_vectors.py::format_node",
      "_prop_get"
    ],
    [
      "scripts/upload_embed.py::infer_scorer_from_filename",
      "basename"
    ],
    [
      "scripts/upload_embed.py::infer_scorer_from_filename",
      "search"
    ],
    [
      "scripts/upload_embed.py::infer_scorer_from_filename",
      "strip"
    ],
    [
      "scripts/upload_embed.py::infer_scorer_from_filename",
      "group"
    ],
    [
      "scripts/upload_embed.py::parse_tags",
      "strip"
    ],
    [
      "scripts/upload_embed.py::parse_tags",
      "startswith"
    ],
    [
      "scripts/upload_embed.py::parse_tags",
      "strip"
    ],
    [
      "scripts/upload_embed.py::parse_tags",
      "loads"
    ],
    [
      "scripts/upload_embed.py::parse_tags",
      "split"
    ],
    [
      "scripts/upload_embed.py::parse_tags",
      "strip"
    ],
    [
      "scripts/upload_embed.py::parse_tags",
      "strip"
    ],
    [
      "scripts/upload_embed.py::parse_tags",
      "strip"
    ],
    [
      "scripts/upload_embed.py::parse_tags",
      "str"
    ],
    [
      "scripts/upload_embed.py::parse_tags",
      "str"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "infer_scorer_from_filename"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "open"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "DictReader"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "lower"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "ValueError"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "strip"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "append"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "strip"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "strip"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "parse_tags"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "strip"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "Row"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts/upload_embed.py::read_rows_from_csv",
      "get"
    ],
    [
      "scripts/upload_embed.py::stable_uuid",
      "encode"
    ],
    [
      "scripts/upload_embed.py::stable_uuid",
      "str"
    ],
    [
      "scripts/upload_embed.py::stable_uuid",
      "uuid5"
    ],
    [
      "scripts/upload_embed.py::stable_uuid",
      "hex"
    ],
    [
      "scripts/upload_embed.py::dedupe_rows",
      "set"
    ],
    [
      "scripts/upload_embed.py::dedupe_rows",
      "add"
    ],
    [
      "scripts/upload_embed.py::dedupe_rows",
      "append"
    ],
    [
      "scripts/upload_embed.py::dedupe_rows",
      "tuple"
    ],
    [
      "scripts/upload_embed.py::write_merged_csv",
      "makedirs"
    ],
    [
      "scripts/upload_embed.py::write_merged_csv",
      "open"
    ],
    [
      "scripts/upload_embed.py::write_merged_csv",
      "DictWriter"
    ],
    [
      "scripts/upload_embed.py::write_merged_csv",
      "writeheader"
    ],
    [
      "scripts/upload_embed.py::write_merged_csv",
      "dirname"
    ],
    [
      "scripts/upload_embed.py::write_merged_csv",
      "writerow"
    ],
    [
      "scripts/upload_embed.py::write_merged_csv",
      "dumps"
    ],
    [
      "scripts/cite_clean.py::strip_cites_token_only",
      "subn"
    ],
    [
      "scripts/cite_clean.py::process_file",
      "strip_cites_token_only"
    ],
    [
      "scripts/cite_clean.py::process_file",
      "read_text"
    ],
    [
      "scripts/cite_clean.py::process_file",
      "write_text"
    ],
    [
      "scripts/cite_clean.py::process_file",
      "write_text"
    ],
    [
      "scripts/cite_clean.py::process_file",
      "with_suffix"
    ],
    [
      "scripts/cite_clean.py::main",
      "ArgumentParser"
    ],
    [
      "scripts/cite_clean.py::main",
      "add_argument"
    ],
    [
      "scripts/cite_clean.py::main",
      "add_argument"
    ],
    [
      "scripts/cite_clean.py::main",
      "add_argument"
    ],
    [
      "scripts/cite_clean.py::main",
      "add_argument"
    ],
    [
      "scripts/cite_clean.py::main",
      "parse_args"
    ],
    [
      "scripts/cite_clean.py::main",
      "Path"
    ],
    [
      "scripts/cite_clean.py::main",
      "rglob"
    ],
    [
      "scripts/cite_clean.py::main",
      "print"
    ],
    [
      "scripts/cite_clean.py::main",
      "is_dir"
    ],
    [
      "scripts/cite_clean.py::main",
      "print"
    ],
    [
      "scripts/cite_clean.py::main",
      "startswith"
    ],
    [
      "scripts/cite_clean.py::main",
      "lower"
    ],
    [
      "scripts/cite_clean.py::main",
      "is_file"
    ],
    [
      "scripts/cite_clean.py::main",
      "lower"
    ],
    [
      "scripts/cite_clean.py::main",
      "process_file"
    ],
    [
      "scripts/cite_clean.py::main",
      "lower"
    ],
    [
      "scripts/cite_clean.py::main",
      "print"
    ],
    [
      "scripts/eos_replay.py::_find_files_for_decision",
      "glob"
    ],
    [
      "scripts/eos_replay.py::_find_files_for_decision",
      "glob"
    ],
    [
      "scripts/eos_replay.py::_find_files_for_decision",
      "open"
    ],
    [
      "scripts/eos_replay.py::_find_files_for_decision",
      "open"
    ],
    [
      "scripts/eos_replay.py::_find_files_for_decision",
      "loads"
    ],
    [
      "scripts/eos_replay.py::_find_files_for_decision",
      "loads"
    ],
    [
      "scripts/eos_replay.py::_find_files_for_decision",
      "readline"
    ],
    [
      "scripts/eos_replay.py::_find_files_for_decision",
      "get"
    ],
    [
      "scripts/eos_replay.py::_find_files_for_decision",
      "readline"
    ],
    [
      "scripts/eos_replay.py::_find_files_for_decision",
      "get"
    ],
    [
      "scripts/eos_replay.py::_load_by_barcode",
      "list"
    ],
    [
      "scripts/eos_replay.py::_load_by_barcode",
      "glob"
    ],
    [
      "scripts/eos_replay.py::_load_by_barcode",
      "FileNotFoundError"
    ],
    [
      "scripts/eos_replay.py::_load_by_barcode",
      "open"
    ],
    [
      "scripts/eos_replay.py::_load_by_barcode",
      "loads"
    ],
    [
      "scripts/eos_replay.py::_load_by_barcode",
      "readline"
    ],
    [
      "scripts/eos_replay.py::main",
      "ArgumentParser"
    ],
    [
      "scripts/eos_replay.py::main",
      "add_argument"
    ],
    [
      "scripts/eos_replay.py::main",
      "add_argument"
    ],
    [
      "scripts/eos_replay.py::main",
      "add_argument"
    ],
    [
      "scripts/eos_replay.py::main",
      "parse_args"
    ],
    [
      "scripts/eos_replay.py::main",
      "seed"
    ],
    [
      "scripts/eos_replay.py::main",
      "print"
    ],
    [
      "scripts/eos_replay.py::main",
      "print"
    ],
    [
      "scripts/eos_replay.py::main",
      "print"
    ],
    [
      "scripts/eos_replay.py::main",
      "print"
    ],
    [
      "scripts/eos_replay.py::main",
      "print"
    ],
    [
      "scripts/eos_replay.py::main",
      "_find_files_for_decision"
    ],
    [
      "scripts/eos_replay.py::main",
      "_load_by_barcode"
    ],
    [
      "scripts/eos_replay.py::main",
      "get"
    ],
    [
      "scripts/eos_replay.py::main",
      "sum"
    ],
    [
      "scripts/eos_replay.py::main",
      "min"
    ],
    [
      "scripts/eos_replay.py::main",
      "SystemExit"
    ],
    [
      "scripts/eos_replay.py::main",
      "open"
    ],
    [
      "scripts/eos_replay.py::main",
      "loads"
    ],
    [
      "scripts/eos_replay.py::main",
      "open"
    ],
    [
      "scripts/eos_replay.py::main",
      "loads"
    ],
    [
      "scripts/eos_replay.py::main",
      "_find_files_for_decision"
    ],
    [
      "scripts/eos_replay.py::main",
      "_find_files_for_decision"
    ],
    [
      "scripts/eos_replay.py::main",
      "readline"
    ],
    [
      "scripts/eos_replay.py::main",
      "readline"
    ],
    [
      "scripts/eos_replay.py::main",
      "SystemExit"
    ],
    [
      "scripts/eos_replay.py::main",
      "open"
    ],
    [
      "scripts/eos_replay.py::main",
      "loads"
    ],
    [
      "scripts/eos_replay.py::main",
      "SystemExit"
    ],
    [
      "scripts/eos_replay.py::main",
      "open"
    ],
    [
      "scripts/eos_replay.py::main",
      "loads"
    ],
    [
      "scripts/eos_replay.py::main",
      "get"
    ],
    [
      "scripts/eos_replay.py::main",
      "len"
    ],
    [
      "scripts/eos_replay.py::main",
      "get"
    ],
    [
      "scripts/eos_replay.py::main",
      "get"
    ],
    [
      "scripts/eos_replay.py::main",
      "get"
    ],
    [
      "scripts/eos_replay.py::main",
      "readline"
    ],
    [
      "scripts/eos_replay.py::main",
      "readline"
    ],
    [
      "scripts/eos_replay.py::main",
      "split"
    ],
    [
      "scripts/get_defs.py::read_text",
      "read_text"
    ],
    [
      "scripts/get_defs.py::read_text",
      "read_text"
    ],
    [
      "scripts/get_defs.py::call_name",
      "isinstance"
    ],
    [
      "scripts/get_defs.py::call_name",
      "isinstance"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "set"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "walk"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "enumerate"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "isinstance"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "match"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "isinstance"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "any"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "add"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "append"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "hasattr"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "add"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "isinstance"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "isinstance"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "append"
    ],
    [
      "scripts/get_defs.py::find_router_app_lines",
      "call_name"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "read_text"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "splitlines"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "set"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "sorted"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "parse"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "walk"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "find_router_app_lines"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "enumerate"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "isinstance"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "len"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "rstrip"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "append"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "str"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "hasattr"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "match"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "match"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "add"
    ],
    [
      "scripts/get_defs.py::gather_defs_from_file",
      "add"
    ],
    [
      "scripts/get_defs.py::iter_python_files",
      "walk"
    ],
    [
      "scripts/get_defs.py::iter_python_files",
      "endswith"
    ],
    [
      "scripts/get_defs.py::iter_python_files",
      "Path"
    ],
    [
      "scripts/get_defs.py::collate",
      "StringIO"
    ],
    [
      "scripts/get_defs.py::collate",
      "getvalue"
    ],
    [
      "scripts/get_defs.py::collate",
      "sorted"
    ],
    [
      "scripts/get_defs.py::collate",
      "exists"
    ],
    [
      "scripts/get_defs.py::collate",
      "iter_python_files"
    ],
    [
      "scripts/get_defs.py::collate",
      "gather_defs_from_file"
    ],
    [
      "scripts/get_defs.py::collate",
      "write"
    ],
    [
      "scripts/get_defs.py::collate",
      "write"
    ],
    [
      "scripts/get_defs.py::collate",
      "write"
    ],
    [
      "scripts/get_defs.py::main",
      "ArgumentParser"
    ],
    [
      "scripts/get_defs.py::main",
      "add_argument"
    ],
    [
      "scripts/get_defs.py::main",
      "add_argument"
    ],
    [
      "scripts/get_defs.py::main",
      "parse_args"
    ],
    [
      "scripts/get_defs.py::main",
      "collate"
    ],
    [
      "scripts/get_defs.py::main",
      "Path"
    ],
    [
      "scripts/get_defs.py::main",
      "Path"
    ],
    [
      "scripts/get_defs.py::main",
      "mkdir"
    ],
    [
      "scripts/get_defs.py::main",
      "write_text"
    ],
    [
      "scripts/get_defs.py::main",
      "print"
    ],
    [
      "scripts/get_defs.py::main",
      "write"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "set"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "rglob"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "compile"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "compile"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "compile"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "any"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "open"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "read"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "str"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "findall"
    ],
    [
      "scripts/get_gates.py::find_gate_keys",
      "add"
    ],
    [
      "scripts/get_gates.py::main",
      "sorted"
    ],
    [
      "scripts/get_gates.py::main",
      "print"
    ],
    [
      "scripts/get_gates.py::main",
      "list"
    ],
    [
      "scripts/get_gates.py::main",
      "print"
    ],
    [
      "scripts/get_gates.py::main",
      "append"
    ],
    [
      "scripts/get_gates.py::main",
      "join"
    ],
    [
      "scripts/get_gates.py::main",
      "print"
    ],
    [
      "scripts/get_gates.py::main",
      "find_gate_keys"
    ],
    [
      "scripts/get_gates.py::main",
      "isoformat"
    ],
    [
      "scripts/get_gates.py::main",
      "open"
    ],
    [
      "scripts/get_gates.py::main",
      "write"
    ],
    [
      "scripts/get_gates.py::main",
      "print"
    ],
    [
      "scripts/get_gates.py::main",
      "len"
    ],
    [
      "scripts/get_gates.py::main",
      "now"
    ],
    [
      "scripts/get_gates.py::main",
      "len"
    ],
    [
      "scripts/stray_prompts.py::scan_file",
      "items"
    ],
    [
      "scripts/stray_prompts.py::scan_file",
      "read_text"
    ],
    [
      "scripts/stray_prompts.py::scan_file",
      "search"
    ],
    [
      "scripts/stray_prompts.py::scan_file",
      "append"
    ],
    [
      "scripts/stray_prompts.py::main",
      "rglob"
    ],
    [
      "scripts/stray_prompts.py::main",
      "scan_file"
    ],
    [
      "scripts/stray_prompts.py::main",
      "print"
    ],
    [
      "scripts/stray_prompts.py::main",
      "join"
    ],
    [
      "scripts/schema_collate.py::now_iso",
      "isoformat"
    ],
    [
      "scripts/schema_collate.py::now_iso",
      "utcnow"
    ],
    [
      "scripts/schema_collate.py::read_text",
      "open"
    ],
    [
      "scripts/schema_collate.py::read_text",
      "read"
    ],
    [
      "scripts/schema_collate.py::expr_to_str",
      "unparse"
    ],
    [
      "scripts/schema_collate.py::expr_to_str",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::expr_to_str",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::expr_to_str",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::expr_to_str",
      "repr"
    ],
    [
      "scripts/schema_collate.py::expr_to_str",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::const_value",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::hash_file",
      "sha256"
    ],
    [
      "scripts/schema_collate.py::hash_file",
      "hexdigest"
    ],
    [
      "scripts/schema_collate.py::hash_file",
      "open"
    ],
    [
      "scripts/schema_collate.py::hash_file",
      "iter"
    ],
    [
      "scripts/schema_collate.py::hash_file",
      "update"
    ],
    [
      "scripts/schema_collate.py::hash_file",
      "read"
    ],
    [
      "scripts/schema_collate.py::is_pydantic_base",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::is_pydantic_base",
      "endswith"
    ],
    [
      "scripts/schema_collate.py::is_pydantic_base",
      "endswith"
    ],
    [
      "scripts/schema_collate.py::is_dataclass",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::is_dataclass",
      "startswith"
    ],
    [
      "scripts/schema_collate.py::collect_class_fields",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::collect_class_fields",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::collect_class_fields",
      "append"
    ],
    [
      "scripts/schema_collate.py::collect_class_fields",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::collect_class_fields",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::arg_to_dict",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::arg_to_dict",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "zip"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "zip"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "list"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "append"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "append"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "append"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "append"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "arg_to_dict"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "arg_to_dict"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "len"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "len"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::signature_of",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::decorator_names",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::decorator_names",
      "append"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "lower"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "const_value"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "upper"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "const_value"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "const_value"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "const_value"
    ],
    [
      "scripts/schema_collate.py::parse_endpoint_decorator",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "signature_of"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "decorator_names"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "FunctionInfo"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "append"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "generic_visit"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "parse_endpoint_decorator"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "append"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_FunctionDef",
      "get_docstring"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "signature_of"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "decorator_names"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "FunctionInfo"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "append"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "generic_visit"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "parse_endpoint_decorator"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "append"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_AsyncFunctionDef",
      "get_docstring"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "ClassInfo"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "append"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "generic_visit"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "expr_to_str"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "append"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "get_docstring"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "is_pydantic_base"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "is_dataclass"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "collect_class_fields"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "FunctionInfo"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "signature_of"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "decorator_names"
    ],
    [
      "scripts/schema_collate.py::PyModuleScanner::visit_ClassDef",
      "get_docstring"
    ],
    [
      "scripts/schema_collate.py::scan_python_file",
      "read_text"
    ],
    [
      "scripts/schema_collate.py::scan_python_file",
      "PyModuleScanner"
    ],
    [
      "scripts/schema_collate.py::scan_python_file",
      "visit"
    ],
    [
      "scripts/schema_collate.py::scan_python_file",
      "ModuleInfo"
    ],
    [
      "scripts/schema_collate.py::scan_python_file",
      "parse"
    ],
    [
      "scripts/schema_collate.py::scan_python_file",
      "hash_file"
    ],
    [
      "scripts/schema_collate.py::walk_files",
      "walk"
    ],
    [
      "scripts/schema_collate.py::walk_files",
      "splitext"
    ],
    [
      "scripts/schema_collate.py::walk_files",
      "lower"
    ],
    [
      "scripts/schema_collate.py::walk_files",
      "append"
    ],
    [
      "scripts/schema_collate.py::walk_files",
      "join"
    ],
    [
      "scripts/schema_collate.py::build_json_report",
      "extend"
    ],
    [
      "scripts/schema_collate.py::build_json_report",
      "len"
    ],
    [
      "scripts/schema_collate.py::build_json_report",
      "len"
    ],
    [
      "scripts/schema_collate.py::build_json_report",
      "sum"
    ],
    [
      "scripts/schema_collate.py::build_json_report",
      "now_iso"
    ],
    [
      "scripts/schema_collate.py::build_json_report",
      "len"
    ],
    [
      "scripts/schema_collate.py::build_json_report",
      "len"
    ],
    [
      "scripts/schema_collate.py::md_escape",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::md_escape",
      "replace"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "sorted"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "isinstance"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "str"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "append"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "str"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "md_escape"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "md_escape"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "str"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "md_escape"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "str"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "join"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "md_escape"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "md_escape"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_markdown",
      "get"
    ],
    [
      "scripts/schema_collate.py::build_state",
      "getmtime"
    ],
    [
      "scripts/schema_collate.py::build_state",
      "exists"
    ],
    [
      "scripts/schema_collate.py::diff_state",
      "walk_files"
    ],
    [
      "scripts/schema_collate.py::diff_state",
      "getmtime"
    ],
    [
      "scripts/schema_collate.py::diff_state",
      "append"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "walk_files"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "build_json_report"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "makedirs"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "print"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "endswith"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "join"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "append"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "join"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "append"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "scan_python_file"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "open"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "dump"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "open"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "write"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "lower"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "append"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "build_markdown"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "len"
    ],
    [
      "scripts/schema_collate.py::run_scan",
      "join"
    ],
    [
      "scripts/schema_collate.py::main",
      "ArgumentParser"
    ],
    [
      "scripts/schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts/schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts/schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts/schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts/schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts/schema_collate.py::main",
      "add_argument"
    ],
    [
      "scripts/schema_collate.py::main",
      "parse_args"
    ],
    [
      "scripts/schema_collate.py::main",
      "abspath"
    ],
    [
      "scripts/schema_collate.py::main",
      "union"
    ],
    [
      "scripts/schema_collate.py::main",
      "run_scan"
    ],
    [
      "scripts/schema_collate.py::main",
      "build_state"
    ],
    [
      "scripts/schema_collate.py::main",
      "print"
    ],
    [
      "scripts/schema_collate.py::main",
      "set"
    ],
    [
      "scripts/schema_collate.py::main",
      "walk_files"
    ],
    [
      "scripts/schema_collate.py::main",
      "getenv"
    ],
    [
      "scripts/schema_collate.py::main",
      "sleep"
    ],
    [
      "scripts/schema_collate.py::main",
      "diff_state"
    ],
    [
      "scripts/schema_collate.py::main",
      "print"
    ],
    [
      "scripts/schema_collate.py::main",
      "print"
    ],
    [
      "scripts/schema_collate.py::main",
      "run_scan"
    ],
    [
      "scripts/schema_collate.py::main",
      "len"
    ],
    [
      "scripts/placeholder_find.py::is_texty",
      "lower"
    ],
    [
      "scripts/placeholder_find.py::is_texty",
      "stat"
    ],
    [
      "scripts/placeholder_find.py::iter_files",
      "walk"
    ],
    [
      "scripts/placeholder_find.py::iter_files",
      "Path"
    ],
    [
      "scripts/placeholder_find.py::read_text_safely",
      "read_text"
    ],
    [
      "scripts/placeholder_find.py::read_text_safely",
      "read_text"
    ],
    [
      "scripts/placeholder_find.py::find_matches",
      "finditer"
    ],
    [
      "scripts/placeholder_find.py::find_matches",
      "strip"
    ],
    [
      "scripts/placeholder_find.py::find_matches",
      "append"
    ],
    [
      "scripts/placeholder_find.py::find_matches",
      "group"
    ],
    [
      "scripts/placeholder_find.py::find_matches",
      "lower"
    ],
    [
      "scripts/placeholder_find.py::find_matches",
      "lower"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "iter_files"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "sort"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "read_text_safely"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "find_matches"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "lower"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "is_file"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "is_texty"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "append"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "weight"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "lower"
    ],
    [
      "scripts/placeholder_find.py::scan",
      "str"
    ],
    [
      "scripts/placeholder_find.py::weight",
      "lower"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "strftime"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "enumerate"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "write_text"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "read_text_safely"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "join"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "now"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "is_relative_to"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "relative_to"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "len"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "append"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "len"
    ],
    [
      "scripts/placeholder_find.py::write_report",
      "len"
    ],
    [
      "scripts/placeholder_find.py::main",
      "ArgumentParser"
    ],
    [
      "scripts/placeholder_find.py::main",
      "add_argument"
    ],
    [
      "scripts/placeholder_find.py::main",
      "add_argument"
    ],
    [
      "scripts/placeholder_find.py::main",
      "add_argument"
    ],
    [
      "scripts/placeholder_find.py::main",
      "parse_args"
    ],
    [
      "scripts/placeholder_find.py::main",
      "resolve"
    ],
    [
      "scripts/placeholder_find.py::main",
      "scan"
    ],
    [
      "scripts/placeholder_find.py::main",
      "write_report"
    ],
    [
      "scripts/placeholder_find.py::main",
      "print"
    ],
    [
      "scripts/placeholder_find.py::main",
      "SystemExit"
    ],
    [
      "scripts/placeholder_find.py::main",
      "resolve"
    ],
    [
      "scripts/placeholder_find.py::main",
      "print"
    ],
    [
      "scripts/placeholder_find.py::main",
      "Path"
    ],
    [
      "scripts/placeholder_find.py::main",
      "exists"
    ],
    [
      "scripts/placeholder_find.py::main",
      "is_dir"
    ],
    [
      "scripts/placeholder_find.py::main",
      "print"
    ],
    [
      "scripts/placeholder_find.py::main",
      "Path"
    ],
    [
      "scripts/placeholder_find.py::main",
      "is_relative_to"
    ],
    [
      "scripts/placeholder_find.py::main",
      "relative_to"
    ],
    [
      "scripts/placeholder_find.py::main",
      "len"
    ],
    [
      "scripts/placeholder_find.py::main",
      "len"
    ],
    [
      "tests/confest.py::_simula_env",
      "fixture"
    ],
    [
      "tests/confest.py::_simula_env",
      "mktemp"
    ],
    [
      "tests/confest.py::_simula_env",
      "setenv"
    ],
    [
      "tests/confest.py::_simula_env",
      "setenv"
    ],
    [
      "tests/confest.py::_simula_env",
      "setenv"
    ],
    [
      "tests/confest.py::_simula_env",
      "str"
    ],
    [
      "tests/confest.py::_patch_http_client",
      "fixture"
    ],
    [
      "tests/confest.py::_patch_http_client",
      "setattr"
    ],
    [
      "tests/confest.py::_patch_http_client",
      "ASGITransport"
    ],
    [
      "tests/confest.py::_patch_http_client",
      "AsyncClient"
    ],
    [
      "tests/test1.py::test_registry_has_callables",
      "isinstance"
    ],
    [
      "tests/test1.py::test_registry_has_callables",
      "items"
    ],
    [
      "tests/test1.py::test_registry_has_callables",
      "callable"
    ],
    [
      "tests/test1.py::test_specs_and_impls_align",
      "set"
    ],
    [
      "tests/test1.py::test_specs_and_impls_align",
      "sorted"
    ],
    [
      "tests/test1.py::test_specs_and_impls_align",
      "keys"
    ],
    [
      "tests/test1.py::test_specs_and_impls_align",
      "get_tool_specs"
    ],
    [
      "tests/test_2.py::test_list_tools_names_only",
      "TestClient"
    ],
    [
      "tests/test_2.py::test_list_tools_names_only",
      "get"
    ],
    [
      "tests/test_2.py::test_list_tools_names_only",
      "json"
    ],
    [
      "tests/test_2.py::test_list_tools_names_only",
      "isinstance"
    ],
    [
      "tests/test_2.py::test_list_tools_names_only",
      "get"
    ],
    [
      "tests/test_2.py::test_list_tools_names_only",
      "get"
    ],
    [
      "tests/test_3.py::test_policy_validate_accepts_diff",
      "TestClient"
    ],
    [
      "tests/test_3.py::test_policy_validate_accepts_diff",
      "post"
    ],
    [
      "tests/test_3.py::test_policy_validate_accepts_diff",
      "json"
    ],
    [
      "tests/test_3.py::test_policy_validate_accepts_diff",
      "get"
    ],
    [
      "tests/test_3.py::test_guarded_forward_dry_run",
      "TestClient"
    ],
    [
      "tests/test_3.py::test_guarded_forward_dry_run",
      "post"
    ],
    [
      "tests/test_3.py::test_guarded_forward_dry_run",
      "json"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "list"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "join"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "hexdigest"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "CanonicalEvent"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "get"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "items"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "sorted"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "isinstance"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "sha256"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "float"
    ],
    [
      "systems/atune/processing/canonical.py::Canonicalizer::canonicalise",
      "encode"
    ],
    [
      "systems/atune/salience/heads.py::NoveltyHead::__init__",
      "set"
    ],
    [
      "systems/atune/salience/heads.py::KeywordHead::__init__",
      "lower"
    ],
    [
      "systems/atune/salience/heads.py::RiskHead::__init__",
      "compile"
    ],
    [
      "systems/atune/salience/heads.py::RiskHead::__init__",
      "items"
    ],
    [
      "systems/atune/salience/engine.py::SalienceEngine::__init__",
      "sorted"
    ],
    [
      "systems/atune/salience/engine.py::SalienceEngine::__init__",
      "len"
    ],
    [
      "systems/atune/salience/engine.py::SalienceEngine::__init__",
      "len"
    ],
    [
      "systems/atune/salience/engine.py::SalienceEngine::__init__",
      "ValueError"
    ],
    [
      "systems/atune/salience/engine.py::SalienceEngine::__init__",
      "set"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::__init__",
      "astype"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::__init__",
      "astype"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::__init__",
      "astype"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::__init__",
      "astype"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::__init__",
      "randn"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::__init__",
      "randn"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::__init__",
      "randn"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::__init__",
      "randn"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::_relu",
      "maximum"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::_softmax",
      "exp"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::_softmax",
      "sum"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::_softmax",
      "max"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::get_gates",
      "_relu"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::get_gates",
      "_softmax"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::get_gates",
      "dot"
    ],
    [
      "systems/atune/salience/gating.py::MetaAttentionGater::get_gates",
      "dot"
    ],
    [
      "systems/atune/salience/conformal.py::PerHeadConformal::update",
      "setdefault"
    ],
    [
      "systems/atune/salience/conformal.py::PerHeadConformal::update",
      "append"
    ],
    [
      "systems/atune/salience/conformal.py::PerHeadConformal::update",
      "deque"
    ],
    [
      "systems/atune/salience/conformal.py::PerHeadConformal::p_value",
      "get"
    ],
    [
      "systems/atune/salience/conformal.py::PerHeadConformal::p_value",
      "sum"
    ],
    [
      "systems/atune/salience/conformal.py::PerHeadConformal::p_value",
      "len"
    ],
    [
      "systems/atune/salience/conformal.py::PerHeadConformal::summary",
      "p_value"
    ],
    [
      "systems/atune/salience/conformal.py::PerHeadConformal::summary",
      "min"
    ],
    [
      "systems/atune/salience/conformal.py::PerHeadConformal::summary",
      "items"
    ],
    [
      "systems/atune/salience/conformal.py::PerHeadConformal::summary",
      "values"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "sum"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "sum"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "get"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "sum"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "FAEScore"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "get"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "get"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "get"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "get"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "values"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "values"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "values"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems/atune/planner/fae.py::FAE_Calculator::calculate_fae",
      "float"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "isinstance"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "max"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "max"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "max"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "int"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "int"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "getattr"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "isinstance"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "getattr"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "callable"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "max"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "f"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "isinstance"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "int"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "max"
    ],
    [
      "systems/atune/planner/market.py::_resolve_budget_ms",
      "int"
    ],
    [
      "systems/atune/planner/market.py::AttentionMarket::run_auction",
      "_resolve_budget_ms"
    ],
    [
      "systems/atune/planner/market.py::AttentionMarket::run_auction",
      "select_with_pareto_knee"
    ],
    [
      "systems/atune/planner/market.py::AttentionMarket::run_auction",
      "select_with_pareto_knee"
    ],
    [
      "systems/atune/planner/intervention.py::create_signed_token",
      "hexdigest"
    ],
    [
      "systems/atune/planner/intervention.py::create_signed_token",
      "encode"
    ],
    [
      "systems/atune/planner/intervention.py::create_signed_token",
      "encode"
    ],
    [
      "systems/atune/planner/intervention.py::create_signed_token",
      "new"
    ],
    [
      "systems/atune/planner/intervention.py::create_signed_token",
      "model_dump"
    ],
    [
      "systems/atune/planner/intervention.py::create_signed_token",
      "str"
    ],
    [
      "systems/atune/planner/intervention.py::create_signed_token",
      "sorted"
    ],
    [
      "systems/atune/planner/intervention.py::create_signed_token",
      "model_dump"
    ],
    [
      "systems/atune/planner/inference.py::ActiveInferenceHead::__init__",
      "GenerativeModel"
    ],
    [
      "systems/atune/planner/inference.py::ActiveInferenceHead::calculate_expected_free_energy",
      "print"
    ],
    [
      "systems/atune/planner/inference.py::ActiveInferenceHead::calculate_expected_free_energy",
      "log"
    ],
    [
      "systems/atune/planner/rollback.py::_map_params_from_result",
      "items"
    ],
    [
      "systems/atune/planner/rollback.py::_map_params_from_result",
      "split"
    ],
    [
      "systems/atune/planner/rollback.py::_map_params_from_result",
      "str"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "dict"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "bool"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "_map_params_from_result"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "isinstance"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "isinstance"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "append"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "_safe_noop_contract"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "_safe_noop_contract"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "extend"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "extend"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "_atom"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "bool"
    ],
    [
      "systems/atune/planner/rollback.py::synthesize_rollback_contract",
      "get"
    ],
    [
      "systems/atune/planner/costs.py::scale_bid_costs",
      "getattr"
    ],
    [
      "systems/atune/planner/costs.py::scale_bid_costs",
      "float"
    ],
    [
      "systems/atune/planner/costs.py::scale_bid_costs",
      "int"
    ],
    [
      "systems/atune/planner/costs.py::scale_bid_costs",
      "deepcopy"
    ],
    [
      "systems/atune/planner/costs.py::scale_bid_costs",
      "append"
    ],
    [
      "systems/atune/planner/costs.py::scale_bid_costs",
      "get"
    ],
    [
      "systems/atune/planner/costs.py::scale_bid_costs",
      "max"
    ],
    [
      "systems/atune/planner/costs.py::scale_bid_costs",
      "min"
    ],
    [
      "systems/atune/planner/costs.py::scale_bid_costs",
      "round"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::_fae_scalar",
      "getattr"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::_fae_scalar",
      "isinstance"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::_fae_scalar",
      "float"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::_fae_scalar",
      "float"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::select_with_pareto_knee",
      "sort"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::select_with_pareto_knee",
      "append"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::select_with_pareto_knee",
      "_fae_scalar"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::select_with_pareto_knee",
      "max"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::select_with_pareto_knee",
      "enumerate"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::select_with_pareto_knee",
      "int"
    ],
    [
      "systems/atune/planner/market_strategies/pareto_knee.py::select_with_pareto_knee",
      "getattr"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::set_pool_ms_per_tick",
      "max"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::set_pool_ms_per_tick",
      "int"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::add_reserve",
      "max"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::add_reserve",
      "int"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::set_reserves",
      "max"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::set_reserves",
      "int"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::set_reserves",
      "items"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::get_available_budget",
      "max"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::get_available_budget",
      "int"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::request_allocation",
      "max"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::request_allocation",
      "int"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::request_allocation",
      "min"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::request_allocation",
      "get"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::request_allocation",
      "max"
    ],
    [
      "systems/atune/budgeter/manager.py::AttentionBudgetManager::request_allocation",
      "get"
    ],
    [
      "systems/atune/budgeter/tempo.py::TempoForecaster::__init__",
      "defaultdict"
    ],
    [
      "systems/atune/budgeter/tempo.py::TempoForecaster::forecast_and_reserve",
      "items"
    ],
    [
      "systems/atune/budgeter/tempo.py::TempoForecaster::forecast_and_reserve",
      "set_reserves"
    ],
    [
      "systems/atune/budgeter/tempo.py::TempoForecaster::forecast_and_reserve",
      "sum"
    ],
    [
      "systems/atune/budgeter/tempo.py::TempoForecaster::forecast_and_reserve",
      "int"
    ],
    [
      "systems/atune/budgeter/tempo.py::TempoForecaster::forecast_and_reserve",
      "values"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::deposit",
      "len"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::deposit",
      "get"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::run_diffusion_step",
      "copy"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::run_diffusion_step",
      "items"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::run_diffusion_step",
      "get"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::run_diffusion_step",
      "sum"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::run_diffusion_step",
      "items"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::run_diffusion_step",
      "get"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::run_diffusion_step",
      "len"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::detect_hotspots",
      "max"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::detect_hotspots",
      "max"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::detect_hotspots",
      "values"
    ],
    [
      "systems/atune/focus/field.py::SalienceFieldManager::detect_hotspots",
      "items"
    ],
    [
      "systems/atune/focus/tuner.py::DiffusionTuner::apply_hint",
      "float"
    ],
    [
      "systems/atune/focus/tuner.py::DiffusionTuner::apply_hint",
      "max"
    ],
    [
      "systems/atune/focus/tuner.py::DiffusionTuner::apply_hint",
      "min"
    ],
    [
      "systems/atune/control/affect.py::AffectiveControlLoop::__init__",
      "AffectiveState"
    ],
    [
      "systems/atune/control/affect.py::AffectiveControlLoop::update_state",
      "print"
    ],
    [
      "systems/atune/control/affect.py::AffectiveControlLoop::update_state",
      "model_dump_json"
    ],
    [
      "systems/atune/control/affect.py::AffectiveControlLoop::get_current_modulations",
      "ControlModulations"
    ],
    [
      "systems/atune/memory/store.py::MemoryStore::get_all_nodes",
      "list"
    ],
    [
      "systems/atune/memory/store.py::MemoryStore::get_all_nodes",
      "values"
    ],
    [
      "systems/atune/memory/store.py::MemoryStore::update_schemas",
      "print"
    ],
    [
      "systems/atune/memory/store.py::MemoryStore::update_schemas",
      "array"
    ],
    [
      "systems/atune/memory/store.py::MemoryStore::update_schemas",
      "len"
    ],
    [
      "systems/atune/memory/store.py::MemoryStore::match_event_to_schema",
      "dot"
    ],
    [
      "systems/atune/memory/store.py::MemoryStore::match_event_to_schema",
      "argmax"
    ],
    [
      "systems/atune/memory/store.py::MemoryStore::match_event_to_schema",
      "norm"
    ],
    [
      "systems/atune/memory/store.py::MemoryStore::match_event_to_schema",
      "print"
    ],
    [
      "systems/atune/memory/store.py::MemoryStore::match_event_to_schema",
      "norm"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "set"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "defaultdict"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "enumerate"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "StructuralCausalModel"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "CausalVariable"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "CausalVariable"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "StructuralEquation"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "print"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "enumerate"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "add"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "defaultdict"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "get"
    ],
    [
      "systems/atune/causal/discovery.py::CausalDiscoveryEngine::discover_scm_from_journal",
      "add"
    ],
    [
      "systems/atune/causal/scm_consumer.py::SCMConsumer::__init__",
      "SynapseCausalClient"
    ],
    [
      "systems/atune/journal/ledger.py::_digest_hex",
      "hexdigest"
    ],
    [
      "systems/atune/journal/ledger.py::_digest_hex",
      "blake3"
    ],
    [
      "systems/atune/journal/ledger.py::_digest_hex",
      "hexdigest"
    ],
    [
      "systems/atune/journal/ledger.py::_digest_hex",
      "blake2b"
    ],
    [
      "systems/atune/journal/ledger.py::_write_jsonl",
      "dumps"
    ],
    [
      "systems/atune/journal/ledger.py::_write_jsonl",
      "_digest_hex"
    ],
    [
      "systems/atune/journal/ledger.py::_write_jsonl",
      "encode"
    ],
    [
      "systems/atune/journal/ledger.py::_write_jsonl",
      "open"
    ],
    [
      "systems/atune/journal/ledger.py::_write_jsonl",
      "write"
    ],
    [
      "systems/atune/journal/ledger.py::_write_jsonl",
      "flush"
    ],
    [
      "systems/atune/journal/ledger.py::_write_jsonl",
      "fsync"
    ],
    [
      "systems/atune/journal/ledger.py::_write_jsonl",
      "fileno"
    ],
    [
      "systems/atune/journal/ledger.py::record",
      "_write_jsonl"
    ],
    [
      "systems/atune/journal/ledger.py::record",
      "_write_jsonl"
    ],
    [
      "systems/atune/journal/ledger.py::record",
      "asdict"
    ],
    [
      "systems/atune/journal/ledger.py::record",
      "asdict"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "setdefault"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "setdefault"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "setdefault"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "getattr"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "float"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "float"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "float"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "float"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "items"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "isinstance"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "getattr"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "get"
    ],
    [
      "systems/atune/journal/why_helpers.py::_terms",
      "get"
    ],
    [
      "systems/atune/journal/why_helpers.py::_points",
      "enumerate"
    ],
    [
      "systems/atune/journal/why_helpers.py::_points",
      "_terms"
    ],
    [
      "systems/atune/journal/why_helpers.py::_points",
      "append"
    ],
    [
      "systems/atune/journal/why_helpers.py::_points",
      "_Point"
    ],
    [
      "systems/atune/journal/why_helpers.py::_points",
      "float"
    ],
    [
      "systems/atune/journal/why_helpers.py::_pareto_front",
      "any"
    ],
    [
      "systems/atune/journal/why_helpers.py::_pareto_front",
      "append"
    ],
    [
      "systems/atune/journal/why_helpers.py::_pareto_front",
      "_dominates"
    ],
    [
      "systems/atune/journal/why_helpers.py::_normalize",
      "_norm"
    ],
    [
      "systems/atune/journal/why_helpers.py::_normalize",
      "_norm"
    ],
    [
      "systems/atune/journal/why_helpers.py::_normalize",
      "_norm"
    ],
    [
      "systems/atune/journal/why_helpers.py::_normalize",
      "_norm"
    ],
    [
      "systems/atune/journal/why_helpers.py::_normalize",
      "min"
    ],
    [
      "systems/atune/journal/why_helpers.py::_normalize",
      "max"
    ],
    [
      "systems/atune/journal/why_helpers.py::_normalize",
      "enumerate"
    ],
    [
      "systems/atune/journal/why_helpers.py::_normalize",
      "len"
    ],
    [
      "systems/atune/journal/why_helpers.py::_norm",
      "min"
    ],
    [
      "systems/atune/journal/why_helpers.py::_norm",
      "max"
    ],
    [
      "systems/atune/journal/why_helpers.py::_norm",
      "len"
    ],
    [
      "systems/atune/journal/why_helpers.py::_knee_index",
      "_normalize"
    ],
    [
      "systems/atune/journal/why_helpers.py::_knee_index",
      "enumerate"
    ],
    [
      "systems/atune/journal/why_helpers.py::_knee_index",
      "hypot"
    ],
    [
      "systems/atune/journal/why_helpers.py::summarize_pareto_knee",
      "_points"
    ],
    [
      "systems/atune/journal/why_helpers.py::summarize_pareto_knee",
      "_pareto_front"
    ],
    [
      "systems/atune/journal/why_helpers.py::summarize_pareto_knee",
      "_knee_index"
    ],
    [
      "systems/atune/journal/why_helpers.py::summarize_pareto_knee",
      "getattr"
    ],
    [
      "systems/atune/journal/why_helpers.py::summarize_pareto_knee",
      "getattr"
    ],
    [
      "systems/atune/journal/why_helpers.py::summarize_pareto_knee",
      "round"
    ],
    [
      "systems/atune/journal/why_helpers.py::summarize_pareto_knee",
      "round"
    ],
    [
      "systems/atune/journal/why_helpers.py::summarize_pareto_knee",
      "round"
    ],
    [
      "systems/atune/journal/why_helpers.py::summarize_pareto_knee",
      "int"
    ],
    [
      "systems/atune/journal/why_helpers.py::summarize_pareto_knee",
      "len"
    ],
    [
      "systems/atune/safety/reflex_catalog.py::decide",
      "items"
    ],
    [
      "systems/atune/safety/reflex_catalog.py::decide",
      "get"
    ],
    [
      "systems/atune/safety/reflex_catalog.py::decide",
      "dict"
    ],
    [
      "systems/atune/safety/reflex_catalog.py::apply_redactions",
      "split"
    ],
    [
      "systems/atune/safety/reflex_catalog.py::apply_redactions",
      "enumerate"
    ],
    [
      "systems/atune/safety/reflex_catalog.py::apply_redactions",
      "isinstance"
    ],
    [
      "systems/atune/safety/reflex_catalog.py::apply_redactions",
      "len"
    ],
    [
      "systems/atune/safety/gating.py::ConformalGate::__init__",
      "max"
    ],
    [
      "systems/atune/safety/gating.py::ConformalGate::__init__",
      "min"
    ],
    [
      "systems/atune/safety/gating.py::ConformalGate::__init__",
      "float"
    ],
    [
      "systems/atune/ingest/followups.py::_host_of",
      "match"
    ],
    [
      "systems/atune/ingest/followups.py::_host_of",
      "str"
    ],
    [
      "systems/atune/ingest/followups.py::_host_of",
      "lower"
    ],
    [
      "systems/atune/ingest/followups.py::_host_of",
      "group"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "str"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "HarvestSummary"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "append"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "str"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "inc"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "str"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "findall"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "set"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "set"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "lower"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "append"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "inc"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "sorted"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "len"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "sorted"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "len"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "counter"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "_host_of"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "findall"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "gauge"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "gauge"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "counter"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "lower"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_followup_event",
      "get"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_batch_followups",
      "HarvestSummary"
    ],
    [
      "systems/atune/ingest/followups.py::harvest_batch_followups",
      "harvest_followup_event"
    ],
    [
      "systems/atune/ingest/followups.py::salience_hints_from_harvest",
      "sorted"
    ],
    [
      "systems/atune/ingest/followups.py::salience_hints_from_harvest",
      "sorted"
    ],
    [
      "systems/atune/intent/constraints_merge.py::_merge_dict",
      "items"
    ],
    [
      "systems/atune/intent/constraints_merge.py::_merge_dict",
      "isinstance"
    ],
    [
      "systems/atune/intent/constraints_merge.py::_merge_dict",
      "setdefault"
    ],
    [
      "systems/atune/intent/constraints_merge.py::_merge_dict",
      "isinstance"
    ],
    [
      "systems/atune/intent/constraints_merge.py::_merge_dict",
      "_merge_dict"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "normalize_playbook"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "synthesize_rollback_contract"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "setdefault"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "_merge_dict"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "setdefault"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "_merge_dict"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "setdefault"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "_merge_dict"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "setdefault"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "extend"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "setdefault"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "extend"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems/atune/intent/constraints_merge.py::merge_playbook_into_constraints",
      "dict"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "CapabilityGapEvent"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "Counter"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "any"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "sum"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "len"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "sum"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "len"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "RegretStats"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "max"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "ExemplarInput"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "PostconditionFailure"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "get"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "values"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "len"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "len"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "get"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "get"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "get"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "get"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "max"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "sum"
    ],
    [
      "systems/atune/intent/gap_detector.py::detect_capability_gap",
      "len"
    ],
    [
      "systems/atune/intent/playbook_schema.py::Playbook::_coerce_atoms",
      "validator"
    ],
    [
      "systems/atune/intent/playbook_schema.py::Playbook::_coerce_atoms",
      "ContractAtom"
    ],
    [
      "systems/atune/intent/playbook_schema.py::normalize_playbook",
      "Playbook"
    ],
    [
      "systems/atune/intent/playbook_schema.py::normalize_playbook",
      "Playbook"
    ],
    [
      "systems/atune/metrics/secl_counters.py::bump",
      "int"
    ],
    [
      "systems/atune/metrics/secl_counters.py::bump",
      "int"
    ],
    [
      "systems/atune/metrics/secl_counters.py::bump",
      "get"
    ],
    [
      "systems/atune/metrics/secl_counters.py::set_gauge",
      "float"
    ],
    [
      "systems/atune/metrics/secl_counters.py::set_info",
      "get"
    ],
    [
      "systems/atune/metrics/secl_counters.py::set_info",
      "strftime"
    ],
    [
      "systems/atune/metrics/secl_counters.py::set_info",
      "gmtime"
    ],
    [
      "systems/atune/metrics/secl_counters.py::snapshot",
      "deepcopy"
    ],
    [
      "systems/atune/metrics/secl_counters.py::snapshot",
      "deepcopy"
    ],
    [
      "systems/atune/metrics/secl_counters.py::snapshot",
      "deepcopy"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "int"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "get"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "get"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "int"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "set"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "set"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "set"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "set"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "float"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "max"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "float"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "gauge"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "gauge"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "gauge"
    ],
    [
      "systems/atune/metrics/budget_audit.py::audit_and_record",
      "gauge"
    ],
    [
      "systems/atune/escalation/reasons.py::reason_conformal_ood",
      "EscalationReason"
    ],
    [
      "systems/atune/escalation/reasons.py::reason_postcond_violation",
      "EscalationReason"
    ],
    [
      "systems/atune/escalation/reasons.py::reason_rollback_failed",
      "EscalationReason"
    ],
    [
      "systems/atune/escalation/reasons.py::reason_twin_mismatch",
      "EscalationReason"
    ],
    [
      "systems/atune/escalation/build.py::build_escalation_payload",
      "model_dump"
    ],
    [
      "systems/axon/dependencies.py::get_driver_registry",
      "DriverRegistry"
    ],
    [
      "systems/axon/dependencies.py::get_driver_registry",
      "register"
    ],
    [
      "systems/axon/dependencies.py::get_driver_registry",
      "register"
    ],
    [
      "systems/axon/dependencies.py::get_driver_registry",
      "RssDriver"
    ],
    [
      "systems/axon/dependencies.py::get_driver_registry",
      "QoraSearchDriver"
    ],
    [
      "systems/axon/dependencies.py::get_journal",
      "MerkleJournal"
    ],
    [
      "systems/axon/dependencies.py::get_quarantine",
      "Quarantine"
    ],
    [
      "systems/axon/dependencies.py::get_lifecycle_manager",
      "DriverLifecycleManager"
    ],
    [
      "systems/axon/dependencies.py::get_capability_validator",
      "CapabilityValidator"
    ],
    [
      "systems/axon/dependencies.py::get_conformal_predictor",
      "ConformalPredictor"
    ],
    [
      "systems/axon/dependencies.py::get_scorecard_manager",
      "ScorecardManager"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::__init__",
      "__init__"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::__init__",
      "super"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::handle_starttag",
      "append"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::handle_starttag",
      "append"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::handle_starttag",
      "append"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::handle_starttag",
      "Taint"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::handle_endtag",
      "pop"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::handle_data",
      "strip"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::handle_data",
      "append"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::handle_data",
      "strip"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::sanitize",
      "cls"
    ],
    [
      "systems/axon/io/quarantine.py::HTMLSanitizer::sanitize",
      "feed"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::process_and_canonicalize",
      "_canonicalize_html"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::process_and_canonicalize",
      "_canonicalize_json"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::process_and_canonicalize",
      "_canonicalize_text"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_html",
      "sanitize"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_html",
      "append"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_html",
      "CanonicalizedPayload"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_html",
      "isinstance"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_html",
      "CanonicalizedPayload"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_html",
      "Taint"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_html",
      "Taint"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_html",
      "type"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_json",
      "CanonicalizedPayload"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_json",
      "Taint"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_json",
      "isinstance"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_json",
      "CanonicalizedPayload"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_json",
      "Taint"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_json",
      "type"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_text",
      "CanonicalizedPayload"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_text",
      "isinstance"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_text",
      "CanonicalizedPayload"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_text",
      "strip"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_text",
      "Taint"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_text",
      "Taint"
    ],
    [
      "systems/axon/io/quarantine.py::Quarantine::_canonicalize_text",
      "type"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::__init__",
      "AttestationPolicy"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::_map_capabilities",
      "describe"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::_map_capabilities",
      "list"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::_map_capabilities",
      "items"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::_map_capabilities",
      "setdefault"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::_map_capabilities",
      "append"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::register",
      "describe"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::register",
      "_map_capabilities"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::register",
      "print"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::update_driver_status",
      "print"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::update_driver_status",
      "print"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::update_driver_status",
      "verify_attestation"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::update_driver_status",
      "RuntimeError"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::update_driver_status",
      "describe"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "spec_from_file_location"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "module_from_spec"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "exec_module"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "getattr"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "cls"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "register"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "print"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "ImportError"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "hasattr"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "ImportError"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "get"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "RuntimeError"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "RuntimeError"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "verify_attestation"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::load_and_register_driver",
      "describe"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::get_live_driver_for_capability",
      "get"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::get_live_driver_for_capability",
      "get"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::get_live_driver_for_capability",
      "get"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::get_shadow_drivers_for_capability",
      "get"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::get_shadow_drivers_for_capability",
      "get"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::get_shadow_drivers_for_capability",
      "get"
    ],
    [
      "systems/axon/mesh/registry.py::DriverRegistry::get_shadow_drivers_for_capability",
      "append"
    ],
    [
      "systems/axon/mesh/lifecycle.py::DriverLifecycleManager::update_driver_status",
      "print"
    ],
    [
      "systems/axon/mesh/lifecycle.py::DriverLifecycleManager::update_driver_status",
      "KeyError"
    ],
    [
      "systems/axon/mesh/lifecycle.py::DriverLifecycleManager::get_driver_state",
      "get"
    ],
    [
      "systems/axon/mesh/lifecycle.py::DriverLifecycleManager::get_all_states",
      "list"
    ],
    [
      "systems/axon/mesh/lifecycle.py::DriverLifecycleManager::get_all_states",
      "values"
    ],
    [
      "systems/axon/mesh/scorecard.py::ScorecardManager::update_scorecard",
      "isoformat"
    ],
    [
      "systems/axon/mesh/scorecard.py::ScorecardManager::update_scorecard",
      "print"
    ],
    [
      "systems/axon/mesh/scorecard.py::ScorecardManager::update_scorecard",
      "DriverScorecard"
    ],
    [
      "systems/axon/mesh/scorecard.py::ScorecardManager::update_scorecard",
      "now"
    ],
    [
      "systems/axon/mesh/scorecard.py::ScorecardManager::get_all_scorecards",
      "list"
    ],
    [
      "systems/axon/mesh/scorecard.py::ScorecardManager::get_all_scorecards",
      "values"
    ],
    [
      "systems/axon/mesh/attestation.py::_verify_hmac",
      "encode"
    ],
    [
      "systems/axon/mesh/attestation.py::_verify_hmac",
      "hexdigest"
    ],
    [
      "systems/axon/mesh/attestation.py::_verify_hmac",
      "compare_digest"
    ],
    [
      "systems/axon/mesh/attestation.py::_verify_hmac",
      "new"
    ],
    [
      "systems/axon/mesh/attestation.py::_verify_hmac",
      "encode"
    ],
    [
      "systems/axon/mesh/attestation.py::verify_attestation",
      "getattr"
    ],
    [
      "systems/axon/mesh/attestation.py::verify_attestation",
      "getenv"
    ],
    [
      "systems/axon/mesh/attestation.py::verify_attestation",
      "AttestationPolicy"
    ],
    [
      "systems/axon/mesh/attestation.py::verify_attestation",
      "getattr"
    ],
    [
      "systems/axon/mesh/attestation.py::verify_attestation",
      "get"
    ],
    [
      "systems/axon/mesh/attestation.py::verify_attestation",
      "_verify_hmac"
    ],
    [
      "systems/axon/mesh/attestation.py::verify_attestation",
      "isinstance"
    ],
    [
      "systems/axon/mesh/attestation.py::verify_attestation",
      "str"
    ],
    [
      "systems/axon/mesh/attestation.py::verify_attestation",
      "str"
    ],
    [
      "systems/axon/mesh/attestation.py::verify_attestation",
      "str"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::__init__",
      "AutoRollConfig"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::_metrics",
      "hasattr"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::_metrics",
      "getattr"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::_metrics",
      "get"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::_describe",
      "describe"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::_cooldown_ok",
      "get"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::_cooldown_ok",
      "time"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "get_live_driver_for_capability"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "_metrics"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "_describe"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "_cooldown_ok"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "describe"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "_metrics"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "append"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "inc"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "promote_shadow_to_live"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "inc"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "time"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "_journal"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "append"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "get"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "max"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "get_shadow_drivers_for_capability"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "describe"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "get"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "append"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "verify_driver_attestation"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "get"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "max"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "get"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "demote_live_to_shadow"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "inc"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "time"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "_journal"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "counter"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "counter"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::evaluate_and_act",
      "counter"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::_journal",
      "time"
    ],
    [
      "systems/axon/mesh/autoroller.py::AutoRoller::_journal",
      "write_entry"
    ],
    [
      "systems/axon/mesh/promoter.py::PromotionPolicy::ok",
      "int"
    ],
    [
      "systems/axon/mesh/promoter.py::PromotionPolicy::ok",
      "float"
    ],
    [
      "systems/axon/mesh/promoter.py::PromotionPolicy::ok",
      "float"
    ],
    [
      "systems/axon/mesh/promoter.py::_status_eq",
      "isinstance"
    ],
    [
      "systems/axon/mesh/promoter.py::_status_eq",
      "str"
    ],
    [
      "systems/axon/mesh/promoter.py::_status_eq",
      "getattr"
    ],
    [
      "systems/axon/mesh/promoter.py::_coerce_like",
      "isinstance"
    ],
    [
      "systems/axon/journal/mej.py::to_deterministic_json",
      "model_dump_json"
    ],
    [
      "systems/axon/journal/mej.py::to_deterministic_json",
      "encode"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "to_deterministic_json"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "blake2b"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "update"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "hexdigest"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "JournalEntry"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "print"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "type"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "update"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "encode"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "isoformat"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "model_dump"
    ],
    [
      "systems/axon/journal/mej.py::MerkleJournal::write_entry",
      "now"
    ],
    [
      "systems/axon/drivers/rss_driver.py::RssDriver::describe",
      "CapabilitySpec"
    ],
    [
      "systems/axon/drivers/rss_driver.py::RssDriver::push",
      "NotImplementedError"
    ],
    [
      "systems/axon/drivers/rss_driver.py::RssDriver::repro_bundle",
      "get"
    ],
    [
      "systems/axon/drivers/rss_driver.py::RssDriver::repro_bundle",
      "ReplayCapsule"
    ],
    [
      "systems/axon/drivers/rss_driver.py::RssDriver::repro_bundle",
      "KeyError"
    ],
    [
      "systems/axon/drivers/qora_search_driver.py::QoraSearchDriver::describe",
      "CapabilitySpec"
    ],
    [
      "systems/axon/drivers/qora_search_driver.py::QoraSearchDriver::repro_bundle",
      "NotImplementedError"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "str"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "int"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get_hmac_key_by_kid"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "hexdigest"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "int"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "int"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "time"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "encode"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "encode"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "compare_digest"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get_live_driver_for_capability"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "get"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "new"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "hasattr"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "describe"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "getattr"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "getattr"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "str"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "sorted"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "str"
    ],
    [
      "systems/axon/safety/validation.py::CapabilityValidator::validate",
      "str"
    ],
    [
      "systems/axon/safety/conformal.py::ConformalPredictor::__init__",
      "deque"
    ],
    [
      "systems/axon/safety/conformal.py::ConformalPredictor::__init__",
      "extend"
    ],
    [
      "systems/axon/safety/conformal.py::ConformalPredictor::__init__",
      "normal"
    ],
    [
      "systems/axon/safety/conformal.py::ConformalPredictor::add_residual",
      "append"
    ],
    [
      "systems/axon/safety/conformal.py::ConformalPredictor::is_action_safe",
      "quantile"
    ],
    [
      "systems/axon/safety/conformal.py::ConformalPredictor::is_action_safe",
      "quantile"
    ],
    [
      "systems/axon/safety/conformal.py::ConformalPredictor::is_action_safe",
      "print"
    ],
    [
      "systems/axon/safety/conformal.py::ConformalPredictor::is_action_safe",
      "print"
    ],
    [
      "systems/axon/safety/conformal.py::ConformalPredictor::is_action_safe",
      "print"
    ],
    [
      "systems/axon/safety/reflex.py::ReflexEngine::evaluate",
      "str"
    ],
    [
      "systems/axon/safety/reflex.py::ReflexEngine::evaluate",
      "search"
    ],
    [
      "systems/axon/safety/reflex.py::ReflexEngine::evaluate",
      "ReflexResult"
    ],
    [
      "systems/axon/safety/reflex.py::ReflexEngine::evaluate",
      "dict"
    ],
    [
      "systems/axon/safety/reflex.py::ReflexEngine::evaluate",
      "sub"
    ],
    [
      "systems/axon/safety/reflex.py::ReflexEngine::evaluate",
      "ReflexResult"
    ],
    [
      "systems/axon/safety/reflex.py::ReflexEngine::evaluate",
      "ReflexResult"
    ],
    [
      "systems/axon/safety/reflex.py::ReflexEngine::evaluate",
      "str"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__",
      "float"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__",
      "float"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__",
      "int"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__",
      "int"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__",
      "float"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__",
      "getenv"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__",
      "getenv"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__",
      "getenv"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__",
      "getenv"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::__init__",
      "getenv"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::_prune",
      "setdefault"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::_prune",
      "_Stats"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::_prune",
      "popleft"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::is_open",
      "get"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::is_open",
      "time"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record",
      "_prune"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record",
      "append"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record",
      "len"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record",
      "sum"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record",
      "time"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record",
      "max"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record_success",
      "record"
    ],
    [
      "systems/axon/safety/circuit_breaker.py::CircuitBreaker::record_failure",
      "record"
    ],
    [
      "systems/axon/safety/contracts.py::_getpath",
      "split"
    ],
    [
      "systems/axon/safety/contracts.py::_getpath",
      "isinstance"
    ],
    [
      "systems/axon/safety/contracts.py::_getpath",
      "get"
    ],
    [
      "systems/axon/safety/contracts.py::_getpath",
      "getattr"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "getattr"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "get"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "str"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "str"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "get"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "_getpath"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "_compare"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "getattr"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "get"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "get"
    ],
    [
      "systems/axon/safety/contracts.py::verify_preconditions",
      "append"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "getattr"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "str"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "str"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "_getpath"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "_compare"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "hasattr"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "getattr"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "hasattr"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "getattr"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "append"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "isinstance"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "isinstance"
    ],
    [
      "systems/axon/safety/contracts.py::verify_postconditions",
      "get"
    ],
    [
      "systems/axon/learning/feedback.py::_calculate_diff",
      "isinstance"
    ],
    [
      "systems/axon/learning/feedback.py::_calculate_diff",
      "isinstance"
    ],
    [
      "systems/axon/learning/feedback.py::_calculate_diff",
      "_calculate_diff"
    ],
    [
      "systems/axon/learning/feedback.py::_calculate_diff",
      "update"
    ],
    [
      "systems/axon/security/attestation.py::verify_driver_attestation",
      "fromhex"
    ],
    [
      "systems/axon/security/attestation.py::verify_driver_attestation",
      "encode"
    ],
    [
      "systems/axon/security/attestation.py::verify_driver_attestation",
      "get_hmac_key_by_kid"
    ],
    [
      "systems/axon/security/attestation.py::verify_driver_attestation",
      "digest"
    ],
    [
      "systems/axon/security/attestation.py::verify_driver_attestation",
      "compare_digest"
    ],
    [
      "systems/axon/security/attestation.py::verify_driver_attestation",
      "get"
    ],
    [
      "systems/axon/security/attestation.py::verify_driver_attestation",
      "new"
    ],
    [
      "systems/axon/security/attestation.py::verify_driver_attestation",
      "get"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::bind",
      "isinstance"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::bind",
      "verify_driver_attestation"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::bind",
      "get"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::bind",
      "get"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::bind",
      "get"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::bind",
      "get"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::bind",
      "get"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::has_binding",
      "get_binding"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::has_binding",
      "verify_driver_attestation"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::get_binding",
      "get"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::get_binding",
      "dict"
    ],
    [
      "systems/axon/security/attestation.py::AttestationManager::verify_binding",
      "has_binding"
    ],
    [
      "systems/axon/ab/runner.py::_mk_shadow_intent",
      "deepcopy"
    ],
    [
      "systems/axon/ab/runner.py::_mk_shadow_intent",
      "dict"
    ],
    [
      "systems/axon/ab/runner.py::_mk_shadow_intent",
      "isinstance"
    ],
    [
      "systems/axon/events/builder.py::_base_event",
      "str"
    ],
    [
      "systems/axon/events/builder.py::_base_event",
      "getattr"
    ],
    [
      "systems/axon/events/builder.py::_base_event",
      "isoformat"
    ],
    [
      "systems/axon/events/builder.py::_base_event",
      "uuid4"
    ],
    [
      "systems/axon/events/builder.py::_base_event",
      "getattr"
    ],
    [
      "systems/axon/events/builder.py::_base_event",
      "getattr"
    ],
    [
      "systems/axon/events/builder.py::_base_event",
      "get"
    ],
    [
      "systems/axon/events/builder.py::_base_event",
      "getattr"
    ],
    [
      "systems/axon/events/builder.py::_base_event",
      "now"
    ],
    [
      "systems/axon/events/builder.py::_base_event",
      "getattr"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "getattr"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "append"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "getattr"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "_base_event"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "get"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "get"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "isinstance"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "append"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "append"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "isinstance"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "_base_event"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "get"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "get"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "getattr"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "str"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "str"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "str"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "float"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "get"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "get"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "get"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "get"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "get"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "get"
    ],
    [
      "systems/axon/events/builder.py::build_followups",
      "getattr"
    ],
    [
      "systems/axon/events/emitter.py::emit_followups_bg",
      "create_task"
    ],
    [
      "systems/axon/events/emitter.py::emit_followups_bg",
      "emit_followups"
    ],
    [
      "systems/contra/manifest/assertions.py::CheckContext::__init__",
      "endpoints_snapshot"
    ],
    [
      "systems/contra/manifest/assertions.py::check_alias_parity",
      "Diagnostic"
    ],
    [
      "systems/contra/manifest/assertions.py::check_alias_parity",
      "Diagnostic"
    ],
    [
      "systems/contra/manifest/assertions.py::check_alias_parity",
      "append"
    ],
    [
      "systems/contra/manifest/assertions.py::check_header_discipline",
      "bool"
    ],
    [
      "systems/contra/manifest/assertions.py::check_header_discipline",
      "Diagnostic"
    ],
    [
      "systems/contra/manifest/assertions.py::check_header_discipline",
      "get"
    ],
    [
      "systems/contra/manifest/assertions.py::check_header_discipline",
      "Diagnostic"
    ],
    [
      "systems/contra/manifest/assertions.py::check_tool_required_args",
      "Diagnostic"
    ],
    [
      "systems/contra/manifest/assertions.py::check_pydantic_drift",
      "Diagnostic"
    ],
    [
      "systems/contra/manifest/assertions.py::check_illegal_self_edge",
      "lower"
    ],
    [
      "systems/contra/manifest/assertions.py::check_illegal_self_edge",
      "Diagnostic"
    ],
    [
      "systems/contra/manifest/assertions.py::check_illegal_self_edge",
      "lower"
    ],
    [
      "systems/contra/manifest/assertions.py::check_illegal_self_edge",
      "Diagnostic"
    ],
    [
      "systems/contra/manifest/assertions.py::check_illegal_self_edge",
      "append"
    ],
    [
      "systems/contra/manifest/assertions.py::check_illegal_self_edge",
      "get"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "DiGraph"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "number_of_nodes"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "shuffle"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "range"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "add_edge"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "pagerank"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "sorted"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "min"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "append"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "items"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "list"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "successors"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "append"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "len"
    ],
    [
      "systems/contra/manifest/selector.py::select_pairs",
      "len"
    ],
    [
      "systems/contra/manifest/autofixers.py::propose_add_alias_patch",
      "dict"
    ],
    [
      "systems/contra/manifest/autofixers.py::propose_add_alias_patch",
      "update"
    ],
    [
      "systems/contra/manifest/autofixers.py::propose_add_alias_patch",
      "loads"
    ],
    [
      "systems/contra/manifest/autofixers.py::propose_add_alias_patch",
      "list"
    ],
    [
      "systems/contra/manifest/autofixers.py::propose_add_alias_patch",
      "read"
    ],
    [
      "systems/contra/manifest/autofixers.py::propose_add_alias_patch",
      "setdefault"
    ],
    [
      "systems/contra/manifest/autofixers.py::propose_add_alias_patch",
      "keys"
    ],
    [
      "systems/contra/manifest/autofixers.py::propose_add_alias_patch",
      "open"
    ],
    [
      "systems/contra/manifest/__init__.py::_encode_gcb_spec",
      "dumps"
    ],
    [
      "systems/contra/manifest/__init__.py::_encode_gcb_spec",
      "get"
    ],
    [
      "systems/contra/manifest/__init__.py::_encode_gcb_spec",
      "len"
    ],
    [
      "systems/contra/manifest/__init__.py::_encode_gcb_spec",
      "get"
    ],
    [
      "systems/contra/manifest/__init__.py::_encode_gcb_spec",
      "get"
    ],
    [
      "systems/contra/manifest/__init__.py::_targets_to_hints",
      "get"
    ],
    [
      "systems/contra/manifest/__init__.py::_targets_to_hints",
      "append"
    ],
    [
      "systems/contra/manifest/__init__.py::_targets_to_hints",
      "get"
    ],
    [
      "systems/contra/manifest/__init__.py::_targets_to_hints",
      "get"
    ],
    [
      "systems/contra/manifest/__init__.py::_targets_to_hints",
      "get"
    ],
    [
      "systems/contra/manifest/__init__.py::start_contra_daemon",
      "create_task"
    ],
    [
      "systems/contra/manifest/__init__.py::start_contra_daemon",
      "_contra_loop"
    ],
    [
      "systems/evo/conflicts.py::ConflictsService::record_conflict",
      "setdefault"
    ],
    [
      "systems/evo/conflicts.py::ConflictsService::record_conflict",
      "uuid4"
    ],
    [
      "systems/evo/conflicts.py::ConflictsService::batch",
      "record_conflict"
    ],
    [
      "systems/evo/conflicts.py::ConflictsService::link",
      "setdefault"
    ],
    [
      "systems/evo/conflicts.py::ConflictsService::link",
      "append"
    ],
    [
      "systems/evo/conflicts.py::ConflictsService::list_open",
      "values"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "ConflictStore"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "HypothesisService"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "ObviousnessGate"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "EvidenceOrchestrator"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "ProposalAssembler"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "RouterService"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "NovaClient"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "EvoLedger"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "ReplayCapsuleBuilder"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "ReplayCapsuleManager"
    ],
    [
      "systems/evo/engine.py::EvoEngine::__init__",
      "ScorecardExporter"
    ],
    [
      "systems/evo/engine.py::EvoEngine::intake_conflicts",
      "intake_conflicts"
    ],
    [
      "systems/evo/engine.py::EvoEngine::_make_brief",
      "list"
    ],
    [
      "systems/evo/engine.py::EvoEngine::_make_brief",
      "InnovationBrief"
    ],
    [
      "systems/evo/engine.py::EvoEngine::_make_brief",
      "join"
    ],
    [
      "systems/evo/engine.py::EvoEngine::_make_brief",
      "get"
    ],
    [
      "systems/evo/engine.py::EvoEngine::_make_brief",
      "model_dump"
    ],
    [
      "systems/evo/engine.py::EvoEngine::_format_attention_bid_event",
      "int"
    ],
    [
      "systems/evo/engine.py::EvoEngine::_format_attention_bid_event",
      "model_dump"
    ],
    [
      "systems/evo/runtime.py::get_engine",
      "EvoEngine"
    ],
    [
      "systems/evo/hypotheses/factory.py::HypothesisFactory::for_conflict",
      "get"
    ],
    [
      "systems/evo/hypotheses/factory.py::HypothesisFactory::for_conflict",
      "Hypothesis"
    ],
    [
      "systems/evo/hypotheses/factory.py::HypothesisFactory::for_conflict",
      "Hypothesis"
    ],
    [
      "systems/evo/hypotheses/factory.py::HypothesisFactory::for_conflict",
      "join"
    ],
    [
      "systems/evo/hypotheses/factory.py::HypothesisFactory::for_conflict",
      "uuid4"
    ],
    [
      "systems/evo/hypotheses/factory.py::HypothesisFactory::for_conflict",
      "uuid4"
    ],
    [
      "systems/evo/hypotheses/factory.py::HypothesisService::__init__",
      "HypothesisFactory"
    ],
    [
      "systems/evo/hypotheses/factory.py::HypothesisService::spawn",
      "_getter"
    ],
    [
      "systems/evo/hypotheses/factory.py::HypothesisService::spawn",
      "for_conflict"
    ],
    [
      "systems/evo/hypotheses/factory.py::HypothesisService::spawn",
      "append"
    ],
    [
      "systems/evo/evidence/collector.py::EvidenceOrchestrator::__init__",
      "SimulaClient"
    ],
    [
      "systems/evo/evidence/collector.py::EvidenceOrchestrator::__init__",
      "uuid4"
    ],
    [
      "systems/evo/evidence/collector.py::EvidenceOrchestrator::request",
      "uuid4"
    ],
    [
      "systems/evo/evidence/collector.py::EvidenceOrchestrator::collect",
      "run"
    ],
    [
      "systems/evo/evidence/collector.py::EvidenceOrchestrator::collect",
      "_collect_async"
    ],
    [
      "systems/evo/evidence/collector.py::EvidenceOrchestrator::attach_replay_capsule",
      "ReplayCapsuleID"
    ],
    [
      "systems/evo/evidence/collector.py::EvidenceOrchestrator::attach_replay_capsule",
      "uuid4"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::__init__",
      "SpecDeriver"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "derive_obligations"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "impact_table"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "Proposal"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "setdefault"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "derive_rollback"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "_score_risk"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "get"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "sorted"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "uuid4"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "isinstance"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "get"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "append"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "get"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "setdefault"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::assemble",
      "get"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::get",
      "get"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::_score_risk",
      "sum"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::_score_risk",
      "sum"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::_score_risk",
      "max"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::_score_risk",
      "len"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::_score_risk",
      "get"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::_score_risk",
      "values"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::_score_risk",
      "getattr"
    ],
    [
      "systems/evo/proposals/assembler.py::ProposalAssembler::_score_risk",
      "get"
    ],
    [
      "systems/evo/proposals/review.py::ProposalReview::__init__",
      "SpecValidators"
    ],
    [
      "systems/evo/proposals/review.py::ProposalReview::review",
      "check_obligation_presence"
    ],
    [
      "systems/evo/proposals/review.py::ProposalReview::review",
      "check_rollback_contract"
    ],
    [
      "systems/evo/proposals/review.py::ProposalReview::review",
      "extend"
    ],
    [
      "systems/evo/proposals/review.py::ProposalReview::review",
      "hasattr"
    ],
    [
      "systems/evo/replay/manager.py::ReplayCapsuleManager::manifest",
      "dict"
    ],
    [
      "systems/evo/replay/manager.py::ReplayCapsuleManager::manifest",
      "get"
    ],
    [
      "systems/evo/replay/manager.py::ReplayCapsuleManager::verify",
      "get"
    ],
    [
      "systems/evo/replay/manager.py::ReplayCapsuleManager::verify",
      "get"
    ],
    [
      "systems/evo/replay/manager.py::ReplayCapsuleManager::verify",
      "hexdigest"
    ],
    [
      "systems/evo/replay/manager.py::ReplayCapsuleManager::verify",
      "items"
    ],
    [
      "systems/evo/replay/manager.py::ReplayCapsuleManager::verify",
      "blake2s"
    ],
    [
      "systems/evo/replay/manager.py::ReplayCapsuleManager::verify",
      "encode"
    ],
    [
      "systems/evo/replay/manager.py::ReplayCapsuleManager::verify",
      "dumps"
    ],
    [
      "systems/evo/replay/builder.py::_stable_barcode",
      "encode"
    ],
    [
      "systems/evo/replay/builder.py::_stable_barcode",
      "hexdigest"
    ],
    [
      "systems/evo/replay/builder.py::_stable_barcode",
      "dumps"
    ],
    [
      "systems/evo/replay/builder.py::_stable_barcode",
      "blake2s"
    ],
    [
      "systems/evo/replay/builder.py::ReplayCapsuleBuilder::build",
      "Versions"
    ],
    [
      "systems/evo/replay/builder.py::ReplayCapsuleBuilder::build",
      "Inputs"
    ],
    [
      "systems/evo/replay/builder.py::ReplayCapsuleBuilder::build",
      "Artifacts"
    ],
    [
      "systems/evo/replay/builder.py::ReplayCapsuleBuilder::build",
      "_stable_barcode"
    ],
    [
      "systems/evo/replay/builder.py::ReplayCapsuleBuilder::build",
      "ReplayCapsule"
    ],
    [
      "systems/evo/replay/builder.py::ReplayCapsuleBuilder::build",
      "model_dump"
    ],
    [
      "systems/evo/replay/builder.py::ReplayCapsuleBuilder::build",
      "model_dump"
    ],
    [
      "systems/evo/replay/builder.py::ReplayCapsuleBuilder::build",
      "model_dump"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::score",
      "RuntimeError"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::score",
      "get_running_loop"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::score",
      "run"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::score",
      "score_async"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_per_conflict_features",
      "float"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_per_conflict_features",
      "float"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_per_conflict_features",
      "get"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_per_conflict_features",
      "len"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_per_conflict_features",
      "str"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_per_conflict_features",
      "max"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_per_conflict_features",
      "len"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_per_conflict_features",
      "get"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_combine",
      "sum"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_combine",
      "float"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_combine",
      "float"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_combine",
      "clip"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_combine",
      "clip"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_combine",
      "get"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_combine",
      "get"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_combine",
      "get"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_combine",
      "get"
    ],
    [
      "systems/evo/gates/obviousness.py::ObviousnessGate::_combine",
      "get"
    ],
    [
      "systems/evo/clients/atune_client.py::_hash16",
      "hexdigest"
    ],
    [
      "systems/evo/clients/atune_client.py::_hash16",
      "blake2s"
    ],
    [
      "systems/evo/clients/atune_client.py::_hash16",
      "encode"
    ],
    [
      "systems/evo/clients/atune_client.py::_hash16",
      "repr"
    ],
    [
      "systems/evo/scorecards/exporter.py::_h",
      "hexdigest"
    ],
    [
      "systems/evo/scorecards/exporter.py::_h",
      "blake2s"
    ],
    [
      "systems/evo/scorecards/exporter.py::_h",
      "encode"
    ],
    [
      "systems/evo/scorecards/exporter.py::_h",
      "repr"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "_h"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "round"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "float"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "float"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "float"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/scorecards/exporter.py::ScorecardExporter::build",
      "get"
    ],
    [
      "systems/evo/repair/tracker.py::RepairTracker::record",
      "RepairTicket"
    ],
    [
      "systems/evo/repair/tracker.py::RepairTracker::record",
      "uuid4"
    ],
    [
      "systems/evo/repair/tracker.py::RepairTracker::update",
      "get"
    ],
    [
      "systems/evo/repair/tracker.py::RepairTracker::update",
      "KeyError"
    ],
    [
      "systems/evo/repair/tracker.py::RepairTracker::get",
      "get"
    ],
    [
      "systems/evo/repair/tracker.py::RepairTracker::get",
      "KeyError"
    ],
    [
      "systems/evo/repair/tracker.py::RepairTracker::list",
      "list"
    ],
    [
      "systems/evo/repair/tracker.py::RepairTracker::list",
      "values"
    ],
    [
      "systems/evo/briefs/innovation.py::build_innovation_brief",
      "join"
    ],
    [
      "systems/evo/briefs/innovation.py::build_innovation_brief",
      "dict"
    ],
    [
      "systems/evo/briefs/innovation.py::build_innovation_brief",
      "dict"
    ],
    [
      "systems/evo/briefs/innovation.py::build_innovation_brief",
      "uuid4"
    ],
    [
      "systems/evo/assemble/assembler.py::ProposalAssembler::assemble",
      "Proposal"
    ],
    [
      "systems/evo/assemble/assembler.py::ProposalAssembler::assemble",
      "uuid4"
    ],
    [
      "systems/evo/assemble/assembler.py::ProposalAssembler::get",
      "get"
    ],
    [
      "systems/evo/conflicts/store.py::ConflictStore::intake_conflicts",
      "record_conflict"
    ],
    [
      "systems/evo/conflicts/store.py::ConflictStore::get",
      "get"
    ],
    [
      "systems/evo/conflicts/store.py::ConflictStore::get",
      "KeyError"
    ],
    [
      "systems/evo/conflicts/store.py::ConflictStore::list_open",
      "values"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "defaultdict"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "dict"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "list"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "fromkeys"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "get"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "any"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "append"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_obligations",
      "get"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_rollback",
      "sorted"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_rollback",
      "join"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::derive_rollback",
      "get"
    ],
    [
      "systems/evo/spec/deriver.py::SpecDeriver::impact_table",
      "items"
    ],
    [
      "systems/evo/spec/validators.py::SpecValidators::check_obligation_presence",
      "append"
    ],
    [
      "systems/evo/spec/validators.py::SpecValidators::check_obligation_presence",
      "len"
    ],
    [
      "systems/evo/spec/validators.py::SpecValidators::check_rollback_contract",
      "get"
    ],
    [
      "systems/evo/spec/validators.py::SpecValidators::check_rollback_contract",
      "append"
    ],
    [
      "systems/evo/spec/validators.py::SpecValidators::check_rollback_contract",
      "get"
    ],
    [
      "systems/evo/spec/validators.py::SpecValidators::check_rollback_contract",
      "append"
    ],
    [
      "systems/evo/journal/ledger.py::_neo_safe_exc",
      "lower"
    ],
    [
      "systems/evo/journal/ledger.py::_neo_safe_exc",
      "str"
    ],
    [
      "systems/evo/routing/payloads.py::RoutingError::__init__",
      "__init__"
    ],
    [
      "systems/evo/routing/payloads.py::RoutingError::__init__",
      "super"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::scan_repo",
      "Path"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::scan_repo",
      "rglob"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::scan_repo",
      "_file_metrics"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::scan_repo",
      "append"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::scan_repo",
      "read_text"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::scan_repo",
      "parse"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::scan_repo",
      "str"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "sum"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "sum"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "count"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "sum"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "sum"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "int"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "isinstance"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "isinstance"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "isinstance"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "isinstance"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "lower"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "max"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "max"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "walk"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "walk"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "walk"
    ],
    [
      "systems/evo/graphs/genome_map.py::GenomeMapper::_file_metrics",
      "walk"
    ],
    [
      "systems/evo/counterexamples/distiller.py::CounterexampleDistiller::distill",
      "list"
    ],
    [
      "systems/evo/counterexamples/distiller.py::CounterexampleDistiller::distill",
      "range"
    ],
    [
      "systems/evo/counterexamples/distiller.py::CounterexampleDistiller::distill",
      "splitter"
    ],
    [
      "systems/evo/counterexamples/distiller.py::CounterexampleDistiller::distill",
      "range"
    ],
    [
      "systems/evo/counterexamples/distiller.py::CounterexampleDistiller::distill",
      "joiner"
    ],
    [
      "systems/evo/counterexamples/distiller.py::CounterexampleDistiller::distill",
      "len"
    ],
    [
      "systems/evo/counterexamples/distiller.py::CounterexampleDistiller::distill",
      "joiner"
    ],
    [
      "systems/evo/counterexamples/distiller.py::CounterexampleDistiller::distill",
      "test_fn"
    ],
    [
      "systems/evo/counterexamples/distiller.py::CounterexampleDistiller::distill",
      "pop"
    ],
    [
      "systems/evo/policies/sentinel.py::PolicySentinel::__init__",
      "RouterService"
    ],
    [
      "systems/evo/metrics/harvesters.py::_ms",
      "float"
    ],
    [
      "systems/evo/metrics/harvesters.py::_ms",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::_ms",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::_avg",
      "float"
    ],
    [
      "systems/evo/metrics/harvesters.py::_avg",
      "sum"
    ],
    [
      "systems/evo/metrics/harvesters.py::_avg",
      "len"
    ],
    [
      "systems/evo/metrics/harvesters.py::_get_score",
      "float"
    ],
    [
      "systems/evo/metrics/harvesters.py::_get_score",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::_get_score",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::build_nova_metrics",
      "list"
    ],
    [
      "systems/evo/metrics/harvesters.py::build_nova_metrics",
      "_ms"
    ],
    [
      "systems/evo/metrics/harvesters.py::build_nova_metrics",
      "_ms"
    ],
    [
      "systems/evo/metrics/harvesters.py::build_nova_metrics",
      "_ms"
    ],
    [
      "systems/evo/metrics/harvesters.py::build_nova_metrics",
      "len"
    ],
    [
      "systems/evo/metrics/harvesters.py::build_nova_metrics",
      "len"
    ],
    [
      "systems/evo/metrics/harvesters.py::build_nova_metrics",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "append"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "append"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "append"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "append"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "_avg"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "_avg"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "_avg"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "_avg"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "float"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "float"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "float"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "float"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::derive_eval_metrics",
      "get"
    ],
    [
      "systems/evo/metrics/harvesters.py::merge_metrics",
      "dict"
    ],
    [
      "systems/evo/metrics/harvesters.py::merge_metrics",
      "items"
    ],
    [
      "systems/evo/metrics/harvesters.py::merge_metrics",
      "items"
    ],
    [
      "systems/nova/ledger/ledger.py::_barcode",
      "blake2s"
    ],
    [
      "systems/nova/ledger/ledger.py::_barcode",
      "update"
    ],
    [
      "systems/nova/ledger/ledger.py::_barcode",
      "hexdigest"
    ],
    [
      "systems/nova/ledger/ledger.py::_barcode",
      "encode"
    ],
    [
      "systems/nova/ledger/ledger.py::_barcode",
      "repr"
    ],
    [
      "systems/nova/ledger/ledger.py::_barcode",
      "sorted"
    ],
    [
      "systems/nova/ledger/ledger.py::_barcode",
      "items"
    ],
    [
      "systems/nova/ledger/ledger.py::_as_dict",
      "hasattr"
    ],
    [
      "systems/nova/ledger/ledger.py::_as_dict",
      "dict"
    ],
    [
      "systems/nova/ledger/ledger.py::_as_dict",
      "dict"
    ],
    [
      "systems/nova/runners/playbook_runner.py::PlaybookRunner::__init__",
      "__init__"
    ],
    [
      "systems/nova/runners/playbook_runner.py::PlaybookRunner::__init__",
      "PlaybookHotReloader"
    ],
    [
      "systems/nova/runners/playbook_runner.py::PlaybookRunner::__init__",
      "MechanismMutator"
    ],
    [
      "systems/nova/runners/playbook_runner.py::PlaybookRunner::__init__",
      "_refresh_registry"
    ],
    [
      "systems/nova/runners/playbook_runner.py::PlaybookRunner::__init__",
      "super"
    ],
    [
      "systems/nova/runners/playbook_runner.py::PlaybookRunner::_refresh_registry",
      "check_reload"
    ],
    [
      "systems/nova/runners/playbook_runner.py::PlaybookRunner::_refresh_registry",
      "pb"
    ],
    [
      "systems/nova/runners/auction_client.py::_value",
      "float"
    ],
    [
      "systems/nova/runners/auction_client.py::_value",
      "float"
    ],
    [
      "systems/nova/runners/auction_client.py::_value",
      "get"
    ],
    [
      "systems/nova/runners/auction_client.py::_value",
      "float"
    ],
    [
      "systems/nova/runners/auction_client.py::_value",
      "get"
    ],
    [
      "systems/nova/runners/auction_client.py::_value",
      "get"
    ],
    [
      "systems/nova/runners/auction_client.py::_receipt_hash",
      "hexdigest"
    ],
    [
      "systems/nova/runners/auction_client.py::_receipt_hash",
      "blake2s"
    ],
    [
      "systems/nova/runners/auction_client.py::_receipt_hash",
      "encode"
    ],
    [
      "systems/nova/runners/auction_client.py::_receipt_hash",
      "repr"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "Plan"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "pop"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "ValidationError"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "Step"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "ValidationError"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "range"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "range"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::compile",
      "lower"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::simulate",
      "dict"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::simulate",
      "setdefault"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::simulate",
      "append"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::simulate",
      "split"
    ],
    [
      "systems/nova/runners/interpreter.py::MechanismInterpreter::simulate",
      "len"
    ],
    [
      "systems/nova/runners/patch_handoff.py::PatchHandoff::__init__",
      "SimulaClient"
    ],
    [
      "systems/nova/runners/patch_handoff.py::PatchHandoff::to_brief",
      "SimulaPatchBrief"
    ],
    [
      "systems/nova/runners/patch_handoff.py::PatchHandoff::to_brief",
      "get"
    ],
    [
      "systems/nova/runners/patch_handoff.py::PatchHandoff::to_brief",
      "get"
    ],
    [
      "systems/nova/runners/patch_handoff.py::PatchHandoff::to_brief",
      "uuid4"
    ],
    [
      "systems/nova/runners/portfolio_runner.py::PortfolioRunner::__init__",
      "__init__"
    ],
    [
      "systems/nova/runners/portfolio_runner.py::PortfolioRunner::__init__",
      "SynapseClient"
    ],
    [
      "systems/nova/runners/portfolio_runner.py::PortfolioRunner::__init__",
      "NovaSelfModel"
    ],
    [
      "systems/nova/runners/portfolio_runner.py::PortfolioRunner::__init__",
      "NoveltyReservoir"
    ],
    [
      "systems/nova/runners/portfolio_runner.py::PortfolioRunner::__init__",
      "MetaPlaybookComposer"
    ],
    [
      "systems/nova/runners/portfolio_runner.py::PortfolioRunner::__init__",
      "pb"
    ],
    [
      "systems/nova/runners/portfolio_runner.py::PortfolioRunner::__init__",
      "super"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "Plan"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "pop"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "ValidationError"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "Step"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "ValidationError"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "range"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "range"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "len"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "append"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::compile",
      "lower"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::simulate",
      "dict"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::simulate",
      "setdefault"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::simulate",
      "append"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::simulate",
      "split"
    ],
    [
      "systems/nova/dsl/interpreter.py::MechanismInterpreter::simulate",
      "len"
    ],
    [
      "systems/nova/dsl/lint.py::_has_cycle",
      "append"
    ],
    [
      "systems/nova/dsl/lint.py::_has_cycle",
      "pop"
    ],
    [
      "systems/nova/dsl/lint.py::_has_cycle",
      "range"
    ],
    [
      "systems/nova/dsl/lint.py::_has_cycle",
      "enumerate"
    ],
    [
      "systems/nova/dsl/lint.py::_has_cycle",
      "append"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "get"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "get"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "len"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "_has_cycle"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "LintIssue"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "LintIssue"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "lower"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "append"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "append"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "LintIssue"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "LintIssue"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "isinstance"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "strip"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "len"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "str"
    ],
    [
      "systems/nova/dsl/lint.py::lint_mechanism",
      "get"
    ],
    [
      "systems/nova/dsl/mutate.py::_is_number",
      "isinstance"
    ],
    [
      "systems/nova/dsl/mutate.py::_is_number",
      "isinstance"
    ],
    [
      "systems/nova/dsl/mutate.py::_jiggle_number",
      "max"
    ],
    [
      "systems/nova/dsl/mutate.py::_jiggle_number",
      "abs"
    ],
    [
      "systems/nova/dsl/mutate.py::_jiggle_number",
      "hash"
    ],
    [
      "systems/nova/dsl/mutate.py::_clone_mech",
      "deepcopy"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_jiggle_params",
      "get"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_jiggle_params",
      "list"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_jiggle_params",
      "get"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_jiggle_params",
      "items"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_jiggle_params",
      "_is_number"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_jiggle_params",
      "_jiggle_number"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_jiggle_params",
      "float"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_batch_after_first",
      "get"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_batch_after_first",
      "append"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_batch_after_first",
      "list"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_batch_after_first",
      "append"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_batch_after_first",
      "lower"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_batch_after_first",
      "get"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_batch_after_first",
      "str"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_batch_after_first",
      "len"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_batch_after_first",
      "get"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "get"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "len"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "append"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "append"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "list"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "lower"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "get"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "append"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "append"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "str"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::_ensure_critique_repair_suffix",
      "get"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::mutate_mechanism",
      "_clone_mech"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::mutate_mechanism",
      "_jiggle_params"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::mutate_mechanism",
      "_ensure_batch_after_first"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::mutate_mechanism",
      "_ensure_critique_repair_suffix"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::mutate_mechanism",
      "lint_mechanism"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate",
      "dict"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate",
      "dict"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate",
      "mutate_mechanism"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate",
      "copy"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate",
      "dict"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate",
      "InventionArtifact"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate",
      "dict"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate",
      "setdefault"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate",
      "get"
    ],
    [
      "systems/nova/dsl/mutate.py::MechanismMutator::augment_candidate",
      "uuid4"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::_iter_modules",
      "get"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::_iter_modules",
      "walk_packages"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::_iter_modules",
      "import_module"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::_iter_modules",
      "append"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::_iter_modules",
      "import_module"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::check_reload",
      "time"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::check_reload",
      "_iter_modules"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::check_reload",
      "getsourcefile"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::check_reload",
      "getmtime"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::check_reload",
      "get"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::check_reload",
      "reload"
    ],
    [
      "systems/nova/playbooks/hotreload.py::PlaybookHotReloader::check_reload",
      "isfile"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::__get_pydantic_core_schema__",
      "no_info_after_validator_function"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::__get_pydantic_core_schema__",
      "any_schema"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::__get_pydantic_core_schema__",
      "isinstance"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::__get_pydantic_core_schema__",
      "TypeError"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::_validate",
      "isinstance"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::_validate",
      "TypeError"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "get"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "keys"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "ProofResult"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "set"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "len"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "len"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "len"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "get"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "len"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "get"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "append"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "append"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "append"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "get"
    ],
    [
      "systems/nova/proof/pcc.py::ProofVM::check",
      "keys"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "check"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "list"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "ProofResult"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "get"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "set"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "extend"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "get"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "get"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "append"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "get"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "append"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "set"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "isinstance"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "set"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "set"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "get"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "keys"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "intersection"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "append"
    ],
    [
      "systems/nova/proof/pcc_ext.py::ProofVMExt::check",
      "len"
    ],
    [
      "systems/nova/proof/pyd_types.py::_vm_serialize",
      "hasattr"
    ],
    [
      "systems/nova/proof/pyd_types.py::_vm_serialize",
      "hasattr"
    ],
    [
      "systems/nova/proof/pyd_types.py::_vm_serialize",
      "to_dict"
    ],
    [
      "systems/nova/proof/pyd_types.py::_vm_serialize",
      "dict"
    ],
    [
      "systems/nova/proof/pyd_types.py::_vm_serialize",
      "repr"
    ],
    [
      "systems/nova/clients/simula_client.py::_as_dict",
      "hasattr"
    ],
    [
      "systems/nova/clients/simula_client.py::_as_dict",
      "dict"
    ],
    [
      "systems/nova/clients/simula_client.py::_as_dict",
      "dict"
    ],
    [
      "systems/nova/clients/simula_client.py::_resolve",
      "items"
    ],
    [
      "systems/nova/clients/simula_client.py::_resolve",
      "replace"
    ],
    [
      "systems/nova/clients/simula_client.py::_resolve",
      "len"
    ],
    [
      "systems/nova/clients/simula_client.py::_resolve",
      "next"
    ],
    [
      "systems/nova/clients/simula_client.py::_resolve",
      "rstrip"
    ],
    [
      "systems/nova/clients/simula_client.py::_resolve",
      "iter"
    ],
    [
      "systems/nova/clients/simula_client.py::_resolve",
      "values"
    ],
    [
      "systems/nova/clients/synapse_client.py::SynapseBudgetClient::__init__",
      "bool"
    ],
    [
      "systems/nova/clients/synapse_client.py::SynapseBudgetClient::__init__",
      "getenv"
    ],
    [
      "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::__init__",
      "ProofVMExt"
    ],
    [
      "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::__init__",
      "EquorPolicyClient"
    ],
    [
      "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::__init__",
      "SimulaClient"
    ],
    [
      "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::__init__",
      "NovaLedger"
    ],
    [
      "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::_pick_winners",
      "set"
    ],
    [
      "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::_build_simula_patch_brief",
      "SimulaPatchBrief"
    ],
    [
      "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::_build_simula_patch_brief",
      "get"
    ],
    [
      "systems/nova/pipelines/winner_pipeline.py::WinnerPipeline::_build_simula_patch_brief",
      "get"
    ],
    [
      "systems/nova/insights/self_model.py::_h16",
      "hexdigest"
    ],
    [
      "systems/nova/insights/self_model.py::_h16",
      "blake2s"
    ],
    [
      "systems/nova/insights/self_model.py::_h16",
      "encode"
    ],
    [
      "systems/nova/insights/self_model.py::_h16",
      "repr"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::_sig",
      "_h16"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::_sig",
      "get"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::update",
      "setdefault"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::update",
      "int"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::update",
      "float"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::update",
      "int"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::update",
      "time"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::update",
      "_sig"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::update",
      "ArmStats"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::update",
      "bool"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "_sig"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "sum"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "get"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "ArmStats"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "sqrt"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "items"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "get"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "len"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "ArmStats"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "log"
    ],
    [
      "systems/nova/insights/self_model.py::NovaSelfModel::priors",
      "max"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::_decay",
      "max"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::_decay",
      "max"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::_decay",
      "max"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::_decay",
      "int"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::_decay",
      "int"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::_decay",
      "int"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::_decay",
      "round"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::_decay",
      "round"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::_decay",
      "round"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "Path"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "loads"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "time"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "items"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "exists"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "read_text"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "ArmStats"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "_decay"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "get"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "tuple"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::load",
      "split"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::save",
      "Path"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::save",
      "mkdir"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::save",
      "write_text"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::save",
      "asdict"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::save",
      "dumps"
    ],
    [
      "systems/nova/insights/self_model_store.py::SelfModelStore::save",
      "items"
    ],
    [
      "systems/nova/novelty/reservoir.py::_barcode",
      "hexdigest"
    ],
    [
      "systems/nova/novelty/reservoir.py::_barcode",
      "blake2s"
    ],
    [
      "systems/nova/novelty/reservoir.py::_barcode",
      "encode"
    ],
    [
      "systems/nova/novelty/reservoir.py::_barcode",
      "repr"
    ],
    [
      "systems/nova/novelty/reservoir.py::_barcode",
      "sorted"
    ],
    [
      "systems/nova/novelty/reservoir.py::_barcode",
      "items"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::__init__",
      "set"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::__init__",
      "set"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::key",
      "get"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::key",
      "get"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::key",
      "_barcode"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::key",
      "_barcode"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::key",
      "get"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::key",
      "get"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::accept",
      "key"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::accept",
      "add"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::accept",
      "add"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::filter_portfolio",
      "accept"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::filter_portfolio",
      "append"
    ],
    [
      "systems/nova/novelty/reservoir.py::NoveltyReservoir::filter_portfolio",
      "len"
    ],
    [
      "systems/nova/eval/cost.py::estimate_cost_ms",
      "get"
    ],
    [
      "systems/nova/eval/cost.py::estimate_cost_ms",
      "get"
    ],
    [
      "systems/nova/eval/cost.py::estimate_cost_ms",
      "max"
    ],
    [
      "systems/nova/eval/cost.py::estimate_cost_ms",
      "max"
    ],
    [
      "systems/nova/eval/cost.py::estimate_cost_ms",
      "int"
    ],
    [
      "systems/nova/eval/cost.py::estimate_cost_ms",
      "int"
    ],
    [
      "systems/nova/eval/cost.py::estimate_cost_ms",
      "len"
    ],
    [
      "systems/nova/eval/cost.py::estimate_cost_ms",
      "len"
    ],
    [
      "systems/nova/eval/cost.py::estimate_cost_ms",
      "max"
    ],
    [
      "systems/nova/eval/metrics.py::_clamp",
      "max"
    ],
    [
      "systems/nova/eval/metrics.py::_clamp",
      "min"
    ],
    [
      "systems/nova/eval/metrics.py::mechanism_complexity",
      "len"
    ],
    [
      "systems/nova/eval/metrics.py::mechanism_complexity",
      "len"
    ],
    [
      "systems/nova/eval/metrics.py::mechanism_complexity",
      "_clamp"
    ],
    [
      "systems/nova/eval/metrics.py::mechanism_complexity",
      "get"
    ],
    [
      "systems/nova/eval/metrics.py::mechanism_complexity",
      "get"
    ],
    [
      "systems/nova/eval/metrics.py::risk_hint",
      "len"
    ],
    [
      "systems/nova/eval/metrics.py::risk_hint",
      "len"
    ],
    [
      "systems/nova/eval/metrics.py::risk_hint",
      "_clamp"
    ],
    [
      "systems/nova/eval/metrics.py::risk_hint",
      "get"
    ],
    [
      "systems/nova/eval/metrics.py::risk_hint",
      "get"
    ],
    [
      "systems/nova/eval/metrics.py::risk_hint",
      "max"
    ],
    [
      "systems/nova/eval/metrics.py::fae_composite",
      "mechanism_complexity"
    ],
    [
      "systems/nova/eval/metrics.py::fae_composite",
      "risk_hint"
    ],
    [
      "systems/nova/eval/metrics.py::fae_composite",
      "_clamp"
    ],
    [
      "systems/nova/telemetry/hooks.py::_avg",
      "float"
    ],
    [
      "systems/nova/telemetry/hooks.py::_avg",
      "sum"
    ],
    [
      "systems/nova/telemetry/hooks.py::_avg",
      "len"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_propose",
      "len"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_propose",
      "str"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "str"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "str"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "isinstance"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "isinstance"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "append"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "append"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "append"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "append"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "getattr"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "float"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "float"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "float"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "float"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "_avg"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "_avg"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "_avg"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "_avg"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_evaluate",
      "get"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_auction",
      "isinstance"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_auction",
      "get"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_auction",
      "str"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_auction",
      "getattr"
    ],
    [
      "systems/nova/telemetry/hooks.py::headers_for_auction",
      "len"
    ],
    [
      "systems/qora/client.py::_hdr",
      "getenv"
    ],
    [
      "systems/qora/client.py::_hdr",
      "getenv"
    ],
    [
      "systems/qora/client.py::_clean_params",
      "items"
    ],
    [
      "systems/qora/api_client.py::_qora_key",
      "getenv"
    ],
    [
      "systems/qora/api_client.py::_qora_key",
      "getenv"
    ],
    [
      "systems/qora/api_client.py::_headers",
      "_qora_key"
    ],
    [
      "systems/qora/api_client.py::_headers",
      "str"
    ],
    [
      "systems/qora/api_client.py::_headers",
      "int"
    ],
    [
      "systems/qora/storage.py::load_json",
      "exists"
    ],
    [
      "systems/qora/storage.py::load_json",
      "loads"
    ],
    [
      "systems/qora/storage.py::load_json",
      "read_text"
    ],
    [
      "systems/qora/storage.py::save_json",
      "mkdir"
    ],
    [
      "systems/qora/storage.py::save_json",
      "write_text"
    ],
    [
      "systems/qora/storage.py::save_json",
      "dumps"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_blake",
      "hexdigest"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_blake",
      "blake2b"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_blake",
      "encode"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_read",
      "read_text"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "_read"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "visit"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "parse"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "_extract_tool_meta"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "_infer_module"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "_blake"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "append"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "generic_visit"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "V"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "str"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "get_docstring"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "int"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "bool"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "get_source_segment"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_parse_tools_from_file",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "_extract_tool_meta"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "_infer_module"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "_blake"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "append"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "generic_visit"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "get_docstring"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "int"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "bool"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "get_source_segment"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::V::visit_FunctionDef",
      "get"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_extract_tool_meta",
      "isinstance"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_extract_tool_meta",
      "literal_eval"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_extract_tool_meta",
      "parse"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_extract_tool_meta",
      "strip"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_infer_module",
      "with_suffix"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_infer_module",
      "list"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_infer_module",
      "enumerate"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_infer_module",
      "join"
    ],
    [
      "systems/qora/core/architecture/arch_patrol.py::_infer_module",
      "join"
    ],
    [
      "systems/qora/core/architecture/arch_execution.py::_uid",
      "hexdigest"
    ],
    [
      "systems/qora/core/architecture/arch_execution.py::_uid",
      "blake2b"
    ],
    [
      "systems/qora/core/architecture/arch_execution.py::_uid",
      "encode"
    ],
    [
      "systems/qora/core/architecture/arch_execution.py::_args_imply_external",
      "dumps"
    ],
    [
      "systems/qora/core/architecture/arch_execution.py::_args_imply_external",
      "any"
    ],
    [
      "systems/qora/core/architecture/arch_execution.py::_args_imply_external",
      "lower"
    ],
    [
      "systems/qora/core/architecture/arch_execution.py::_resolve_qualname",
      "split"
    ],
    [
      "systems/qora/core/architecture/arch_execution.py::_resolve_qualname",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "iscoroutinefunction"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "setattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "fn"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "fn"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "log_conflict"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "get_running_loop"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "create_task"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "log_conflict"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "run"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "log_conflict"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_wrap_callable",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::wrapped",
      "fn"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::wrapped",
      "get_running_loop"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::wrapped",
      "create_task"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::wrapped",
      "log_conflict"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::wrapped",
      "run"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::wrapped",
      "log_conflict"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::wrapped",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::wrapped",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::wrapped",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::wrapped",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "list"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "items"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "isinstance"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "_wrap_callable"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "startswith"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "isinstance"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "setattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "staticmethod"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "setattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "setattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "isfunction"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "ismethoddescriptor"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_class",
      "classmethod"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_module",
      "list"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_module",
      "items"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_module",
      "startswith"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_module",
      "isfunction"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_module",
      "vars"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_module",
      "setattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_module",
      "isclass"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_module",
      "getattr"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_module",
      "_wrap_callable"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::_instrument_module",
      "_instrument_class"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::excepthook",
      "run"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::excepthook",
      "old_excepthook"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::excepthook",
      "log_conflict"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::thread_hook",
      "run"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::thread_hook",
      "old_thread_hook"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::thread_hook",
      "log_conflict"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::thread_hook",
      "str"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::async_handler",
      "create_task"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::async_handler",
      "get"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::async_handler",
      "RuntimeError"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::async_handler",
      "log_conflict"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::async_handler",
      "old_async_handler"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::async_handler",
      "get"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::async_handler",
      "get"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::__init__",
      "__init__"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::__init__",
      "super"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::emit",
      "RuntimeError"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::emit",
      "get_running_loop"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::emit",
      "create_task"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::emit",
      "getMessage"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::emit",
      "log_conflict"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::emit",
      "run"
    ],
    [
      "systems/qora/core/immune/auto_instrument.py::ConflictLogHandler::emit",
      "log_conflict"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::_redact",
      "items"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::_redact",
      "lower"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::_redact",
      "isinstance"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::_redact",
      "str"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::_normalize_stack",
      "join"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::_normalize_stack",
      "append"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::_normalize_stack",
      "split"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::make_signature",
      "dumps"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::make_signature",
      "hexdigest"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::make_signature",
      "extract_tb"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::make_signature",
      "_normalize_stack"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::make_signature",
      "sorted"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::make_signature",
      "sha1"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::make_signature",
      "split"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::make_signature",
      "encode"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::make_signature",
      "str"
    ],
    [
      "systems/qora/core/immune/conflict_sdk.py::make_signature",
      "get"
    ],
    [
      "systems/qora/manifest/builder.py::_iter_py",
      "walk"
    ],
    [
      "systems/qora/manifest/builder.py::_iter_py",
      "endswith"
    ],
    [
      "systems/qora/manifest/builder.py::_iter_py",
      "startswith"
    ],
    [
      "systems/qora/manifest/builder.py::_iter_py",
      "replace"
    ],
    [
      "systems/qora/manifest/builder.py::_iter_py",
      "join"
    ],
    [
      "systems/qora/manifest/builder.py::_blake",
      "hexdigest"
    ],
    [
      "systems/qora/manifest/builder.py::_blake",
      "blake2b"
    ],
    [
      "systems/qora/manifest/builder.py::_slice_ref",
      "splitlines"
    ],
    [
      "systems/qora/manifest/builder.py::_slice_ref",
      "join"
    ],
    [
      "systems/qora/manifest/builder.py::_slice_ref",
      "ContentRef"
    ],
    [
      "systems/qora/manifest/builder.py::_slice_ref",
      "ContentRef"
    ],
    [
      "systems/qora/manifest/builder.py::_slice_ref",
      "read"
    ],
    [
      "systems/qora/manifest/builder.py::_slice_ref",
      "_blake"
    ],
    [
      "systems/qora/manifest/builder.py::_slice_ref",
      "max"
    ],
    [
      "systems/qora/manifest/builder.py::_slice_ref",
      "min"
    ],
    [
      "systems/qora/manifest/builder.py::_slice_ref",
      "open"
    ],
    [
      "systems/qora/manifest/builder.py::_slice_ref",
      "len"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_imports",
      "walk"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_imports",
      "isinstance"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_imports",
      "isinstance"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_imports",
      "append"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_imports",
      "append"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_endpoints",
      "enumerate"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_endpoints",
      "splitlines"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_endpoints",
      "finditer"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_endpoints",
      "upper"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_endpoints",
      "append"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_endpoints",
      "group"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_endpoints",
      "get"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "walk"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "isinstance"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "isinstance"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "isinstance"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "any"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "append"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "append"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "str"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "isinstance"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "hasattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "max"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "append"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "getattr"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "len"
    ],
    [
      "systems/qora/manifest/builder.py::_scan_tools_and_models",
      "len"
    ],
    [
      "systems/qora/manifest/engine.py::_file_has_headers",
      "lower"
    ],
    [
      "systems/qora/manifest/engine.py::_file_has_headers",
      "read"
    ],
    [
      "systems/qora/manifest/engine.py::_file_has_headers",
      "open"
    ],
    [
      "systems/qora/manifest/engine.py::run_checks_sync",
      "run"
    ],
    [
      "systems/qora/manifest/engine.py::run_checks_sync",
      "run_checks"
    ],
    [
      "systems/qora/gcb/builder.py::build_gcb",
      "GoldenContextBundle"
    ],
    [
      "systems/qora/gcb/builder.py::build_gcb",
      "append"
    ],
    [
      "systems/qora/gcb/builder.py::build_gcb",
      "Koan"
    ],
    [
      "systems/qora/gcb/builder.py::build_gcb",
      "append"
    ],
    [
      "systems/qora/gcb/builder.py::build_gcb",
      "path"
    ],
    [
      "systems/qora/gcb/builder.py::build_gcb",
      "SnippetRef"
    ],
    [
      "systems/qora/gcb/builder.py::build_gcb",
      "model_dump"
    ],
    [
      "systems/qora/gcb/builder.py::dispatch_gcb_to_simula",
      "get_http_client"
    ],
    [
      "systems/qora/gcb/builder.py::dispatch_gcb_to_simula",
      "path"
    ],
    [
      "systems/qora/gcb/builder.py::dispatch_gcb_to_simula",
      "post"
    ],
    [
      "systems/qora/gcb/builder.py::dispatch_gcb_to_simula",
      "raise_for_status"
    ],
    [
      "systems/qora/gcb/builder.py::dispatch_gcb_to_simula",
      "json"
    ],
    [
      "systems/qora/gcb/builder.py::dispatch_gcb_to_simula",
      "model_dump"
    ],
    [
      "systems/qora/wm/service.py::BlackboardService::_get_client",
      "cast"
    ],
    [
      "systems/qora/wm/service.py::BlackboardService::_get_client",
      "getenv"
    ],
    [
      "systems/qora/wm/service.py::BlackboardService::_get_client",
      "int"
    ],
    [
      "systems/qora/wm/service.py::BlackboardService::_get_client",
      "int"
    ],
    [
      "systems/qora/wm/service.py::BlackboardService::_get_client",
      "info"
    ],
    [
      "systems/qora/wm/service.py::BlackboardService::_get_client",
      "RuntimeError"
    ],
    [
      "systems/qora/wm/service.py::BlackboardService::_get_client",
      "getenv"
    ],
    [
      "systems/qora/wm/service.py::BlackboardService::_get_client",
      "getenv"
    ],
    [
      "systems/qora/wm/service.py::BlackboardService::_get_client",
      "from_url"
    ],
    [
      "systems/qora/wm/service.py::BlackboardService::_get_client",
      "critical"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_split_target",
      "split"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_split_target",
      "join"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_read_ast",
      "read_text"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_read_ast",
      "parse"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_read_ast",
      "Path"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_collect_imports",
      "walk"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_collect_imports",
      "sorted"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_collect_imports",
      "isinstance"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_collect_imports",
      "set"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_collect_imports",
      "isinstance"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_collect_imports",
      "append"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::_collect_imports",
      "append"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "_split_target"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "_read_ast"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "_collect_imports"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "append"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "items"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "exists"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "intersection"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "len"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "append"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "set"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "len"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "sorted"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "list"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "intersection"
    ],
    [
      "systems/qora/wm/service.py::DossierBuilder::dossier",
      "set"
    ],
    [
      "systems/qora/wm/service.py::WMIndex::add_file",
      "Path"
    ],
    [
      "systems/qora/wm/service.py::WMIndex::add_file",
      "is_file"
    ],
    [
      "systems/qora/wm/service.py::WMIndex::add_file",
      "add"
    ],
    [
      "systems/qora/wm/service.py::WMIndex::add_file",
      "str"
    ],
    [
      "systems/qora/wm/service.py::WMIndex::add_file",
      "parse"
    ],
    [
      "systems/qora/wm/service.py::WMIndex::add_file",
      "_collect_imports"
    ],
    [
      "systems/qora/wm/service.py::WMIndex::add_file",
      "read_text"
    ],
    [
      "systems/qora/wm/service.py::WMIndex::add_file",
      "str"
    ],
    [
      "systems/qora/wm/service.py::WMIndex::add_file",
      "str"
    ],
    [
      "systems/qora/wm/service.py::WMService::index_file",
      "add_file"
    ],
    [
      "systems/qora/wm/service.py::WMService::dossier",
      "dossier"
    ],
    [
      "systems/qora/wm/service.py::WMService::subgraph",
      "_split_target"
    ],
    [
      "systems/qora/wm/service.py::WMService::subgraph",
      "str"
    ],
    [
      "systems/qora/wm/service.py::WMService::subgraph",
      "set"
    ],
    [
      "systems/qora/wm/service.py::WMService::subgraph",
      "items"
    ],
    [
      "systems/qora/wm/service.py::WMService::subgraph",
      "Path"
    ],
    [
      "systems/qora/wm/service.py::WMService::subgraph",
      "exists"
    ],
    [
      "systems/qora/wm/service.py::WMService::subgraph",
      "get"
    ],
    [
      "systems/qora/wm/service.py::WMService::subgraph",
      "intersection"
    ],
    [
      "systems/qora/wm/service.py::WMService::subgraph",
      "append"
    ],
    [
      "systems/qora/wm/service.py::WMService::subgraph",
      "append"
    ],
    [
      "systems/qora/wm/indexer.py::_iter_py",
      "Path"
    ],
    [
      "systems/qora/wm/indexer.py::_iter_py",
      "rglob"
    ],
    [
      "systems/qora/wm/indexer.py::_iter_py",
      "str"
    ],
    [
      "systems/qora/wm/indexer.py::_iter_py",
      "any"
    ],
    [
      "systems/qora/wm/indexer.py::bootstrap_index",
      "_iter_py"
    ],
    [
      "systems/qora/wm/indexer.py::bootstrap_index",
      "index_file"
    ],
    [
      "systems/qora/index/hot_path.py::symbol_slice",
      "lru_cache"
    ],
    [
      "systems/qora/index/hot_path.py::symbol_slice",
      "Path"
    ],
    [
      "systems/qora/index/hot_path.py::symbol_slice",
      "exists"
    ],
    [
      "systems/qora/index/hot_path.py::symbol_slice",
      "time"
    ],
    [
      "systems/qora/index/hot_path.py::symbol_slice",
      "split"
    ],
    [
      "systems/qora/index/hot_path.py::symbol_slice",
      "exists"
    ],
    [
      "systems/qora/index/hot_path.py::symbol_slice",
      "exists"
    ],
    [
      "systems/qora/index/hot_path.py::symbol_slice",
      "stat"
    ],
    [
      "systems/qora/index/hot_path.py::symbol_slice",
      "stat"
    ],
    [
      "systems/qora/dossier/merger.py::merge",
      "len"
    ],
    [
      "systems/qora/service/security.py::require_qora_key",
      "Header"
    ],
    [
      "systems/qora/service/security.py::require_qora_key",
      "getenv"
    ],
    [
      "systems/qora/service/security.py::require_qora_key",
      "HTTPException"
    ],
    [
      "systems/qora/policy/packs.py::list_packs",
      "sorted"
    ],
    [
      "systems/qora/policy/packs.py::list_packs",
      "glob"
    ],
    [
      "systems/qora/policy/packs.py::write_pack",
      "write_text"
    ],
    [
      "systems/qora/policy/packs.py::write_pack",
      "dumps"
    ],
    [
      "systems/qora/policy/packs.py::read_pack",
      "loads"
    ],
    [
      "systems/qora/policy/packs.py::read_pack",
      "exists"
    ],
    [
      "systems/qora/policy/packs.py::read_pack",
      "read_text"
    ],
    [
      "systems/synk/core/tools/clusters.py::_centroid",
      "mean"
    ],
    [
      "systems/synk/core/tools/clusters.py::_centroid",
      "tolist"
    ],
    [
      "systems/synk/core/tools/clusters.py::_centroid",
      "norm"
    ],
    [
      "systems/synk/core/tools/clusters.py::_centroid",
      "astype"
    ],
    [
      "systems/synk/core/tools/mesa.py::CustomModel::__init__",
      "RandomActivation"
    ],
    [
      "systems/synk/core/tools/mesa.py::CustomModel::__init__",
      "range"
    ],
    [
      "systems/synk/core/tools/mesa.py::CustomModel::__init__",
      "DataCollector"
    ],
    [
      "systems/synk/core/tools/mesa.py::CustomModel::__init__",
      "agent_class"
    ],
    [
      "systems/synk/core/tools/mesa.py::CustomModel::__init__",
      "add"
    ],
    [
      "systems/synk/core/tools/mesa.py::CustomModel::step",
      "step"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::choose_k",
      "int"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::choose_k",
      "int"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::choose_k",
      "max"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::choose_k",
      "max"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::choose_k",
      "min"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::choose_k",
      "min"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::choose_k",
      "min"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::choose_k",
      "floor"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::choose_k",
      "sqrt"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "default_rng"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "min"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "choice"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "copy"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "range"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "sum"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "argmin"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "empty_like"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "range"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "astype"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "zeros"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "any"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "zeros"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "mean"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "integers"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::kmeans_numpy",
      "allclose"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::try_sklearn_kmeans",
      "min"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::try_sklearn_kmeans",
      "astype"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::try_sklearn_kmeans",
      "KMeans"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::try_sklearn_kmeans",
      "KMeans"
    ],
    [
      "systems/synk/core/tools/native_clustering.py::try_sklearn_kmeans",
      "fit_predict"
    ],
    [
      "systems/synk/core/tools/neo.py::_safe_neo_props",
      "isinstance"
    ],
    [
      "systems/synk/core/tools/neo.py::_safe_neo_props",
      "_safe"
    ],
    [
      "systems/synk/core/tools/neo.py::_safe_neo_props",
      "dumps"
    ],
    [
      "systems/synk/core/tools/neo.py::_safe_neo_props",
      "items"
    ],
    [
      "systems/synk/core/tools/neo.py::_safe",
      "isinstance"
    ],
    [
      "systems/synk/core/tools/neo.py::_safe",
      "dumps"
    ],
    [
      "systems/synk/core/tools/neo.py::_get_or_make_event_id",
      "get"
    ],
    [
      "systems/synk/core/tools/neo.py::_get_or_make_event_id",
      "str"
    ],
    [
      "systems/synk/core/tools/neo.py::_get_or_make_event_id",
      "uuid4"
    ],
    [
      "systems/synk/core/tools/neo.py::matcher_str",
      "join"
    ],
    [
      "systems/synk/core/tools/neo.py::_ensure_list",
      "isinstance"
    ],
    [
      "systems/synk/core/tools/neo.py::_ensure_list",
      "isinstance"
    ],
    [
      "systems/synk/core/tools/neo.py::_ensure_list",
      "loads"
    ],
    [
      "systems/synk/core/tools/neo.py::_ensure_list",
      "isinstance"
    ],
    [
      "systems/synk/core/tools/neo.py::_ensure_list",
      "float"
    ],
    [
      "systems/synk/core/tools/neo.py::_ensure_list",
      "float"
    ],
    [
      "systems/synk/core/tools/vector_store.py::_index_name",
      "replace"
    ],
    [
      "systems/synk/core/tools/vector_store.py::_index_name",
      "lower"
    ],
    [
      "systems/synk/core/tools/vector_store.py::_index_name",
      "lower"
    ],
    [
      "systems/synk/core/tools/vector_store.py::_quote_ident",
      "replace"
    ],
    [
      "systems/synk/core/switchboard/client.py::Switchboard::__init__",
      "int"
    ],
    [
      "systems/synk/core/switchboard/client.py::Switchboard::__init__",
      "Lock"
    ],
    [
      "systems/synk/core/switchboard/flag_deps.py::require_flag_true",
      "Depends"
    ],
    [
      "systems/synk/core/switchboard/flag_deps.py::require_flag_true",
      "HTTPException"
    ],
    [
      "systems/synk/core/switchboard/flag_deps.py::require_flag_true",
      "get_bool"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::route_gate",
      "Depends"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::route_gate",
      "RuntimeError"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::route_gate",
      "HTTPException"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::route_gate",
      "gate"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_async",
      "wraps"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_async",
      "gate"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_async",
      "fn"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "wraps"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "gate"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "fn"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_sync",
      "wraps"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_sync",
      "get_running_loop"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_sync",
      "fn"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_sync",
      "gate"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_sync",
      "run"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_sync",
      "run_until_complete"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_sync",
      "_check"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_sync",
      "is_running"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::gated_sync",
      "_check"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "wraps"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "get_running_loop"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "fn"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "gate"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "run"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "run_until_complete"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "_check"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "is_running"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::deco",
      "_check"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::wrapper",
      "wraps"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::wrapper",
      "get_running_loop"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::wrapper",
      "fn"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::wrapper",
      "gate"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::wrapper",
      "run"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::wrapper",
      "run_until_complete"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::wrapper",
      "_check"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::wrapper",
      "is_running"
    ],
    [
      "systems/synk/core/switchboard/gatekit.py::wrapper",
      "_check"
    ],
    [
      "systems/thread/core/identity_shift.py::_safe_label",
      "sub"
    ],
    [
      "systems/thread/core/identity_shift.py::_safe_label",
      "strip"
    ],
    [
      "systems/thread/core/identity_shift_prompts.py::build_identity_shift_prompt",
      "join"
    ],
    [
      "systems/thread/core/identity_shift_prompts.py::build_identity_shift_prompt",
      "join"
    ],
    [
      "systems/thread/core/identity_shift_prompts.py::build_identity_shift_prompt",
      "get"
    ],
    [
      "systems/thread/core/identity_shift_prompts.py::build_identity_shift_prompt",
      "chr"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "isinstance"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "isinstance"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "getattr"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "callable"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "getattr"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "isinstance"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "str"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "isinstance"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "str"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "md"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "list"
    ],
    [
      "systems/unity/core/neo/graph_writes.py::_jsonable",
      "items"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::__new__",
      "__new__"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::__new__",
      "super"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "items"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "sum"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "get"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "clip"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "clip"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "log"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "log"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "append"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "var"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "float"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "float"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "exp"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "len"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "list"
    ],
    [
      "systems/unity/core/room/adjudicator.py::Adjudicator::_bayesian_aggregation",
      "values"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_as_dict",
      "hasattr"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_as_dict",
      "hasattr"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_as_dict",
      "loads"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_as_dict",
      "model_dump"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_as_dict",
      "dict"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_as_dict",
      "dumps"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_as_dict",
      "str"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_as_dict",
      "getattr"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_as_dict",
      "str"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_risk_level_from_urgency",
      "get"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_risk_level_from_urgency",
      "lower"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_risk_level_from_urgency",
      "strip"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_pick_protocol_from_selection",
      "_as_dict"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_pick_protocol_from_selection",
      "get"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_pick_protocol_from_selection",
      "get"
    ],
    [
      "systems/unity/core/room/orchestrator.py::_pick_protocol_from_selection",
      "get"
    ],
    [
      "systems/unity/core/room/orchestrator.py::DeliberationManager::__new__",
      "__new__"
    ],
    [
      "systems/unity/core/room/orchestrator.py::DeliberationManager::__new__",
      "subscribe"
    ],
    [
      "systems/unity/core/room/orchestrator.py::DeliberationManager::__new__",
      "isawaitable"
    ],
    [
      "systems/unity/core/room/orchestrator.py::DeliberationManager::__new__",
      "create_task"
    ],
    [
      "systems/unity/core/room/orchestrator.py::DeliberationManager::__new__",
      "super"
    ],
    [
      "systems/unity/core/room/participants.py::ParticipantRegistry::__new__",
      "__new__"
    ],
    [
      "systems/unity/core/room/participants.py::ParticipantRegistry::__new__",
      "super"
    ],
    [
      "systems/unity/core/room/participants.py::ParticipantRegistry::get_role_info",
      "get"
    ],
    [
      "systems/unity/core/room/participants.py::ParticipantRegistry::list_roles",
      "list"
    ],
    [
      "systems/unity/core/room/participants.py::ParticipantRegistry::list_roles",
      "keys"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::__init__",
      "defaultdict"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::__init__",
      "defaultdict"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::__init__",
      "defaultdict"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::__init__",
      "defaultdict"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::__init__",
      "defaultdict"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_claim",
      "get"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "strip"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "_ensure_node"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "_ensure_node"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "append"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "ValueError"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "add"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "add"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "add"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "add"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "upper"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::add_inference",
      "str"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_support_ancestry",
      "set"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_support_ancestry",
      "set"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_support_ancestry",
      "set"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_support_ancestry",
      "pop"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_support_ancestry",
      "add"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_support_ancestry",
      "add"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_support_ancestry",
      "get"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_support_ancestry",
      "discard"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_support_ancestry",
      "append"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_collect_base_leaves",
      "set"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_collect_base_leaves",
      "len"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_collect_base_leaves",
      "add"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_collect_base_leaves",
      "get"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_collect_base_leaves",
      "set"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_defended_filter",
      "set"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_defended_filter",
      "get"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_defended_filter",
      "set"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_defended_filter",
      "add"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_defended_filter",
      "any"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_defended_filter",
      "add"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_defended_filter",
      "get"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::_defended_filter",
      "set"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::get_minimal_assumption_set",
      "_support_ancestry"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::get_minimal_assumption_set",
      "_collect_base_leaves"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::get_minimal_assumption_set",
      "_defended_filter"
    ],
    [
      "systems/unity/core/room/argument_map.py::ArgumentMiner::get_minimal_assumption_set",
      "set"
    ],
    [
      "systems/unity/core/protocols/debate.py::_truncate",
      "int"
    ],
    [
      "systems/unity/core/protocols/debate.py::_truncate",
      "max"
    ],
    [
      "systems/unity/core/protocols/debate.py::_truncate",
      "len"
    ],
    [
      "systems/unity/core/protocols/debate.py::_dig",
      "isinstance"
    ],
    [
      "systems/unity/core/protocols/debate.py::_dig",
      "get"
    ],
    [
      "systems/unity/core/protocols/debate.py::_dig",
      "getattr"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "_dig"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "isinstance"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "isinstance"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "isinstance"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "isinstance"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "isinstance"
    ],
    [
      "systems/unity/core/protocols/debate.py::_champion_arm_id",
      "get"
    ],
    [
      "systems/unity/core/protocols/debate.py::DebateProtocol::__init__",
      "Adjudicator"
    ],
    [
      "systems/unity/core/protocols/critique_and_repair.py::CritiqueAndRepairProtocol::__init__",
      "Adjudicator"
    ],
    [
      "systems/unity/core/protocols/argument_mining.py::ArgumentMiningProtocol::__init__",
      "Adjudicator"
    ],
    [
      "systems/unity/core/protocols/argument_mining.py::ArgumentMiningProtocol::__init__",
      "ArgumentMiner"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "max"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "float"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "float"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "len"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "get"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "get"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "max"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "min"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "get"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "lower"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "str"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_measure_efficiency",
      "get"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "MetaCriticismProposalEvent"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "int"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "float"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "float"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "bool"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "int"
    ],
    [
      "systems/unity/core/protocols/meta_criticism.py::MetaCriticismProtocol::_build_proposal",
      "uuid4"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_to_verdict",
      "isinstance"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_to_verdict",
      "hasattr"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_to_verdict",
      "isinstance"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_to_verdict",
      "ValueError"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_to_verdict",
      "VerdictModel"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_to_verdict",
      "VerdictModel"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_to_verdict",
      "isinstance"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_to_verdict",
      "VerdictModel"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_to_verdict",
      "model_dump"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "append"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "append"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "append"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "append"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "float"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "len"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "max"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "len"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "sum"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "len"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "min"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "max"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "upper"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "zip"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "zip"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "zip"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "min"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::_weighted_aggregate",
      "str"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::FederatedConsensusProtocol::__init__",
      "float"
    ],
    [
      "systems/unity/core/protocols/federated_consensus.py::FederatedConsensusProtocol::__init__",
      "DeliberationManager"
    ],
    [
      "systems/unity/core/protocols/concurrent_competition.py::ConcurrentCompetitionProtocol::__init__",
      "Adjudicator"
    ],
    [
      "systems/unity/core/workspace/global_workspace.py::GlobalWorkspace::__new__",
      "__new__"
    ],
    [
      "systems/unity/core/workspace/global_workspace.py::GlobalWorkspace::__new__",
      "Lock"
    ],
    [
      "systems/unity/core/workspace/global_workspace.py::GlobalWorkspace::__new__",
      "AttentionMechanism"
    ],
    [
      "systems/unity/core/workspace/global_workspace.py::GlobalWorkspace::__new__",
      "bus_subscribe"
    ],
    [
      "systems/unity/core/workspace/global_workspace.py::GlobalWorkspace::__new__",
      "print"
    ],
    [
      "systems/unity/core/workspace/global_workspace.py::GlobalWorkspace::__new__",
      "super"
    ],
    [
      "systems/unity/core/workspace/global_workspace.py::GlobalWorkspace::__new__",
      "print"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::_tok",
      "isinstance"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::_tok",
      "str"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::_tok",
      "lower"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::_tok",
      "findall"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::_clean_keywords",
      "fullmatch"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::_clean_keywords",
      "any"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::_clean_keywords",
      "append"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::_clean_keywords",
      "len"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::_clean_keywords",
      "isalpha"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::__new__",
      "__new__"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::__new__",
      "super"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "_tok"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "get"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "isinstance"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "_tok"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "get"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "get"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "isinstance"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "get"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_last_token_from_state",
      "str"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_unigram_top",
      "sort"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_unigram_top",
      "sum"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_unigram_top",
      "float"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_unigram_top",
      "enumerate"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_unigram_top",
      "len"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_predict_token_topk",
      "_unigram_top"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_compose_argument",
      "lower"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_compose_argument",
      "join"
    ],
    [
      "systems/unity/core/t_o_m/modeler.py::TheoryOfMindEngine::_compose_argument",
      "len"
    ],
    [
      "systems/unity/core/cognition/llm_util.py::on_response",
      "done"
    ],
    [
      "systems/unity/core/cognition/llm_util.py::on_response",
      "set_result"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::safety_veto",
      "check_prohibited"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::safety_veto",
      "list"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::safety_veto",
      "append"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::safety_veto",
      "len"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::safety_veto",
      "sorted"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::safety_veto",
      "set"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::constraint_check",
      "isinstance"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::constraint_check",
      "any"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::constraint_check",
      "lower"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::constraint_check",
      "append"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::constraint_check",
      "any"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::constraint_check",
      "append"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::constraint_check",
      "lower"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::constraint_check",
      "len"
    ],
    [
      "systems/unity/core/cognition/verifiers.py::constraint_check",
      "str"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_coerce_text",
      "isinstance"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_coerce_text",
      "str"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_text_from_spec",
      "strip"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_text_from_spec",
      "getattr"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_text_from_spec",
      "getattr"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_text_from_spec",
      "getattr"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_text_from_spec",
      "isinstance"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_text_from_spec",
      "get"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_text_from_spec",
      "append"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_text_from_spec",
      "join"
    ],
    [
      "systems/unity/core/policy/safety_policy.py::_text_from_spec",
      "_coerce_text"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::log",
      "print"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::convert_dates",
      "isinstance"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::convert_dates",
      "isinstance"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::convert_dates",
      "convert_dates"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::convert_dates",
      "isinstance"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::convert_dates",
      "items"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::convert_dates",
      "convert_dates"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::convert_dates",
      "isoformat"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::convert_dates",
      "to_native"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::__init__",
      "log"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_build_atune_event",
      "str"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_build_atune_event",
      "uuid4"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_build_atune_event",
      "bool"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_build_atune_event",
      "now_iso"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_build_stage1_prompt",
      "strip"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_build_stage2_prompt",
      "dumps"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_build_stage2_prompt",
      "bool"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_parse_tool_queries",
      "loads"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_apply_censorship",
      "join"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_apply_censorship",
      "strip"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_apply_censorship",
      "split"
    ],
    [
      "systems/voxis/core/voxis_pipeline.py::VoxisPipeline::_apply_censorship",
      "lower"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionConflictError::__init__",
      "__init__"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionConflictError::__init__",
      "super"
    ],
    [
      "systems/equor/core/identity/constitution.py::PredicateUnsatisfiedError::__init__",
      "__init__"
    ],
    [
      "systems/equor/core/identity/constitution.py::PredicateUnsatisfiedError::__init__",
      "super"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::__new__",
      "__new__"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::__new__",
      "Interpreter"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::__new__",
      "super"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::_evaluate_predicate",
      "eval"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::_evaluate_predicate",
      "print"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::check_formal_guards",
      "print"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::check_formal_guards",
      "get"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::check_formal_guards",
      "_evaluate_predicate"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::check_formal_guards",
      "PredicateUnsatisfiedError"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::apply_precedence",
      "sorted"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::apply_precedence",
      "get"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::apply_precedence",
      "get"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::apply_precedence",
      "get"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::apply_precedence",
      "get"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::check_for_conflicts",
      "get"
    ],
    [
      "systems/equor/core/identity/constitution.py::ConstitutionService::check_for_conflicts",
      "ConstitutionConflictError"
    ],
    [
      "systems/equor/core/identity/registry.py::_ensure_list",
      "isinstance"
    ],
    [
      "systems/equor/core/identity/registry.py::_ensure_list",
      "isinstance"
    ],
    [
      "systems/equor/core/identity/registry.py::_ensure_list",
      "list"
    ],
    [
      "systems/equor/core/identity/registry.py::_dedupe_preserve_order",
      "set"
    ],
    [
      "systems/equor/core/identity/registry.py::_dedupe_preserve_order",
      "add"
    ],
    [
      "systems/equor/core/identity/registry.py::_dedupe_preserve_order",
      "append"
    ],
    [
      "systems/equor/core/identity/registry.py::_node_id",
      "isinstance"
    ],
    [
      "systems/equor/core/identity/registry.py::_node_id",
      "isinstance"
    ],
    [
      "systems/equor/core/identity/registry.py::_node_id",
      "get"
    ],
    [
      "systems/equor/core/identity/registry.py::_node_id",
      "isinstance"
    ],
    [
      "systems/equor/core/identity/registry.py::_node_id",
      "str"
    ],
    [
      "systems/equor/core/identity/registry.py::_node_id",
      "get"
    ],
    [
      "systems/equor/core/identity/registry.py::_node_id",
      "isinstance"
    ],
    [
      "systems/equor/core/identity/registry.py::_node_id",
      "str"
    ],
    [
      "systems/equor/core/identity/registry.py::_has_label",
      "get"
    ],
    [
      "systems/equor/core/identity/registry.py::_has_label",
      "isinstance"
    ],
    [
      "systems/equor/core/identity/registry.py::_has_label",
      "isinstance"
    ],
    [
      "systems/equor/core/identity/registry.py::_has_label",
      "get"
    ],
    [
      "systems/equor/core/identity/registry.py::_has_label",
      "endswith"
    ],
    [
      "systems/equor/core/identity/registry.py::_has_label",
      "startswith"
    ],
    [
      "systems/equor/core/identity/registry.py::IdentityRegistry::__new__",
      "__new__"
    ],
    [
      "systems/equor/core/identity/registry.py::IdentityRegistry::__new__",
      "super"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::__new__",
      "__new__"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::__new__",
      "IdentityRegistry"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::__new__",
      "ConstitutionService"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::__new__",
      "super"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "sorted"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "enumerate"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "join"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "get"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "append"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "get"
    ],
    [
      "systems/equor/core/identity/composer.py::PromptComposer::_format_patch_text",
      "get"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::HomeostasisMonitor::__new__",
      "__new__"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::HomeostasisMonitor::__new__",
      "PromptComposer"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::HomeostasisMonitor::__new__",
      "super"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::HomeostasisMonitor::get_monitor_for_agent",
      "AgentMonitor"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::__init__",
      "int"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::__init__",
      "float"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::__init__",
      "deque"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::__init__",
      "deque"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::__init__",
      "max"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::__init__",
      "min"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::__init__",
      "max"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::should_alert",
      "float"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::should_alert",
      "float"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::should_alert",
      "debug"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::should_alert",
      "len"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::should_alert",
      "max"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::should_alert",
      "mean"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::should_alert",
      "monotonic"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::reset_alert_trigger",
      "monotonic"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report",
      "DriftReport"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report",
      "float"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report",
      "float"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report",
      "mean"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report",
      "std"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report",
      "int"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report",
      "sum"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report",
      "len"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report",
      "len"
    ],
    [
      "systems/equor/core/identity/homeostasis.py::AgentMonitor::generate_report",
      "float"
    ],
    [
      "systems/equor/core/identity/invariants.py::InvariantAuditor::__new__",
      "__new__"
    ],
    [
      "systems/equor/core/identity/invariants.py::InvariantAuditor::__new__",
      "super"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::to_npz",
      "Path"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::to_npz",
      "mkdir"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::to_npz",
      "savez_compressed"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::to_npz",
      "array"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::from_npz",
      "load"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::from_npz",
      "_AEWeights"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::from_npz",
      "Path"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::from_npz",
      "int"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::from_npz",
      "int"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::from_npz",
      "int"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::from_npz",
      "astype"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::from_npz",
      "astype"
    ],
    [
      "systems/equor/core/qualia/manifold.py::_AEWeights::from_npz",
      "astype"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::__init__",
      "int"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::__init__",
      "int"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::__init__",
      "float"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::__init__",
      "zeros"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::__init__",
      "zeros"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::__init__",
      "zeros"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::__init__",
      "range"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::__init__",
      "info"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::__init__",
      "ValueError"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::save_weights",
      "to_npz"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::save_weights",
      "info"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::save_weights",
      "_AEWeights"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::load_weights",
      "from_npz"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::load_weights",
      "info"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::load_weights",
      "ValueError"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_std",
      "sqrt"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_std",
      "ones_like"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_std",
      "max"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_std",
      "maximum"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_standardize",
      "_std"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_eta",
      "max"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_eta",
      "sqrt"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_eta",
      "max"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::_eta",
      "float"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::encode",
      "reshape"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::encode",
      "_standardize"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::encode",
      "ValueError"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::encode",
      "asarray"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update",
      "reshape"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update",
      "_update_stats"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update",
      "_standardize"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update",
      "_eta"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update",
      "zeros"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update",
      "range"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update",
      "ValueError"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update",
      "float"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update",
      "norm"
    ],
    [
      "systems/equor/core/qualia/manifold.py::TrainedAutoencoder::update",
      "asarray"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::__new__",
      "__new__"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::__new__",
      "_init_model"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::__new__",
      "super"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::_init_model",
      "TrainedAutoencoder"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::load_model_weights",
      "load_weights"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "array"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "encode"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "update"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "QualiaState"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "float"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "isoformat"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "tolist"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "float"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "float"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "float"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "now"
    ],
    [
      "systems/equor/core/qualia/manifold.py::QualiaManifold::process_metrics",
      "uuid4"
    ],
    [
      "systems/equor/core/qualia/manifold.py::StateLogger::__new__",
      "__new__"
    ],
    [
      "systems/equor/core/qualia/manifold.py::StateLogger::__new__",
      "QualiaManifold"
    ],
    [
      "systems/equor/core/qualia/manifold.py::StateLogger::__new__",
      "super"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_models_dir",
      "getenv"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_models_dir",
      "resolve"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_models_dir",
      "mkdir"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_models_dir",
      "Path"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_artifact_paths",
      "strftime"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_artifact_paths",
      "_models_dir"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_artifact_paths",
      "now"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_std_from",
      "sqrt"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_std_from",
      "getattr"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_std_from",
      "ones_like"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_std_from",
      "max"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_std_from",
      "maximum"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_std_from",
      "int"
    ],
    [
      "systems/equor/core/qualia/trainer.py::_reconstruct",
      "_std_from"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_prime_stats",
      "mean"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_prime_stats",
      "astype"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_prime_stats",
      "astype"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_prime_stats",
      "int"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_prime_stats",
      "var"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_prime_stats",
      "ones"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_prime_stats",
      "maximum"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_prime_stats",
      "max"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_epoch_loss",
      "range"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_epoch_loss",
      "_reconstruct"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_epoch_loss",
      "float"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_epoch_loss",
      "float"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::_epoch_loss",
      "dot"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train",
      "info"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train",
      "_prime_stats"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train",
      "arange"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train",
      "range"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train",
      "_epoch_loss"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train",
      "info"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train",
      "ValueError"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train",
      "getattr"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train",
      "shuffle"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::train",
      "update"
    ],
    [
      "systems/equor/core/qualia/trainer.py::AutoencoderTrainer::save_weights",
      "save_weights"
    ],
    [
      "systems/equor/core/qualia/trainer.py::ManifoldTrainer::__new__",
      "__new__"
    ],
    [
      "systems/equor/core/qualia/trainer.py::ManifoldTrainer::__new__",
      "get_model"
    ],
    [
      "systems/equor/core/qualia/trainer.py::ManifoldTrainer::__new__",
      "AutoencoderTrainer"
    ],
    [
      "systems/equor/core/qualia/trainer.py::ManifoldTrainer::__new__",
      "super"
    ],
    [
      "systems/equor/core/self/predictor.py::SelfModel::__new__",
      "__new__"
    ],
    [
      "systems/equor/core/self/predictor.py::SelfModel::__new__",
      "super"
    ],
    [
      "systems/equor/kms/keystore.py::_load_keys",
      "getenv"
    ],
    [
      "systems/equor/kms/keystore.py::_load_keys",
      "encode"
    ],
    [
      "systems/equor/kms/keystore.py::_load_keys",
      "loads"
    ],
    [
      "systems/equor/kms/keystore.py::_load_keys",
      "items"
    ],
    [
      "systems/equor/kms/keystore.py::_load_keys",
      "b64decode"
    ],
    [
      "systems/equor/kms/keystore.py::_load_keys",
      "getenv"
    ],
    [
      "systems/equor/kms/keystore.py::get_hmac_key_by_kid",
      "get"
    ],
    [
      "systems/equor/kms/keystore.py::get_hmac_key_by_kid",
      "_load_keys"
    ],
    [
      "systems/equor/kms/keystore.py::list_kids",
      "list"
    ],
    [
      "systems/equor/kms/keystore.py::list_kids",
      "keys"
    ],
    [
      "systems/equor/kms/keystore.py::list_kids",
      "_load_keys"
    ],
    [
      "systems/equor/kms/keystore.py::get_active_kid",
      "getenv"
    ],
    [
      "systems/synapse/core/registry.py::_coerce_policy_graph",
      "isinstance"
    ],
    [
      "systems/synapse/core/registry.py::_coerce_policy_graph",
      "isinstance"
    ],
    [
      "systems/synapse/core/registry.py::_coerce_policy_graph",
      "hasattr"
    ],
    [
      "systems/synapse/core/registry.py::_coerce_policy_graph",
      "PolicyGraph"
    ],
    [
      "systems/synapse/core/registry.py::_coerce_policy_graph",
      "isinstance"
    ],
    [
      "systems/synapse/core/registry.py::_coerce_policy_graph",
      "TypeError"
    ],
    [
      "systems/synapse/core/registry.py::_coerce_policy_graph",
      "model_validate"
    ],
    [
      "systems/synapse/core/registry.py::_coerce_policy_graph",
      "loads"
    ],
    [
      "systems/synapse/core/registry.py::_coerce_policy_graph",
      "ValueError"
    ],
    [
      "systems/synapse/core/registry.py::_coerce_policy_graph",
      "type"
    ],
    [
      "systems/synapse/core/registry.py::_node_effects_says_dangerous",
      "isinstance"
    ],
    [
      "systems/synapse/core/registry.py::_node_effects_says_dangerous",
      "any"
    ],
    [
      "systems/synapse/core/registry.py::_node_effects_says_dangerous",
      "hasattr"
    ],
    [
      "systems/synapse/core/registry.py::_node_effects_says_dangerous",
      "getattr"
    ],
    [
      "systems/synapse/core/registry.py::_node_effects_says_dangerous",
      "isinstance"
    ],
    [
      "systems/synapse/core/registry.py::_node_effects_says_dangerous",
      "isinstance"
    ],
    [
      "systems/synapse/core/registry.py::_node_effects_says_dangerous",
      "get"
    ],
    [
      "systems/synapse/core/registry.py::_node_effects_says_dangerous",
      "set"
    ],
    [
      "systems/synapse/core/registry.py::_default_llm_model",
      "getenv"
    ],
    [
      "systems/synapse/core/registry.py::_noop_pg_dict",
      "_default_llm_model"
    ],
    [
      "systems/synapse/core/registry.py::PolicyArm::__init__",
      "ValueError"
    ],
    [
      "systems/synapse/core/registry.py::PolicyArm::is_safe_fallback",
      "getattr"
    ],
    [
      "systems/synapse/core/registry.py::PolicyArm::is_safe_fallback",
      "_node_effects_says_dangerous"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::__new__",
      "__new__"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::__new__",
      "super"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::__init__",
      "RLock"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::get_arm",
      "get"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::get_arms_for_mode",
      "list"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::get_arms_for_mode",
      "get"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::list_arms_for_mode",
      "get_arms_for_mode"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::list_modes",
      "sorted"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::list_modes",
      "keys"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::all_arm_ids",
      "sorted"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::all_arm_ids",
      "keys"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "_coerce_policy_graph"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "NeuralLinearBanditHead"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "PolicyArm"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "print"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "get"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "get"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "get"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "ValueError"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "getattr"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "append"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "len"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "get"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "len"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "isinstance"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "TypeError"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::add_arm",
      "setdefault"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::get_safe_fallback_arm",
      "ensure_cold_start"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::get_safe_fallback_arm",
      "RuntimeError"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::get_safe_fallback_arm",
      "values"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::get_safe_fallback_arm",
      "values"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::get_safe_fallback_arm",
      "get"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::get_safe_fallback_arm",
      "get"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "__import__"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "RuntimeError"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "any"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "print"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "set"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "_coerce_policy_graph"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "add_arm"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "print"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "getattr"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "len"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "fn"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "fn"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "print"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "keys"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "_noop_pg_dict"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "print"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "_safe_present_for"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "_safe_present_for"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "get"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "signature"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::ensure_cold_start",
      "_safe_present_for"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::_safe_present_for",
      "any"
    ],
    [
      "systems/synapse/core/registry.py::ArmRegistry::_safe_present_for",
      "get"
    ],
    [
      "systems/synapse/core/tactics.py::_stable_seed_from_ctx",
      "int"
    ],
    [
      "systems/synapse/core/tactics.py::_stable_seed_from_ctx",
      "hexdigest"
    ],
    [
      "systems/synapse/core/tactics.py::_stable_seed_from_ctx",
      "sha1"
    ],
    [
      "systems/synapse/core/tactics.py::_stable_seed_from_ctx",
      "encode"
    ],
    [
      "systems/synapse/core/tactics.py::_ensure_1d",
      "asarray"
    ],
    [
      "systems/synapse/core/tactics.py::_ensure_1d",
      "reshape"
    ],
    [
      "systems/synapse/core/tactics.py::_ensure_1d",
      "zeros"
    ],
    [
      "systems/synapse/core/tactics.py::_ensure_1d",
      "getattr"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::__new__",
      "__new__"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::__new__",
      "super"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_candidate_ids_from_request",
      "getattr"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "set"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "Random"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "min"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "_candidate_ids_from_request"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "_stable_seed_from_ctx"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "len"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "sample"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "list"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "list"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "suggest"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_build_candidate_set",
      "values"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_score_candidates",
      "float"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_score_candidates",
      "score"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_score_candidates",
      "isnan"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::_score_candidates",
      "isinf"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "get_arms_for_mode"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "_ensure_1d"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "_build_candidate_set"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "_score_candidates"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "get_arm"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "dict"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "print"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "ValueError"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "encode"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "get_safe_fallback_arm"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "print"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "get_safe_fallback_arm"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "print"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "model_dump"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "zeros"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "getattr"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "sorted"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "get"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "items"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "get"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "len"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::select_arm",
      "getattr"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "get"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "get_arm"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "pop"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "print"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "print"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "print"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "update"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "mark_dirty"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "update"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "float"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "print"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "float"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "print"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::update",
      "float"
    ],
    [
      "systems/synapse/core/tactics.py::TacticalManager::get_last_scores_for_arm",
      "get"
    ],
    [
      "systems/synapse/core/reward.py::_to_json_str",
      "dumps"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::__new__",
      "__new__"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::__new__",
      "super"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::update_scalarization_weights",
      "update"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::update_scalarization_weights",
      "print"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::_norm01",
      "float"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::compute_reward_vector",
      "_norm01"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::compute_reward_vector",
      "get"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::compute_reward_vector",
      "_norm01"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::compute_reward_vector",
      "_norm01"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::compute_reward_vector",
      "_norm01"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::compute_reward_vector",
      "get"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::compute_reward_vector",
      "get"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::compute_reward_vector",
      "get"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::compute_reward_vector",
      "get"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::scalarize_reward",
      "max"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::scalarize_reward",
      "min"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::scalarize_reward",
      "get"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::scalarize_reward",
      "tanh"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::scalarize_reward",
      "get"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::scalarize_reward",
      "get"
    ],
    [
      "systems/synapse/core/reward.py::RewardArbiter::scalarize_reward",
      "get"
    ],
    [
      "systems/synapse/core/planner.py::MetacognitivePlanner::__new__",
      "__new__"
    ],
    [
      "systems/synapse/core/planner.py::MetacognitivePlanner::__new__",
      "super"
    ],
    [
      "systems/synapse/core/firewall.py::NeuroSymbolicFirewall::__new__",
      "__new__"
    ],
    [
      "systems/synapse/core/firewall.py::NeuroSymbolicFirewall::__new__",
      "super"
    ],
    [
      "systems/synapse/core/firewall.py::NeuroSymbolicFirewall::get_safe_fallback_arm",
      "get_safe_fallback_arm"
    ],
    [
      "systems/synapse/core/genesis.py::ToolGenesisModule::__new__",
      "__new__"
    ],
    [
      "systems/synapse/core/genesis.py::ToolGenesisModule::__new__",
      "super"
    ],
    [
      "systems/synapse/core/genesis.py::ToolGenesisModule::on_response",
      "done"
    ],
    [
      "systems/synapse/core/genesis.py::ToolGenesisModule::on_response",
      "set_result"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "isinstance"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "isinstance"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "getattr"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "callable"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "str"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "isinstance"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "getattr"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "str"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "_jsonable"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "md"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "list"
    ],
    [
      "systems/synapse/core/episode.py::_jsonable",
      "items"
    ],
    [
      "systems/synapse/core/arm_genesis.py::_generate_base_graph",
      "model_validate"
    ],
    [
      "systems/synapse/core/arm_genesis.py::_mutations",
      "range"
    ],
    [
      "systems/synapse/core/arm_genesis.py::_mutations",
      "copy"
    ],
    [
      "systems/synapse/core/arm_genesis.py::_mutations",
      "append"
    ],
    [
      "systems/synapse/core/arm_genesis.py::_mutations",
      "max"
    ],
    [
      "systems/synapse/core/arm_genesis.py::_mutations",
      "min"
    ],
    [
      "systems/synapse/core/arm_genesis.py::_mutations",
      "get"
    ],
    [
      "systems/synapse/core/arm_genesis.py::_mutations",
      "randn"
    ],
    [
      "systems/synapse/core/meta_controller.py::_load_json_env",
      "strip"
    ],
    [
      "systems/synapse/core/meta_controller.py::_load_json_env",
      "loads"
    ],
    [
      "systems/synapse/core/meta_controller.py::_load_json_env",
      "getenv"
    ],
    [
      "systems/synapse/core/meta_controller.py::_load_json_env",
      "isinstance"
    ],
    [
      "systems/synapse/core/meta_controller.py::_load_json_env",
      "warning"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_strategy_map",
      "get"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_strategy_map",
      "copy"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_strategy_map",
      "isinstance"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_strategy_map",
      "update"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_strategy_map",
      "get"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_strategy_map",
      "float"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_strategy_map",
      "int"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_strategy_map",
      "get"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_strategy_map",
      "get"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_budget_map",
      "get"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_budget_map",
      "copy"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_budget_map",
      "isinstance"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_budget_map",
      "update"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_budget_map",
      "int"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_budget_map",
      "int"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_budget_map",
      "get"
    ],
    [
      "systems/synapse/core/meta_controller.py::_validate_budget_map",
      "get"
    ],
    [
      "systems/synapse/core/meta_controller.py::MetaController::__new__",
      "__new__"
    ],
    [
      "systems/synapse/core/meta_controller.py::MetaController::__new__",
      "super"
    ],
    [
      "systems/synapse/core/meta_controller.py::MetaController::select_strategy",
      "getattr"
    ],
    [
      "systems/synapse/core/meta_controller.py::MetaController::select_strategy",
      "debug"
    ],
    [
      "systems/synapse/core/meta_controller.py::MetaController::select_strategy",
      "get"
    ],
    [
      "systems/synapse/core/meta_controller.py::MetaController::allocate_budget",
      "getattr"
    ],
    [
      "systems/synapse/core/meta_controller.py::MetaController::allocate_budget",
      "debug"
    ],
    [
      "systems/synapse/core/meta_controller.py::MetaController::allocate_budget",
      "get"
    ],
    [
      "systems/synapse/core/snapshots.py::get_component_version",
      "get"
    ],
    [
      "systems/synapse/core/snapshots.py::get_component_version",
      "getenv"
    ],
    [
      "systems/synapse/core/snapshots.py::stamp",
      "print"
    ],
    [
      "systems/synapse/core/snapshots.py::stamp",
      "get_component_version"
    ],
    [
      "systems/synapse/core/snapshots.py::stamp",
      "get_component_version"
    ],
    [
      "systems/synapse/core/snapshots.py::stamp",
      "get_component_version"
    ],
    [
      "systems/synapse/core/snapshots.py::stamp",
      "get_component_version"
    ],
    [
      "systems/synapse/core/governor.py::_proposal_id",
      "str"
    ],
    [
      "systems/synapse/core/governor.py::_proposal_id",
      "get"
    ],
    [
      "systems/synapse/core/governor.py::_proposal_id",
      "hexdigest"
    ],
    [
      "systems/synapse/core/governor.py::_proposal_id",
      "get"
    ],
    [
      "systems/synapse/core/governor.py::_proposal_id",
      "sha256"
    ],
    [
      "systems/synapse/core/governor.py::_proposal_id",
      "encode"
    ],
    [
      "systems/synapse/core/governor.py::Governor::__new__",
      "__new__"
    ],
    [
      "systems/synapse/core/governor.py::Governor::__new__",
      "super"
    ],
    [
      "systems/synapse/training/meta_controller.py::MetaController::__new__",
      "__new__"
    ],
    [
      "systems/synapse/training/meta_controller.py::MetaController::__new__",
      "super"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::__new__",
      "__new__"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::__new__",
      "super"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "list"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "TaskContext"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "keys"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "choice"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "max"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "random"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "choice"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::_generate_challenging_task_context",
      "choice"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::_update_task_values",
      "get"
    ],
    [
      "systems/synapse/training/adversary.py::AdversarialAgent::_update_task_values",
      "print"
    ],
    [
      "systems/synapse/training/bandit_state.py::mark_dirty",
      "add"
    ],
    [
      "systems/synapse/training/bandit_state.py::_drain_dirty",
      "list"
    ],
    [
      "systems/synapse/training/bandit_state.py::_drain_dirty",
      "set"
    ],
    [
      "systems/synapse/training/bandit_state.py::_drain_dirty",
      "difference_update"
    ],
    [
      "systems/synapse/training/bandit_state.py::_drain_dirty",
      "set"
    ],
    [
      "systems/synapse/training/bandit_state.py::start_background_flusher",
      "get_running_loop"
    ],
    [
      "systems/synapse/training/bandit_state.py::start_background_flusher",
      "create_task"
    ],
    [
      "systems/synapse/training/bandit_state.py::start_background_flusher",
      "print"
    ],
    [
      "systems/synapse/training/bandit_state.py::start_background_flusher",
      "_flusher_loop"
    ],
    [
      "systems/synapse/training/bandit_state.py::start_background_flusher",
      "done"
    ],
    [
      "systems/synapse/training/bandit_state.py::stop_background_flusher",
      "cancel"
    ],
    [
      "systems/synapse/training/bandit_state.py::stop_background_flusher",
      "done"
    ],
    [
      "systems/synapse/training/neural_linear.py::_pack_matrix",
      "tolist"
    ],
    [
      "systems/synapse/training/neural_linear.py::_pack_matrix",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::_pack_matrix",
      "asarray"
    ],
    [
      "systems/synapse/training/neural_linear.py::_pack_matrix",
      "reshape"
    ],
    [
      "systems/synapse/training/neural_linear.py::_pack_matrix",
      "int"
    ],
    [
      "systems/synapse/training/neural_linear.py::_pack_matrix",
      "int"
    ],
    [
      "systems/synapse/training/neural_linear.py::_pack_matrix",
      "astype"
    ],
    [
      "systems/synapse/training/neural_linear.py::_pack_matrix",
      "reshape"
    ],
    [
      "systems/synapse/training/neural_linear.py::_unpack_matrix",
      "reshape"
    ],
    [
      "systems/synapse/training/neural_linear.py::_unpack_matrix",
      "ValueError"
    ],
    [
      "systems/synapse/training/neural_linear.py::_unpack_matrix",
      "int"
    ],
    [
      "systems/synapse/training/neural_linear.py::_unpack_matrix",
      "int"
    ],
    [
      "systems/synapse/training/neural_linear.py::_unpack_matrix",
      "len"
    ],
    [
      "systems/synapse/training/neural_linear.py::_unpack_matrix",
      "asarray"
    ],
    [
      "systems/synapse/training/neural_linear.py::_ensure_col_vec",
      "asarray"
    ],
    [
      "systems/synapse/training/neural_linear.py::_ensure_col_vec",
      "reshape"
    ],
    [
      "systems/synapse/training/neural_linear.py::_ensure_col_vec",
      "ValueError"
    ],
    [
      "systems/synapse/training/neural_linear.py::_stable_cholesky",
      "eye"
    ],
    [
      "systems/synapse/training/neural_linear.py::_stable_cholesky",
      "range"
    ],
    [
      "systems/synapse/training/neural_linear.py::_stable_cholesky",
      "cholesky"
    ],
    [
      "systems/synapse/training/neural_linear.py::_stable_cholesky",
      "cholesky"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "int"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "float"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "float"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "ValueError"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "ValueError"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "ValueError"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "_unpack_matrix"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "_unpack_matrix"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "zeros"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "tuple"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "tuple"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "ValueError"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "ValueError"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::__init__",
      "eye"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::get_state",
      "_pack_matrix"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::get_state",
      "_pack_matrix"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::get_state",
      "list"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::get_state",
      "list"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::_posterior_mean",
      "_stable_cholesky"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::_posterior_mean",
      "solve"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::_posterior_mean",
      "solve"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::sample_theta",
      "_stable_cholesky"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::sample_theta",
      "_posterior_mean"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::sample_theta",
      "normal"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::sample_theta",
      "solve"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::sample_theta",
      "solve"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::get_theta_mean",
      "_posterior_mean"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::score",
      "_ensure_col_vec"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::score",
      "sample_theta"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::score",
      "float"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::score",
      "ravel"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::update",
      "_ensure_col_vec"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::update",
      "float"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::update",
      "ValueError"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearBanditHead::update",
      "float"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "_ensure_heads_mapping"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "all"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "list"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "hasattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "list"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "keys"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::list_arms",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "setattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "setattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "append"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "len"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "len"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "setattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_ensure_heads_mapping",
      "zip"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "_ensure_heads_mapping"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "get"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "next"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "iter"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "hasattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "solve"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "tolist"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "values"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "tolist"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "len"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "getattr"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "list"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::get_theta_mean_for_arm",
      "list"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::__new__",
      "__new__"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::__new__",
      "super"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::__init__",
      "getenv"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::__init__",
      "max"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::__init__",
      "encode"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::__init__",
      "info"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::__init__",
      "int"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::__init__",
      "getenv"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_hidx",
      "digest"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_hidx",
      "from_bytes"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_hidx",
      "max"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_hidx",
      "sha256"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::_hidx",
      "encode"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::encode",
      "zeros"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::encode",
      "items"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::encode",
      "isinstance"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::encode",
      "isfinite"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::encode",
      "_hidx"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::encode",
      "float"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::encode",
      "_hidx"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::encode",
      "float"
    ],
    [
      "systems/synapse/training/neural_linear.py::NeuralLinearArmManager::encode",
      "str"
    ],
    [
      "systems/synapse/training/encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems/synapse/training/encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems/synapse/training/encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems/synapse/training/encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems/synapse/training/encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems/synapse/training/encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems/synapse/training/encoder_trainer.py::EncoderTrainer::train",
      "print"
    ],
    [
      "systems/synapse/training/encoder_trainer.py::EncoderTrainer::EncoderModel::__init__",
      "print"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_risk_score",
      "lower"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_risk_score",
      "startswith"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_risk_score",
      "startswith"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_risk_score",
      "str"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_budget_score",
      "lower"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_budget_score",
      "str"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_safe_len",
      "hasattr"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_safe_len",
      "len"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_safe_len",
      "int"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "_risk_score"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "_budget_score"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "float"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "float"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "float"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "get"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "get"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "_safe_len"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "_safe_len"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "log1p"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "log1p"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "get"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "get"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_vectorize_context",
      "get"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "int"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "asarray"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "asarray"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "get"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "get"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "append"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "append"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "len"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "median"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "get"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "_vectorize_context"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "zeros"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "zeros"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "len"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "_pad"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "isinstance"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "isinstance"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "len"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "len"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "float"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "float"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_build_dataset",
      "len"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_pad",
      "len"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_pad",
      "len"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_standardize",
      "mean"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_standardize",
      "std"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_standardize",
      "where"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_standardize",
      "zeros"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_standardize",
      "ones"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_ridge_fit",
      "ones"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_ridge_fit",
      "hstack"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_ridge_fit",
      "eye"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_ridge_fit",
      "solve"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_ridge_fit",
      "zeros"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_ridge_fit",
      "zeros"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_metrics",
      "float"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_metrics",
      "float"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_metrics",
      "float"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_metrics",
      "mean"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_metrics",
      "sum"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_metrics",
      "sum"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_metrics",
      "float"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_metrics",
      "float"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::_metrics",
      "mean"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::SelfModelTrainer::__new__",
      "__new__"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::SelfModelTrainer::__new__",
      "Lock"
    ],
    [
      "systems/synapse/training/self_model_trainer.py::SelfModelTrainer::__new__",
      "super"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_tok",
      "isinstance"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_tok",
      "str"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_tok",
      "lower"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_tok",
      "findall"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_build_sequences",
      "_tok"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_build_sequences",
      "append"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_build_vocab",
      "Counter"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_build_vocab",
      "update"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_build_vocab",
      "most_common"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_build_vocab",
      "enumerate"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_build_vocab",
      "max"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_id_or_unk",
      "get"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_unigram_bigram_counts",
      "len"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_unigram_bigram_counts",
      "zeros"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_unigram_bigram_counts",
      "zeros"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_unigram_bigram_counts",
      "enumerate"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_unigram_bigram_counts",
      "_id_or_unk"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_perplexity",
      "float"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_perplexity",
      "_id_or_unk"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_perplexity",
      "enumerate"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_perplexity",
      "range"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_evaluate_role",
      "float"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_evaluate_role",
      "range"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_evaluate_role",
      "float"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_evaluate_role",
      "exp"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_evaluate_role",
      "_id_or_unk"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_evaluate_role",
      "len"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_evaluate_role",
      "log"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_topk_table",
      "argsort"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_topk_table",
      "append"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_topk_table",
      "int"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_topk_table",
      "list"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_topk_table",
      "argsort"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_topk_table",
      "int"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_topk_table",
      "int"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_topk_table",
      "float"
    ],
    [
      "systems/synapse/training/tom_trainer.py::_topk_table",
      "int"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::__new__",
      "__new__"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::__new__",
      "Lock"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::__new__",
      "super"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "defaultdict"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "range"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "get"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "len"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "strip"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "str"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "append"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "join"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "append"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "isinstance"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "len"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "append"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "str"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "get"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "get"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "get"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "strip"
    ],
    [
      "systems/synapse/training/tom_trainer.py::TheoryOfMindTrainer::_create_training_samples",
      "get"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_sigmoid",
      "clip"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_sigmoid",
      "exp"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "float"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "str"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "get"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "float"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "sqrt"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "log1p"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "max"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "max"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "get"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "get"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "isinstance"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "len"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "lower"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "isinstance"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_vectorize_cognit",
      "int"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "upper"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "float"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "asarray"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "asarray"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "get"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "append"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "append"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "zeros"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "zeros"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "str"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "get"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "get"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "_vectorize_cognit"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "get"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "isinstance"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "append"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "append"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "get"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_build_samples",
      "_vectorize_cognit"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "default_rng"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "normal"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "range"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "astype"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "arange"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "shuffle"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "range"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "batch_iter"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "errstate"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "_sigmoid"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "float"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "float"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "_sigmoid"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "float"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "mean"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "mean"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "float"
    ],
    [
      "systems/synapse/training/attention_trainer.py::_train_logreg",
      "sum"
    ],
    [
      "systems/synapse/training/attention_trainer.py::batch_iter",
      "arange"
    ],
    [
      "systems/synapse/training/attention_trainer.py::batch_iter",
      "shuffle"
    ],
    [
      "systems/synapse/training/attention_trainer.py::batch_iter",
      "range"
    ],
    [
      "systems/synapse/training/attention_trainer.py::AttentionRankerTrainer::__new__",
      "__new__"
    ],
    [
      "systems/synapse/training/attention_trainer.py::AttentionRankerTrainer::__new__",
      "Lock"
    ],
    [
      "systems/synapse/training/attention_trainer.py::AttentionRankerTrainer::__new__",
      "super"
    ],
    [
      "systems/synapse/training/attention_trainer.py::AttentionRankerTrainer::_create_training_samples",
      "_build_samples"
    ],
    [
      "systems/synapse/sdk/affordances.py::validate_affordance",
      "ValueError"
    ],
    [
      "systems/synapse/sdk/affordances.py::validate_affordance",
      "ValueError"
    ],
    [
      "systems/synapse/sdk/affordances.py::validate_affordance",
      "isinstance"
    ],
    [
      "systems/synapse/sdk/affordances.py::validate_affordance",
      "isinstance"
    ],
    [
      "systems/synapse/sdk/affordances.py::normalize_affordances",
      "validate_affordance"
    ],
    [
      "systems/synapse/sdk/affordances.py::normalize_affordances",
      "append"
    ],
    [
      "systems/synapse/sdk/context.py::build_context",
      "update"
    ],
    [
      "systems/synapse/sdk/context.py::build_context",
      "items"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "wraps"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "SynapseClient"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "task_key_fn"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "time"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "affordances_fn"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "hint"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "float"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "fn"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "metrics_fn"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "ingest_reward"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "time"
    ],
    [
      "systems/synapse/sdk/decorators.py::evolutionary",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "wraps"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "SynapseClient"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "task_key_fn"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "time"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "affordances_fn"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "hint"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "float"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "fn"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "metrics_fn"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "ingest_reward"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "get"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "time"
    ],
    [
      "systems/synapse/sdk/decorators.py::deco",
      "get"
    ],
    [
      "systems/synapse/policy/policy_dsl.py::PolicyGraph::canonical_hash",
      "model_dump_json"
    ],
    [
      "systems/synapse/policy/policy_dsl.py::PolicyGraph::canonical_hash",
      "hexdigest"
    ],
    [
      "systems/synapse/policy/policy_dsl.py::PolicyGraph::canonical_hash",
      "sha256"
    ],
    [
      "systems/synapse/policy/policy_dsl.py::PolicyGraph::canonical_hash",
      "encode"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "len"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::_featurize_episode",
      "get"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::__new__",
      "__new__"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::__new__",
      "super"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::_load_model",
      "exists"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::_load_model",
      "print"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::_load_model",
      "load"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::_load_model",
      "print"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::_load_model",
      "print"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::score",
      "_featurize_episode"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::score",
      "transform"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::score",
      "float"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::score",
      "_load_model"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::score",
      "predict"
    ],
    [
      "systems/synapse/critic/offpolicy.py::Critic::score",
      "model_dump"
    ],
    [
      "systems/synapse/firewall/smt_guard.py::check_smt_constraints",
      "print"
    ],
    [
      "systems/synapse/firewall/smt_guard.py::check_smt_constraints",
      "print"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::__new__",
      "__new__"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::__new__",
      "load_model"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::__new__",
      "super"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::load_model",
      "exists"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::load_model",
      "print"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::load_model",
      "load"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::load_model",
      "get"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::load_model",
      "list"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::load_model",
      "print"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::load_model",
      "print"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::load_model",
      "get"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_featurize",
      "encode"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_featurize",
      "tolist"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_featurize",
      "model_dump"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_featurize",
      "astype"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_featurize",
      "enumerate"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_featurize",
      "ravel"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "getattr"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "float"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "mean"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "append"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "append"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "float"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "float"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "append"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "std"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "predict"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "float"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "predict"
    ],
    [
      "systems/synapse/world/simulator.py::WorldModel::_safe_sigma_from_models",
      "astype"
    ],
    [
      "systems/synapse/world/diff_sim.py::_deepcopy_graph",
      "copy"
    ],
    [
      "systems/synapse/world/diff_sim.py::_deepcopy_graph",
      "deepcopy"
    ],
    [
      "systems/synapse/world/diff_sim.py::_evaluate",
      "loss_fn"
    ],
    [
      "systems/synapse/world/diff_sim.py::_evaluate",
      "float"
    ],
    [
      "systems/synapse/world/diff_sim.py::_evaluate",
      "ValueError"
    ],
    [
      "systems/synapse/world/diff_sim.py::_evaluate",
      "isinstance"
    ],
    [
      "systems/synapse/world/diff_sim.py::_evaluate",
      "isfinite"
    ],
    [
      "systems/synapse/world/diff_sim.py::_evaluate",
      "float"
    ],
    [
      "systems/synapse/world/diff_sim.py::_numeric_params",
      "enumerate"
    ],
    [
      "systems/synapse/world/diff_sim.py::_numeric_params",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::_numeric_params",
      "list"
    ],
    [
      "systems/synapse/world/diff_sim.py::_numeric_params",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::_numeric_params",
      "items"
    ],
    [
      "systems/synapse/world/diff_sim.py::_numeric_params",
      "isinstance"
    ],
    [
      "systems/synapse/world/diff_sim.py::_numeric_params",
      "isfinite"
    ],
    [
      "systems/synapse/world/diff_sim.py::_numeric_params",
      "append"
    ],
    [
      "systems/synapse/world/diff_sim.py::_numeric_params",
      "float"
    ],
    [
      "systems/synapse/world/diff_sim.py::_numeric_params",
      "float"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "lower"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "endswith"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "endswith"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "isinstance"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "isinstance"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "len"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "float"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "float"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "min"
    ],
    [
      "systems/synapse/world/diff_sim.py::_guess_bounds",
      "max"
    ],
    [
      "systems/synapse/world/diff_sim.py::_clamp",
      "max"
    ],
    [
      "systems/synapse/world/diff_sim.py::_clamp",
      "min"
    ],
    [
      "systems/synapse/world/diff_sim.py::_finite_diff_grad",
      "_deepcopy_graph"
    ],
    [
      "systems/synapse/world/diff_sim.py::_finite_diff_grad",
      "_deepcopy_graph"
    ],
    [
      "systems/synapse/world/diff_sim.py::_finite_diff_grad",
      "float"
    ],
    [
      "systems/synapse/world/diff_sim.py::_finite_diff_grad",
      "_evaluate"
    ],
    [
      "systems/synapse/world/diff_sim.py::_finite_diff_grad",
      "_evaluate"
    ],
    [
      "systems/synapse/world/diff_sim.py::_finite_diff_grad",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::_finite_diff_grad",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::_finite_diff_grad",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "_deepcopy_graph"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "_numeric_params"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "_evaluate"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "range"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "_guess_bounds"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "array"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "range"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "list"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "float"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "_deepcopy_graph"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "_apply_update"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "_evaluate"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "_finite_diff_grad"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "values"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "norm"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "float"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "_clamp"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "isinstance"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "int"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::grad_optimize",
      "round"
    ],
    [
      "systems/synapse/world/diff_sim.py::_apply_update",
      "_deepcopy_graph"
    ],
    [
      "systems/synapse/world/diff_sim.py::_apply_update",
      "float"
    ],
    [
      "systems/synapse/world/diff_sim.py::_apply_update",
      "_clamp"
    ],
    [
      "systems/synapse/world/diff_sim.py::_apply_update",
      "isinstance"
    ],
    [
      "systems/synapse/world/diff_sim.py::_apply_update",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::_apply_update",
      "int"
    ],
    [
      "systems/synapse/world/diff_sim.py::_apply_update",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::_apply_update",
      "getattr"
    ],
    [
      "systems/synapse/world/diff_sim.py::_apply_update",
      "round"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::__init__",
      "Lock"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::__init__",
      "mkdir"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::__init__",
      "exception"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_featurize_episode",
      "isinstance"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_featurize_episode",
      "enumerate"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_featurize_episode",
      "tolist"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_featurize_episode",
      "isinstance"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_featurize_episode",
      "float"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "DictVectorizer"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "fit_transform"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "_featurize_episode"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "asarray"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "reshape"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_build_dataset",
      "enumerate"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_train_models",
      "range"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_train_models",
      "GradientBoostingRegressor"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_train_models",
      "fit"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_train_models",
      "append"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "column_stack"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "float"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "range"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "enumerate"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "mean"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "float"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "float"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "append"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "float"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "float"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "predict"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "sum"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "sum"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "mean"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_evaluate",
      "mean"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_atomic_save",
      "with_suffix"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_atomic_save",
      "dump"
    ],
    [
      "systems/synapse/world/world_model_trainer.py::WorldModelTrainer::_atomic_save",
      "replace"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "ravel"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "ravel"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "ravel"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "argsort"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "sum"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "sum"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "append"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "isinstance"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "isinstance"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "isinstance"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "abs"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "int"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "len"
    ],
    [
      "systems/synapse/explain/minset.py::min_explanation",
      "len"
    ],
    [
      "systems/synapse/explain/probes.py::_safe_float",
      "float"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "sorted"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "_clamp"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "max"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "sum"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "len"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "abs"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "_safe_float"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "min"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "max"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "min"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "max"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "min"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "values"
    ],
    [
      "systems/synapse/explain/probes.py::_topk_stats",
      "len"
    ],
    [
      "systems/synapse/explain/probes.py::_extract_sequence",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_extract_sequence",
      "isinstance"
    ],
    [
      "systems/synapse/explain/probes.py::_extract_sequence",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_extract_sequence",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_extract_sequence",
      "isinstance"
    ],
    [
      "systems/synapse/explain/probes.py::_extract_sequence",
      "isinstance"
    ],
    [
      "systems/synapse/explain/probes.py::_extract_sequence",
      "str"
    ],
    [
      "systems/synapse/explain/probes.py::_extract_sequence",
      "str"
    ],
    [
      "systems/synapse/explain/probes.py::_sim_uncertainty",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_sim_uncertainty",
      "isinstance"
    ],
    [
      "systems/synapse/explain/probes.py::_sim_uncertainty",
      "_safe_float"
    ],
    [
      "systems/synapse/explain/probes.py::_sim_uncertainty",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_spec_drift",
      "_sim_uncertainty"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_spec_drift",
      "_clamp"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_spec_drift",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_spec_drift",
      "isinstance"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_spec_drift",
      "_clamp"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_spec_drift",
      "bool"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_spec_drift",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "max"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "_safe_float"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "_safe_float"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "_clamp"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "_clamp"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "abs"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "isinstance"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "_safe_float"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_overfit",
      "float"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_fragility",
      "_topk_stats"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_fragility",
      "_clamp"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_fragility",
      "get"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_fragility",
      "isinstance"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_fragility",
      "len"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "_extract_sequence"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "list"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "_clamp"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "len"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "zip"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "Counter"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "max"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "max"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "len"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "max"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "values"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "len"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "_clamp"
    ],
    [
      "systems/synapse/explain/probes.py::_calc_loop",
      "len"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::__new__",
      "__new__"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::__new__",
      "super"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "_calc_spec_drift"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "_calc_overfit"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "_calc_fragility"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "_calc_loop"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "debug"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "float"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "float"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "float"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "float"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "_sim_uncertainty"
    ],
    [
      "systems/synapse/explain/probes.py::MetaProbe::predict_risk",
      "exception"
    ],
    [
      "systems/synapse/qd/map_elites.py::_norm_str",
      "strip"
    ],
    [
      "systems/synapse/qd/map_elites.py::_norm_str",
      "str"
    ],
    [
      "systems/synapse/qd/map_elites.py::_risk_tier",
      "lower"
    ],
    [
      "systems/synapse/qd/map_elites.py::_risk_tier",
      "startswith"
    ],
    [
      "systems/synapse/qd/map_elites.py::_risk_tier",
      "startswith"
    ],
    [
      "systems/synapse/qd/map_elites.py::_risk_tier",
      "_norm_str"
    ],
    [
      "systems/synapse/qd/map_elites.py::_risk_tier",
      "get"
    ],
    [
      "systems/synapse/qd/map_elites.py::_cost_tier",
      "isnan"
    ],
    [
      "systems/synapse/qd/map_elites.py::_cost_tier",
      "isinf"
    ],
    [
      "systems/synapse/qd/map_elites.py::_cost_tier",
      "float"
    ],
    [
      "systems/synapse/qd/map_elites.py::_cost_tier",
      "abs"
    ],
    [
      "systems/synapse/qd/map_elites.py::_cost_tier",
      "float"
    ],
    [
      "systems/synapse/qd/map_elites.py::_task_family",
      "get"
    ],
    [
      "systems/synapse/qd/map_elites.py::_task_family",
      "lower"
    ],
    [
      "systems/synapse/qd/map_elites.py::_task_family",
      "lower"
    ],
    [
      "systems/synapse/qd/map_elites.py::_task_family",
      "_norm_str"
    ],
    [
      "systems/synapse/qd/map_elites.py::_task_family",
      "split"
    ],
    [
      "systems/synapse/qd/map_elites.py::_task_family",
      "_norm_str"
    ],
    [
      "systems/synapse/qd/map_elites.py::_task_family",
      "get"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::__new__",
      "__new__"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::__new__",
      "super"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::__init__",
      "hasattr"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::__init__",
      "RLock"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::__init__",
      "default_rng"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::__init__",
      "info"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::get_descriptor",
      "_risk_tier"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::get_descriptor",
      "_cost_tier"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::get_descriptor",
      "_task_family"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "get_descriptor"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "get"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "info"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "int"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "get"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "get"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "random"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "info"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "random"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "get"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::insert",
      "float"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "list"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "array"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "float"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "int"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "keys"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "sqrt"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "sum"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "int"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "choice"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "int"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "isfinite"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "integers"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "len"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "get"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::sample_niche",
      "len"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::get_champion_from_niche",
      "get"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::get_champion_from_niche",
      "_norm_str"
    ],
    [
      "systems/synapse/qd/map_elites.py::QDArchive::get_champion_from_niche",
      "get"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::__new__",
      "__new__"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::__new__",
      "super"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::__init__",
      "print"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::update_fitness",
      "get"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::update_fitness",
      "_normalize_shares"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::_normalize_shares",
      "sum"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::_normalize_shares",
      "values"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::rebalance_shares",
      "items"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::rebalance_shares",
      "_normalize_shares"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::rebalance_shares",
      "print"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::rebalance_shares",
      "mean"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::rebalance_shares",
      "exp"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::rebalance_shares",
      "list"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::rebalance_shares",
      "values"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::rebalance_shares",
      "len"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::sample_niche",
      "list"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::sample_niche",
      "list"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::sample_niche",
      "choice"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::sample_niche",
      "keys"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::sample_niche",
      "values"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::sample_niche",
      "len"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::get_genesis_allocation",
      "items"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::get_genesis_allocation",
      "print"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::get_genesis_allocation",
      "max"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::get_genesis_allocation",
      "sum"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::get_genesis_allocation",
      "max"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::get_genesis_allocation",
      "int"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::get_genesis_allocation",
      "values"
    ],
    [
      "systems/synapse/qd/replicator.py::Replicator::get_genesis_allocation",
      "round"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::__new__",
      "__new__"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::__new__",
      "super"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::__init__",
      "print"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::update_roi",
      "get"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::get_underperforming_arms",
      "items"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::get_underperforming_arms",
      "sorted"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::get_underperforming_arms",
      "print"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::get_underperforming_arms",
      "values"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::get_underperforming_arms",
      "len"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::get_underperforming_arms",
      "items"
    ],
    [
      "systems/synapse/economics/roi.py::ROIManager::get_underperforming_arms",
      "len"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::__new__",
      "__new__"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::__new__",
      "super"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::__init__",
      "print"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::update",
      "ravel"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::update",
      "zeros"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::update",
      "len"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::update",
      "extend"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::update",
      "extend"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::update",
      "len"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::update",
      "len"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest",
      "ravel"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest",
      "min"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest",
      "list"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest",
      "norm"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest",
      "norm"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest",
      "maximum"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest",
      "len"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest",
      "argpartition"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest",
      "set"
    ],
    [
      "systems/synapse/rerank/episodic_knn.py::EpisodicKNN::suggest",
      "print"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::__new__",
      "__new__"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::__new__",
      "super"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "reshape"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "array"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "array"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "ColumnTransformer"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "Pipeline"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "concatenate"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "fit"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "len"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "array"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "OneHotEncoder"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "Pipeline"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "ColumnTransformer"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "PolynomialFeatures"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "RidgeCV"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "logspace"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "list"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "StandardScaler"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "PolynomialFeatures"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "OneHotEncoder"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "StandardScaler"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_fit_model",
      "list"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_predict_reward",
      "array"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_predict_reward",
      "float"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_predict_reward",
      "predict"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_predict_reward",
      "float"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_predict_reward",
      "int"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_search_best",
      "_predict_reward"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_search_best",
      "float"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_search_best",
      "int"
    ],
    [
      "systems/synapse/meta/optimizer.py::MetaOptimizer::_search_best",
      "float"
    ],
    [
      "systems/synapse/safety/sentinels.py::GoodhartSentinel::__new__",
      "__new__"
    ],
    [
      "systems/synapse/safety/sentinels.py::GoodhartSentinel::__new__",
      "ppf"
    ],
    [
      "systems/synapse/safety/sentinels.py::GoodhartSentinel::__new__",
      "super"
    ],
    [
      "systems/synapse/safety/sentinels.py::GoodhartSentinel::_featurize_trace",
      "array"
    ],
    [
      "systems/synapse/safety/sentinels.py::GoodhartSentinel::check",
      "_featurize_trace"
    ],
    [
      "systems/synapse/safety/sentinels.py::GoodhartSentinel::check",
      "print"
    ],
    [
      "systems/synapse/safety/sentinels.py::SentinelManager::__new__",
      "__new__"
    ],
    [
      "systems/synapse/safety/sentinels.py::SentinelManager::__new__",
      "super"
    ],
    [
      "systems/synapse/experiments/active.py::_risk_from_tokens",
      "lower"
    ],
    [
      "systems/synapse/experiments/active.py::_budget_from_tokens",
      "lower"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "strip"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "startswith"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "startswith"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "match"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "strip"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "strip"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "strip"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "split"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "strip"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "split"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_niche_key",
      "group"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_sim_uncertainty_key",
      "startswith"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_sim_uncertainty_key",
      "startswith"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_sim_uncertainty_key",
      "strip"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_sim_uncertainty_key",
      "strip"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_sim_uncertainty_key",
      "split"
    ],
    [
      "systems/synapse/experiments/active.py::_parse_sim_uncertainty_key",
      "split"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::__new__",
      "__new__"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::__new__",
      "super"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "max"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "float"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "info"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "_parse_niche_key"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "_parse_sim_uncertainty_key"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "TaskContext"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "sorted"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "get"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "_risk_from_tokens"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "_budget_from_tokens"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "TaskContext"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "TaskContext"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "keys"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "float"
    ],
    [
      "systems/synapse/experiments/active.py::ExperimentDesigner::design_probe",
      "get"
    ],
    [
      "systems/synapse/values/learner.py::ValueLearner::__new__",
      "__new__"
    ],
    [
      "systems/synapse/values/learner.py::ValueLearner::__new__",
      "super"
    ],
    [
      "systems/synapse/values/learner.py::ValueLearner::_bradley_terry_update",
      "range"
    ],
    [
      "systems/synapse/values/learner.py::ValueLearner::_bradley_terry_update",
      "array"
    ],
    [
      "systems/synapse/values/learner.py::ValueLearner::_bradley_terry_update",
      "array"
    ],
    [
      "systems/synapse/values/learner.py::ValueLearner::_bradley_terry_update",
      "dot"
    ],
    [
      "systems/synapse/values/learner.py::ValueLearner::_bradley_terry_update",
      "exp"
    ],
    [
      "systems/synapse/robust/ood.py::OODDetector::__new__",
      "__new__"
    ],
    [
      "systems/synapse/robust/ood.py::OODDetector::__new__",
      "super"
    ],
    [
      "systems/synapse/robust/ood.py::OODDetector::__init__",
      "print"
    ],
    [
      "systems/synapse/robust/ood.py::OODDetector::check_shift",
      "ravel"
    ],
    [
      "systems/synapse/robust/ood.py::OODDetector::check_shift",
      "sqrt"
    ],
    [
      "systems/synapse/robust/ood.py::OODDetector::check_shift",
      "print"
    ],
    [
      "systems/synapse/robust/ood.py::OODDetector::check_shift",
      "float"
    ],
    [
      "systems/synapse/obs/queries_metrics.py::_metric_key",
      "strip"
    ],
    [
      "systems/synapse/obs/queries_metrics.py::_group_key",
      "strip"
    ],
    [
      "systems/synapse/obs/queries_metrics.py::_window_ms",
      "max"
    ],
    [
      "systems/synapse/obs/queries_metrics.py::_window_ms",
      "min"
    ],
    [
      "systems/synapse/obs/queries_metrics.py::_window_ms",
      "int"
    ],
    [
      "systems/synapse/obs/queries_budget.py::_window_ms",
      "max"
    ],
    [
      "systems/synapse/obs/queries_budget.py::_window_ms",
      "min"
    ],
    [
      "systems/synapse/obs/queries_budget.py::_window_ms",
      "int"
    ],
    [
      "systems/synapse/skills/options.py::OptionMiner::__new__",
      "__new__"
    ],
    [
      "systems/synapse/skills/options.py::OptionMiner::__new__",
      "super"
    ],
    [
      "systems/synapse/skills/manager.py::SkillsManager::__new__",
      "__new__"
    ],
    [
      "systems/synapse/skills/manager.py::SkillsManager::__new__",
      "super"
    ],
    [
      "systems/synapse/skills/manager.py::SkillsManager::select_best_option",
      "float"
    ],
    [
      "systems/synapse/skills/manager.py::SkillsManager::select_best_option",
      "array"
    ],
    [
      "systems/synapse/skills/manager.py::SkillsManager::select_best_option",
      "print"
    ],
    [
      "systems/synapse/skills/manager.py::SkillsManager::select_best_option",
      "norm"
    ],
    [
      "systems/synapse/skills/manager.py::SkillsManager::select_best_option",
      "norm"
    ],
    [
      "systems/synapse/skills/executor.py::OptionExecutor::start_execution",
      "ExecutionState"
    ],
    [
      "systems/synapse/skills/executor.py::OptionExecutor::start_execution",
      "print"
    ],
    [
      "systems/synapse/skills/executor.py::OptionExecutor::start_execution",
      "get_arm"
    ],
    [
      "systems/synapse/skills/executor.py::OptionExecutor::continue_execution",
      "get"
    ],
    [
      "systems/synapse/skills/executor.py::OptionExecutor::continue_execution",
      "print"
    ],
    [
      "systems/synapse/skills/executor.py::OptionExecutor::continue_execution",
      "get_arm"
    ],
    [
      "systems/synapse/skills/executor.py::OptionExecutor::continue_execution",
      "len"
    ],
    [
      "systems/synapse/skills/executor.py::OptionExecutor::continue_execution",
      "print"
    ],
    [
      "systems/synapse/skills/executor.py::OptionExecutor::end_execution",
      "print"
    ],
    [
      "systems/simula/agent/tools.py::_discover_functions",
      "parse"
    ],
    [
      "systems/simula/agent/tools.py::_discover_functions",
      "isinstance"
    ],
    [
      "systems/simula/agent/tools.py::_discover_functions",
      "append"
    ],
    [
      "systems/simula/agent/tools.py::_discover_functions",
      "startswith"
    ],
    [
      "systems/simula/agent/tool_registry.py::_wrap",
      "signature"
    ],
    [
      "systems/simula/agent/tool_registry.py::_wrap",
      "iscoroutinefunction"
    ],
    [
      "systems/simula/agent/tool_registry.py::_wrap",
      "list"
    ],
    [
      "systems/simula/agent/tool_registry.py::_wrap",
      "values"
    ],
    [
      "systems/simula/agent/tool_registry.py::_wrap",
      "len"
    ],
    [
      "systems/simula/agent/tool_registry.py::_wrap",
      "func"
    ],
    [
      "systems/simula/agent/tool_registry.py::_wrap",
      "func"
    ],
    [
      "systems/simula/agent/strategies/apply_refactor_smart.py::_split_unified_diff",
      "findall"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_j",
      "dumps"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_j",
      "len"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_j",
      "str"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_neo4j_down",
      "dumps"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_neo4j_down",
      "warning"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_neo4j_down",
      "str"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_paths_from_unified_diff",
      "set"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_paths_from_unified_diff",
      "splitlines"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_paths_from_unified_diff",
      "match"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_paths_from_unified_diff",
      "strip"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_paths_from_unified_diff",
      "sub"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_paths_from_unified_diff",
      "isinstance"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_paths_from_unified_diff",
      "add"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_paths_from_unified_diff",
      "append"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_paths_from_unified_diff",
      "group"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_guess_target_from_step_text",
      "search"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_guess_target_from_step_text",
      "split"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_guess_target_from_step_text",
      "strip"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_guess_target_from_step_text",
      "group"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_timeit::__enter__",
      "perf_counter"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_timeit::__exit__",
      "debug"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_timeit::__exit__",
      "perf_counter"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_fallback_step_details",
      "Path"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_fallback_step_details",
      "append"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_fallback_step_details",
      "append"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_fallback_step_details",
      "append"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_fallback_step_details",
      "str"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_fallback_step_details",
      "str"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_fallback_step_details",
      "exists"
    ],
    [
      "systems/simula/agent/orchestrator/utils.py::_fallback_step_details",
      "exists"
    ],
    [
      "systems/simula/agent/orchestrator/services.py::_build_axon_event",
      "debug"
    ],
    [
      "systems/simula/agent/orchestrator/services.py::_build_axon_event",
      "str"
    ],
    [
      "systems/simula/agent/orchestrator/services.py::_build_axon_event",
      "_j"
    ],
    [
      "systems/simula/agent/orchestrator/services.py::_build_axon_event",
      "uuid4"
    ],
    [
      "systems/simula/agent/orchestrator/services.py::_build_axon_event",
      "list"
    ],
    [
      "systems/simula/agent/orchestrator/services.py::_build_axon_event",
      "get"
    ],
    [
      "systems/simula/agent/orchestrator/services.py::_build_axon_event",
      "now_iso"
    ],
    [
      "systems/simula/agent/orchestrator/services.py::_build_axon_event",
      "fromkeys"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::__init__",
      "load"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::__init__",
      "Path"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::load",
      "exists"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::load",
      "loads"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::load",
      "_default_state"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::load",
      "_default_state"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::load",
      "read_text"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::save",
      "mkdir"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::save",
      "dumps"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::save",
      "write_text"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::set_status",
      "save"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::update_dossier",
      "save"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::add_failure",
      "append"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::add_failure",
      "save"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::add_failure",
      "setdefault"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::add_failure",
      "time"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::remember_fact",
      "save"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::remember_fact",
      "setdefault"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::get_fact",
      "get"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::get_fact",
      "get"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::push_summary",
      "setdefault"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::push_summary",
      "append"
    ],
    [
      "systems/simula/agent/orchestrator/context.py::ContextStore::push_summary",
      "save"
    ],
    [
      "systems/simula/agent/orchestrator/tool_safety.py::_wrap",
      "signature"
    ],
    [
      "systems/simula/agent/orchestrator/tool_safety.py::_wrap",
      "iscoroutinefunction"
    ],
    [
      "systems/simula/agent/orchestrator/tool_safety.py::_wrap",
      "list"
    ],
    [
      "systems/simula/agent/orchestrator/tool_safety.py::_wrap",
      "values"
    ],
    [
      "systems/simula/agent/orchestrator/tool_safety.py::_wrap",
      "len"
    ],
    [
      "systems/simula/agent/orchestrator/tool_safety.py::_wrap",
      "func"
    ],
    [
      "systems/simula/agent/orchestrator/tool_safety.py::_wrap",
      "func"
    ],
    [
      "systems/simula/client/synapse_bridge.py::new_decision_id",
      "uuid4"
    ],
    [
      "systems/simula/client/synapse_bridge.py::SynapseSession::_ctx",
      "TaskContext"
    ],
    [
      "systems/simula/client/synapse_bridge.py::SynapseSession::add_tool_call",
      "int"
    ],
    [
      "systems/simula/client/synapse_bridge.py::SynapseSession::add_tool_call",
      "int"
    ],
    [
      "systems/simula/client/synapse_bridge.py::SynapseSession::add_tool_call",
      "float"
    ],
    [
      "systems/simula/client/synapse_bridge.py::SynapseSession::add_tool_call",
      "update"
    ],
    [
      "systems/simula/client/synapse_bridge.py::SynapseSession::add_tool_call",
      "print"
    ],
    [
      "systems/simula/code_sim/eval_types.py::EvalResult::as_dict",
      "asdict"
    ],
    [
      "systems/simula/code_sim/eval_types.py::EvalResult::hard_gates_ok",
      "get"
    ],
    [
      "systems/simula/code_sim/eval_types.py::EvalResult::hard_gates_ok",
      "get"
    ],
    [
      "systems/simula/code_sim/eval_types.py::EvalResult::hard_gates_ok",
      "get"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::__init__",
      "get"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::__init__",
      "sum"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::__init__",
      "values"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::__init__",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::_calibrate",
      "get"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::_calibrate",
      "max"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::_calibrate",
      "min"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::_calibrate",
      "max"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::_calibrate",
      "float"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::_calibrate",
      "min"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::_calibrate",
      "float"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::_calibrate",
      "calibration_fn"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "sum"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "max"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "max"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "reward"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "reward"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "min"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "explain"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "get"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "_calibrate"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "getattr"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::score",
      "getattr"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::explain",
      "get"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::explain",
      "_calibrate"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::explain",
      "getattr"
    ],
    [
      "systems/simula/code_sim/eval_types.py::RewardAggregator::explain",
      "getattr"
    ],
    [
      "systems/simula/code_sim/loop.py::JsonLogFormatter::format",
      "getattr"
    ],
    [
      "systems/simula/code_sim/loop.py::JsonLogFormatter::format",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/loop.py::JsonLogFormatter::format",
      "dumps"
    ],
    [
      "systems/simula/code_sim/loop.py::JsonLogFormatter::format",
      "getMessage"
    ],
    [
      "systems/simula/code_sim/loop.py::JsonLogFormatter::format",
      "formatException"
    ],
    [
      "systems/simula/code_sim/loop.py::JsonLogFormatter::format",
      "update"
    ],
    [
      "systems/simula/code_sim/loop.py::JsonLogFormatter::format",
      "isoformat"
    ],
    [
      "systems/simula/code_sim/loop.py::JsonLogFormatter::format",
      "utcnow"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "mkdir"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "getLogger"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "clear"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "setLevel"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "StreamHandler"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "setFormatter"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "addHandler"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "FileHandler"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "setFormatter"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "addHandler"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "JsonLogFormatter"
    ],
    [
      "systems/simula/code_sim/loop.py::setup_logging",
      "JsonLogFormatter"
    ],
    [
      "systems/simula/code_sim/loop.py::sha1",
      "hexdigest"
    ],
    [
      "systems/simula/code_sim/loop.py::sha1",
      "sha1"
    ],
    [
      "systems/simula/code_sim/loop.py::sha1",
      "encode"
    ],
    [
      "systems/simula/code_sim/loop.py::SimulaConfig::load",
      "SimulaConfig"
    ],
    [
      "systems/simula/code_sim/loop.py::SimulaConfig::load",
      "exists"
    ],
    [
      "systems/simula/code_sim/loop.py::SimulaConfig::load",
      "safe_load"
    ],
    [
      "systems/simula/code_sim/loop.py::SimulaConfig::load",
      "SandboxCfg"
    ],
    [
      "systems/simula/code_sim/loop.py::SimulaConfig::load",
      "OrchestratorCfg"
    ],
    [
      "systems/simula/code_sim/loop.py::SimulaConfig::load",
      "read_text"
    ],
    [
      "systems/simula/code_sim/loop.py::SimulaConfig::load",
      "get"
    ],
    [
      "systems/simula/code_sim/loop.py::SimulaConfig::load",
      "get"
    ],
    [
      "systems/simula/code_sim/loop.py::ArtifactStore::__init__",
      "mkdir"
    ],
    [
      "systems/simula/code_sim/loop.py::ArtifactStore::__init__",
      "mkdir"
    ],
    [
      "systems/simula/code_sim/loop.py::ArtifactStore::__init__",
      "mkdir"
    ],
    [
      "systems/simula/code_sim/loop.py::ArtifactStore::__init__",
      "mkdir"
    ],
    [
      "systems/simula/code_sim/loop.py::ArtifactStore::write_text",
      "mkdir"
    ],
    [
      "systems/simula/code_sim/loop.py::ArtifactStore::write_text",
      "write_text"
    ],
    [
      "systems/simula/code_sim/loop.py::ArtifactStore::save_candidate",
      "replace"
    ],
    [
      "systems/simula/code_sim/loop.py::ArtifactStore::save_candidate",
      "write_text"
    ],
    [
      "systems/simula/code_sim/loop.py::ArtifactStore::save_candidate",
      "sha1"
    ],
    [
      "systems/simula/code_sim/planner.py::_as_list",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_require_keys",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_get",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_get",
      "getattr"
    ],
    [
      "systems/simula/code_sim/planner.py::_get",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_get_path",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/planner.py::_get_path",
      "_get"
    ],
    [
      "systems/simula/code_sim/planner.py::_get_path",
      "len"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "_to_file_dict"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "dict"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "pop"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "decode"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "decode"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "decode"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "strip"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "strip"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "_to_file_dict"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_targets",
      "strip"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "dict"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "pop"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "decode"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "decode"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "decode"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "strip"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "strip"
    ],
    [
      "systems/simula/code_sim/planner.py::_to_file_dict",
      "strip"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "getattr"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "getattr"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "getattr"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "_as_list"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "list"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "getattr"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_tests",
      "getattr"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_iterations",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_iterations",
      "int"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_iterations",
      "float"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_iterations",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_iterations",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_iterations",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_iterations",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_iterations",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_iterations",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_acceptance",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_acceptance",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_acceptance",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_acceptance",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_acceptance",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_validate_acceptance",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "strip"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "_listify"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "list"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "pop"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "list"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "dict"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "strip"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_normalize_steps_list",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_listify",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_listify",
      "list"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "strip"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "_normalize_targets"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "_normalize_tests"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "Step"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "get"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "int"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "pop"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/planner.py::_build_step",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "_require_keys"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "_validate_acceptance"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "_validate_iterations"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "_normalize_steps_list"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "set"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "Plan"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "list"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "_build_step"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "add"
    ],
    [
      "systems/simula/code_sim/planner.py::plan_from_objective",
      "ValueError"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "set"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "replace"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "rglob"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "resolve"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "replace"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "fnmatch"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "add"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "is_file"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "str"
    ],
    [
      "systems/simula/code_sim/planner.py::match_tests_in_repo",
      "relative_to"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "join"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "getattr"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "getattr"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "join"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "len"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "join"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "getattr"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "append"
    ],
    [
      "systems/simula/code_sim/planner.py::pretty_plan",
      "len"
    ],
    [
      "systems/simula/code_sim/prompts.py::_read_file_snippet",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems/simula/code_sim/prompts.py::_read_file_snippet",
      "exists"
    ],
    [
      "systems/simula/code_sim/prompts.py::_read_file_snippet",
      "len"
    ],
    [
      "systems/simula/code_sim/prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems/simula/code_sim/prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems/simula/code_sim/prompts.py::_read_file_snippet",
      "read_text"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_now_iso",
      "isoformat"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_now_iso",
      "now"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_redact",
      "dumps"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_redact",
      "len"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_redact",
      "str"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_redact",
      "len"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::from_env",
      "getenv"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::from_env",
      "getenv"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::from_env",
      "float"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::from_env",
      "cls"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::from_env",
      "getenv"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::from_env",
      "getenv"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::from_env",
      "getenv"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::from_env",
      "_ensure_dirs"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::enable_if_env",
      "_ensure_dirs"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_ensure_dirs",
      "strftime"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_ensure_dirs",
      "join"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_ensure_dirs",
      "makedirs"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_ensure_dirs",
      "now"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_job_file",
      "strftime"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_job_file",
      "join"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_job_file",
      "makedirs"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_job_file",
      "join"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_job_file",
      "now"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_write",
      "setdefault"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_write",
      "dumps"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_write",
      "_now_iso"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_write",
      "print"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_write",
      "print"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_write",
      "open"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_write",
      "write"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::_write",
      "_job_file"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::start_job",
      "set"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::start_job",
      "perf_counter"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::start_job",
      "_write"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::start_job",
      "uuid4"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::end_job",
      "_write"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::end_job",
      "get"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::end_job",
      "perf_counter"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::end_job",
      "pop"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::llm_call",
      "_write"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::llm_call",
      "get"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::reward",
      "_write"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::reward",
      "get"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::log_event",
      "_write"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::log_event",
      "get"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::tool_event",
      "_write"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::tool_event",
      "get"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::tool_event",
      "_redact"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::tool_event",
      "_redact"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::tool_event",
      "perf_counter"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::graph_write",
      "_write"
    ],
    [
      "systems/simula/code_sim/telemetry.py::Telemetry::graph_write",
      "get"
    ],
    [
      "systems/simula/code_sim/telemetry.py::with_job_context::__enter__",
      "start_job"
    ],
    [
      "systems/simula/code_sim/telemetry.py::with_job_context::__exit__",
      "end_job"
    ],
    [
      "systems/simula/code_sim/telemetry.py::with_job_context::__exit__",
      "repr"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "iscoroutinefunction"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "getattr"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "perf_counter"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "perf_counter"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "fn"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "fn"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "len"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "list"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "len"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "list"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "keys"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "repr"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "keys"
    ],
    [
      "systems/simula/code_sim/telemetry.py::track_tool",
      "repr"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "iscoroutinefunction"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "getattr"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "perf_counter"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "perf_counter"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "fn"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "fn"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "len"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "list"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "len"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "list"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "keys"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "repr"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "keys"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_decorator",
      "repr"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_sw",
      "perf_counter"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_sw",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_sw",
      "fn"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_sw",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_sw",
      "tool_event"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_sw",
      "len"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_sw",
      "list"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_sw",
      "keys"
    ],
    [
      "systems/simula/code_sim/telemetry.py::_sw",
      "repr"
    ],
    [
      "systems/simula/code_sim/diffutils.py::_is_ws_only_change_line",
      "startswith"
    ],
    [
      "systems/simula/code_sim/diffutils.py::_is_ws_only_change_line",
      "startswith"
    ],
    [
      "systems/simula/code_sim/diffutils.py::_is_ws_only_change_line",
      "strip"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "_flush_hunk"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "match"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "join"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "extend"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "_flush_hunk"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "append"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "append"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "append"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "endswith"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "extend"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "startswith"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "startswith"
    ],
    [
      "systems/simula/code_sim/diffutils.py::drop_whitespace_only_hunks",
      "_is_ws_only_change_line"
    ],
    [
      "systems/simula/code_sim/diffutils.py::_flush_hunk",
      "extend"
    ],
    [
      "systems/simula/code_sim/diffutils.py::_flush_hunk",
      "extend"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::_write_jsonl",
      "open"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::_write_jsonl",
      "write"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::_write_jsonl",
      "dumps"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::_read_jsonl",
      "exists"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::_read_jsonl",
      "loads"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::_read_jsonl",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::_read_jsonl",
      "strip"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::_read_jsonl",
      "read_text"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::add_candidate",
      "_write_jsonl"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::top_k_similar",
      "sort"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::top_k_similar",
      "any"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::top_k_similar",
      "append"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::top_k_similar",
      "_read_jsonl"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::top_k_similar",
      "get"
    ],
    [
      "systems/simula/code_sim/archive/pareto.py::top_k_similar",
      "_dominates"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_read",
      "read_text"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "compile"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "finditer"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "rsplit"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "escape"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "strip"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "group"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_approx_sig_present",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_contains_tool_registration",
      "bool"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_contains_tool_registration",
      "search"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_contains_tool_registration",
      "escape"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_git_changed",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_git_changed",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::_git_changed",
      "strip"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "_read"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "_approx_sig_present"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "search"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "group"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "Path"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "_read"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "issubset"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "Path"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "_contains_tool_registration"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "_git_changed"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/contracts.py::run",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_is_mapping",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_get",
      "_is_mapping"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_get",
      "getattr"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_get",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_get_path",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_get_path",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_get_path",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "str"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "_get_path"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "_get_path"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "str"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_extract_tests",
      "decode"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_expand_tests",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_expand_tests",
      "sorted"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_expand_tests",
      "glob"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_expand_tests",
      "extend"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_expand_tests",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_expand_tests",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_expand_tests",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_budget_seconds",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_budget_seconds",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_budget_seconds",
      "_get_path"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_budget_seconds",
      "float"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_budget_seconds",
      "lstrip"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_budget_seconds",
      "float"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_budget_seconds",
      "strip"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::_budget_seconds",
      "str"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "_expand_tests"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "_budget_seconds"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "time"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "_extract_tests"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "time"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "decode"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "str"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "max"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "int"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "round"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "max"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "float"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "int"
    ],
    [
      "systems/simula/code_sim/evaluators/perf.py::run",
      "max"
    ],
    [
      "systems/simula/code_sim/evaluators/runtime.py::run",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/runtime.py::run",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/runtime.py::run",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/runtime.py::run",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/runtime.py::run",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/runtime.py::run",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/runtime.py::run",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/runtime.py::run",
      "join"
    ],
    [
      "systems/simula/code_sim/evaluators/static.py::_run",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/static.py::run",
      "_run"
    ],
    [
      "systems/simula/code_sim/evaluators/static.py::run",
      "_run"
    ],
    [
      "systems/simula/code_sim/evaluators/static.py::run",
      "_run"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_is_mapping",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_get",
      "_is_mapping"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_get",
      "getattr"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_get",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_get_path",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_get_path",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_get_path",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "str"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "_get"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "_get_path"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "_get_path"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "str"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_extract_tests",
      "list"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_expand_test_selection",
      "sorted"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_expand_test_selection",
      "glob"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_expand_test_selection",
      "extend"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_expand_test_selection",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_expand_test_selection",
      "exists"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_expand_test_selection",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_coverage_per_file",
      "exists"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_coverage_per_file",
      "fromstring"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_coverage_per_file",
      "findall"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_coverage_per_file",
      "read_text"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_coverage_per_file",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_coverage_per_file",
      "findall"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_coverage_per_file",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_coverage_per_file",
      "sum"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_coverage_per_file",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_parse_counts",
      "finditer"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_parse_counts",
      "group"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_parse_counts",
      "int"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_ratio",
      "max"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::_ratio",
      "min"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "_expand_test_selection"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "time"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "_parse_counts"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "_ratio"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "_coverage_per_file"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "_extract_tests"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "time"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "decode"
    ],
    [
      "systems/simula/code_sim/evaluators/tests.py::run",
      "str"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::as_dict",
      "asdict"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::unit_pass_ratio",
      "float"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::unit_pass_ratio",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::unit_pass_ratio",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::unit_pass_ratio",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::static_score",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::static_score",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::static_score",
      "sum"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::static_score",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::security_score",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::security_score",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::contracts_score",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::contracts_score",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::contracts_score",
      "sum"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::contracts_score",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::summary",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::summary",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::summary",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::EvalResult::summary",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "run"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "bool"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "bool"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "bool"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "bool"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "all"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "EvalResult"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/__init__.py::run_evaluator_suite",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_iter_tests",
      "rglob"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_iter_tests",
      "rglob"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_module_name_from_path",
      "rstrip"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_module_name_from_path",
      "endswith"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_module_name_from_path",
      "lstrip"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_module_name_from_path",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_module_name_from_path",
      "replace"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_collect_imports",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_collect_imports",
      "walk"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_collect_imports",
      "parse"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_collect_imports",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_collect_imports",
      "read_text"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_collect_imports",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_collect_imports",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_collect_imports",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "range"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "_iter_tests"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "sorted"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "split"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "rglob"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "_collect_imports"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "any"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "join"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_likely_test_for_module",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_nodeids_from_files",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_nodeids_from_files",
      "sorted"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_nodeids_from_files",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_nodeids_from_files",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::_nodeids_from_files",
      "Path"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "resolve"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "exists"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "_nodeids_from_files"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "join"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "ImpactReport"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "ImpactReport"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "resolve"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "exists"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "_iter_tests"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "sorted"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "sorted"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "changed_paths_from_unified_diff"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "endswith"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "Path"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "exists"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "_likely_test_for_module"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "Path"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "endswith"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "sorted"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "_module_name_from_path"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "_module_name_from_path"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "Path"
    ],
    [
      "systems/simula/code_sim/evaluators/impact.py::compute_impact",
      "relative_to"
    ],
    [
      "systems/simula/code_sim/evaluators/risk.py::risk_score",
      "min"
    ],
    [
      "systems/simula/code_sim/evaluators/risk.py::risk_score",
      "max"
    ],
    [
      "systems/simula/code_sim/evaluators/risk.py::risk_score",
      "min"
    ],
    [
      "systems/simula/code_sim/evaluators/risk.py::summarize",
      "HygieneStatus"
    ],
    [
      "systems/simula/code_sim/evaluators/risk.py::summarize",
      "risk_score"
    ],
    [
      "systems/simula/code_sim/evaluators/risk.py::summarize",
      "int"
    ],
    [
      "systems/simula/code_sim/evaluators/risk.py::summarize",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/risk.py::summarize",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/risk.py::summarize",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_secrets",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_secrets",
      "SecurityGateResult"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_secrets",
      "startswith"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_secrets",
      "search"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_secrets",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_secrets",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_disallowed_licenses",
      "SecurityGateResult"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_disallowed_licenses",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_disallowed_licenses",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_credential_files",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_credential_files",
      "SecurityGateResult"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_credential_files",
      "startswith"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_credential_files",
      "search"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_credential_files",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/security.py::scan_diff_for_credential_files",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::DeltaCoverage::summary",
      "sum"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::DeltaCoverage::summary",
      "sum"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::DeltaCoverage::summary",
      "round"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::DeltaCoverage::summary",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::DeltaCoverage::summary",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::DeltaCoverage::summary",
      "values"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::DeltaCoverage::summary",
      "values"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "startswith"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "match"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "strip"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "setdefault"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "int"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "int"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "startswith"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "group"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "startswith"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "startswith"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "group"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::_changed_lines_from_unified_diff",
      "startswith"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::load_coverage_json",
      "Path"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::load_coverage_json",
      "exists"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::load_coverage_json",
      "loads"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::load_coverage_json",
      "read_text"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "_changed_lines_from_unified_diff"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "load_coverage_json"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "DeltaCoverage"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "sum"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "sum"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "changed_paths_from_unified_diff"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "endswith"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "str"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "resolve"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "get"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "add"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "len"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "values"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "values"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "Path"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "setdefault"
    ],
    [
      "systems/simula/code_sim/evaluators/coverage_delta.py::compute_delta_coverage",
      "set"
    ],
    [
      "systems/simula/code_sim/evaluators/spec_miner.py::_suggestion",
      "lower"
    ],
    [
      "systems/simula/code_sim/evaluators/spec_miner.py::_suggestion",
      "lower"
    ],
    [
      "systems/simula/code_sim/evaluators/spec_miner.py::derive_acceptance",
      "parse_pytest_output"
    ],
    [
      "systems/simula/code_sim/evaluators/spec_miner.py::derive_acceptance",
      "append"
    ],
    [
      "systems/simula/code_sim/evaluators/spec_miner.py::derive_acceptance",
      "AcceptanceHint"
    ],
    [
      "systems/simula/code_sim/evaluators/spec_miner.py::derive_acceptance",
      "_suggestion"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_read",
      "read_text"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_rel_for_diff",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_rel_for_diff",
      "relative_to"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_rel_for_diff",
      "resolve"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_unified_diff",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_unified_diff",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_unified_diff",
      "join"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_unified_diff",
      "unified_diff"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "join"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "match"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "join"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "startswith"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "startswith"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_strip_shebang_and_encoding",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_module_docstring",
      "insert"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_module_docstring",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_module_docstring",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_module_docstring",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_module_docstring",
      "Expr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_module_docstring",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_module_docstring",
      "Constant"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig",
      "rsplit"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_parse_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "arguments"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "FunctionDef"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "Expr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "Pass"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "rsplit"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "arg"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "Constant"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "replace"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "replace"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "replace"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "replace"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_build_func_def_from_sig",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "has_import"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "insert"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "ImportFrom"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "Import"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "alias"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_import",
      "alias"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::has_import",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::has_import",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "_ensure_import"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "Assign"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "insert"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "Call"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "Attribute"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "Store"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_logger",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_module_has_function",
      "any"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_module_has_function",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "any"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "UnaryOp"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "Constant"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "Raise"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "insert"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "If"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "Not"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "Call"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_add_guard_raises",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "lower"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "startswith"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "startswith"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "Subscript"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_return_annotations",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_arg_annotations",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_arg_annotations",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::_ensure_arg_annotations",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::set_aggressive",
      "bool"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "primary_target"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "resolve"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "_read"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "_strip_shebang_and_encoding"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "unparse"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "_rel_for_diff"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "_unified_diff"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "parse"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "_do_scaffold"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "_ensure_logger"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "parse"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "_do_imports"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "endswith"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "_do_typing"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::mutate",
      "_do_error_paths"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "_ensure_module_docstring"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "_parse_sig"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "_module_has_function"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "_build_func_def_from_sig"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "any"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "Expr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "insert"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "Call"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "Attribute"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "Constant"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_scaffold",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_imports",
      "_ensure_import"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_imports",
      "_ensure_import"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_imports",
      "_ensure_import"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_imports",
      "_ensure_logger"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_typing",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_typing",
      "_ensure_import"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_typing",
      "_ensure_import"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_typing",
      "_ensure_arg_annotations"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_typing",
      "_ensure_return_annotations"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "_ensure_logger"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "_add_guard_raises"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "list"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "Expr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "insert"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "Call"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "Attribute"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "Constant"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "Name"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/ast_refactor.py::AstMutator::_do_error_paths",
      "Load"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_strip_fences",
      "search"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_strip_fences",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_strip_fences",
      "group"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_coerce_primary_target_text",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_coerce_primary_target_text",
      "callable"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_coerce_primary_target_text",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_coerce_primary_target_text",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_coerce_primary_target_text",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_coerce_primary_target_text",
      "join"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_coerce_primary_target_text",
      "dumps"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_coerce_primary_target_text",
      "pt"
    ],
    [
      "systems/simula/code_sim/mutators/prompt_patch.py::_coerce_primary_target_text",
      "str"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_unidiff",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_unidiff",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_unidiff",
      "join"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_unidiff",
      "unified_diff"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_read",
      "read_text"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_read",
      "debug"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_ensure_line",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_ensure_line",
      "any"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_ensure_line",
      "endswith"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_ensure_line",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_ensure_line",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_ensure_line",
      "rstrip"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::_detect_registry_path",
      "exists"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "get"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "sorted"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "_detect_registry_path"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "_read"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "_unidiff"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "_read"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "join"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "_unidiff"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "primary_target"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "exists"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "_unidiff"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "match_tests"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "str"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "primary_target"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "rstrip"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "join"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "_unidiff"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "get"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "str"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "search"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "search"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "search"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "_ensure_line"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "str"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "endswith"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "str"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "relative_to"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "relative_to"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "relative_to"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "replace"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "get"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "strip"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "exists"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "escape"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "split"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "group"
    ],
    [
      "systems/simula/code_sim/mutators/retrieval_edit.py::retrieval_guided_edits",
      "group"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_mutate",
      "visit"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_mutate",
      "generic_visit"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_mutate",
      "Rewriter"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_mutate",
      "fn"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_mutate",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_mutate",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_mutate",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_mutate",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_mutate",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_mutate",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::Rewriter::visit",
      "generic_visit"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::Rewriter::visit",
      "fn"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::Rewriter::visit",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::Rewriter::visit",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::Rewriter::visit",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::Rewriter::visit",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::Rewriter::visit",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::Rewriter::visit",
      "getattr"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_unified",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_unified",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_unified",
      "join"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::_unified",
      "unified_diff"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::generate_mutants",
      "Path"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::generate_mutants",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::generate_mutants",
      "read_text"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::generate_mutants",
      "parse"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::generate_mutants",
      "_mutate"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::generate_mutants",
      "replace"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::generate_mutants",
      "append"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::generate_mutants",
      "Mutant"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::generate_mutants",
      "replace"
    ],
    [
      "systems/simula/code_sim/mutators/mutants.py::generate_mutants",
      "str"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_is_textual",
      "decode"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_is_textual",
      "read_bytes"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_shorten",
      "len"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_shorten",
      "int"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_shorten",
      "int"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_read_text",
      "_shorten"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_read_text",
      "read_text"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_iter_globs",
      "glob"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_norm_rel",
      "str"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_norm_rel",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_norm_rel",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_norm_rel",
      "relative_to"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "_norm_rel"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "_pkg_root"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "sort"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "any"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "_norm_rel"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "is_dir"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "_is_textual"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "startswith"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "endswith"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "endswith"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "startswith"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "endswith"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "is_relative_to"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "Neighbor"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "exists"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_rank_neighbors",
      "join"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_pkg_root",
      "is_dir"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_pkg_root",
      "exists"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "default_neighbor_globs"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "list"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "exists"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "set"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "_iter_globs"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "resolve"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "exists"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "glob"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "add"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "is_file"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "resolve"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_collect_candidates",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "finditer"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "finditer"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "findall"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "join"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "_shorten"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "len"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "append"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "min"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "group"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "group"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::_high_signal_slice",
      "len"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "resolve"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "resolve"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "_collect_candidates"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "_rank_neighbors"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "_high_signal_slice"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "len"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "_read_text"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "strip"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "len"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "min"
    ],
    [
      "systems/simula/code_sim/retrieval/context.py::gather_neighbor_snippets",
      "len"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::BaseSession::__init__",
      "resolve"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::BaseSession::__init__",
      "resolve"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::BaseSession::__init__",
      "Path"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::BaseSession::__init__",
      "mkdtemp"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::BaseSession::__del__",
      "rmtree"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSession::_docker_base_cmd",
      "items"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSession::_docker_base_cmd",
      "append"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSession::_docker_base_cmd",
      "str"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSession::_docker_base_cmd",
      "str"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSession::_docker_base_cmd",
      "extend"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSession::_docker_base_cmd",
      "extend"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSession::_docker_base_cmd",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSession::_docker_base_cmd",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::LocalSession::python_exe",
      "str"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSandbox::__init__",
      "SandboxConfig"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSandbox::__init__",
      "fields"
    ],
    [
      "systems/simula/code_sim/sandbox/sandbox.py::DockerSandbox::__init__",
      "items"
    ],
    [
      "systems/simula/code_sim/sandbox/profiles.py::current_profile",
      "SandboxProfile"
    ],
    [
      "systems/simula/code_sim/sandbox/profiles.py::current_profile",
      "getenv"
    ],
    [
      "systems/simula/code_sim/sandbox/profiles.py::current_profile",
      "getenv"
    ],
    [
      "systems/simula/code_sim/sandbox/profiles.py::current_profile",
      "int"
    ],
    [
      "systems/simula/code_sim/sandbox/profiles.py::current_profile",
      "int"
    ],
    [
      "systems/simula/code_sim/sandbox/profiles.py::current_profile",
      "getenv"
    ],
    [
      "systems/simula/code_sim/sandbox/profiles.py::current_profile",
      "getenv"
    ],
    [
      "systems/simula/code_sim/sandbox/profiles.py::current_profile",
      "getenv"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Constraints::from_dict",
      "Constraints"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Constraints::from_dict",
      "str"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Constraints::from_dict",
      "list"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Constraints::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Constraints::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::UnitTestsSpec::from_dict",
      "UnitTestsSpec"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::UnitTestsSpec::from_dict",
      "list"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::UnitTestsSpec::from_dict",
      "list"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::UnitTestsSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::UnitTestsSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::ContractsSpec::from_dict",
      "ContractsSpec"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::ContractsSpec::from_dict",
      "list"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::ContractsSpec::from_dict",
      "list"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::ContractsSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::ContractsSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::DocsSpec::from_dict",
      "DocsSpec"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::DocsSpec::from_dict",
      "list"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::DocsSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::PerfSpec::from_dict",
      "PerfSpec"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::PerfSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::AcceptanceSpec::from_dict",
      "AcceptanceSpec"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::AcceptanceSpec::from_dict",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::AcceptanceSpec::from_dict",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::AcceptanceSpec::from_dict",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::AcceptanceSpec::from_dict",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::AcceptanceSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::AcceptanceSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::AcceptanceSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::AcceptanceSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::RuntimeSpec::from_dict",
      "RuntimeSpec"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::RuntimeSpec::from_dict",
      "list"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::RuntimeSpec::from_dict",
      "list"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::RuntimeSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::RuntimeSpec::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "Objective"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "items"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "str"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "str"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::get",
      "hasattr"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::get",
      "getattr"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::get",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Objective::get",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::StepTarget::from_dict",
      "StepTarget"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::StepTarget::from_dict",
      "str"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::StepTarget::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::StepTarget::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "Step"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "str"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "int"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "list"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::from_dict",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::acceptance",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/schema.py::Step::runtime",
      "from_dict"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::_sanitize",
      "strip"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::_sanitize",
      "sub"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "minimize_pytest_stdout"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "int"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "Path"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "mkdir"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "write_text"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "time"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "len"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "_sanitize"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "join"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_tests_from_stdout",
      "uuid4"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "generate_oracle_tests"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "int"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "mkdir"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "write_text"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "time"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "get"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "_sanitize"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "Path"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "Path"
    ],
    [
      "systems/simula/code_sim/specs/synthesize.py::write_oracle_tests",
      "Path"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::_extract_examples_from_docstring",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::_extract_examples_from_docstring",
      "startswith"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::_extract_examples_from_docstring",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::_extract_examples_from_docstring",
      "strip"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::_extract_examples_from_docstring",
      "strip"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::_extract_examples_from_docstring",
      "strip"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "Path"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "read_text"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "walk"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "exists"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "parse"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "join"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "get_docstring"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "_extract_examples_from_docstring"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "any"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/oracles.py::generate_oracle_tests",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/minimize_trace.py::minimize_pytest_stdout",
      "compile"
    ],
    [
      "systems/simula/code_sim/specs/minimize_trace.py::minimize_pytest_stdout",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/specs/minimize_trace.py::minimize_pytest_stdout",
      "match"
    ],
    [
      "systems/simula/code_sim/specs/minimize_trace.py::minimize_pytest_stdout",
      "strip"
    ],
    [
      "systems/simula/code_sim/specs/minimize_trace.py::minimize_pytest_stdout",
      "append"
    ],
    [
      "systems/simula/code_sim/specs/minimize_trace.py::minimize_pytest_stdout",
      "group"
    ],
    [
      "systems/simula/code_sim/specs/minimize_trace.py::minimize_pytest_stdout",
      "int"
    ],
    [
      "systems/simula/code_sim/specs/minimize_trace.py::minimize_pytest_stdout",
      "group"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_degree",
      "replace"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_degree",
      "rglob"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_degree",
      "walk"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_degree",
      "exists"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_degree",
      "endswith"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_degree",
      "parse"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_degree",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_degree",
      "read_text"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_degree",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_degree",
      "startswith"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_churn",
      "run"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_churn",
      "len"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_churn",
      "str"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_churn",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::file_churn",
      "strip"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "Counter"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "sum"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "len"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "float"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "values"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "sum"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "log2"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "min"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "split"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "get"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "log2"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "values"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::plan_entropy",
      "get"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::features_for_file",
      "get"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::features_for_file",
      "file_degree"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::features_for_file",
      "file_churn"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::features_for_file",
      "plan_entropy"
    ],
    [
      "systems/simula/code_sim/utils/repo_features.py::features_for_file",
      "get"
    ],
    [
      "systems/simula/code_sim/repair/ddmin.py::_split_hunks",
      "findall"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::__init__",
      "__init__"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::__init__",
      "super"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::leave_FunctionDef",
      "list"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::leave_FunctionDef",
      "with_changes"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::leave_FunctionDef",
      "parse_statement"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::leave_FunctionDef",
      "append"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::leave_FunctionDef",
      "matches"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::leave_FunctionDef",
      "with_changes"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::leave_FunctionDef",
      "SimpleStatementLine"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::leave_FunctionDef",
      "Expr"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::GuardNoneTransformer::leave_FunctionDef",
      "SimpleString"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::__init__",
      "__init__"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::__init__",
      "super"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::visit_FunctionDef",
      "any"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::visit_FunctionDef",
      "unparse"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::visit_FunctionDef",
      "unparse"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::leave_Module",
      "parse_statement"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::leave_Module",
      "with_changes"
    ],
    [
      "systems/simula/code_sim/repair/templates.py::ImportFixTransformer::leave_Module",
      "list"
    ],
    [
      "systems/simula/code_sim/repair/engine.py::_generate_patches",
      "read_text"
    ],
    [
      "systems/simula/code_sim/repair/engine.py::_generate_patches",
      "CodemodContext"
    ],
    [
      "systems/simula/code_sim/repair/engine.py::_generate_patches",
      "transform_class"
    ],
    [
      "systems/simula/code_sim/repair/engine.py::_generate_patches",
      "parse_module"
    ],
    [
      "systems/simula/code_sim/repair/engine.py::_generate_patches",
      "transform_module"
    ],
    [
      "systems/simula/code_sim/repair/engine.py::_generate_patches",
      "Path"
    ],
    [
      "systems/simula/code_sim/repair/engine.py::_generate_patches",
      "append"
    ],
    [
      "systems/simula/code_sim/repair/engine.py::_generate_patches",
      "Patch"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "_flush"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "set"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "match"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "match"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "match"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "match"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "add"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "append"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "append"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "_flush"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "_flush"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "Failure"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "group"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "int"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "group"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "group"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "int"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "group"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "group"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "group"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "int"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "group"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::parse_pytest_output",
      "group"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::_flush",
      "append"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::_flush",
      "Failure"
    ],
    [
      "systems/simula/code_sim/diagnostics/error_parser.py::_flush",
      "int"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_repo_root",
      "resolve"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_repo_root",
      "getattr"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_repo_root",
      "getenv"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_repo_root",
      "resolve"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_repo_root",
      "resolve"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_repo_root",
      "Path"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_repo_root",
      "Path"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_repo_root",
      "Path"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_cache_path",
      "_repo_root"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_cache_path",
      "mkdir"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_load",
      "_cache_path"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_load",
      "exists"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_load",
      "loads"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_load",
      "read_text"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_save",
      "_cache_path"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_save",
      "write_text"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_save",
      "dumps"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_key",
      "sha256"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_key",
      "update"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_key",
      "hexdigest"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::_key",
      "encode"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "_key"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "_load"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "get"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "CacheEntry"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "bool"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "bool"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "float"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "dict"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "get"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "get"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "get"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::get",
      "get"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::put",
      "_key"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::put",
      "bool"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::put",
      "bool"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::put",
      "float"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::put",
      "_load"
    ],
    [
      "systems/simula/code_sim/cache/patch_cache.py::put",
      "_save"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_read",
      "read_text"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_read",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_read",
      "Path"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_unified",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_unified",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_unified",
      "join"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_unified",
      "unified_diff"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_guard_none",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_guard_none",
      "visit"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_guard_none",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_guard_none",
      "hasattr"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_guard_none",
      "unparse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_guard_none",
      "append"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_guard_none",
      "Rewriter"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_guard_none",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::Rewriter::visit_FunctionDef",
      "append"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::Rewriter::visit_FunctionDef",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_logging",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_logging",
      "visit"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_logging",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_logging",
      "hasattr"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_logging",
      "unparse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_logging",
      "Rewriter"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_insert_logging",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::Rewriter::visit_FunctionDef",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_docstring_update",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_docstring_update",
      "visit"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_docstring_update",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_docstring_update",
      "get_docstring"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_docstring_update",
      "insert"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_docstring_update",
      "hasattr"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_docstring_update",
      "unparse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_docstring_update",
      "Rewriter"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::_docstring_update",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::Rewriter::visit_FunctionDef",
      "get_docstring"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::Rewriter::visit_FunctionDef",
      "insert"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::Rewriter::visit_FunctionDef",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "_read"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "_docstring_update"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "_insert_guard_none"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "_insert_logging"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "append"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "append"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "append"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "endswith"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "append"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "CandidatePatch"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "CandidatePatch"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "CandidatePatch"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "CandidatePatch"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "_unified"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "_unified"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "_unified"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies.py::generate_candidates",
      "_unified"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_read_text",
      "read_text"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_read_text",
      "Path"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_unified",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_unified",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_unified",
      "join"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_unified",
      "unified_diff"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function",
      "getattr"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function",
      "len"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function",
      "startswith"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function_to_module",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function_to_module",
      "_extract_function"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function_to_module",
      "join"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function_to_module",
      "join"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_extract_function_to_module",
      "join"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_rename_function",
      "visit"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_rename_function",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_rename_function",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_rename_function",
      "hasattr"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_rename_function",
      "unparse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_rename_function",
      "generic_visit"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_rename_function",
      "generic_visit"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_rename_function",
      "Ren"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_rename_function",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::Ren::visit_FunctionDef",
      "generic_visit"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::Ren::visit_Call",
      "generic_visit"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::Ren::visit_Call",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_tighten_signature",
      "visit"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_tighten_signature",
      "fix_missing_locations"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_tighten_signature",
      "parse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_tighten_signature",
      "hasattr"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_tighten_signature",
      "unparse"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_tighten_signature",
      "Tight"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_tighten_signature",
      "Name"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::_tighten_signature",
      "Name"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::Tight::visit_FunctionDef",
      "Name"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::Tight::visit_FunctionDef",
      "Name"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "_read_text"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "_rename_function"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "_tighten_signature"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "_extract_function_to_module"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "append"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "append"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "append"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "CandidatePatch"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "CandidatePatch"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "CandidatePatch"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "_unified"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "_unified"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "Path"
    ],
    [
      "systems/simula/code_sim/portfolio/strategies_structural.py::generate_structural_candidates",
      "_unified"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::_kv",
      "join"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::_kv",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::_kv",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::_kv",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::_kv",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "join"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "join"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "append"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "len"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "_kv"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "_kv"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/report/proposal_report.py::build_report_md",
      "get"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only",
      "join"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only",
      "_strip_payload"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only",
      "_strip_payload"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only",
      "startswith"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only",
      "startswith"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only",
      "sub"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only",
      "startswith"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_is_whitespace_only",
      "startswith"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_strip_payload",
      "join"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::_strip_payload",
      "sub"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::drop_whitespace_only_hunks",
      "findall"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::drop_whitespace_only_hunks",
      "join"
    ],
    [
      "systems/simula/code_sim/diff/minimize.py::drop_whitespace_only_hunks",
      "_is_whitespace_only"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "Path"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "rglob"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "rglob"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "append"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "setdefault"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "str"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "parse"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "replace"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "set"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "walk"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "read_text"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "parse"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "read_text"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "add"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "add"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "rsplit"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "as_posix"
    ],
    [
      "systems/simula/code_sim/impact/scope_map.py::map_symbols_to_tests",
      "rsplit"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "walk"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "walk"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "rglob"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "parse"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "str"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "read_text"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "append"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "setdefault"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "isinstance"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "Path"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "set"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "setdefault"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "add"
    ],
    [
      "systems/simula/code_sim/impact/py_callgraph.py::build_callgraph",
      "set"
    ],
    [
      "systems/simula/code_sim/impact/index.py::load_index",
      "exists"
    ],
    [
      "systems/simula/code_sim/impact/index.py::load_index",
      "ImpactIndex"
    ],
    [
      "systems/simula/code_sim/impact/index.py::load_index",
      "loads"
    ],
    [
      "systems/simula/code_sim/impact/index.py::load_index",
      "ImpactIndex"
    ],
    [
      "systems/simula/code_sim/impact/index.py::load_index",
      "read_text"
    ],
    [
      "systems/simula/code_sim/impact/index.py::load_index",
      "get"
    ],
    [
      "systems/simula/code_sim/impact/index.py::load_index",
      "get"
    ],
    [
      "systems/simula/code_sim/impact/index.py::save_index",
      "mkdir"
    ],
    [
      "systems/simula/code_sim/impact/index.py::save_index",
      "write_text"
    ],
    [
      "systems/simula/code_sim/impact/index.py::save_index",
      "dumps"
    ],
    [
      "systems/simula/code_sim/impact/index.py::update_callgraph",
      "load_index"
    ],
    [
      "systems/simula/code_sim/impact/index.py::update_callgraph",
      "build_callgraph"
    ],
    [
      "systems/simula/code_sim/impact/index.py::update_callgraph",
      "save_index"
    ],
    [
      "systems/simula/code_sim/impact/index.py::update_callgraph",
      "sorted"
    ],
    [
      "systems/simula/code_sim/impact/index.py::update_callgraph",
      "list"
    ],
    [
      "systems/simula/code_sim/impact/index.py::update_callgraph",
      "items"
    ],
    [
      "systems/simula/code_sim/impact/index.py::record_symbol_tests",
      "load_index"
    ],
    [
      "systems/simula/code_sim/impact/index.py::record_symbol_tests",
      "set"
    ],
    [
      "systems/simula/code_sim/impact/index.py::record_symbol_tests",
      "update"
    ],
    [
      "systems/simula/code_sim/impact/index.py::record_symbol_tests",
      "sorted"
    ],
    [
      "systems/simula/code_sim/impact/index.py::record_symbol_tests",
      "save_index"
    ],
    [
      "systems/simula/code_sim/impact/index.py::record_symbol_tests",
      "get"
    ],
    [
      "systems/simula/code_sim/impact/index.py::k_expr_for_changed",
      "load_index"
    ],
    [
      "systems/simula/code_sim/impact/index.py::k_expr_for_changed",
      "set"
    ],
    [
      "systems/simula/code_sim/impact/index.py::k_expr_for_changed",
      "get"
    ],
    [
      "systems/simula/code_sim/impact/index.py::k_expr_for_changed",
      "join"
    ],
    [
      "systems/simula/code_sim/impact/index.py::k_expr_for_changed",
      "Path"
    ],
    [
      "systems/simula/code_sim/impact/index.py::k_expr_for_changed",
      "add"
    ],
    [
      "systems/simula/code_sim/impact/index.py::k_expr_for_changed",
      "sorted"
    ],
    [
      "systems/simula/code_sim/impact/index.py::k_expr_for_changed",
      "Path"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "enumerate"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "search"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "search"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "search"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "append"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "append"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "append"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "Finding"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "Finding"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "Finding"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "strip"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "strip"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_text",
      "strip"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_diff_for_secrets",
      "splitlines"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_diff_for_secrets",
      "startswith"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_diff_for_secrets",
      "strip"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_diff_for_secrets",
      "startswith"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_diff_for_secrets",
      "extend"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_diff_for_secrets",
      "len"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_diff_for_secrets",
      "len"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_diff_for_secrets",
      "startswith"
    ],
    [
      "systems/simula/code_sim/security/secret_scan.py::scan_diff_for_secrets",
      "scan_text"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "get"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "extract_effects_from_diff"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "get"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "get"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "model_validate"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "add"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "add"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "PolicyNode"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "PolicyNode"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "list"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "hexdigest"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "sha256"
    ],
    [
      "systems/simula/policy/emit.py::patch_to_policygraph",
      "encode"
    ],
    [
      "systems/simula/policy/effects.py::EffectAnalyzer::__init__",
      "set"
    ],
    [
      "systems/simula/policy/effects.py::EffectAnalyzer::visit_Import",
      "generic_visit"
    ],
    [
      "systems/simula/policy/effects.py::EffectAnalyzer::visit_ImportFrom",
      "generic_visit"
    ],
    [
      "systems/simula/policy/effects.py::EffectAnalyzer::visit_Call",
      "unparse"
    ],
    [
      "systems/simula/policy/effects.py::EffectAnalyzer::visit_Call",
      "generic_visit"
    ],
    [
      "systems/simula/policy/effects.py::extract_effects_from_diff",
      "parse"
    ],
    [
      "systems/simula/policy/effects.py::extract_effects_from_diff",
      "EffectAnalyzer"
    ],
    [
      "systems/simula/policy/effects.py::extract_effects_from_diff",
      "visit"
    ],
    [
      "systems/simula/policy/effects.py::extract_effects_from_diff",
      "splitlines"
    ],
    [
      "systems/simula/policy/effects.py::extract_effects_from_diff",
      "join"
    ],
    [
      "systems/simula/policy/effects.py::extract_effects_from_diff",
      "startswith"
    ],
    [
      "systems/simula/policy/effects.py::extract_effects_from_diff",
      "startswith"
    ],
    [
      "systems/simula/policy/eos_checker.py::load_policy_packs",
      "Path"
    ],
    [
      "systems/simula/policy/eos_checker.py::load_policy_packs",
      "glob"
    ],
    [
      "systems/simula/policy/eos_checker.py::load_policy_packs",
      "exists"
    ],
    [
      "systems/simula/policy/eos_checker.py::load_policy_packs",
      "extend"
    ],
    [
      "systems/simula/policy/eos_checker.py::load_policy_packs",
      "loads"
    ],
    [
      "systems/simula/policy/eos_checker.py::load_policy_packs",
      "read_text"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "splitlines"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "PolicyReport"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "str"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "compile"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "lower"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "str"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "str"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "search"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "append"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "get"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "str"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "get"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "PolicyFinding"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "len"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "get"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "startswith"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "search"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "get"
    ],
    [
      "systems/simula/policy/eos_checker.py::check_diff_against_policies",
      "startswith"
    ],
    [
      "systems/simula/policy/packs.py::PolicyReport::summary",
      "asdict"
    ],
    [
      "systems/simula/policy/packs.py::_repo_root",
      "resolve"
    ],
    [
      "systems/simula/policy/packs.py::_repo_root",
      "getattr"
    ],
    [
      "systems/simula/policy/packs.py::_repo_root",
      "getenv"
    ],
    [
      "systems/simula/policy/packs.py::_repo_root",
      "resolve"
    ],
    [
      "systems/simula/policy/packs.py::_repo_root",
      "resolve"
    ],
    [
      "systems/simula/policy/packs.py::_repo_root",
      "Path"
    ],
    [
      "systems/simula/policy/packs.py::_repo_root",
      "Path"
    ],
    [
      "systems/simula/policy/packs.py::_repo_root",
      "Path"
    ],
    [
      "systems/simula/policy/packs.py::_policy_dir",
      "_repo_root"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "read_text"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "PolicyPack"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "loads"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "lower"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "safe_load"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "str"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "list"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "bool"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "get"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "get"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "get"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "get"
    ],
    [
      "systems/simula/policy/packs.py::_load_one",
      "get"
    ],
    [
      "systems/simula/policy/packs.py::load_policy_packs",
      "_policy_dir"
    ],
    [
      "systems/simula/policy/packs.py::load_policy_packs",
      "sorted"
    ],
    [
      "systems/simula/policy/packs.py::load_policy_packs",
      "exists"
    ],
    [
      "systems/simula/policy/packs.py::load_policy_packs",
      "glob"
    ],
    [
      "systems/simula/policy/packs.py::load_policy_packs",
      "is_file"
    ],
    [
      "systems/simula/policy/packs.py::load_policy_packs",
      "lower"
    ],
    [
      "systems/simula/policy/packs.py::load_policy_packs",
      "append"
    ],
    [
      "systems/simula/policy/packs.py::load_policy_packs",
      "_load_one"
    ],
    [
      "systems/simula/policy/packs.py::_paths_from_diff",
      "sorted"
    ],
    [
      "systems/simula/policy/packs.py::_paths_from_diff",
      "set"
    ],
    [
      "systems/simula/policy/packs.py::_paths_from_diff",
      "findall"
    ],
    [
      "systems/simula/policy/packs.py::_hunks_from_diff",
      "splitlines"
    ],
    [
      "systems/simula/policy/packs.py::_hunks_from_diff",
      "startswith"
    ],
    [
      "systems/simula/policy/packs.py::_hunks_from_diff",
      "append"
    ],
    [
      "systems/simula/policy/packs.py::_hunks_from_diff",
      "append"
    ],
    [
      "systems/simula/policy/packs.py::_hunks_from_diff",
      "append"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "_paths_from_diff"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "_hunks_from_diff"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "any"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "any"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "PolicyReport"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "endswith"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "append"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "isinstance"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "isinstance"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "enumerate"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "endswith"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "append"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "PolicyFinding"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "len"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "append"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "sum"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "len"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "fnmatch"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "PolicyFinding"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "PolicyFinding"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "append"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "PolicyFinding"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "startswith"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "startswith"
    ],
    [
      "systems/simula/policy/packs.py::check_diff_against_policies",
      "len"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::__init__",
      "time"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::__init__",
      "mkdir"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::__init__",
      "Path"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::__init__",
      "int"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::__init__",
      "str"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::__init__",
      "uuid4"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::_utc_iso",
      "isoformat"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::_utc_iso",
      "fromtimestamp"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::setup_logging",
      "FileHandler"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::setup_logging",
      "Formatter"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::setup_logging",
      "setFormatter"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::setup_logging",
      "setLevel"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::setup_logging",
      "addHandler"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::setup_logging",
      "getLogger"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::teardown_logging",
      "removeHandler"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::teardown_logging",
      "close"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::teardown_logging",
      "getLogger"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "update"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "write_text"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "str"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "format_exc"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "dumps"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "get"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "round"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "_utc_iso"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "get"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "get"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "time"
    ],
    [
      "systems/simula/service/services/codegen.py::JobContext::finalize",
      "time"
    ],
    [
      "systems/simula/service/services/equor_bridge.py::_current_identity_id",
      "getenv"
    ],
    [
      "systems/simula/service/services/equor_bridge.py::_current_identity_id",
      "get_current_identity"
    ],
    [
      "systems/simula/service/services/equor_bridge.py::_current_identity_id",
      "isinstance"
    ],
    [
      "systems/simula/service/services/equor_bridge.py::_current_identity_id",
      "get"
    ],
    [
      "systems/simula/service/services/equor_bridge.py::_current_identity_id",
      "str"
    ],
    [
      "systems/simula/service/services/prompts.py::_read_file_snippet",
      "splitlines"
    ],
    [
      "systems/simula/service/services/prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems/simula/service/services/prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems/simula/service/services/prompts.py::_read_file_snippet",
      "is_file"
    ],
    [
      "systems/simula/service/services/prompts.py::_read_file_snippet",
      "len"
    ],
    [
      "systems/simula/service/services/prompts.py::_read_file_snippet",
      "join"
    ],
    [
      "systems/simula/service/services/prompts.py::_read_file_snippet",
      "read_text"
    ],
    [
      "systems/simula/service/services/prompts.py::_gather_repo_context",
      "join"
    ],
    [
      "systems/simula/service/services/prompts.py::_gather_repo_context",
      "get"
    ],
    [
      "systems/simula/service/services/prompts.py::_gather_repo_context",
      "resolve"
    ],
    [
      "systems/simula/service/services/prompts.py::_gather_repo_context",
      "_read_file_snippet"
    ],
    [
      "systems/simula/service/services/prompts.py::_gather_repo_context",
      "append"
    ],
    [
      "systems/simula/service/services/validator.py::_is_subpath",
      "relative_to"
    ],
    [
      "systems/simula/service/services/validator.py::safe_patch_paths",
      "resolve"
    ],
    [
      "systems/simula/service/services/validator.py::safe_patch_paths",
      "any"
    ],
    [
      "systems/simula/service/services/validator.py::safe_patch_paths",
      "any"
    ],
    [
      "systems/simula/service/services/validator.py::safe_patch_paths",
      "_is_subpath"
    ],
    [
      "systems/simula/service/services/validator.py::safe_patch_paths",
      "startswith"
    ],
    [
      "systems/simula/service/services/validator.py::safe_patch_paths",
      "endswith"
    ],
    [
      "systems/simula/service/services/validator.py::safe_patch_paths",
      "str"
    ],
    [
      "systems/simula/service/services/validator.py::safe_patch_paths",
      "str"
    ],
    [
      "systems/simula/service/services/vcs.py::_git_sync",
      "run"
    ],
    [
      "systems/simula/nscs/agent_tools.py::_discover_functions_from_source",
      "parse"
    ],
    [
      "systems/simula/nscs/agent_tools.py::_discover_functions_from_source",
      "isinstance"
    ],
    [
      "systems/simula/nscs/agent_tools.py::_discover_functions_from_source",
      "append"
    ],
    [
      "systems/simula/nscs/agent_tools.py::_discover_functions_from_source",
      "startswith"
    ],
    [
      "systems/simula/nscs/language_adapters.py::_is_node_repo",
      "exists"
    ],
    [
      "systems/simula/nscs/language_adapters.py::_is_node_repo",
      "Path"
    ],
    [
      "systems/simula/nscs/language_adapters.py::_is_python_repo",
      "any"
    ],
    [
      "systems/simula/nscs/language_adapters.py::_is_python_repo",
      "rglob"
    ],
    [
      "systems/simula/nscs/language_adapters.py::_is_python_repo",
      "Path"
    ],
    [
      "systems/simula/nscs/language_adapters_go.py::is_go_repo",
      "exists"
    ],
    [
      "systems/simula/nscs/language_adapters_go.py::is_go_repo",
      "any"
    ],
    [
      "systems/simula/nscs/language_adapters_go.py::is_go_repo",
      "rglob"
    ],
    [
      "systems/simula/nscs/language_adapters_go.py::is_go_repo",
      "Path"
    ],
    [
      "systems/simula/nscs/language_adapters_go.py::is_go_repo",
      "Path"
    ],
    [
      "systems/simula/nscs/language_adapters_java.py::is_java_repo",
      "exists"
    ],
    [
      "systems/simula/nscs/language_adapters_java.py::is_java_repo",
      "exists"
    ],
    [
      "systems/simula/nscs/language_adapters_java.py::is_java_repo",
      "any"
    ],
    [
      "systems/simula/nscs/language_adapters_java.py::is_java_repo",
      "rglob"
    ],
    [
      "systems/simula/nscs/language_adapters_java.py::is_java_repo",
      "Path"
    ],
    [
      "systems/simula/nscs/language_adapters_java.py::is_java_repo",
      "Path"
    ],
    [
      "systems/simula/nscs/language_adapters_java.py::is_java_repo",
      "Path"
    ],
    [
      "systems/simula/nscs/language_adapters_rust.py::is_rust_repo",
      "exists"
    ],
    [
      "systems/simula/nscs/language_adapters_rust.py::is_rust_repo",
      "any"
    ],
    [
      "systems/simula/nscs/language_adapters_rust.py::is_rust_repo",
      "rglob"
    ],
    [
      "systems/simula/nscs/language_adapters_rust.py::is_rust_repo",
      "Path"
    ],
    [
      "systems/simula/nscs/language_adapters_rust.py::is_rust_repo",
      "Path"
    ],
    [
      "systems/simula/nscs/specs/compiler.py::compile_spec_to_constraints",
      "model_dump"
    ],
    [
      "systems/simula/nscs/specs/compiler.py::compile_spec_to_constraints",
      "model_dump"
    ],
    [
      "systems/simula/nscs/specs/compiler.py::compile_spec_to_constraints",
      "model_dump"
    ],
    [
      "systems/simula/nscs/specs/compiler.py::compile_spec_to_constraints",
      "model_dump"
    ],
    [
      "systems/simula/nscs/specs/forge.py::natural_language_to_spec",
      "ModuleSpec"
    ],
    [
      "systems/simula/nscs/specs/forge.py::natural_language_to_spec",
      "SystemSpec"
    ],
    [
      "systems/simula/nscs/specs/forge.py::natural_language_to_spec",
      "APISignature"
    ],
    [
      "systems/simula/nscs/ir/model.py::SIMIR::ensure_module",
      "ModuleIR"
    ],
    [
      "systems/simula/nscs/ir/patch.py::apply_ir_patch",
      "items"
    ],
    [
      "systems/simula/nscs/ir/patch.py::apply_ir_patch",
      "ensure_module"
    ],
    [
      "systems/simula/nscs/ir/patch.py::apply_ir_patch",
      "get"
    ],
    [
      "systems/simula/nscs/ir/patch.py::apply_ir_patch",
      "FuncDecl"
    ],
    [
      "systems/simula/nscs/ir/patch.py::apply_ir_patch",
      "get"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_function",
      "join"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_function",
      "get"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_function",
      "append"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_function",
      "keys"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_function",
      "split"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_function",
      "append"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_function",
      "join"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_module",
      "join"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_module",
      "append"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_module",
      "append"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::render_module",
      "render_function"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::emit_files_from_ir",
      "items"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::emit_files_from_ir",
      "render_module"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::emit_files_from_ir",
      "makedirs"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::emit_files_from_ir",
      "dirname"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::emit_files_from_ir",
      "open"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::emit_files_from_ir",
      "write"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::emit_files_from_ir",
      "join"
    ],
    [
      "systems/simula/nscs/ir/backend/python.py::emit_files_from_ir",
      "join"
    ],
    [
      "systems/simula/nscs/verify/bundle.py::summarize",
      "all"
    ],
    [
      "systems/simula/nscs/twin/runner.py::run_scenarios",
      "len"
    ],
    [
      "systems/simula/nscs/strategy/arms.py::_register",
      "register"
    ],
    [
      "systems/simula/nscs/strategy/arms.py::_register",
      "register"
    ],
    [
      "systems/simula/agents/mas_runner.py::MASRunner::__init__",
      "ArchitectAgent"
    ],
    [
      "systems/simula/agents/mas_runner.py::MASRunner::__init__",
      "CoderAgent"
    ],
    [
      "systems/simula/agents/mas_runner.py::MASRunner::__init__",
      "QAAgent"
    ],
    [
      "systems/simula/agents/mas_runner.py::MASRunner::__init__",
      "SecurityAgent"
    ],
    [
      "systems/simula/agents/mas_runner.py::MASRunner::__init__",
      "ReviewerAgent"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "str"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "startswith"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "float"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "float"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "len"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "list"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "keys"
    ],
    [
      "systems/simula/review/atune_summary.py::summarize_atune",
      "get"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "join"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "get"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "get"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "get"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "get"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "get"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "dumps"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "dumps"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "dumps"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "get"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "get"
    ],
    [
      "systems/simula/review/pr_templates.py::render_pr_body",
      "get"
    ],
    [
      "systems/simula/vcs/commit_msg.py::render_conventional_commit",
      "strip"
    ],
    [
      "systems/simula/vcs/commit_msg.py::render_conventional_commit",
      "strip"
    ],
    [
      "systems/simula/vcs/commit_msg.py::title_from_evidence",
      "get"
    ],
    [
      "systems/simula/vcs/commit_msg.py::title_from_evidence",
      "get"
    ],
    [
      "systems/simula/vcs/commit_msg.py::title_from_evidence",
      "get"
    ],
    [
      "systems/simula/vcs/commit_msg.py::title_from_evidence",
      "get"
    ],
    [
      "systems/simula/vcs/commit_msg.py::title_from_evidence",
      "get"
    ],
    [
      "systems/simula/artifacts/package.py::_sha256",
      "sha256"
    ],
    [
      "systems/simula/artifacts/package.py::_sha256",
      "hexdigest"
    ],
    [
      "systems/simula/artifacts/package.py::_sha256",
      "open"
    ],
    [
      "systems/simula/artifacts/package.py::_sha256",
      "iter"
    ],
    [
      "systems/simula/artifacts/package.py::_sha256",
      "update"
    ],
    [
      "systems/simula/artifacts/package.py::_sha256",
      "read"
    ],
    [
      "systems/simula/artifacts/package.py::_collect",
      "Path"
    ],
    [
      "systems/simula/artifacts/package.py::_collect",
      "is_file"
    ],
    [
      "systems/simula/artifacts/package.py::_collect",
      "append"
    ],
    [
      "systems/simula/artifacts/package.py::_collect",
      "is_dir"
    ],
    [
      "systems/simula/artifacts/package.py::_collect",
      "rglob"
    ],
    [
      "systems/simula/artifacts/package.py::_collect",
      "is_file"
    ],
    [
      "systems/simula/artifacts/package.py::_collect",
      "append"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "int"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "Path"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "mkdir"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "write_text"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "ArtifactBundle"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "time"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "dumps"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "open"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "add"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "_collect"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "str"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "str"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "_sha256"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "add"
    ],
    [
      "systems/simula/artifacts/package.py::create_artifact_bundle",
      "str"
    ],
    [
      "systems/simula/artifacts/index.py::Artifact::to_dict",
      "asdict"
    ],
    [
      "systems/simula/artifacts/index.py::Artifact::to_dict",
      "strftime"
    ],
    [
      "systems/simula/artifacts/index.py::Artifact::to_dict",
      "gmtime"
    ],
    [
      "systems/simula/artifacts/index.py::_root",
      "resolve"
    ],
    [
      "systems/simula/artifacts/index.py::_root",
      "Path"
    ],
    [
      "systems/simula/artifacts/index.py::_pkg_list",
      "list"
    ],
    [
      "systems/simula/artifacts/index.py::_pkg_list",
      "len"
    ],
    [
      "systems/simula/artifacts/index.py::_pkg_list",
      "root"
    ],
    [
      "systems/simula/artifacts/index.py::_pkg_read",
      "read"
    ],
    [
      "systems/simula/artifacts/index.py::_pkg_delete",
      "delete"
    ],
    [
      "systems/simula/artifacts/index.py::_is_textlike",
      "guess_type"
    ],
    [
      "systems/simula/artifacts/index.py::_is_textlike",
      "startswith"
    ],
    [
      "systems/simula/artifacts/index.py::_is_textlike",
      "lower"
    ],
    [
      "systems/simula/artifacts/index.py::_is_textlike",
      "str"
    ],
    [
      "systems/simula/artifacts/index.py::_iter_candidate_files",
      "resolve"
    ],
    [
      "systems/simula/artifacts/index.py::_iter_candidate_files",
      "is_file"
    ],
    [
      "systems/simula/artifacts/index.py::_iter_candidate_files",
      "is_dir"
    ],
    [
      "systems/simula/artifacts/index.py::_iter_candidate_files",
      "rglob"
    ],
    [
      "systems/simula/artifacts/index.py::_iter_candidate_files",
      "is_file"
    ],
    [
      "systems/simula/artifacts/index.py::_iter_candidate_files",
      "relative_to"
    ],
    [
      "systems/simula/artifacts/index.py::_iter_candidate_files",
      "resolve"
    ],
    [
      "systems/simula/artifacts/index.py::_infer_type",
      "endswith"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "_root"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "_iter_candidate_files"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "sort"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "str"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "_infer_type"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "stat"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "append"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "to_dict"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "len"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "str"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "relative_to"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "lower"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "Artifact"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "str"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "max"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_list",
      "min"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "_root"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "resolve"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "relative_to"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "stat"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "str"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "strftime"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "_is_textlike"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "_is_textlike"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "exists"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "is_file"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "relative_to"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "gmtime"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "read_text"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_read",
      "loads"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_delete",
      "_root"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_delete",
      "resolve"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_delete",
      "relative_to"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_delete",
      "exists"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_delete",
      "is_file"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_delete",
      "unlink"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_delete",
      "append"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_delete",
      "append"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_delete",
      "append"
    ],
    [
      "systems/simula/artifacts/index.py::_fs_delete",
      "str"
    ],
    [
      "systems/simula/artifacts/index.py::list_artifacts",
      "_fs_list"
    ],
    [
      "systems/simula/artifacts/index.py::list_artifacts",
      "_pkg_list"
    ],
    [
      "systems/simula/artifacts/index.py::read_artifact",
      "_fs_read"
    ],
    [
      "systems/simula/artifacts/index.py::read_artifact",
      "_pkg_read"
    ],
    [
      "systems/simula/artifacts/index.py::delete_artifacts",
      "_fs_delete"
    ],
    [
      "systems/simula/artifacts/index.py::delete_artifacts",
      "_pkg_delete"
    ],
    [
      "systems/simula/config/loader.py::load_config",
      "SimulaConfig"
    ],
    [
      "systems/simula/config/__init__.py::_normalize_path_string",
      "replace"
    ],
    [
      "systems/simula/config/__init__.py::_normalize_path_string",
      "str"
    ],
    [
      "systems/simula/config/__init__.py::_normalize_path_string",
      "resolve"
    ],
    [
      "systems/simula/config/__init__.py::_normalize_path_string",
      "Path"
    ],
    [
      "systems/simula/config/__init__.py::_git_root_cwd",
      "check_output"
    ],
    [
      "systems/simula/config/__init__.py::_git_root_cwd",
      "_normalize_path_string"
    ],
    [
      "systems/simula/config/__init__.py::_git_root_cwd",
      "strip"
    ],
    [
      "systems/simula/config/__init__.py::_git_root_cwd",
      "decode"
    ],
    [
      "systems/simula/config/__init__.py::_default_repo_root",
      "getenv"
    ],
    [
      "systems/simula/config/__init__.py::_default_repo_root",
      "getenv"
    ],
    [
      "systems/simula/config/__init__.py::_default_repo_root",
      "_git_root_cwd"
    ],
    [
      "systems/simula/config/__init__.py::_optional_json_or_yaml",
      "exists"
    ],
    [
      "systems/simula/config/__init__.py::_optional_json_or_yaml",
      "read_text"
    ],
    [
      "systems/simula/config/__init__.py::_optional_json_or_yaml",
      "loads"
    ],
    [
      "systems/simula/config/__init__.py::_optional_json_or_yaml",
      "isinstance"
    ],
    [
      "systems/simula/config/__init__.py::_optional_json_or_yaml",
      "lower"
    ],
    [
      "systems/simula/config/__init__.py::_optional_json_or_yaml",
      "safe_load"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_parse_test_mode",
      "field_validator"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_parse_test_mode",
      "getenv"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_parse_test_mode",
      "lower"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_parse_test_mode",
      "str"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "model_validator"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "_normalize_path_string"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "_normalize_path_string"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "str"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "_optional_json_or_yaml"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "items"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "mkdir"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "Path"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "Path"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "hasattr"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "mkdir"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "Path"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "getattr"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "Path"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "isinstance"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "isinstance"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "items"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "setattr"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "hasattr"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "Path"
    ],
    [
      "systems/simula/config/__init__.py::SimulaSettings::_harmonize_and_overlay",
      "setattr"
    ],
    [
      "systems/simula/ci/pipelines.py::github_actions_yaml",
      "strip"
    ],
    [
      "systems/simula/ci/pipelines.py::github_actions_yaml",
      "dedent"
    ],
    [
      "systems/simula/ci/pipelines.py::gitlab_ci_yaml",
      "strip"
    ],
    [
      "systems/simula/ci/pipelines.py::gitlab_ci_yaml",
      "dedent"
    ],
    [
      "systems/simula/ci/pipelines.py::render_ci",
      "startswith"
    ],
    [
      "systems/simula/ci/pipelines.py::render_ci",
      "github_actions_yaml"
    ],
    [
      "systems/simula/ci/pipelines.py::render_ci",
      "gitlab_ci_yaml"
    ],
    [
      "systems/simula/ci/pipelines.py::render_ci",
      "lower"
    ],
    [
      "systems/simula/ops/glue.py::quick_policy_gate",
      "load_config"
    ],
    [
      "systems/simula/ops/glue.py::quick_policy_gate",
      "check_diff_against_policies"
    ],
    [
      "systems/simula/ops/glue.py::quick_policy_gate",
      "load_policy_packs"
    ],
    [
      "systems/simula/ops/glue.py::quick_policy_gate",
      "load_policy_packs"
    ],
    [
      "systems/simula/ops/glue.py::quick_policy_gate",
      "summary"
    ],
    [
      "systems/simula/ops/glue.py::quick_impact_and_cov",
      "compute_impact"
    ],
    [
      "systems/simula/ops/glue.py::quick_impact_and_cov",
      "summary"
    ],
    [
      "systems/simula/ops/glue.py::quick_impact_and_cov",
      "compute_delta_coverage"
    ],
    [
      "systems/simula/git/pr_annotations.py::_auth_headers",
      "getenv"
    ],
    [
      "systems/simula/git/pr_annotations.py::_auth_headers",
      "getenv"
    ],
    [
      "systems/simula/git/pr_annotations.py::_auth_headers",
      "getenv"
    ],
    [
      "systems/simula/git/pr_annotations.py::_auth_headers",
      "RuntimeError"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "join"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "join"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "append"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "get"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "len"
    ],
    [
      "systems/simula/git/pr_annotations.py::format_proposal_comment",
      "len"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "get"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "get"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "float"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "float"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "get"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "get"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "get"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "get"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "get"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "get"
    ],
    [
      "systems/simula/scoring/score.py::composite_score",
      "get"
    ],
    [
      "systems/simula/recipes/generator.py::load_catalog",
      "exists"
    ],
    [
      "systems/simula/recipes/generator.py::load_catalog",
      "loads"
    ],
    [
      "systems/simula/recipes/generator.py::load_catalog",
      "read_text"
    ],
    [
      "systems/simula/recipes/generator.py::load_catalog",
      "Recipe"
    ],
    [
      "systems/simula/recipes/generator.py::save_catalog",
      "mkdir"
    ],
    [
      "systems/simula/recipes/generator.py::save_catalog",
      "write_text"
    ],
    [
      "systems/simula/recipes/generator.py::save_catalog",
      "dumps"
    ],
    [
      "systems/simula/recipes/generator.py::save_catalog",
      "asdict"
    ],
    [
      "systems/simula/recipes/generator.py::append_recipe",
      "load_catalog"
    ],
    [
      "systems/simula/recipes/generator.py::append_recipe",
      "Recipe"
    ],
    [
      "systems/simula/recipes/generator.py::append_recipe",
      "append"
    ],
    [
      "systems/simula/recipes/generator.py::append_recipe",
      "save_catalog"
    ],
    [
      "systems/simula/recipes/generator.py::append_recipe",
      "time"
    ],
    [
      "systems/simula/recipes/generator.py::append_recipe",
      "int"
    ],
    [
      "systems/simula/recipes/generator.py::append_recipe",
      "time"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_iter_json",
      "rglob"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_iter_json",
      "exists"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_iter_json",
      "stat"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_safe_float",
      "float"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "isinstance"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "isinstance"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "isinstance"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "isinstance"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "isinstance"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "_safe_float"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "isinstance"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "isinstance"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "append"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "append"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "_safe_float"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "_safe_float"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "isinstance"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "append"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_scores",
      "_safe_float"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_cov",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_cov",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_cov",
      "isinstance"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_cov",
      "float"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_cov",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_created",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_created",
      "isinstance"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_created",
      "strip"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::_extract_created",
      "strip"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "_iter_json"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "sort"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "Path"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "_extract_scores"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "_extract_cov"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "_extract_created"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "RunSummary"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "append"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "len"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "str"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "loads"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "asdict"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "resolve"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "read_text"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "str"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "str"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "len"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "max"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "median"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "relative_to"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "sum"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "len"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "get"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "Path"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "resolve"
    ],
    [
      "systems/simula/spec_eval/scoreboard.py::load_scoreboard",
      "Path"
    ],
    [
      "systems/simula/risk/estimator.py::_changed_files",
      "sorted"
    ],
    [
      "systems/simula/risk/estimator.py::_changed_files",
      "set"
    ],
    [
      "systems/simula/risk/estimator.py::_changed_files",
      "findall"
    ],
    [
      "systems/simula/risk/estimator.py::_diff_magnitude",
      "sum"
    ],
    [
      "systems/simula/risk/estimator.py::_diff_magnitude",
      "sum"
    ],
    [
      "systems/simula/risk/estimator.py::_diff_magnitude",
      "splitlines"
    ],
    [
      "systems/simula/risk/estimator.py::_diff_magnitude",
      "splitlines"
    ],
    [
      "systems/simula/risk/estimator.py::_diff_magnitude",
      "startswith"
    ],
    [
      "systems/simula/risk/estimator.py::_diff_magnitude",
      "startswith"
    ],
    [
      "systems/simula/risk/estimator.py::_diff_magnitude",
      "startswith"
    ],
    [
      "systems/simula/risk/estimator.py::_diff_magnitude",
      "startswith"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "_changed_files"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "_diff_magnitude"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "min"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "min"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "max"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "max"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "max"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "min"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "len"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "len"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "float"
    ],
    [
      "systems/simula/risk/estimator.py::estimate_risk",
      "float"
    ],
    [
      "vendor/asteval/astutils.py::_open",
      "open"
    ],
    [
      "vendor/asteval/astutils.py::_open",
      "RuntimeError"
    ],
    [
      "vendor/asteval/astutils.py::_open",
      "RuntimeError"
    ],
    [
      "vendor/asteval/astutils.py::_type",
      "type"
    ],
    [
      "vendor/asteval/astutils.py::safe_pow",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::safe_pow",
      "RuntimeError"
    ],
    [
      "vendor/asteval/astutils.py::safe_pow",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::safe_pow",
      "nanmax"
    ],
    [
      "vendor/asteval/astutils.py::safe_pow",
      "RuntimeError"
    ],
    [
      "vendor/asteval/astutils.py::safe_mult",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::safe_mult",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::safe_mult",
      "RuntimeError"
    ],
    [
      "vendor/asteval/astutils.py::safe_mult",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::safe_add",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::safe_add",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::safe_add",
      "RuntimeError"
    ],
    [
      "vendor/asteval/astutils.py::safe_add",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::safe_add",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::safe_lshift",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::safe_lshift",
      "RuntimeError"
    ],
    [
      "vendor/asteval/astutils.py::safe_lshift",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::safe_lshift",
      "nanmax"
    ],
    [
      "vendor/asteval/astutils.py::safe_lshift",
      "RuntimeError"
    ],
    [
      "vendor/asteval/astutils.py::safe_getattr",
      "items"
    ],
    [
      "vendor/asteval/astutils.py::safe_getattr",
      "raise_exc"
    ],
    [
      "vendor/asteval/astutils.py::safe_getattr",
      "startswith"
    ],
    [
      "vendor/asteval/astutils.py::safe_getattr",
      "endswith"
    ],
    [
      "vendor/asteval/astutils.py::safe_getattr",
      "getattr"
    ],
    [
      "vendor/asteval/astutils.py::safe_getattr",
      "repr"
    ],
    [
      "vendor/asteval/astutils.py::safe_getattr",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::SafeFormatter::__init__",
      "__init__"
    ],
    [
      "vendor/asteval/astutils.py::SafeFormatter::__init__",
      "super"
    ],
    [
      "vendor/asteval/astutils.py::SafeFormatter::get_field",
      "formatter_field_name_split"
    ],
    [
      "vendor/asteval/astutils.py::SafeFormatter::get_field",
      "get_value"
    ],
    [
      "vendor/asteval/astutils.py::SafeFormatter::get_field",
      "safe_getattr"
    ],
    [
      "vendor/asteval/astutils.py::safe_format",
      "SafeFormatter"
    ],
    [
      "vendor/asteval/astutils.py::safe_format",
      "vformat"
    ],
    [
      "vendor/asteval/astutils.py::valid_symbol_name",
      "generate_tokens"
    ],
    [
      "vendor/asteval/astutils.py::valid_symbol_name",
      "next"
    ],
    [
      "vendor/asteval/astutils.py::valid_symbol_name",
      "next"
    ],
    [
      "vendor/asteval/astutils.py::valid_symbol_name",
      "BytesIO"
    ],
    [
      "vendor/asteval/astutils.py::valid_symbol_name",
      "encode"
    ],
    [
      "vendor/asteval/astutils.py::valid_symbol_name",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::__init__",
      "exc_info"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::__init__",
      "str"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::get_error",
      "append"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::get_error",
      "append"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::get_error",
      "append"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::get_error",
      "join"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::get_error",
      "str"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::get_error",
      "split"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::get_error",
      "enumerate"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::get_error",
      "join"
    ],
    [
      "vendor/asteval/astutils.py::ExceptionHolder::get_error",
      "append"
    ],
    [
      "vendor/asteval/astutils.py::NameFinder::__init__",
      "__init__"
    ],
    [
      "vendor/asteval/astutils.py::NameFinder::generic_visit",
      "generic_visit"
    ],
    [
      "vendor/asteval/astutils.py::NameFinder::generic_visit",
      "append"
    ],
    [
      "vendor/asteval/astutils.py::get_ast_names",
      "NameFinder"
    ],
    [
      "vendor/asteval/astutils.py::get_ast_names",
      "generic_visit"
    ],
    [
      "vendor/asteval/astutils.py::valid_varname",
      "isidentifier"
    ],
    [
      "vendor/asteval/astutils.py::Group::__init__",
      "__init__"
    ],
    [
      "vendor/asteval/astutils.py::Group::__init__",
      "hex"
    ],
    [
      "vendor/asteval/astutils.py::Group::__init__",
      "id"
    ],
    [
      "vendor/asteval/astutils.py::Group::__setattr__",
      "valid_varname"
    ],
    [
      "vendor/asteval/astutils.py::Group::__setattr__",
      "SyntaxError"
    ],
    [
      "vendor/asteval/astutils.py::Group::__getattr__",
      "KeyError"
    ],
    [
      "vendor/asteval/astutils.py::Group::__setitem__",
      "valid_varname"
    ],
    [
      "vendor/asteval/astutils.py::Group::__setitem__",
      "__setitem__"
    ],
    [
      "vendor/asteval/astutils.py::Group::__setitem__",
      "setattr"
    ],
    [
      "vendor/asteval/astutils.py::Group::get",
      "__getattr__"
    ],
    [
      "vendor/asteval/astutils.py::Group::get",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::Group::get",
      "__getattr__"
    ],
    [
      "vendor/asteval/astutils.py::Group::get",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::Group::get",
      "__getattr__"
    ],
    [
      "vendor/asteval/astutils.py::Group::get",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::Group::__repr__",
      "keys"
    ],
    [
      "vendor/asteval/astutils.py::Group::__repr__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Group::_repr_html_",
      "items"
    ],
    [
      "vendor/asteval/astutils.py::Group::_repr_html_",
      "append"
    ],
    [
      "vendor/asteval/astutils.py::Group::_repr_html_",
      "join"
    ],
    [
      "vendor/asteval/astutils.py::Group::_repr_html_",
      "append"
    ],
    [
      "vendor/asteval/astutils.py::Group::_repr_html_",
      "repr"
    ],
    [
      "vendor/asteval/astutils.py::Group::_repr_html_",
      "type"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "dict"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "Group"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "items"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "Group"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "vendor/asteval/astutils.py::make_symbol_table",
      "pop"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__init__",
      "unparse"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__init__",
      "__signature__"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__setattr__",
      "getattr"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__setattr__",
      "__raise_exc__"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__getdoc__",
      "isinstance"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__repr__",
      "__signature__"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__repr__",
      "__getdoc__"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__signature__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__signature__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__signature__",
      "join"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__signature__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__signature__",
      "join"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "get"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "list"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "get"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "append"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "pop"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "get"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "Group"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "list"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "enumerate"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "pop"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "copy"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "update"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "run"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "keys"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "tuple"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "get"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "append"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "pop"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "pop"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "join"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "list"
    ],
    [
      "vendor/asteval/astutils.py::Procedure::__call__",
      "keys"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "copy"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "max"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "time"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "update"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "items"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "min"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "make_symbol_table"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "get"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "set"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "set"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "set"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "pop"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "startswith"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "getattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "items"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "startswith"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "callable"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "ismodule"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "repr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__init__",
      "type"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::remove_nodehandler",
      "pop"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::set_nodehandler",
      "getattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::user_defined_symbols",
      "set"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::user_defined_symbols",
      "set"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::user_defined_symbols",
      "difference"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::user_defined_symbols",
      "keys"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::unimplemented",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "str"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "ExceptionHolder"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "Raise"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "pop"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "exc"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "exc"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "pop"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::parse",
      "fix_missing_locations"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::parse",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::parse",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::parse",
      "parse"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::parse",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::parse",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "eval"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "handler"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "_remove_duplicate_errors"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "lower"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "list"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::run",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_remove_duplicate_errors",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_remove_duplicate_errors",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_remove_duplicate_errors",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::__call__",
      "eval"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "time"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "_remove_duplicate_errors"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "exc"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "parse"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "print"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "get_error"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "exc_info"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "print"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "exc_info"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "get_error"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "exc"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::eval",
      "get_error"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::dump",
      "dump"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_expr",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_import",
      "import_module"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_importfrom",
      "import_module"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_importfrom",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_importfrom",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "zip"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "__import__"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "split"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "getattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "join"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "pop"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::import_module",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_index",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_return",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_return",
      "SyntaxError"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_repr",
      "repr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_repr",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_module",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_expression",
      "on_module"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_break",
      "on_interrupt"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_continue",
      "on_interrupt"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_assert",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_assert",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_list",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_tuple",
      "tuple"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_tuple",
      "on_list"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_set",
      "set"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_set",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_dict",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_dict",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_dict",
      "zip"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_joinedstr",
      "join"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_joinedstr",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_formattedvalue",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_formattedvalue",
      "safe_format"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_formattedvalue",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_getsym",
      "get"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_getsym",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_getsym",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_name",
      "_getsym"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_name",
      "str"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "remove"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "setattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "valid_symbol_name"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "zip"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "ValueError"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::node_assign",
      "node_assign"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_attribute",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_attribute",
      "safe_getattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_attribute",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_attribute",
      "delattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_assign",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_assign",
      "node_assign"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_augassign",
      "on_assign"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_augassign",
      "Assign"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_augassign",
      "BinOp"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_slice",
      "slice"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_slice",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_slice",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_slice",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_extslice",
      "tuple"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_extslice",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_subscript",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_subscript",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "reverse"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "pop"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "join"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "reverse"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "join"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_delete",
      "setattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_unaryop",
      "op2func"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_unaryop",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_binop",
      "op2func"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_binop",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_binop",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_boolop",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_boolop",
      "op2func"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_boolop",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_compare",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_compare",
      "zip"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_compare",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_compare",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_compare",
      "all"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_compare",
      "op2func"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_compare",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_compare",
      "all"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_printer",
      "get"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_printer",
      "pop"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_printer",
      "pop"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_printer",
      "pop"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_printer",
      "pop"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_printer",
      "print"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_printer",
      "flush"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_if",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_if",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_ifexp",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_ifexp",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_while",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_while",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_while",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_while",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_for",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_for",
      "node_assign"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_for",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_for",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_for",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_with",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_with",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_with",
      "hasattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_with",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_with",
      "hasattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_with",
      "__enter__"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_with",
      "TypeError"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_with",
      "__exit__"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_with",
      "node_assign"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_with",
      "type"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_comp_save_syms",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_comp_save_syms",
      "deepcopy"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_comp_save_syms",
      "valid_symbol_name"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_comp_save_syms",
      "_getsym"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_comp_save_syms",
      "deepcopy"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::_comp_save_syms",
      "_getsym"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "tuple"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "zip"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "valid_symbol_name"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "do_generator"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::do_generator",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_listcomp",
      "_comp_save_syms"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_listcomp",
      "do_generator"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_listcomp",
      "items"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_setcomp",
      "set"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_setcomp",
      "on_listcomp"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_dictcomp",
      "_comp_save_syms"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_dictcomp",
      "do_generator"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_dictcomp",
      "items"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_excepthandler",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "hasattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "hasattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "get"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "e_type"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_try",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_raise",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_raise",
      "join"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_raise",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_raise",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "getattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "getattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "update"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "func"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "hasattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "update"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "getattr"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_call",
      "str"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "enumerate"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "Procedure"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "Warning"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "raise_exception"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "len"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "run"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "append"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "isinstance"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "remove"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "valid_symbol_name"
    ],
    [
      "vendor/asteval/asteval.py::Interpreter::on_functiondef",
      "unparse"
    ],
    [
      "asteval/astutils.py::_open",
      "open"
    ],
    [
      "asteval/astutils.py::_open",
      "RuntimeError"
    ],
    [
      "asteval/astutils.py::_open",
      "RuntimeError"
    ],
    [
      "asteval/astutils.py::_type",
      "type"
    ],
    [
      "asteval/astutils.py::safe_pow",
      "isinstance"
    ],
    [
      "asteval/astutils.py::safe_pow",
      "RuntimeError"
    ],
    [
      "asteval/astutils.py::safe_pow",
      "isinstance"
    ],
    [
      "asteval/astutils.py::safe_pow",
      "nanmax"
    ],
    [
      "asteval/astutils.py::safe_pow",
      "RuntimeError"
    ],
    [
      "asteval/astutils.py::safe_mult",
      "isinstance"
    ],
    [
      "asteval/astutils.py::safe_mult",
      "isinstance"
    ],
    [
      "asteval/astutils.py::safe_mult",
      "RuntimeError"
    ],
    [
      "asteval/astutils.py::safe_mult",
      "len"
    ],
    [
      "asteval/astutils.py::safe_add",
      "isinstance"
    ],
    [
      "asteval/astutils.py::safe_add",
      "isinstance"
    ],
    [
      "asteval/astutils.py::safe_add",
      "RuntimeError"
    ],
    [
      "asteval/astutils.py::safe_add",
      "len"
    ],
    [
      "asteval/astutils.py::safe_add",
      "len"
    ],
    [
      "asteval/astutils.py::safe_lshift",
      "isinstance"
    ],
    [
      "asteval/astutils.py::safe_lshift",
      "RuntimeError"
    ],
    [
      "asteval/astutils.py::safe_lshift",
      "isinstance"
    ],
    [
      "asteval/astutils.py::safe_lshift",
      "nanmax"
    ],
    [
      "asteval/astutils.py::safe_lshift",
      "RuntimeError"
    ],
    [
      "asteval/astutils.py::safe_getattr",
      "items"
    ],
    [
      "asteval/astutils.py::safe_getattr",
      "raise_exc"
    ],
    [
      "asteval/astutils.py::safe_getattr",
      "startswith"
    ],
    [
      "asteval/astutils.py::safe_getattr",
      "endswith"
    ],
    [
      "asteval/astutils.py::safe_getattr",
      "getattr"
    ],
    [
      "asteval/astutils.py::safe_getattr",
      "repr"
    ],
    [
      "asteval/astutils.py::safe_getattr",
      "isinstance"
    ],
    [
      "asteval/astutils.py::SafeFormatter::__init__",
      "__init__"
    ],
    [
      "asteval/astutils.py::SafeFormatter::__init__",
      "super"
    ],
    [
      "asteval/astutils.py::SafeFormatter::get_field",
      "formatter_field_name_split"
    ],
    [
      "asteval/astutils.py::SafeFormatter::get_field",
      "get_value"
    ],
    [
      "asteval/astutils.py::SafeFormatter::get_field",
      "safe_getattr"
    ],
    [
      "asteval/astutils.py::safe_format",
      "SafeFormatter"
    ],
    [
      "asteval/astutils.py::safe_format",
      "vformat"
    ],
    [
      "asteval/astutils.py::valid_symbol_name",
      "generate_tokens"
    ],
    [
      "asteval/astutils.py::valid_symbol_name",
      "next"
    ],
    [
      "asteval/astutils.py::valid_symbol_name",
      "next"
    ],
    [
      "asteval/astutils.py::valid_symbol_name",
      "BytesIO"
    ],
    [
      "asteval/astutils.py::valid_symbol_name",
      "encode"
    ],
    [
      "asteval/astutils.py::valid_symbol_name",
      "len"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::__init__",
      "exc_info"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::__init__",
      "str"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::get_error",
      "append"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::get_error",
      "append"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::get_error",
      "append"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::get_error",
      "join"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::get_error",
      "str"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::get_error",
      "split"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::get_error",
      "enumerate"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::get_error",
      "join"
    ],
    [
      "asteval/astutils.py::ExceptionHolder::get_error",
      "append"
    ],
    [
      "asteval/astutils.py::NameFinder::__init__",
      "__init__"
    ],
    [
      "asteval/astutils.py::NameFinder::generic_visit",
      "generic_visit"
    ],
    [
      "asteval/astutils.py::NameFinder::generic_visit",
      "append"
    ],
    [
      "asteval/astutils.py::get_ast_names",
      "NameFinder"
    ],
    [
      "asteval/astutils.py::get_ast_names",
      "generic_visit"
    ],
    [
      "asteval/astutils.py::valid_varname",
      "isidentifier"
    ],
    [
      "asteval/astutils.py::Group::__init__",
      "__init__"
    ],
    [
      "asteval/astutils.py::Group::__init__",
      "hex"
    ],
    [
      "asteval/astutils.py::Group::__init__",
      "id"
    ],
    [
      "asteval/astutils.py::Group::__setattr__",
      "valid_varname"
    ],
    [
      "asteval/astutils.py::Group::__setattr__",
      "SyntaxError"
    ],
    [
      "asteval/astutils.py::Group::__getattr__",
      "KeyError"
    ],
    [
      "asteval/astutils.py::Group::__setitem__",
      "valid_varname"
    ],
    [
      "asteval/astutils.py::Group::__setitem__",
      "__setitem__"
    ],
    [
      "asteval/astutils.py::Group::__setitem__",
      "setattr"
    ],
    [
      "asteval/astutils.py::Group::get",
      "__getattr__"
    ],
    [
      "asteval/astutils.py::Group::get",
      "isinstance"
    ],
    [
      "asteval/astutils.py::Group::get",
      "__getattr__"
    ],
    [
      "asteval/astutils.py::Group::get",
      "isinstance"
    ],
    [
      "asteval/astutils.py::Group::get",
      "__getattr__"
    ],
    [
      "asteval/astutils.py::Group::get",
      "isinstance"
    ],
    [
      "asteval/astutils.py::Group::__repr__",
      "keys"
    ],
    [
      "asteval/astutils.py::Group::__repr__",
      "len"
    ],
    [
      "asteval/astutils.py::Group::_repr_html_",
      "items"
    ],
    [
      "asteval/astutils.py::Group::_repr_html_",
      "append"
    ],
    [
      "asteval/astutils.py::Group::_repr_html_",
      "join"
    ],
    [
      "asteval/astutils.py::Group::_repr_html_",
      "append"
    ],
    [
      "asteval/astutils.py::Group::_repr_html_",
      "repr"
    ],
    [
      "asteval/astutils.py::Group::_repr_html_",
      "type"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "dict"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "Group"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "items"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "Group"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "update"
    ],
    [
      "asteval/astutils.py::make_symbol_table",
      "pop"
    ],
    [
      "asteval/astutils.py::Procedure::__init__",
      "unparse"
    ],
    [
      "asteval/astutils.py::Procedure::__init__",
      "__signature__"
    ],
    [
      "asteval/astutils.py::Procedure::__setattr__",
      "getattr"
    ],
    [
      "asteval/astutils.py::Procedure::__setattr__",
      "__raise_exc__"
    ],
    [
      "asteval/astutils.py::Procedure::__getdoc__",
      "isinstance"
    ],
    [
      "asteval/astutils.py::Procedure::__repr__",
      "__signature__"
    ],
    [
      "asteval/astutils.py::Procedure::__repr__",
      "__getdoc__"
    ],
    [
      "asteval/astutils.py::Procedure::__signature__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__signature__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__signature__",
      "join"
    ],
    [
      "asteval/astutils.py::Procedure::__signature__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__signature__",
      "join"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "get"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "list"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "get"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "append"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "pop"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "get"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "Group"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "list"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "enumerate"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "pop"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "copy"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "update"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "run"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "keys"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "tuple"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "get"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "append"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "pop"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "__raise_exc__"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "pop"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "join"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "len"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "list"
    ],
    [
      "asteval/astutils.py::Procedure::__call__",
      "keys"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "copy"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "max"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "time"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "update"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "items"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "min"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "make_symbol_table"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "get"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "set"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "set"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "set"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "pop"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "startswith"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "getattr"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "items"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "startswith"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "callable"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "ismodule"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "repr"
    ],
    [
      "asteval/asteval.py::Interpreter::__init__",
      "type"
    ],
    [
      "asteval/asteval.py::Interpreter::remove_nodehandler",
      "pop"
    ],
    [
      "asteval/asteval.py::Interpreter::set_nodehandler",
      "getattr"
    ],
    [
      "asteval/asteval.py::Interpreter::user_defined_symbols",
      "set"
    ],
    [
      "asteval/asteval.py::Interpreter::user_defined_symbols",
      "set"
    ],
    [
      "asteval/asteval.py::Interpreter::user_defined_symbols",
      "difference"
    ],
    [
      "asteval/asteval.py::Interpreter::user_defined_symbols",
      "keys"
    ],
    [
      "asteval/asteval.py::Interpreter::unimplemented",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "str"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "ExceptionHolder"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "Raise"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "pop"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "exc"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "exc"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "pop"
    ],
    [
      "asteval/asteval.py::Interpreter::raise_exception",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::parse",
      "fix_missing_locations"
    ],
    [
      "asteval/asteval.py::Interpreter::parse",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::parse",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::parse",
      "parse"
    ],
    [
      "asteval/asteval.py::Interpreter::parse",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::parse",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "eval"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "handler"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "_remove_duplicate_errors"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "lower"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "list"
    ],
    [
      "asteval/asteval.py::Interpreter::run",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::_remove_duplicate_errors",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::_remove_duplicate_errors",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::_remove_duplicate_errors",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::__call__",
      "eval"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "time"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "_remove_duplicate_errors"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "exc"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "parse"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "print"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "get_error"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "exc_info"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "print"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "exc_info"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "get_error"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "exc"
    ],
    [
      "asteval/asteval.py::Interpreter::eval",
      "get_error"
    ],
    [
      "asteval/asteval.py::Interpreter::dump",
      "dump"
    ],
    [
      "asteval/asteval.py::Interpreter::on_expr",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_import",
      "import_module"
    ],
    [
      "asteval/asteval.py::Interpreter::on_importfrom",
      "import_module"
    ],
    [
      "asteval/asteval.py::Interpreter::on_importfrom",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::on_importfrom",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "zip"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "__import__"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "split"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "getattr"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "join"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "pop"
    ],
    [
      "asteval/asteval.py::Interpreter::import_module",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::on_index",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_return",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_return",
      "SyntaxError"
    ],
    [
      "asteval/asteval.py::Interpreter::on_repr",
      "repr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_repr",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_module",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_expression",
      "on_module"
    ],
    [
      "asteval/asteval.py::Interpreter::on_break",
      "on_interrupt"
    ],
    [
      "asteval/asteval.py::Interpreter::on_continue",
      "on_interrupt"
    ],
    [
      "asteval/asteval.py::Interpreter::on_assert",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_assert",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::on_list",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_tuple",
      "tuple"
    ],
    [
      "asteval/asteval.py::Interpreter::on_tuple",
      "on_list"
    ],
    [
      "asteval/asteval.py::Interpreter::on_set",
      "set"
    ],
    [
      "asteval/asteval.py::Interpreter::on_set",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_dict",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_dict",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_dict",
      "zip"
    ],
    [
      "asteval/asteval.py::Interpreter::on_joinedstr",
      "join"
    ],
    [
      "asteval/asteval.py::Interpreter::on_joinedstr",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_formattedvalue",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_formattedvalue",
      "safe_format"
    ],
    [
      "asteval/asteval.py::Interpreter::on_formattedvalue",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::_getsym",
      "get"
    ],
    [
      "asteval/asteval.py::Interpreter::_getsym",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::_getsym",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::on_name",
      "_getsym"
    ],
    [
      "asteval/asteval.py::Interpreter::on_name",
      "str"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "remove"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "setattr"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "valid_symbol_name"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "zip"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "ValueError"
    ],
    [
      "asteval/asteval.py::Interpreter::node_assign",
      "node_assign"
    ],
    [
      "asteval/asteval.py::Interpreter::on_attribute",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_attribute",
      "safe_getattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_attribute",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::on_attribute",
      "delattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_assign",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_assign",
      "node_assign"
    ],
    [
      "asteval/asteval.py::Interpreter::on_augassign",
      "on_assign"
    ],
    [
      "asteval/asteval.py::Interpreter::on_augassign",
      "Assign"
    ],
    [
      "asteval/asteval.py::Interpreter::on_augassign",
      "BinOp"
    ],
    [
      "asteval/asteval.py::Interpreter::on_slice",
      "slice"
    ],
    [
      "asteval/asteval.py::Interpreter::on_slice",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_slice",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_slice",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_extslice",
      "tuple"
    ],
    [
      "asteval/asteval.py::Interpreter::on_extslice",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_subscript",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_subscript",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "reverse"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "pop"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "join"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "reverse"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "join"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::on_delete",
      "setattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_unaryop",
      "op2func"
    ],
    [
      "asteval/asteval.py::Interpreter::on_unaryop",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_binop",
      "op2func"
    ],
    [
      "asteval/asteval.py::Interpreter::on_binop",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_binop",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_boolop",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_boolop",
      "op2func"
    ],
    [
      "asteval/asteval.py::Interpreter::on_boolop",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_compare",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_compare",
      "zip"
    ],
    [
      "asteval/asteval.py::Interpreter::on_compare",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::on_compare",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_compare",
      "all"
    ],
    [
      "asteval/asteval.py::Interpreter::on_compare",
      "op2func"
    ],
    [
      "asteval/asteval.py::Interpreter::on_compare",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::on_compare",
      "all"
    ],
    [
      "asteval/asteval.py::Interpreter::_printer",
      "get"
    ],
    [
      "asteval/asteval.py::Interpreter::_printer",
      "pop"
    ],
    [
      "asteval/asteval.py::Interpreter::_printer",
      "pop"
    ],
    [
      "asteval/asteval.py::Interpreter::_printer",
      "pop"
    ],
    [
      "asteval/asteval.py::Interpreter::_printer",
      "pop"
    ],
    [
      "asteval/asteval.py::Interpreter::_printer",
      "print"
    ],
    [
      "asteval/asteval.py::Interpreter::_printer",
      "flush"
    ],
    [
      "asteval/asteval.py::Interpreter::on_if",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_if",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_ifexp",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_ifexp",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_while",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_while",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_while",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_while",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_for",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_for",
      "node_assign"
    ],
    [
      "asteval/asteval.py::Interpreter::on_for",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_for",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_for",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_with",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_with",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::on_with",
      "hasattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_with",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_with",
      "hasattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_with",
      "__enter__"
    ],
    [
      "asteval/asteval.py::Interpreter::on_with",
      "TypeError"
    ],
    [
      "asteval/asteval.py::Interpreter::on_with",
      "__exit__"
    ],
    [
      "asteval/asteval.py::Interpreter::on_with",
      "node_assign"
    ],
    [
      "asteval/asteval.py::Interpreter::on_with",
      "type"
    ],
    [
      "asteval/asteval.py::Interpreter::_comp_save_syms",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::_comp_save_syms",
      "deepcopy"
    ],
    [
      "asteval/asteval.py::Interpreter::_comp_save_syms",
      "valid_symbol_name"
    ],
    [
      "asteval/asteval.py::Interpreter::_comp_save_syms",
      "_getsym"
    ],
    [
      "asteval/asteval.py::Interpreter::_comp_save_syms",
      "deepcopy"
    ],
    [
      "asteval/asteval.py::Interpreter::_comp_save_syms",
      "_getsym"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "tuple"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "zip"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "valid_symbol_name"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "do_generator"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::do_generator",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_listcomp",
      "_comp_save_syms"
    ],
    [
      "asteval/asteval.py::Interpreter::on_listcomp",
      "do_generator"
    ],
    [
      "asteval/asteval.py::Interpreter::on_listcomp",
      "items"
    ],
    [
      "asteval/asteval.py::Interpreter::on_setcomp",
      "set"
    ],
    [
      "asteval/asteval.py::Interpreter::on_setcomp",
      "on_listcomp"
    ],
    [
      "asteval/asteval.py::Interpreter::on_dictcomp",
      "_comp_save_syms"
    ],
    [
      "asteval/asteval.py::Interpreter::on_dictcomp",
      "do_generator"
    ],
    [
      "asteval/asteval.py::Interpreter::on_dictcomp",
      "items"
    ],
    [
      "asteval/asteval.py::Interpreter::on_excepthandler",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "hasattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "hasattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "get"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "e_type"
    ],
    [
      "asteval/asteval.py::Interpreter::on_try",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_raise",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_raise",
      "join"
    ],
    [
      "asteval/asteval.py::Interpreter::on_raise",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_raise",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "getattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "getattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "update"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "func"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "hasattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "update"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "getattr"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_call",
      "str"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "enumerate"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "Procedure"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "Warning"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "raise_exception"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "len"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "run"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "append"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "isinstance"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "remove"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "valid_symbol_name"
    ],
    [
      "asteval/asteval.py::Interpreter::on_functiondef",
      "unparse"
    ],
    [
      "systems/simula/nscs/ast_index.py::_fq",
      "join"
    ],
    [
      "systems/simula/nscs/ast_index.py::load_index",
      "exists"
    ],
    [
      "systems/simula/nscs/ast_index.py::load_index",
      "loads"
    ],
    [
      "systems/simula/nscs/ast_index.py::load_index",
      "read_text"
    ],
    [
      "systems/simula/nscs/ast_index.py::save_index",
      "mkdir"
    ],
    [
      "systems/simula/nscs/ast_index.py::save_index",
      "write_text"
    ],
    [
      "systems/simula/nscs/ast_index.py::save_index",
      "dumps"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "resolve"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "load_index"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "save_index"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "len"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "len"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "read_text"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "hexdigest"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "visit"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "str"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "is_file"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "get"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "parse"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "pop"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "relative_to"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "rglob"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "sha1"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "items"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "_fq"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "append"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "generic_visit"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "pop"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "_fq"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "walk"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "generic_visit"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "_V"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "encode"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "pop"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "get"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "startswith"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "isinstance"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "items"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "isinstance"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "get"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "startswith"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "isinstance"
    ],
    [
      "systems/simula/nscs/ast_index.py::index_python_files",
      "append"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_ClassDef",
      "_fq"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_ClassDef",
      "append"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_ClassDef",
      "generic_visit"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_ClassDef",
      "pop"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_FunctionDef",
      "_fq"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_FunctionDef",
      "walk"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_FunctionDef",
      "generic_visit"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_FunctionDef",
      "isinstance"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_FunctionDef",
      "isinstance"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_FunctionDef",
      "isinstance"
    ],
    [
      "systems/simula/nscs/ast_index.py::_V::visit_FunctionDef",
      "append"
    ],
    [
      "systems/simula/nscs/ast_index.py::neighbors_for_symbol",
      "load_index"
    ],
    [
      "systems/simula/nscs/ast_index.py::neighbors_for_symbol",
      "split"
    ],
    [
      "systems/simula/nscs/ast_index.py::neighbors_for_symbol",
      "items"
    ],
    [
      "systems/simula/nscs/ast_index.py::neighbors_for_symbol",
      "split"
    ],
    [
      "systems/simula/nscs/ast_index.py::neighbors_for_symbol",
      "get"
    ],
    [
      "systems/simula/nscs/ast_index.py::list_defs_in_file",
      "load_index"
    ],
    [
      "systems/simula/nscs/ast_index.py::list_defs_in_file",
      "items"
    ],
    [
      "systems/simula/nscs/ast_index.py::list_defs_in_file",
      "get"
    ],
    [
      "systems/simula/nscs/dossier.py::gather_neighbor_snippets",
      "exists"
    ],
    [
      "systems/simula/nscs/dossier.py::gather_neighbor_snippets",
      "read_text"
    ],
    [
      "systems/simula/nscs/dossier.py::_find_file_for_symbol",
      "items"
    ],
    [
      "systems/simula/nscs/dossier.py::_find_file_for_symbol",
      "get"
    ],
    [
      "systems/simula/nscs/dossier.py::_find_file_for_symbol",
      "get"
    ],
    [
      "systems/simula/nscs/dossier.py::_find_file_for_symbol",
      "get"
    ],
    [
      "systems/simula/nscs/dossier.py::_find_file_for_symbol",
      "endswith"
    ],
    [
      "systems/simula/nscs/dossier.py::_find_file_for_symbol",
      "endswith"
    ],
    [
      "systems/simula/nscs/dossier.py::_find_file_for_symbol",
      "get"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "index_python_files"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "load_index"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "_find_file_for_symbol"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "next"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "neighbors_for_symbol"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "gather_neighbor_snippets"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "list_defs_in_file"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "replace"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "exists"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "endswith"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "get"
    ],
    [
      "systems/simula/nscs/dossier.py::build_dossier",
      "endswith"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_j",
      "dumps"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_j",
      "str"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_parse_llm_action",
      "get"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_parse_llm_action",
      "isinstance"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_parse_llm_action",
      "get"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_parse_llm_action",
      "isinstance"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_parse_llm_action",
      "get"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_parse_llm_action",
      "isinstance"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_parse_llm_action",
      "startswith"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_parse_llm_action",
      "loads"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_parse_llm_action",
      "get"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::_parse_llm_action",
      "strip"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::__init__",
      "debug"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::__init__",
      "list"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::__init__",
      "info"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::__init__",
      "Path"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::__init__",
      "exists"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::__init__",
      "keys"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::__init__",
      "index_python_files"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::__init__",
      "info"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::__init__",
      "warning"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::__init__",
      "error"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::_tool_specs_manifest",
      "keys"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::_tool_specs_manifest",
      "sort"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::_tool_specs_manifest",
      "next"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::_tool_specs_manifest",
      "append"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::_tool_specs_manifest",
      "append"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::_tool_specs_manifest",
      "get"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::_tool_specs_manifest",
      "get"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::_get_tool_spec",
      "_tool_specs_manifest"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::_get_tool_spec",
      "next"
    ],
    [
      "systems/simula/agent/orchestrator_main.py::AgentOrchestrator::_get_tool_spec",
      "get"
    ],
    [
      "systems.simula.nscs.ast_index._fq",
      "file_rel.replace('.py', '').replace"
    ],
    [
      "systems.simula.nscs.ast_index._fq",
      "file_rel.replace"
    ],
    [
      "systems.simula.nscs.ast_index._fq",
      "'::'.join"
    ],
    [
      "systems.simula.nscs.ast_index.load_index",
      "_INDEX_PATH.exists"
    ],
    [
      "systems.simula.nscs.ast_index.load_index",
      "json.loads"
    ],
    [
      "systems.simula.nscs.ast_index.load_index",
      "_INDEX_PATH.read_text"
    ],
    [
      "systems.simula.nscs.ast_index.save_index",
      "_INDEX_PATH.parent.mkdir"
    ],
    [
      "systems.simula.nscs.ast_index.save_index",
      "_INDEX_PATH.write_text"
    ],
    [
      "systems.simula.nscs.ast_index.save_index",
      "json.dumps"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "repo_root.resolve"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "load_index"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "save_index"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "p.read_text"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "hashlib.sha1(src.encode()).hexdigest"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "rel.replace('.py', '').replace"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "_V().visit"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "len"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "len"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "str"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "p.is_file"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "ix['files'].get"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "ix['defs'].pop"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "ast.parse"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "p.relative_to"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "repo_root.rglob"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "hashlib.sha1"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "ix['defs'].items"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "rel.replace"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "_fq"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "self.scope.append"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "self.generic_visit"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "self.scope.pop"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "_fq"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "ast.walk"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "self.generic_visit"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "_V"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "src.encode"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "d.get"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "c[0].startswith"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "isinstance"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "hasattr"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "ast.unparse"
    ],
    [
      "systems.simula.nscs.ast_index.index_python_files",
      "ix['calls'].append"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_ClassDef",
      "_fq"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_ClassDef",
      "self.scope.append"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_ClassDef",
      "self.generic_visit"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_ClassDef",
      "self.scope.pop"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_FunctionDef",
      "_fq"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_FunctionDef",
      "ast.walk"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_FunctionDef",
      "self.generic_visit"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_FunctionDef",
      "isinstance"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_FunctionDef",
      "hasattr"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_FunctionDef",
      "ast.unparse"
    ],
    [
      "systems.simula.nscs.ast_index._V.visit_FunctionDef",
      "ix['calls'].append"
    ],
    [
      "systems.simula.nscs.ast_index.neighbors_for_symbol",
      "load_index"
    ],
    [
      "systems.simula.nscs.ast_index.neighbors_for_symbol",
      "ix.get('defs', {}).get(target_fq, {}).get"
    ],
    [
      "systems.simula.nscs.ast_index.neighbors_for_symbol",
      "callee.endswith"
    ],
    [
      "systems.simula.nscs.ast_index.neighbors_for_symbol",
      "ix.get('defs', {}).get"
    ],
    [
      "systems.simula.nscs.ast_index.neighbors_for_symbol",
      "ix['defs'].items"
    ],
    [
      "systems.simula.nscs.ast_index.neighbors_for_symbol",
      "target_fq.split"
    ],
    [
      "systems.simula.nscs.ast_index.neighbors_for_symbol",
      "ix.get"
    ],
    [
      "systems.simula.nscs.ast_index.neighbors_for_symbol",
      "d.get"
    ],
    [
      "systems.simula.nscs.ast_index.list_defs_in_file",
      "load_index"
    ],
    [
      "systems.simula.nscs.ast_index.list_defs_in_file",
      "ix['defs'].items"
    ],
    [
      "systems.simula.nscs.ast_index.list_defs_in_file",
      "d.get"
    ],
    [
      "systems.simula.nscs.dossier.gather_neighbor_snippets",
      "p.exists"
    ],
    [
      "systems.simula.nscs.dossier.gather_neighbor_snippets",
      "p.read_text"
    ],
    [
      "systems.simula.nscs.dossier.build_dossier",
      "load_index"
    ],
    [
      "systems.simula.nscs.dossier.build_dossier",
      "ast_index.get('defs', {}).items"
    ],
    [
      "systems.simula.nscs.dossier.build_dossier",
      "neighbors_for_symbol"
    ],
    [
      "systems.simula.nscs.dossier.build_dossier",
      "gather_neighbor_snippets"
    ],
    [
      "systems.simula.nscs.dossier.build_dossier",
      "list_defs_in_file"
    ],
    [
      "systems.simula.nscs.dossier.build_dossier",
      "ast_index.get"
    ],
    [
      "systems.simula.nscs.dossier.build_dossier",
      "details.get"
    ],
    [
      "systems.simula.nscs.dossier.build_dossier",
      "details.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._j",
      "json.dumps"
    ],
    [
      "systems.simula.agent.orchestrator_main._j",
      "str"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "isinstance"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "isinstance"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "payload.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "parsed_json.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "parsed_json.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "parsed_json.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "parsed_json.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "parsed_json.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "payload.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "isinstance"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "action_obj.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "isinstance"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "choices[0].get('message', {}).get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "action_obj.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "action_obj.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "parsed_json.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "isinstance"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "content.strip().startswith"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "json.loads"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "parsed_json.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "parsed_json.get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "choices[0].get"
    ],
    [
      "systems.simula.agent.orchestrator_main._parse_llm_action",
      "content.strip"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__",
      "logger.debug"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__",
      "list"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__",
      "logger.info"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__",
      "Path"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__",
      "repo_root.exists"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__",
      "self.tool_registry.keys"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__",
      "index_python_files"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__",
      "logger.info"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__",
      "logger.warning"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator.__init__",
      "logger.error"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator._tool_specs_manifest",
      "self.tool_registry.keys"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator._tool_specs_manifest",
      "manifest.sort"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator._tool_specs_manifest",
      "next"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator._tool_specs_manifest",
      "manifest.append"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator._tool_specs_manifest",
      "manifest.append"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator._tool_specs_manifest",
      "s.get"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator._tool_specs_manifest",
      "s.get"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator._get_tool_spec",
      "self._tool_specs_manifest"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator._get_tool_spec",
      "next"
    ],
    [
      "systems.simula.agent.orchestrator_main.AgentOrchestrator._get_tool_spec",
      "spec.get"
    ],
    [
      "systems.simula.agent.orchestrator.tool_safety._wrap",
      "inspect.signature"
    ],
    [
      "systems.simula.agent.orchestrator.tool_safety._wrap",
      "inspect.iscoroutinefunction"
    ],
    [
      "systems.simula.agent.orchestrator.tool_safety._wrap",
      "list"
    ],
    [
      "systems.simula.agent.orchestrator.tool_safety._wrap",
      "sig.parameters.values"
    ],
    [
      "systems.simula.agent.orchestrator.tool_safety._wrap",
      "len"
    ],
    [
      "systems.simula.agent.orchestrator.tool_safety._wrap",
      "func"
    ],
    [
      "systems.simula.agent.orchestrator.tool_safety._wrap",
      "func"
    ],
    [
      "systems.simula.nscs.agent_tools._discover_functions_from_source",
      "ast.parse"
    ],
    [
      "systems.simula.nscs.agent_tools._discover_functions_from_source",
      "isinstance"
    ],
    [
      "systems.simula.nscs.agent_tools._discover_functions_from_source",
      "names.append"
    ],
    [
      "systems.simula.nscs.agent_tools._discover_functions_from_source",
      "node.name.startswith"
    ],
    [
      "systems.simula.nscs.agent_tools._strip_markdown_fences",
      "re.search"
    ],
    [
      "systems.simula.nscs.agent_tools._strip_markdown_fences",
      "text.strip"
    ],
    [
      "systems.simula.nscs.agent_tools._strip_markdown_fences",
      "match.group(1).strip"
    ],
    [
      "systems.simula.nscs.agent_tools._strip_markdown_fences",
      "match.group"
    ]
  ]
}