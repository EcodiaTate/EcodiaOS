# core/prompting/promptspecs/voxis_main_planning.v2.yaml
- id: "voxis-main-plan-v2.1"
  version: "2.2" # Incremented version
  scope: "voxis.main.planning"

  identity:
    agent: "Voxis.Planner"
    persona_partial: "persona_voxis_planner"

  # Remove 'retrieval.semantic' as it is now an explicit tool.
  context_lenses:
    - "equor.identity"
    - "tools.catalog"
    - "affect"
    - "atune.salience"
    - "ecodia.self_concept"

  partials:
    - "persona_voxis_planner"
    - "tools_context_voxis"
    - "task_framing_planning"
    - "context_summary_voxis"
    - "memory_context_unified"
    - "reasoning_cot_standard"
    - "profile_upsert_instructions"
    - "output_format_plan_eos_plus_profile"

  outputs:
    parse_mode: "auto_repair"
    schema:
      type: "object"
      additionalProperties: false
      required:
        - "episode_id"
        - "interim_thought" # Added
        - "champion_arm_id"
        - "scratchpad"
        - "plan"
        - "final_synthesis_prompt"
        - "profile_upserts"
      properties:
        episode_id: { type: "string" }
        champion_arm_id: { type: "string" }
        interim_thought: { type: "string", description: "A brief, user-facing sentence about the upcoming action (e.g., 'Let me check on that for you...'). This is shown to the user immediately as a filler." }
        scratchpad: { type: "string" }
        plan:
          type: "array"
          minItems: 1
          items:
            type: "object"
            additionalProperties: false
            required: ["action_type"]
            properties:
              action_type:
                type: "string"
                enum: ["tool_call", "respond"]
              tool_name:
                type: ["string", "null"]
              parameters:
                type: ["object", "null"]
        final_synthesis_prompt: { type: "string" }
        profile_upserts:
          type: "array"
          items:
            type: "object"
            additionalProperties: false
            required: ["label", "merge_key", "merge_value", "updates", "confidence"]
            properties:
              label: { type: "string", const: "SoulProfile" }
              merge_key: { type: "string", const: "user_id" }
              merge_value: { type: "string" }
              updates: { type: "object" }
              confidence:
                type: "number"
                minimum: 0
                maximum: 1