# core/prompting/promptspecs/simula_deliberation_planner.v1.yaml
- id: "simula.deliberation.planner.v1"
  version: "v1"
  scope: "simula.deliberation.planner"

  identity:
    agent: "Simula.Planner"

  # Ensure the planner sees both the advice and the concrete tool surface
  context_lenses:
    - "lens_get_tools"
    - "lens_simula_advice_preplan"

  partials:
    - "persona_simula_guardrails"
    - "advice_injection_guardrails"
    - "scl_planner_system_rules"   # includes the “use only injected tools” mandate
    - "scl_context_block"
    - "scl_output_contract_planning"
    - "scl_planner_user_block"

  outputs:
    parse_mode: "auto_repair"
    schema:
      type: object
      additionalProperties: false
      required: ["interim_thought", "scratchpad", "plan", "final_synthesis_prompt"]
      properties:
        interim_thought: { type: string, description: "A single sentence summarizing the core idea of the plan." }
        scratchpad: { type: string, description: "Detailed reasoning, analysis of the strategy, and step-by-step thinking." }
        plan:
          type: array
          minItems: 1
          items:
            type: object
            additionalProperties: false
            required: ["action_type"]
            properties:
              action_type: { type: string, enum: ["tool_call", "respond"] }
              tool_name: { type: [ "string", "null" ] }
              parameters: { type: [ "object", "null" ] }
        final_synthesis_prompt: { type: string, description: "Instructions for how to interpret the final results after the plan executes." }
